<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用verdaccio打造自己的npm私有化仓库</title>
    <link href="/2021/12/16/%E4%BD%BF%E7%94%A8verdaccio%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84npm%E7%A7%81%E6%9C%89%E5%8C%96%E4%BB%93%E5%BA%93/"/>
    <url>/2021/12/16/%E4%BD%BF%E7%94%A8verdaccio%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84npm%E7%A7%81%E6%9C%89%E5%8C%96%E4%BB%93%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><strong>接着上篇文章<a href="https://blog.csdn.net/time_____/article/details/121530923">Gitea+Jenkins能碰撞出怎样的火花？浅谈前端自动化部署_DieHunter1024的博客-CSDN博客</a></strong></p><p><strong>本文将与大家分享使用<a href="https://verdaccio.org/zh-cn/">verdaccio</a>搭建私有化npm仓库以及npm包的发布</strong></p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a><strong>准备工作</strong></h3><ul><li><a href="https://blog.csdn.net/time_____/article/details/114024145">Node环境</a></li><li>远程或本地服务器</li><li><a href="https://verdaccio.org/zh-cn/">verdaccio</a></li></ul><h3 id="安装配置verdaccio"><a href="#安装配置verdaccio" class="headerlink" title="安装配置verdaccio"></a>安装配置verdaccio</h3><ol><li><p><strong>使用npm install –global verdaccio全局安装verdaccio</strong></p></li><li><p><strong>在服务器中新建文件夹用来存放npm数据</strong></p></li><li><p><strong>在新建的文件夹中运行cmd输入verdaccio，显示以下日志就可以了</strong><img src="https://img-blog.csdnimg.cn/c567b617d8954f0997b3dc9e6c0313ed.png?x-oss-processimage/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_19,color_FFFFFF,t_70,g_se,x_16"></p></li><li><p><strong>在浏览器打开<a href="http://localhost:4873/">http://localhost:4873/</a>显示以下页面就可以进行下一步了</strong><img src="https://img-blog.csdnimg.cn/71ecd3052ec446bbba2d6228740eaf89.png?x-oss-processimage/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p></li><li><p><strong>通过日志可以知道verdaccio的yaml文件在C:\Users\用户名\.config\verdaccio\config.yaml，我们可以自定义该文件并且手动启动，将yaml文件复制到新建的文件夹下并修改文件，以下是我的配置文件，仅供参考</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># 数据缓存目录</span><br><span class="hljs-symbol">storage:</span> ./storage<br><span class="hljs-meta"># 插件目录</span><br><span class="hljs-symbol">plugins:</span> ./plugins<br><br><span class="hljs-meta">#开启web 服务,能够通过web 访问</span><br><span class="hljs-symbol">web:</span><br>  <span class="hljs-meta"># 页面title名称</span><br>  <span class="hljs-meta">#enable: false</span><br><span class="hljs-symbol">  title:</span> NPM-diehunter<br><span class="hljs-meta">#验证信息</span><br><span class="hljs-symbol">auth:</span><br><span class="hljs-symbol">  htpasswd:</span><br>    <span class="hljs-meta">#  用户信息存储目录</span><br><span class="hljs-symbol">    file:</span> ./htpasswd<br>    <span class="hljs-meta"># 最大注册人数，默认infinity</span><br>    <span class="hljs-meta">#max_users: 1000</span><br><br><span class="hljs-meta">#公有仓库配置</span><br><span class="hljs-symbol">uplinks:</span><br><span class="hljs-symbol">  npmjs:</span><br>    <span class="hljs-meta"># url: https:<span class="hljs-comment">//registry.npmjs.org/</span></span><br>    <span class="hljs-meta"># taobao镜像</span><br><span class="hljs-symbol">    url:</span> https:<span class="hljs-comment">//registry.npmmirror.com/</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">packages:</span><br>  <span class="hljs-string">&quot;@*/*&quot;</span>:<br>    <span class="hljs-meta"># scoped packages</span><br><span class="hljs-symbol">    access:</span> $all<br><span class="hljs-symbol">    publish:</span> $authenticated<br>    <span class="hljs-meta">#代理 如果本地仓库没找到会去npmjs中找，npmjs就是uplinks中的变量</span><br><span class="hljs-symbol">    proxy:</span> npmjs<br><br>  <span class="hljs-string">&quot;**&quot;</span>:<br>    <span class="hljs-meta"># 权限：所有人,匿名用户,认证(登陆)用户</span><br>    <span class="hljs-meta"># <span class="hljs-string">&quot;$all&quot;</span>, <span class="hljs-string">&quot;$anonymous&quot;</span>, <span class="hljs-string">&quot;$authenticated&quot;</span></span><br><br>    <span class="hljs-meta">#是否可访问所需要的权限</span><br><span class="hljs-symbol">    access:</span> $all<br><br>    <span class="hljs-meta">#发布package 的权限</span><br><span class="hljs-symbol">    publish:</span> $authenticated<br><br>    <span class="hljs-meta"># 如果package 不存在,就向代理的上游服务发起请求</span><br><span class="hljs-symbol">    proxy:</span> npmjs<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">middlewares:</span><br><span class="hljs-symbol">  audit:</span><br><span class="hljs-symbol">    enabled:</span> true<br><span class="hljs-meta"># 监听本地所有ip，配置了后可以通过公网访问</span><br><span class="hljs-symbol">listen:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">10241</span><br><span class="hljs-meta"># 日志</span><br><span class="hljs-symbol">logs:</span><br>  - &#123; type: stdout, format: pretty, level: http &#125;<br>  <span class="hljs-meta">#- &#123;type: file, path: verdaccio.log, level: info&#125;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>使用cmd脚本启动文件，可以将以下命令写成bat文件并放在文件夹目录</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">verdaccio --listen <span class="hljs-number">10241</span> --config ./config.yaml<br></code></pre></td></tr></table></figure></li><li><p><strong>最后运行命令，打开网页</strong><img src="https://img-blog.csdnimg.cn/cfc97357023646f39f379bbaf26d9603.png?x-oss-processimage/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p></li><li><p><strong>此外，可以参考<a href="https://blog.csdn.net/time_____/article/details/114750930">Nginx常用指令，基本配置，反向代理_DieHunter1024的博客-CSDN博客</a>，把npm仓库反向代理到路由，不占用端口</strong></p></li></ol><h3 id="上传代码至仓库"><a href="#上传代码至仓库" class="headerlink" title="上传代码至仓库"></a>上传代码至仓库</h3><p><strong>推荐使用<a href="https://www.npmjs.com/package/nrm">nrm</a>管理npm仓库地址，切换仓库地址为</strong><a href="http://localhost:10241/">http://localhost:10241/</a></p><p><img src="https://img-blog.csdnimg.cn/271233aa5f214e8685ffc038a03f21f4.png?x-oss-processimage/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_14,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>以之前写的<a href="https://blog.csdn.net/time_____/article/details/113770950">PubSubPattern</a>（发布订阅）为例子，在文件夹中 npm init -y 新建package.json文件，并配置name，version等</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;pub_sub_pattern&quot;</span>,<br>  <span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;1.0.0&quot;</span>,<br>  <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;main&quot;</span>: <span class="hljs-string">&quot;index.js&quot;</span>,<br>  <span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;test&quot;</span>: <span class="hljs-string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;keywords&quot;</span>: [],<br>  <span class="hljs-string">&quot;author&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;license&quot;</span>: <span class="hljs-string">&quot;ISC&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>注册用户：使用npm adduser –registry <a href="http://localhost:10241/%E6%B3%A8%E5%86%8C%E7%94%A8%E6%88%B7%EF%BC%8C%E8%BE%93%E5%85%A5%E7%94%A8%E6%88%B7%E5%90%8D%EF%BC%88%E5%B0%8F%E5%86%99%EF%BC%89%EF%BC%8C%E5%AF%86%E7%A0%81%EF%BC%8C%E9%82%AE%E7%AE%B1">http://localhost:10241/注册用户，输入用户名（小写），密码，邮箱</a></strong></p><p><img src="https://img-blog.csdnimg.cn/a8f34de8cc4443c7b85c838cb623c072.png?x-oss-processimage/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_11,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>然后在index.js中写入源码</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">exports</span>.PubSubPattern = <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PubSubPattern</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>._eventList = &#123;&#125;; <span class="hljs-comment">//调度中心列表</span><br>  &#125;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">Instance</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-comment">//返回当前类的实例的单例</span><br>    !PubSubPattern._instance &amp;&amp;<br>      <span class="hljs-built_in">Object</span>.defineProperty(PubSubPattern, <span class="hljs-string">&quot;_instance&quot;</span>, &#123;<br>        <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> PubSubPattern(),<br>      &#125;);<br>    <span class="hljs-keyword">return</span> PubSubPattern._instance;<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">on</span>(<span class="hljs-params">type, handler</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (!checkArgs(type, handler)) &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">//若调度中心未找到该事件的队列，则新建某个事件列表（可以对某个类型的事件注册多个回调函数）</span><br>    !isKeyInObj(<span class="hljs-built_in">this</span>._eventList, type) &amp;&amp; (<span class="hljs-built_in">this</span>._eventList[type] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>());<br>    <span class="hljs-built_in">this</span>._eventList[type].push(handler);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">un</span>(<span class="hljs-params">type, handler</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (!type) &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">const</span> fnList = <span class="hljs-built_in">this</span>._eventList[type];<br>    <span class="hljs-keyword">if</span> (type &amp;&amp; (!handler || <span class="hljs-keyword">typeof</span> handler !== <span class="hljs-string">&quot;function&quot;</span>)) &#123;<br>      <span class="hljs-built_in">this</span>._eventList[type] = <span class="hljs-literal">null</span>;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; fnList.length; i++) &#123;<br>      fnList[i] &amp;&amp; fnList[i] === handler &amp;&amp; (<span class="hljs-built_in">this</span>._eventList[type][i] = <span class="hljs-literal">null</span>);<br>    &#125;<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">once</span>(<span class="hljs-params">type, handler</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (!checkArgs(type, handler)) &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">const</span> _handler = <span class="hljs-function">(<span class="hljs-params">args</span>) =&gt;</span> &#123;<br>      <span class="hljs-built_in">this</span>.un(type, _handler);<br>      handler(args);<br>    &#125;;<br>    <span class="hljs-built_in">this</span>.on(type, _handler);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">emit</span>(<span class="hljs-params">type, <span class="hljs-built_in">module</span></span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (!type) &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">const</span> fnList = <span class="hljs-built_in">this</span>._eventList[type];<br>    <span class="hljs-keyword">if</span> (!fnList) &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    isKeyInObj(<span class="hljs-built_in">this</span>._eventList, type) &amp;&amp; fnList.map(<span class="hljs-function">(<span class="hljs-params">_</span>) =&gt;</span> _ &amp;&amp; _(<span class="hljs-built_in">module</span>));<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">clear</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>._eventList = &#123;&#125;;<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 检查对象是否包含该属性，除原型链</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>obj 被检查对象</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>key 被检查对象的属性</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isKeyInObj</span>(<span class="hljs-params">obj, key</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Object</span>.hasOwnProperty.call(obj, key);<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 检查参数是否符合标准</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>type 事件名</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>handler 事件钩子</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkArgs</span>(<span class="hljs-params">type, handler</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span> (!type) &#123;<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (!handler || <span class="hljs-keyword">typeof</span> handler !== <span class="hljs-string">&quot;function&quot;</span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<br>      <span class="hljs-string">&quot;handler is not defined or not a function at arguements[1]&quot;</span><br>    );<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>完成后输入npm publish –registry <a href="http://localhost:10241/%E5%B0%86%E4%BB%A3%E7%A0%81%E5%8F%91%E5%B8%83%E5%88%B0npm%E4%BB%93%E5%BA%93">http://localhost:10241/将代码发布到npm仓库</a></strong></p><p><img src="https://img-blog.csdnimg.cn/15f9b61d227448259eb0661114aa1f06.png?x-oss-processimage/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_15,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>npm包的发布就完成了</strong></p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a><strong>安装依赖</strong></h3><p><strong>另起一个test文件夹，使用</strong></p><p><strong>npm init -y<br>npm ipub_sub_pattern</strong></p><p><strong>下载依赖</strong></p><p><img src="https://img-blog.csdnimg.cn/8f7a731069e74308b0bdddf317e012a8.png?x-oss-processimage/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_18,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>在test文件夹中新建main.js输入以下内容</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; PubSubPattern &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;pub_sub_pattern&quot;</span>);<br><span class="hljs-built_in">console</span>.log(PubSubPattern);<br>PubSubPattern.Instance().on(<span class="hljs-string">&quot;event&quot;</span>, <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(data);<br>&#125;);<br><br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  PubSubPattern.Instance().emit(<span class="hljs-string">&quot;event&quot;</span>, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;hunter&quot;</span> &#125;);<br>&#125;, <span class="hljs-number">1000</span>);<br></code></pre></td></tr></table></figure><p><strong>并且在控制台执行node main，出现以下日志就表示成功了</strong></p><p><img src="https://img-blog.csdnimg.cn/40743e1d6f8246d7ad575cad08b98fc5.png?x-oss-processimage/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_9,color_FFFFFF,t_70,g_se,x_16"></p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a><strong>写在最后</strong></h3><p><strong>最后，我们可以配合这篇文章</strong><a href="https://blog.csdn.net/time_____/article/details/121530923">Gitea+Jenkins能碰撞出怎样的火花？浅谈前端自动化部署_DieHunter1024的博客-CSDN博客</a></p><p><strong>将npm publish –registry <a href="http://localhost:10241/%E5%91%BD%E4%BB%A4%E6%94%BE%E5%9C%A8Jenkins%E7%9A%84%E5%91%BD%E4%BB%A4%E4%B8%AD%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83npm%EF%BC%8C%E8%BF%99%E4%BE%BF%E6%98%AF%E5%BE%AE%E5%89%8D%E7%AB%AF%E7%9A%84%E9%9B%8F%E5%BD%A2">http://localhost:10241/命令放在Jenkins的命令中实现自动发布npm，这便是微前端的雏形</a></strong></p><p><strong>感谢你看到了这里，如果这篇文章对你有帮助，请点个赞支持一下作者！你的支持是作者创作的动力~</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Gitea+Jenkins能碰撞出怎样的火花？浅谈前端自动化部署</title>
    <link href="/2021/11/28/Gitea+Jenkins%E8%83%BD%E7%A2%B0%E6%92%9E%E5%87%BA%E6%80%8E%E6%A0%B7%E7%9A%84%E7%81%AB%E8%8A%B1%20%E6%B5%85%E8%B0%88%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <url>/2021/11/28/Gitea+Jenkins%E8%83%BD%E7%A2%B0%E6%92%9E%E5%87%BA%E6%80%8E%E6%A0%B7%E7%9A%84%E7%81%AB%E8%8A%B1%20%E6%B5%85%E8%B0%88%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<p><strong>目录</strong></p><p><a href="#%E5%89%8D%E8%A8%80%EF%BC%9A">前言：</a></p><p><a href="#%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93">首先是搭建一个本地Git代码仓库</a></p><p><a href="#%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE">接下来是Jenkins安装配置</a></p><p><a href="#%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89">自由风格项目构建（window批处理命令）</a></p><p><a href="#%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA">流水线项目构建</a></p><p><a href="#%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E">写在最后</a></p><hr><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h3><p><strong>一个好的部署工具能帮助开发者提升效率，节省时间，本文将与大家分享私有化Git仓库搭建与Jenkins操作项目部署</strong></p><p><strong>准备工作：</strong></p><ul><li><a href="https://www.runoob.com/java/java-environment-setup.html">Java环境</a></li><li><a href="https://blog.csdn.net/time_____/article/details/114024145">Node环境</a></li><li><a href="https://gitea.io/zh-cn/">Gitea</a></li><li><a href="https://www.jenkins.io/zh/">Jenkins</a></li><li><a href="https://blog.csdn.net/time_____/article/details/114750930">Nginx</a>(部署前端页面)</li><li>服务器或者电脑（我这里是window系统+<a href="https://blog.csdn.net/time_____/article/details/114664920">公网映射</a>搭建的本地服务器）</li></ul><h3 id="首先是搭建一个本地Git代码仓库"><a href="#首先是搭建一个本地Git代码仓库" class="headerlink" title="首先是搭建一个本地Git代码仓库"></a><strong>首先是搭建一个本地Git代码仓库</strong></h3><p><strong>下载gitea并在需要安装的文件夹下打开，默认访问地址是127.0.0.1:3000</strong></p><p><img src="https://img-blog.csdnimg.cn/d7f47672639740a59c0d31eca469b642.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>打开后选择一下数据库，并在对应文件夹下生成db文件（新建空白txt文件，改后缀名为db）</strong></p><p><img src="https://img-blog.csdnimg.cn/3ba4bb763c50461c968b6550dce953b1.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>端口号和名称可以自定义改一下，最后点击安装，等待安装完成，再次进入，注册管理员账号就可以打开了，后面就和远程仓库操作方式一样了</strong></p><p><img src="https://img-blog.csdnimg.cn/e1ee04fdb75b40348f7d69dcf2b45775.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/98c07ee92f9c407092b14fd640556f33.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/3349472540fc4e63b7dcbef4d1ace8b1.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h3 id="接下来是Jenkins安装配置"><a href="#接下来是Jenkins安装配置" class="headerlink" title="接下来是Jenkins安装配置"></a><strong>接下来是Jenkins安装配置</strong></h3><p><strong>下载Jenkins并打开，这一步配置本地服务，设置本地端口号（默认是8080****），我这里是10240</strong></p><p><img src="https://img-blog.csdnimg.cn/a328ca98998e4d939a109b2c7239c6cd.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_12,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/28fd23c1a98d405ea8173c6a9fc30b4a.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_12,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>选择Java的jdk路径，并点击下一步安装</strong></p><p><img src="https://img-blog.csdnimg.cn/102bbee908774cc48f967c8f7eb7b503.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_12,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/32574d29dbaf45788486344cc7dfa1bc.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_12,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>完成后通过<a href="http://localhost:8000/">http://localhost:8000</a>进入主页，第一次进入Jenkins会进行初始化设置，直接复制本地地址用浏览器打开，然后输入到下面的输入框，点击继续（注意：如果考虑安装Jenkins数据的体积，可以新增环境变量JENKINS_HOME，值改为其他盘符路径，后续Jenkins的数据会保存在此）</strong></p><p><img src="https://img-blog.csdnimg.cn/5ad300359a2c4db8abc93bef751c2b73.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/37e9c3ef083143fda20565a9ad199c05.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>进入插件安装界面，建议先选择推荐插件，后续在插件管理中修改</strong></p><p><img src="https://img-blog.csdnimg.cn/57ab16443acb400ca87bff4da97bec3e.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>插件全部安装完后，进入管理员用户创建页面，输入账号密码来创建第一个用户，也就是管理员</strong></p><p><img src="https://img-blog.csdnimg.cn/80a9df12843641669b0d8ad8aedc1772.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>进入首页，发现部分文字没有汉化，此时参照<a href="https://blog.csdn.net/qq_37489565/article/details/104337073">这位博主</a>的博客，安装Locale插件=&gt;设置语言为zh_US=&gt;重启=&gt;设置语言为zh_CN=&gt;刷新页面就可以了</strong></p><p><img src="https://img-blog.csdnimg.cn/9d8026ebfa424db9b5f2fb398bc3b172.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/f5d4df3cbc07484faa26ea692f5afefa.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>如果不需要开机自启Jenkins，可以关闭自启软件，并且使用手动打开的方式：在Jenkins目录下输入java -jar jenkins.war –httpPort=10240，或者写成bat形式运行</strong></p><p><strong>下面来说说****Jenkins的插件安装，在插件管理中安装Generic Webhook Trigger用于gitea构建触发器，Blue Ocean可以理解为Jenkins的一个皮肤（个人感觉界面看起来和操作使用很舒服）</strong></p><p><img src="https://img-blog.csdnimg.cn/960705f34f6b4b319ffee20678ec81c4.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/9b6b671dfeb84fe4887221f283483b14.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>关于Jenkins准备工作，已经基本做完，下一步将使用gitea中的webhooks与Jenkins进行联系，达到代码自动部署的效果</strong></p><p><strong>首先，我们先点新建任务，进入到任务列表，接下来，我将分享两种构建的方式，分别是批处理命令构建和pipeline流水线语法的方式构建</strong></p><p><img src="https://img-blog.csdnimg.cn/977a8ca87afc4ba9b3284eb22fa1a00e.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/8860c6dc1ec342f282eaa875aac00a08.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h3 id="自由风格项目构建（window批处理命令）"><a href="#自由风格项目构建（window批处理命令）" class="headerlink" title="自由风格项目构建（window批处理命令）"></a>自由风格项目构建（<strong>window批处理命令</strong>）</h3><p><strong>在任务配置中输入gitea clone的地址，并且点击新建验证方式，我这里用的是用户名密码</strong></p><p><img src="https://img-blog.csdnimg.cn/d8bb2bb699274ecdb97c5cee0eb2231e.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/d668908c75954ccfbf1bcae3e230e3f6.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>在凭证配置中选择用户名密码，并输入gitea的用户名，密码，点击添加即可，添加后在源码管理中选择刚才添加的凭证方式</strong></p><p><img src="https://img-blog.csdnimg.cn/e3079016d963486aa278846d9c33e13a.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/b6f6eb357bc34ecc88b9001ce8b55204.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>然后在构建中新增构建步骤，选择window批处理命令，并分别新建以下命令（npm i和npm run build一定要分开，否则在安装依赖时命令控制台会直接输入npm run build，此时是没有效果的，导致后面的命令不执行）</strong></p><ol><li><strong>node -v<br>npm -v</strong></li><li><strong>npm i</strong></li><li><strong>npm run build</strong></li></ol><p><img src="https://img-blog.csdnimg.cn/f4555c79fb3048a48d3dedec1ee71294.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/b0680831bc2145cba20a6012712a4c9c.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/26daf43376b846b4838f5a4766e6f473.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>最后点保存，并在工作台运行测试一下</strong></p><p><img src="https://img-blog.csdnimg.cn/e19284690a554fc4b1b5f6aad4575949.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/94ac638cbccd4176a2d0e283caf5d41c.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/f231503fc4b944448961e0a1bc566b1c.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>运行完成后在对应路径下找到dist文件，就说明构建成功，我的项目路径是C:\Users\Administrator\.jenkins\workspace\，所以就去该文件夹中找对应的文件</strong></p><p><img src="https://img-blog.csdnimg.cn/7ced6f335d3947c982e0402c2878d08c.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/26348470a92c461db88bcd1491289380.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_19,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>接下来，我们在gitea中添加webhooks用来触发Jenkins的构建</strong></p><p><strong>先在Jenkins的任务配置中设置构建触发器，并且在下面的配置项中找到token配置，设置token并保存</strong></p><p><img src="https://img-blog.csdnimg.cn/2b4dd831f84b474e98fdcb2399e27c93.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/a1b1a5b87d56474ebf50fe6901f7b56a.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>然后在仓库设置中添加web钩子，设置请求的地址，地址与Jenkins构建触发器中示例地址一致</strong></p><p><img src="https://img-blog.csdnimg.cn/a9b7e1ee9dd1494c8a535f21eb682ed4.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/e5dd04bc03ad456bbcf4e137f07328f3.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/b980502186694299b96dba82219ca2da.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>触发条件我选择的是推送，即当前仓库收到推送信息就会通过webhooks通知Jenkins构建项目，最后测试一下是否能正常请求，请求成功后就会执行构建</strong></p><p><img src="https://img-blog.csdnimg.cn/3052689299bf4f258f55c82f61943514.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/1882cdea77d442a69de746bb4e6bfd20.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/eadc088625294907ac5e192fbd716cfe.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>下面我贴出完整的前端部署命令供参考，整个流程是：推送代码后webhooks将触发Jenkins构建前端项目，构建完成后将项目复制到Nginx文件夹下并重启服务</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">显示版本号<br>echo <span class="hljs-keyword">node</span> <span class="hljs-title">version</span><br><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br>echo npm <span class="hljs-keyword">version</span><br>npm -v<br></code></pre></td></tr></table></figure><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">安装依赖<br><span class="hljs-built_in">npm</span> i<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">构建项目<br>npm <span class="hljs-builtin-name">run</span> build<br></code></pre></td></tr></table></figure><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">复制构建好的项目至Nginx目录下<br>cd /d &quot;D:<span class="hljs-symbol">\S</span>oft<span class="hljs-symbol">\N</span>ginx<span class="hljs-symbol">\p</span>roject&quot;<br>rd /s/q vue_vite<br>md vue_vite<br>xcopy &quot;D:<span class="hljs-symbol">\S</span>oft<span class="hljs-symbol">\J</span>enkins<span class="hljs-symbol">\j</span>enkins<span class="hljs-symbol">\w</span>orkspace<span class="hljs-symbol">\v</span>ue_vite_free_type<span class="hljs-symbol">\d</span>ist&quot; &quot;D:<span class="hljs-symbol">\S</span>oft<span class="hljs-symbol">\N</span>ginx<span class="hljs-symbol">\p</span>roject<span class="hljs-symbol">\v</span>ue_vite&quot; /E /Y<br></code></pre></td></tr></table></figure><p><strong>不改变nginx配置的情况下，下面的可以不需要</strong></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">重启nginx服务<br><span class="hljs-keyword">cd</span> <span class="hljs-string">/d</span> <span class="hljs-string">&quot;D:\Soft\Nginx&quot;</span><br>nginx -s <span class="hljs-keyword">reload</span><br>nginx -s <span class="hljs-keyword">quit</span><br>tasklist | find <span class="hljs-string">/i</span> <span class="hljs-string">&quot;nginx.exe&quot;</span> &gt;nul 2&gt;nul &amp;&amp; goto isAlive || goto isKilled<br><span class="hljs-function">:isKilled</span><br>start nginx<br><span class="hljs-function">:isAlive</span><br>taskkill <span class="hljs-string">/f</span> <span class="hljs-string">/t</span> <span class="hljs-string">/im</span> nginx.exe<br>start nginx<br></code></pre></td></tr></table></figure><p><strong>以上就是使用window批处理命令构建前端的整个流程，下面是使用pipeline构建项目并部署的流程</strong></p><h3 id="流水线项目构建"><a href="#流水线项目构建" class="headerlink" title="流水线项目构建"></a>流水线项目构建</h3><p><strong>流水线配置和批处理命令一样，新建流水线任务，配置webhooks和token，pipeline的好处就是将每块步骤分开，直观的看到项目的构建过程</strong></p><p><img src="https://img-blog.csdnimg.cn/8ba2bd513e6f466a9ec8503af23acf62.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/f192901dd95448898d0e4e202f288bcd.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/ebdcc6f3a2b347a2ad20299f185edcd5.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>然后就是构建流水线脚本，这里放出我配置的一段供大家参考。</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><br>pipeline &#123;<br>    agent <span class="hljs-built_in">any</span><br>   stages &#123;<br>      <span class="hljs-function"><span class="hljs-title">stage</span>(<span class="hljs-params"><span class="hljs-string">&#x27;pull&#x27;</span></span>)</span> &#123;<br>         steps &#123;<br>            echo <span class="hljs-string">&#x27;pull code start&#x27;</span><br>            git branch: <span class="hljs-string">&#x27;master&#x27;</span>,<br>                <span class="hljs-attr">credentialsId</span>: <span class="hljs-string">&#x27;7196d35f-xxxxxxxxxxxxxxxxxxxx-c7936ddd3dd4&#x27;</span>, <br>                <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;http://localhost:10241/xxxxxxx/vite--vue30.git&#x27;</span><br><br>         &#125;<br>      &#125;<br>      <span class="hljs-function"><span class="hljs-title">stage</span>(<span class="hljs-params"><span class="hljs-string">&#x27;build&#x27;</span></span>)</span> &#123;<br>         steps &#123;<br>            echo <span class="hljs-string">&quot;node version&quot;</span><br>            bat <span class="hljs-string">&quot;node -v&quot;</span><br>            echo <span class="hljs-string">&#x27;npm version&#x27;</span><br>            bat <span class="hljs-string">&#x27;npm -v&#x27;</span><br>            echo <span class="hljs-string">&#x27;install start......&#x27;</span><br>            bat <span class="hljs-string">&quot;npm i&quot;</span><br>            echo <span class="hljs-string">&#x27;build start......&#x27;</span><br>            bat <span class="hljs-string">&#x27;npm run build&#x27;</span><br>            echo <span class="hljs-string">&#x27;build finish......&#x27;</span><br>         &#125;<br>      &#125;<br>      <span class="hljs-function"><span class="hljs-title">stage</span>(<span class="hljs-params"><span class="hljs-string">&#x27;deploy&#x27;</span></span>)</span> &#123;<br>         steps &#123; <br>            <span class="hljs-function"><span class="hljs-title">dir</span>(<span class="hljs-params"><span class="hljs-string">&#x27;d:/Soft/Nginx/project&#x27;</span></span>)</span> &#123;<br>                bat <span class="hljs-string">&quot;rd /s/q vue_vite&quot;</span><br>                bat <span class="hljs-string">&quot;md vue_vite&quot;</span><br>            &#125;<br>            bat(<span class="hljs-string">&#x27;xcopy &quot;D:/Soft/Jenkins/jenkins/workspace/vue_vite_pipeline/dist&quot; &quot;D:/Soft/Nginx/project/vue_vite&quot; /O /X /E /H /K&#x27;</span>)<br>            <span class="hljs-function"><span class="hljs-title">dir</span>(<span class="hljs-params"><span class="hljs-string">&#x27;d:/Soft/Nginx&#x27;</span></span>)</span> &#123;<br>                bat(<span class="hljs-string">&#x27;start run.bat&#x27;</span>)<br>            &#125;<br>            echo <span class="hljs-string">&#x27;deploy success&#x27;</span><br>         &#125;<br>         <br>      &#125;<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>其中run.bat的内容如下：</strong></p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dos">nginx -s reload<br>nginx -s quit<br>tasklist | <span class="hljs-built_in">find</span> /i &quot;nginx.exe&quot; &gt;<span class="hljs-built_in">nul</span> <span class="hljs-number">2</span>&gt;<span class="hljs-built_in">nul</span> &amp;&amp; <span class="hljs-keyword">goto</span> isAlive || <span class="hljs-keyword">goto</span> isKilled<br>:isKilled<br><span class="hljs-built_in">start</span> nginx<br>:isAlive<br><span class="hljs-built_in">taskkill</span> /f /t /im nginx.exe<br><span class="hljs-built_in">start</span> nginx<br></code></pre></td></tr></table></figure><p><strong>保存完成后来到流水线列表点击运行，程序就会开始运行。运行结束后界面会变成绿色，失败会变成红色</strong></p><p><img src="https://img-blog.csdnimg.cn/9a47f0697f6f4fdd93686cb6444dbbdb.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/3b4f03fda3e14fb1aa49239bf0727f68.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/db5b1e43482d4f45a22610476e058712.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>最后输入网址就可以看到部署效果，至此，前端自动化部署就介绍这么多，有兴趣的小伙伴可以自己试试，此方法同样适用node项目部署（建议搭配<a href="https://pm2.keymetrics.io/">pm2</a>管理node进程），需要把build命令去掉即可。</strong></p><p><img src="https://img-blog.csdnimg.cn/86ba2aee1e90435bbb7e2fada3b41798.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a><strong>写在最后</strong></h3><p><strong>gitee和github等远程仓库同样也支持webhooks或actions，有兴趣的小伙伴可以把Jenkins暴露在公网上配置远程服务，安利一波<a href="https://blog.csdn.net/time_____/article/details/114664920">内网穿透搭建</a></strong></p><p><strong>最后，感谢你阅读完这篇文章，如果这篇文章有帮助到你，请支持一下博主~你的支持就是博主分享文章的动力！</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>联想Tab M10 FHD PLUS (TB-X606F)安卓10版本刷TWRP及Magisk</title>
    <link href="/2021/11/04/%E8%81%94%E6%83%B3Tab%20M10%20FHD%20PLUS%20(TB-X606F)%E5%AE%89%E5%8D%9310%E7%89%88%E6%9C%AC%E5%88%B7TWRP%E5%8F%8AMagisk/"/>
    <url>/2021/11/04/%E8%81%94%E6%83%B3Tab%20M10%20FHD%20PLUS%20(TB-X606F)%E5%AE%89%E5%8D%9310%E7%89%88%E6%9C%AC%E5%88%B7TWRP%E5%8F%8AMagisk/</url>
    
    <content type="html"><![CDATA[<p><strong>感谢博友提供的参考文章：<a href="https://unofficialtwrp.com/twrp-3-5-0-root-lenovo-tb-x606f-x606fa/">unofficial twrp 3.5.0 Root Lenovo TB-X606F X606FA - twrp unofficial</a><br>接上篇文章：<a href="https://blog.csdn.net/time_____/article/details/109294693">联想Tab M10 FHD PLUS (TB-X606F)解锁BL，获取root权限（无需第三方recovery），刷xp框架（太极-阳）适用大部分联发科CPU（国际版rom底包）_DieHunter1024的博客-CSDN博客</a></strong></p><p><strong>前言：解答一些博友的刷机问题及分享一下最近刷安卓10及root的经历</strong></p><ol><li><strong>无法解锁BL：需要登录联想账号并在开发者选项下勾选OEM解锁（国际版可能会被墙）</strong></li><li><strong>win10打开fastboot模式（电脑设备管理中）驱动感叹号，没办法执行解锁，一直显示waiting for driver ：我是直接在fastboot模式下用驱动人生安装驱动，<a href="https://gitee.com/DieHunter/myCode/blob/master/%E5%88%B7%E6%9C%BA%E5%B7%A5%E5%85%B7/lenovo/%E5%AE%89%E5%8D%9310/Android%20ADB%20Interface_4.1.0.0_2021-11-04%2013%2040%2016.zip">我的仓库</a>里也有备份，驱动手动安装看这里：</strong><a href="https://forum.xda-developers.com/t/windows-10-mtk-vcom-usb-drivers-for-32-64-bit-driver-install-tutorial-m2.3267033/">Windows 10 MTK VCOM USB Drivers for 32 &amp; 64 bit + Driver install tutorial M2 | XDA Forums</a><strong>（嫌麻烦可以直接用驱动人生，或者直接用win7电脑进行）</strong></li><li><strong>刷完之后卡重启：很可能是因为包不兼容，建议选好机型后再刷，官方镜像地址：<a href="https://mirrors.lolinet.com/firmware/lenovo/Tab_M10_FHD_Plus_2nd_Gen/">lolinet mirrors - firmware, software, iso etc.</a>（速度还行）</strong></li><li><strong>救砖时SP_Flash_Tool一直连不上：平板关机多试几次，也有可能是驱动没安装</strong></li></ol><p><strong>下面我会分享一下新版的镜像刷TWRP及Magisk的过程，线刷救砖，解锁BL参考这篇文章：<a href="https://blog.csdn.net/time_____/article/details/109294693">联想Tab M10 FHD PLUS (TB-X606F)解锁BL，获取root权限（无需第三方recovery），刷xp框架（太极-阳）适用大部分联发科CPU（国际版rom底包）_DieHunter1024的博客-CSDN博客</a></strong></p><p><strong>准备工作：</strong></p><ul><li><strong>电量充足的联想Tab M10 FHD PLUS平板</strong></li><li><strong>type-c数据线</strong></li><li><strong>电脑</strong></li><li><strong><a href="https://mirrors.lolinet.com/firmware/lenovo/Tab_M10_FHD_Plus_2nd_Gen/TB-X606F/">官方ROM</a>（我这用的是TB-X606F_S300376_210909_BMP）</strong></li><li><strong><a href="https://gitee.com/DieHunter/myCode/tree/master/%E5%88%B7%E6%9C%BA%E5%B7%A5%E5%85%B7/lenovo/%E5%AE%89%E5%8D%9310/platform-tools">adb和fastboot工具</a>：platform-tools(里面已经集成了下面三个包)</strong></li><li><strong><a href="https://gitee.com/DieHunter/myCode/blob/master/%E5%88%B7%E6%9C%BA%E5%B7%A5%E5%85%B7/lenovo/%E5%AE%89%E5%8D%9310/350%20Lenovo%20X606F%20X606FA.rar">TWRP包</a></strong></li><li><strong><a href="https://gitee.com/DieHunter/myCode/blob/master/%E5%88%B7%E6%9C%BA%E5%B7%A5%E5%85%B7/lenovo/%E5%AE%89%E5%8D%9310/vbmeta.zip">vbmeta.img</a>（禁用引导验证镜像，改启动镜像）</strong></li><li><strong><a href="https://gitee.com/DieHunter/myCode/blob/master/%E5%88%B7%E6%9C%BA%E5%B7%A5%E5%85%B7/lenovo/%E5%AE%89%E5%8D%9310/Magisk-v21.4.zip">Magisk</a></strong></li></ul><p><strong>首先打开platform-tools，输入cmd，执行adb reboot bootloader，重启平板电脑到BootLoader（fastboot）</strong></p><p><strong>等待平板启动到fastboot输入fastboot flash recovery recovery.img，刷入TWRP</strong></p><p><img src="https://img-blog.csdnimg.cn/402ca9fbb33a47e097cdaf56afc14216.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>然后刷入<a href="https://gitee.com/DieHunter/myCode/blob/master/%E5%88%B7%E6%9C%BA%E5%B7%A5%E5%85%B7/lenovo/%E5%AE%89%E5%8D%9310/vbmeta.zip">vbmeta.img</a>：fastboot flash vbmeta vbmeta.img，这里碰到一个问题，刷入TWRP不生效，再刷一遍就好了</strong><img src="https://img-blog.csdnimg.cn/b57e8109372a483a96f9c540cfe11a0f.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>fastboot format userdata：清除用户数据</strong></p><p><img src="https://img-blog.csdnimg.cn/d80277de29d0497ebbf953c8f3f3869e.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>完事之后直接进入recovery：fastboot reboot recovery<br>方法一：依次点击 ‘高级’ =&gt; ‘adb sideload’ =&gt; ‘滑动滑块’开启卡刷包推送模式，此时在platform-tools中输入adb sideload Magisk-v21.4.zip（这种方法我没成功）</strong></p><p><img src="https://img-blog.csdnimg.cn/adf7e1313cd04948937459d9f309cdc5.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_13,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/4fd39a454c914ca38e9527c06b825946.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_17,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/8f2a0d0b9acc41fca871320fbebc67de.jpg?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>方法二：开机状态下把Magisk-v21.4.zip放在平板文件系统根目录，进入recovery，点击安装，选择Magisk.zip包，滑动刷入，最后安装完成，重启系统，就搞定了</strong></p><p><img src="https://img-blog.csdnimg.cn/f00fe340666e41f59f34f28bae3dc34d.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_13,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/006c362115754332aa92f6ba255fe5d8.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_13,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/5650c4370efa49f5a38dbbc16dbe0f15.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_13,color_FFFFFF,t_70,g_se,x_16"></p><p><img src="https://img-blog.csdnimg.cn/b4cbaacf05714084872994ef0f359824.jpg?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/52c92a1f82e14879ad3b919582a1a1dd.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_16,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>最后，提醒各位，刷机一定要做好备份，如果这篇文章对你有帮助，请给个三连支持一下吧。附上<a href="https://gitee.com/DieHunter/myCode/tree/master/%E5%88%B7%E6%9C%BA%E5%B7%A5%E5%85%B7/lenovo">仓库地址</a>，有任何问题都可以在评论区提出讨论</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从0到1，教你如何使用Tasker+Autojs实现自动打卡功能</title>
    <link href="/2021/10/24/%E4%BB%8E0%E5%88%B01%EF%BC%8C%E6%95%99%E4%BD%A0%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Tasker+Autojs%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%89%93%E5%8D%A1%E5%8A%9F%E8%83%BD/"/>
    <url>/2021/10/24/%E4%BB%8E0%E5%88%B01%EF%BC%8C%E6%95%99%E4%BD%A0%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Tasker+Autojs%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%89%93%E5%8D%A1%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<p><strong>你是否有上下班总会忘记打卡或者迟到的困扰，这篇文章将带你感受一下自动化工具+JS的魅力<br>首先声明：本文章不针对任何第三方软件，文章中的脚本只做学习，不做商用，侵删<br>准备工作：</strong></p><ul><li><strong>安卓手机或模拟器，最好使用模拟器（推荐夜神模拟器安卓7的64位），因为手机条件会比较苛刻（需要root，和谷歌三件套）</strong></li><li><strong><a href="https://hyb1996.github.io/AutoJs-Docs/#/">Auto.js</a>软件，或者其衍生产品<a href="https://kkevsekk1.github.io/AutoXJs-Docs/#/">AutoX.js</a></strong></li><li><strong>Tasker，<a href="https://taskerm.com/tasker-download">中文站</a>，<a href="https://tasker.joaoapps.com/download.html">原网站</a></strong></li><li><strong>需要自动执行的软件，我用的是 *人薪事</strong></li></ul><p><strong>首先，咱们熟悉一下Auto.js的调试，官方文档已经写的很清楚了，我主要概述一下抓取组件调试的过程</strong><br><strong>以AutoX.js为例，VScode安装<a href="https://marketplace.visualstudio.com/items?itemNameaaroncheng.auto-js-vsce-fixed">Auto.js-VSCodeExt-Fixed</a>插件，按住ctrl+shift+p，输入auto即可进入插件的工具菜单，选择 ‘开启服务’，复制右下角服务ip及端口，就可以等待移动端连接了</strong></p><p><img src="https://img-blog.csdnimg.cn/9bee191e758b4cd3b8ece0544e484de4.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_19,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/a2e5794c2b884ce78c5732ce2daeed2b.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>如果是用手机连接，需要开启：开发者工具&gt;USB调试，模拟器则直接打开AutoXjs侧边栏的连接电脑，输入之前复制的服务ip及端口，开启调试模式</strong></p><p><img src="https://img-blog.csdnimg.cn/d7def7bcb69c41dcb47f427a04296df4.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/9a96b69954bd4ec8b6cef6f44995cc83.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>打开悬浮窗，用于应用控件的抓取</strong></p><p><img src="https://img-blog.csdnimg.cn/13ecdb82a57346b2a4b21882d18d1577.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/43ff76435efe44629fd688e038d39b12.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>以Tasker为例，点击悬浮窗的 ‘布局分析’ ，选择布局范围分析，AutoXjs会将当前页面中的可操作控件列举出来，此时通过js代码进行事件操作即可实现自动化控制</strong></p><p><img src="https://img-blog.csdnimg.cn/d4441224f8ae46ea9350cc6cb77e46f1.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/593c0cef5a2b4e8fa145f4b954f78997.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/de46bd76d2674710a28a023a39f64a36.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/8bad4952fe734da689c9c6df0a62f15d.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>以搜索框为例，我们实现一个 模拟搜索 的诉求</strong><br><img src="https://img-blog.csdnimg.cn/e152d9f9ac5c41f4969cbd40c898a8fc.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/91c5330f47c34588bded1cc98cfcb0cb.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>根据官方文档，我们可以简单实现该功能</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> appName = <span class="hljs-string">&quot;Tasker&quot;</span>,<br>  getSearchBtn = <span class="hljs-function">() =&gt;</span> desc(<span class="hljs-string">&quot;搜索 Tasker&quot;</span>), <span class="hljs-comment">//搜索按钮，desc文本查找控件</span><br>  getSearchInput = <span class="hljs-function">() =&gt;</span> id(<span class="hljs-string">&quot;filter_text&quot;</span>), <span class="hljs-comment">//输入框</span><br>  startSearchBtn = <span class="hljs-function">() =&gt;</span> id(<span class="hljs-string">&quot;search&quot;</span>), <span class="hljs-comment">//开始查询按钮</span><br>  str = <span class="hljs-string">&quot;打卡&quot;</span>;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;launchApp:&quot;</span> + appName, launchApp(appName)); <span class="hljs-comment">//打开Tasker app</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;getSearchBtn&quot;</span>, getElem(getSearchBtn()).click()); <span class="hljs-comment">//点击搜索按钮</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;getSearchInput&quot;</span>, getElem(getSearchInput()).setText(str)); <span class="hljs-comment">//输入关键字</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;startSearchBtn&quot;</span>, getElem(startSearchBtn()).click()); <span class="hljs-comment">//点击开始搜索按钮</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getElem</span>(<span class="hljs-params">ele</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> ele.findOne();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>效果如下：</strong><img src="https://img-blog.csdnimg.cn/7df4a701b77047858ea9285e91d4922e.gif"></p><p><strong>接着，咱们照葫芦画瓢，参照文档使用模拟动作实现操控其他软件的功能，比如每次执行脚本时，都会自动在打卡软件中打卡（源码放在结尾）</strong></p><p><img src="https://img-blog.csdnimg.cn/d4a86752a9584193b0752bd2f0863537.gif"></p><p><strong>AutoX.js已经帮助我们实现了半自动打卡，距离我们的目标又近了一步</strong></p><p><strong>下面我们需要使用Tasker配合AutoX.js达到触发某（些）条件时打卡即可</strong></p><p><strong>打开tasker，新建任务test</strong></p><p><img src="https://img-blog.csdnimg.cn/46f44558066445b5ab7201052b25aefd.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/bc6be66ae5a14c139fcc7e0f06a5b9fc.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/ed1171dec93c4778a70a8d1389e07cb4.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>在任务编辑中新建系统操作&gt;发送意图，这里我新建了一个android.intent.action.tasker的广播，用于和AutoX交互</strong></p><p><img src="https://img-blog.csdnimg.cn/039cb576adaa42c8b4ed8d1559678da1.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/0f6accab8a1d4cdeac7e7c686ce98f29.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/67dc34fc45e94e43903bac91b2d85d04.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>我们在AutoX中新建一个脚本触发事件，当有应用触发android.intent.action.tasker时，执行这个打卡脚本</strong></p><p><img src="https://img-blog.csdnimg.cn/48b46af346ca416d8dcc6292c4f531ca.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/d38d83d8995d455aabc5624497fb5a63.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/a0103ebd96d04e39ad82e87e650c9517.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/cb4e781638cc41e49b5e64e529197309.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>然后我们在Tasker中运行这个任务用来触发AutoX执行脚本</strong></p><p><img src="https://img-blog.csdnimg.cn/d5672eb6b10140a9b2acbe6b526ce069.gif"></p><p><strong>至此，使用Tasker连接AutoX这块已经完成，接下来就是触发任务的条件了<br>既然是自动打卡，肯定与时间地点有关系。所以，我们在Tasker的配置文件中新建配置，配置时间，和地点（需要谷歌三件套），并选择任务，当达到特定时间地点时，Tasker就会触发打卡脚本</strong></p><p><img src="https://img-blog.csdnimg.cn/4264d57781be47dd85dd29b046198b9f.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/cfe61ae900ee464a829c12517f835e75.png?x-oss-processimage/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>写在最后：</strong></p><p><strong>使用Tasker+Autojs实现打卡固然好用，但是其对手机要求较高，如果你的手机恰好root，并装了谷歌三件套，使用起来会比较方便。其他同学推荐使用安卓模拟器实现。</strong></p><p><strong>源码：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/AutoJs&Tasker">myCode: 一些小案例 - Gitee.com</a></p><p><strong>如果这篇文章对你有帮助，请帮忙点个赞！感谢</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>浅析MVVM原理，实现一个mini-vue</title>
    <link href="/2021/08/08/%E6%B5%85%E6%9E%90MVVM%E5%8E%9F%E7%90%86%EF%BC%8C%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAmini-vue/"/>
    <url>/2021/08/08/%E6%B5%85%E6%9E%90MVVM%E5%8E%9F%E7%90%86%EF%BC%8C%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAmini-vue/</url>
    
    <content type="html"><![CDATA[<p><strong>目录</strong></p><p><a href="#main-toc">前言</a></p><p><a href="#MVVM">MVVM</a></p><p><a href="#%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0">mini-vue实现</a></p><p><a href="#Compile%EF%BC%88%E6%8C%87%E4%BB%A4%E8%A7%A3%E6%9E%90%EF%BC%89">Compile（指令解析）</a></p><p><a href="#updater">Updater（视图更新）</a></p><p><a href="#proxy">Proxy（代理data）</a></p><p><a href="#observer">Observer（数据劫持）</a></p><p><a href="#dep">Dep（调度中心）</a></p><p><a href="#watcher">Watcher（数据观察）</a></p><p><a href="#%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%9E%E6%8E%A5">函数的连接</a></p><p><a href="#%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E">写在最后</a></p><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h2><p><strong>MVVM实际上是MVC的改进版，其立足于MVP框架。使用Vue时，我们会体会到其与React的区别，绑定表单数据时react对输入框读写需要input事件设置state，以及value绑定，而vue则只需将数据与model绑定即可，这种数据驱动视图却与视图解耦的编程方式使用起来很方便。以前面试官问vue原理，若能说出双向绑定实现和Object.defineProperty就已经够了，现在随着对vue深入的学习，面试官已经不仅仅局限于此。所以，为了深入体验mvvm模式，我实现了一个mini-vue。</strong></p><h2 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a><strong>MVVM</strong></h2><p><strong>在开始前，我们先试着参照下图实现一个简单的双向绑定案例</strong></p><p><img src="https://img-blog.csdnimg.cn/20210806143347529.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>DOM通过eventListener修改Model，Model通过修改data驱动视图</strong></p><p><img src="https://img-blog.csdnimg.cn/20210806144123455.gif"></p><p><strong>在html&gt;body中添加以下代码就可以实现</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;input id=<span class="hljs-string">&quot;input-box&quot;</span> type=<span class="hljs-string">&quot;text&quot;</span>&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;show-text&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">const</span> showText = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#show-text&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">const</span> inputBox = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#input-box&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">VM</span> </span>&#123;</span></span><br><span class="javascript"><span class="xml">        data = &#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">Object</span>.defineProperty(<span class="hljs-built_in">this</span>.data, <span class="hljs-string">&#x27;value&#x27;</span>, &#123;</span></span><br><span class="javascript"><span class="xml">                <span class="hljs-function"><span class="hljs-title">set</span>(<span class="hljs-params">v</span>)</span> &#123;</span></span><br><span class="javascript"><span class="xml">                    showText.textContent = v</span></span><br><span class="javascript"><span class="xml">                &#125;,</span></span><br><span class="javascript"><span class="xml">                <span class="hljs-function"><span class="hljs-title">get</span>(<span class="hljs-params"></span>)</span> &#123;</span></span><br><span class="javascript"><span class="xml">                    <span class="hljs-keyword">return</span> showText.textContent</span></span><br><span class="javascript"><span class="xml">                &#125;</span></span><br><span class="javascript"><span class="xml">            &#125;)</span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> VM()</span></span><br><span class="javascript"><span class="xml">    inputBox.addEventListener(<span class="hljs-string">&#x27;input&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span></span><br><span class="javascript"><span class="xml">        vm.data.value = e.target.value</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-built_in">console</span>.log(vm.data.value)</span></span><br><span class="javascript"><span class="xml">    &#125;)</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><strong>在上述代码中，我们可以使用Object.defineProperty将data和textContent的值绑定，从而达到数据驱动视图的效果，那么这样就够了吗？</strong></p><h2 id="mini-vue实现"><a href="#mini-vue实现" class="headerlink" title="mini-vue实现"></a>mini-vue实现</h2><p><strong>下面是双向绑定的流程<br><img src="https://img-blog.csdnimg.cn/2021080611515858.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></strong><br><strong>通过上图我们可以得知：new MVVM后会进行两步操作，一是compile指令解析，将v-if,@click,<code>&#123;&#123; &#125;&#125;</code>解析出来，获取data中的数据，并且都与watcher绑定，第一次初始化和watcher监听到数据变化时会执行updater，重新渲染页面，二是observer数据劫持，将data中的数据通过defineProperty添加读写监听，并将数据变化与watcher绑定在一起，那么此时watcher就是连接数据变化和视图更新的枢纽。</strong></p><p><strong>下面我们一步一步实现上述代码</strong></p><h3 id="Compile（指令解析）"><a href="#Compile（指令解析）" class="headerlink" title="Compile（指令解析）"></a><strong>Compile（</strong>指令解析<strong>）</strong></h3><p><strong>我们回顾一下vue是如何使用的，标签中各种v-if，v-show，v-html，以及@click等等属性，绑定着data中的属性和methods中的函数</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&#x27;title.name&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&#x27;isRender&#x27;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&#x27;isRender&#x27;</span>&gt;</span>&#123;&#123;info.name&#125;&#125;---&#123;&#123;info.age&#125;&#125;---&#123;&#123;modelData&#125;&#125;---&#123;&#123;inputVal.item.value&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&#x27;isShow&#x27;</span>&gt;</span>&#123;&#123;info.age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&#x27;isRender&#x27;</span>&gt;</span>&#123;&#123;modelData&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&#x27;isShow&#x27;</span>&gt;</span>&#123;&#123;inputVal.item.value&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&#x27;inputVal.item.value&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&#x27;htmlTemp&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&#x27;isShow&#x27;</span>&gt;</span>world<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&#x27;handlerShow&#x27;</span>&gt;</span>点击显示<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&#x27;handlerRender&#x27;</span>&gt;</span>点击渲染<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&#x27;modelData&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&#x27;inputVal.item.value&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>而实例化vue则是将数据和函数初始化到vue中</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;<br>    <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,<br>    <span class="hljs-attr">data</span>: &#123;<br>        <span class="hljs-attr">title</span>: &#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;hello&#x27;</span><br>        &#125;,<br>        <span class="hljs-attr">info</span>: &#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;张三&#x27;</span>,<br>            <span class="hljs-attr">age</span>: <span class="hljs-number">23</span>,<br>        &#125;,<br>        <span class="hljs-attr">isShow</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">isRender</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">modelData</span>: <span class="hljs-number">123</span>,<br>        <span class="hljs-attr">htmlTemp</span>: <span class="hljs-string">&#x27;&lt;span style=&quot;color:red;&quot;&gt;html&lt;/span&gt;&#x27;</span>,<br>        <span class="hljs-attr">inputVal</span>: &#123;<br>            <span class="hljs-attr">item</span>: &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;abc&#x27;</span><br>            &#125;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-attr">methods</span>: &#123;<br>        <span class="hljs-function"><span class="hljs-title">handlerShow</span>(<span class="hljs-params"></span>)</span> &#123;<br>            <span class="hljs-built_in">this</span>.isShow = !<span class="hljs-built_in">this</span>.isShow<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">handlerRender</span>(<span class="hljs-params"></span>)</span> &#123;<br>            <span class="hljs-built_in">this</span>.isRender = !<span class="hljs-built_in">this</span>.isRender<br>        &#125;<br>    &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>那么，我们要如何去让js识别这些指令并渲染视图呢<br>首先，创建标签碎片，将Dom元素获取到DocumentFragment中，以便于解析指令及根据指令对视图响应，其次，将标签属性分离，每种指令对应一种响应方式（updater）。最后绑定watcher监听到数据变化时，再次触发updater<br>以下是compile.js，用来解析标签内容和属性</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 指令解析器</span><br><span class="hljs-keyword">const</span> textRegex = <span class="hljs-regexp">/\&#123;\&#123;(.+?)\&#125;\&#125;/g</span> <span class="hljs-comment">//解析&#123;&#123;&#125;&#125;的正则</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Compile</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">elem, vm</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.elem = isElemNode(elem) === <span class="hljs-string">&#x27;1&#x27;</span> ? elem : <span class="hljs-built_in">document</span>.querySelector(elem)<br>        <span class="hljs-built_in">this</span>.vm = vm<br>        <span class="hljs-keyword">const</span> fragment = <span class="hljs-built_in">this</span>.createFragment(<span class="hljs-built_in">this</span>.elem)<br>        <span class="hljs-built_in">this</span>.getTemp(fragment, <span class="hljs-built_in">this</span>.vm)<br>        <span class="hljs-built_in">this</span>.elem.appendChild(fragment);<br>    &#125;<br>    <span class="hljs-comment">// 递归子元素，查找所有元素</span><br>    <span class="hljs-function"><span class="hljs-title">getTemp</span>(<span class="hljs-params">fragment, vm</span>)</span> &#123;<br>        <span class="hljs-keyword">const</span> fragmentChild = <span class="hljs-built_in">Array</span>.from(fragment.childNodes)<br>        fragmentChild.forEach(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.filterElem(item, vm)<br>            item.childNodes &amp;&amp; item.childNodes.length &amp;&amp; <span class="hljs-built_in">this</span>.getTemp(item, vm)<br>        &#125;)<br>    &#125;<br>    <span class="hljs-comment">// 创建标签碎片，将dom元素添加到标签碎片中</span><br>    <span class="hljs-function"><span class="hljs-title">createFragment</span>(<span class="hljs-params">elem</span>)</span> &#123;<br>        <span class="hljs-keyword">const</span> fragment = <span class="hljs-built_in">document</span>.createDocumentFragment();<br>        <span class="hljs-keyword">while</span> (elem.firstChild) &#123;<br>            fragment.append(elem.firstChild)<br>        &#125;<br>        <span class="hljs-keyword">return</span> fragment<br>    &#125;<br><br>    <span class="hljs-comment">// 针对不同元素节点进行分离</span><br>    <span class="hljs-function"><span class="hljs-title">filterElem</span>(<span class="hljs-params">elem, vm</span>)</span> &#123;<br>        <span class="hljs-keyword">switch</span> (isElemNode(elem)) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>: <span class="hljs-comment">//元素节点</span><br>                <span class="hljs-built_in">this</span>.renderNode(elem, vm)<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>: <span class="hljs-comment">//文本节点</span><br>                <span class="hljs-built_in">this</span>.renderText(elem, vm)<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">// 渲染文本，主要解析‘&#123;&#123;&#125;&#125;’及多个‘&#123;&#123;&#125;&#125;’</span><br>    <span class="hljs-function"><span class="hljs-title">renderText</span>(<span class="hljs-params">elem, vm</span>)</span> &#123;<br>        textRegex.test(elem.textContent) &amp;&amp; updater(elem, vm, elem.textContent, <span class="hljs-string">&#x27;text-content&#x27;</span>)<br>    &#125;<br>    <span class="hljs-comment">// 渲染标签</span><br>    <span class="hljs-function"><span class="hljs-title">renderNode</span>(<span class="hljs-params">elem, vm</span>)</span> &#123;<br>        <span class="hljs-comment">//取出所有属性和值</span><br>        <span class="hljs-built_in">Array</span>.from(elem.attributes).forEach(<span class="hljs-function"><span class="hljs-params">attr</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">const</span> &#123;<br>                name,<br>                value<br>            &#125; = attr;<br>            <span class="hljs-comment">// 过滤‘v-’和‘@’操作，并移除标签属性</span><br>            name.startsWith(<span class="hljs-string">&#x27;v-&#x27;</span>) ? (<span class="hljs-built_in">this</span>.compileV_Command(elem, vm, name, value), removeAttr(elem, name)) : name.startsWith(<span class="hljs-string">&#x27;@&#x27;</span>) ? (<span class="hljs-built_in">this</span>.compileEventComment(elem, vm, name.split(<span class="hljs-string">&#x27;@&#x27;</span>)[<span class="hljs-number">1</span>], value), removeAttr(elem, name)) : <span class="hljs-literal">null</span><br>        &#125;)<br>    &#125;<br>    <span class="hljs-comment">// v- 指令解析,指令</span><br>    <span class="hljs-function"><span class="hljs-title">compileV_Command</span>(<span class="hljs-params">elem, vm, name, value</span>)</span> &#123;<br>        <span class="hljs-keyword">const</span> key = name.split(<span class="hljs-string">&#x27;v-&#x27;</span>)<br>        <span class="hljs-keyword">const</span> eventCommand = key[<span class="hljs-number">1</span>] &amp;&amp; key[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;:&#x27;</span>)[<span class="hljs-number">1</span>]<br>        <span class="hljs-comment">// v-model事件</span><br>        key[<span class="hljs-number">1</span>] === <span class="hljs-string">&#x27;model&#x27;</span> &amp;&amp; <span class="hljs-built_in">this</span>.compileEventComment(elem, vm, <span class="hljs-string">&#x27;input&#x27;</span>, value, <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123;<br>            setDeepData(vm, value, e.target.value)<br>        &#125;)<br>        <span class="hljs-comment">// 过滤指令是否为事件</span><br>        eventCommand ? <span class="hljs-built_in">this</span>.compileEventComment(elem, vm, eventCommand, value) : updater(elem, vm, value, key[<span class="hljs-number">1</span>])<br>    &#125;<br>    <span class="hljs-comment">// @ 指令解析,事件</span><br>    <span class="hljs-function"><span class="hljs-title">compileEventComment</span>(<span class="hljs-params">elem, vm, name, value, fn</span>)</span> &#123;<br>        !fn &amp;&amp; elem.addEventListener(name, vm.options.methods[value].bind(vm))<br>        fn &amp;&amp; elem.addEventListener(name, fn.bind(vm))<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Updater（视图更新）"><a href="#Updater（视图更新）" class="headerlink" title="Updater（视图更新）"></a>Updater（视图更新）</h3><p><strong>指令解析完后自然需要updater.js，对当前元素进行下一步渲染，在此之前，我们的值需要从vue.data中取，这样才能将data数据绑定到标签中，lodash有两个函数一个是_.get()，另一个是_.set()，作用是获取和设置对象某一层某个值，所以我们需要在utils（工具函数）中实现一下</strong></p><p><strong>utils.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//lodash中的 _.get()，获取对象多级属性</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getDeepData</span>(<span class="hljs-params">object, path, defaultValue</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> paths = path.split(<span class="hljs-string">&#x27;.&#x27;</span>)<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> i <span class="hljs-keyword">of</span> paths) &#123; <span class="hljs-comment">//逐层遍历path</span><br>        object = object[i]<br>        <span class="hljs-keyword">if</span> (object === <span class="hljs-literal">undefined</span>) &#123; <span class="hljs-comment">//不能用 &#x27;!object&#x27; null，0，false等等会等于false</span><br>            <span class="hljs-keyword">return</span> defaultValue<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> object<br>&#125;<br><span class="hljs-comment">//lodash中的 _.set()，赋值对象某级属性</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setDeepData</span>(<span class="hljs-params">object, path, value</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> paths = path.split(<span class="hljs-string">&#x27;.&#x27;</span>)<br>    <span class="hljs-keyword">const</span> last = paths[paths.length - <span class="hljs-number">1</span>]<span class="hljs-comment">//为何要在length - 1时赋值：因为object的引用关系使得我们可以一级一级赋值，而当最后一项是基本类型时，无法将引用的值赋给原始的object</span><br>    <span class="hljs-keyword">let</span> _obj = object<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> i <span class="hljs-keyword">of</span> paths) &#123;<br>        last === i &amp;&amp; (_obj[last] = value)<br>        _obj = _obj[i]<br>    &#125;<br>&#125;<br><span class="hljs-comment">// 移除属性值</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">removeAttr</span>(<span class="hljs-params">elem, key</span>) </span>&#123;<br>    elem.removeAttribute(key)<br>&#125;<br><span class="hljs-comment">// 获取标签类型</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isElemNode</span>(<span class="hljs-params">elem</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> elem.nodeType<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>updater.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 更新视图,标签中指令属性处理</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updater</span>(<span class="hljs-params">elem, vm, value, type</span>) </span>&#123;<br>    <span class="hljs-keyword">switch</span> (type) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;text&#x27;</span>:<br>                elem.textContent = getDeepData(vm.data, value)<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;text-content&#x27;</span>:<br>                elem.textContent = value.replace(textRegex, <span class="hljs-function">(<span class="hljs-params">..._</span>) =&gt;</span> getDeepData(vm.data, _[<span class="hljs-number">1</span>]))<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;html&#x27;</span>:<br>                elem.innerHTML = getDeepData(vm.data, value)<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;model&#x27;</span>:<br>                elem.value = getDeepData(vm.data, value)<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;if&#x27;</span>:<br>            <span class="hljs-keyword">const</span> temp = <span class="hljs-built_in">document</span>.createTextNode(<span class="hljs-string">&#x27;&#x27;</span>)<br>            elem.parentNode.insertBefore(temp, elem);<br>                getDeepData(vm.data, value) ? temp.parentNode.insertBefore(elem, temp) : temp.parentNode.removeChild(elem)<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;show&#x27;</span>:<br>                elem.hidden = !getDeepData(vm.data, value)<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>完成这一步后，我们在vue.js中调用</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">VueDemo</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">options</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.options = options <span class="hljs-comment">//配置信息</span><br>        <span class="hljs-built_in">this</span>.data = options.data;<br>        <span class="hljs-comment">// 判断options.el是否存在</span><br>        (<span class="hljs-built_in">this</span>.el = options.el) &amp;&amp; <span class="hljs-built_in">Object</span>.defineProperties(<span class="hljs-built_in">this</span>, &#123;<br>            <span class="hljs-attr">compile</span>: &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> Compile(options.el, <span class="hljs-built_in">this</span>) <span class="hljs-comment">//指令解析器</span><br>            &#125;<br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>效果出来了，指令被解析出来并且在页面中显示</strong></p><p><img src="https://img-blog.csdnimg.cn/20210808210242262.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="Proxy（代理data）"><a href="#Proxy（代理data）" class="headerlink" title="Proxy（代理data）"></a><strong>Proxy（代理data）</strong></h3><p><strong>我们虽然将vue.data中的数据渲染到了页面，但是还是需要通过this.data来获取数据，而vue可以中直接通过this来拿到数据，此时我们需要新建一个proxy.js将this.data代理到this上</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// data数据代理到vue</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DataProxy</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">data, vm</span>)</span> &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> key <span class="hljs-keyword">in</span> data) &#123;<br>            <span class="hljs-built_in">Object</span>.defineProperty(vm, key, &#123;<br>                <span class="hljs-function"><span class="hljs-title">get</span>(<span class="hljs-params"></span>)</span> &#123;<br>                    <span class="hljs-keyword">return</span> data[key];<br>                &#125;,<br>                <span class="hljs-function"><span class="hljs-title">set</span>(<span class="hljs-params">val</span>)</span> &#123;<br>                    data[key] = val;<br>                &#125;<br>            &#125;)<br>        &#125;<br>        <span class="hljs-keyword">return</span> data<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>在vue.js中调用，并将updater.js中的vm.data改成vm</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">VueDemo</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">options</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.options = options <span class="hljs-comment">//配置信息</span><br>        <span class="hljs-built_in">this</span>.$data = options.data;<br>        <span class="hljs-comment">// 判断options.el是否存在</span><br>        (<span class="hljs-built_in">this</span>.el = options.el) &amp;&amp; <span class="hljs-built_in">Object</span>.defineProperties(<span class="hljs-built_in">this</span>, &#123;<br>            <span class="hljs-attr">proxy</span>: &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> DataProxy(options.data, <span class="hljs-built_in">this</span>) <span class="hljs-comment">//data代理到this</span><br>            &#125;,<br>            <span class="hljs-attr">compile</span>: &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> Compile(options.el, <span class="hljs-built_in">this</span>) <span class="hljs-comment">//指令解析器</span><br>            &#125;<br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>写到这里，compile和updater已经实现了，接下来将是数据劫持的实现方式</strong><br><img src="https://img-blog.csdnimg.cn/20210808211540592.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="Observer（数据劫持）"><a href="#Observer（数据劫持）" class="headerlink" title="Observer（数据劫持）"></a>Observer（数据劫持）</h3><p><strong>这一步的作用是将data中的数据都加上读写响应控制，给所有数据绑定可以更新视图的函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 发布模式</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Observer</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">data</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.initObserver(data)<br>    &#125;<br>    <span class="hljs-comment">// 劫持所有数据</span><br>    <span class="hljs-function"><span class="hljs-title">initObserver</span>(<span class="hljs-params">data</span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (data &amp;&amp; <span class="hljs-keyword">typeof</span> data === <span class="hljs-string">&#x27;object&#x27;</span>) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> key <span class="hljs-keyword">in</span> data) &#123;<br>                <span class="hljs-built_in">this</span>.defineReactive(data, key, data[key])<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">// 响应拦截器，递归监听所有层级</span><br>    <span class="hljs-function"><span class="hljs-title">defineReactive</span>(<span class="hljs-params">data, key, val</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.initObserver(val) <span class="hljs-comment">//劫持子项</span><br>        <span class="hljs-built_in">Object</span>.defineProperty(data, key, &#123;<br>            <span class="hljs-attr">enumerable</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 允许枚举</span><br>            <span class="hljs-attr">configurable</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 不能被定义</span><br>            <span class="hljs-attr">get</span>: <span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span>  val,<span class="hljs-comment">//初始化获取值时对dep绑定</span><br>            <span class="hljs-attr">set</span>: <span class="hljs-function"><span class="hljs-params">newVal</span> =&gt;</span> val = newVal<br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Dep（调度中心）"><a href="#Dep（调度中心）" class="headerlink" title="Dep（调度中心）"></a>Dep（调度中心）</h3><p><strong>watcher的作用是将上面的observer与视图的刷新函数updater进行连接，当observer监测到数据变化时会通过dep告诉watcher，watcher就会执行updater更新视图，于是，我们需要先实现observer与watcher之间的观察者dep，我们先假定watcher中更新视图的函数名字叫compareVal，将watcher注册到调度中心中</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 调度中心（观察者模式）</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dep</span> </span>&#123;<br>    observerList = [] <span class="hljs-comment">//调度中心,存放与属性绑定的事件</span><br>    <span class="hljs-comment">//触发所有与该属性绑定的事件</span><br>    <span class="hljs-function"><span class="hljs-title">fireEvent</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.observerList.forEach(<span class="hljs-function"><span class="hljs-params">target</span> =&gt;</span> &#123;<br>            target.compareVal()<br>        &#125;)<br>    &#125;<br>    <span class="hljs-comment">//注册事件</span><br>    <span class="hljs-function"><span class="hljs-title">subscribe</span>(<span class="hljs-params">target</span>)</span> &#123;<br>        target.compareVal &amp;&amp; <span class="hljs-built_in">this</span>.observerList.push(target)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Watcher（数据观察）"><a href="#Watcher（数据观察）" class="headerlink" title="Watcher（数据观察）"></a><strong>Watcher（数据观察）</strong></h3><p><strong>watcher的作用是连接observer和compile，使数据和视图绑定<br>以下是watcher.js的实现</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 订阅模式(比较绑定值的变化)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Watcher</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">vm, val, update</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.vm = vm<br>        <span class="hljs-built_in">this</span>.val = val;<br>        <span class="hljs-built_in">this</span>.update = update<br>        <span class="hljs-built_in">this</span>.oldVal = getDeepData(<span class="hljs-built_in">this</span>.vm, <span class="hljs-built_in">this</span>.val)<br>        update() <span class="hljs-comment">//首次渲染初始化</span><br>    &#125;<br>    <span class="hljs-comment">// 对比数据，更新视图</span><br>    <span class="hljs-function"><span class="hljs-title">compareVal</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">const</span> newVal = getDeepData(<span class="hljs-built_in">this</span>.vm, <span class="hljs-built_in">this</span>.val);<br>        newVal !== <span class="hljs-built_in">this</span>.oldVal &amp;&amp; (<span class="hljs-built_in">this</span>.update(), <span class="hljs-built_in">this</span>.oldVal = newVal) <span class="hljs-comment">//更新视图后将新值赋到oldVal上</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="函数的连接"><a href="#函数的连接" class="headerlink" title="函数的连接"></a><strong>函数的连接</strong></h3><p><strong>我们来回顾一下以上功能的实现</strong><br><img src="https://img-blog.csdnimg.cn/20210808220840105.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>整个流程中的函数部分已经全部实现，只剩下如何将他们联系在一起，这时如果你对整个功能实现还有些模糊，那请认真分析一下这张流程图，并继续看下去吧</strong></p><p><strong>首先我们把watcher和指令解析以及updater之间的关系实现。<br>在updater中给予每一个指令一个watcher，将更新视图操作绑定到watcher中，由compareVal来更新视图</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 更新视图,标签中指令属性处理</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updater</span>(<span class="hljs-params">elem, vm, value, type</span>) </span>&#123;<br>    <span class="hljs-keyword">switch</span> (type) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;text&#x27;</span>:<br>            <span class="hljs-keyword">new</span> Watcher(vm, value, <span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> &#123;<br>                elem.textContent = getDeepData(vm, value)<br>            &#125;)<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;text-content&#x27;</span>:<br>            value.replace(textRegex, <span class="hljs-function">(<span class="hljs-params">..._</span>) =&gt;</span> &#123; <span class="hljs-comment">//外面的content.replace获取所有&#123;&#123;&#125;&#125;中的属性</span><br>                <span class="hljs-keyword">new</span> Watcher(vm, _[<span class="hljs-number">1</span>], <span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> &#123; <span class="hljs-comment">//里面的content.replace获取data中绑定的值</span><br>                    elem.textContent = value.replace(textRegex, <span class="hljs-function">(<span class="hljs-params">..._</span>) =&gt;</span> getDeepData(vm, _[<span class="hljs-number">1</span>]))<br>                &#125;)<br>            &#125;)<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;html&#x27;</span>:<br>            <span class="hljs-keyword">new</span> Watcher(vm, value, <span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> &#123;<br>                elem.innerHTML = getDeepData(vm, value)<br>            &#125;)<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;model&#x27;</span>:<br>            <span class="hljs-keyword">new</span> Watcher(vm, value, <span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> &#123;<br>                elem.value = getDeepData(vm, value)<br>            &#125;)<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;if&#x27;</span>:<br>            <span class="hljs-keyword">const</span> temp = <span class="hljs-built_in">document</span>.createTextNode(<span class="hljs-string">&#x27;&#x27;</span>)<br>            elem.parentNode.insertBefore(temp, elem);<br>            <span class="hljs-keyword">new</span> Watcher(vm, value, <span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> &#123;<br>                getDeepData(vm, value) ? temp.parentNode.insertBefore(elem, temp) : temp.parentNode.removeChild(elem)<br>            &#125;)<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;show&#x27;</span>:<br>            <span class="hljs-keyword">new</span> Watcher(vm, value, <span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> &#123;<br>                elem.hidden = !getDeepData(vm, value)<br>            &#125;)<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>那么如何告诉watcher数据发生了改变呢？<br>在watcher中我们获取oldvalue时采用this.oldVal = getDeepData(this.vm, this.val)<br>这个操作会使observer中data属性的get被触发，此时如果我们将watcher注册到dep中即可对所有数据变化进行监听，然鹅，在实现的时候，发现了一些问题，由于defineReactive将data所有属性都监听了，导致取属性时使用时，data.info和data.info.name都会被劫持，而我们只需要info.name，所以，当dep注册watcher时需要设置一个开关，并且在observer中根据开关添加监听，修改的watcher和observer如下：<br>watcher.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 订阅模式(比较绑定值的变化)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Watcher</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">vm, val, update</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.vm = vm<br>        <span class="hljs-built_in">this</span>.val = val;<br>        <span class="hljs-built_in">this</span>.update = update<br>        <span class="hljs-built_in">this</span>.oldVal = <span class="hljs-built_in">this</span>.getOldVal() <span class="hljs-comment">//获取初始值，触发observer中属性的get</span><br>        update() <span class="hljs-comment">//首次渲染初始化</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">getOldVal</span>(<span class="hljs-params"></span>)</span> &#123;<br>        Dep.target = <span class="hljs-built_in">this</span> <span class="hljs-comment">//将watcher暂存到Dep上，在Observer中通过dep.subscribe将watcher传到dep的observerList（调度中心）中，后续当值发送修改时通过fireEvent触发watcher.compareVal来更新视图</span><br>        <span class="hljs-keyword">const</span> oldVal = getDeepData(<span class="hljs-built_in">this</span>.vm, <span class="hljs-built_in">this</span>.val) <span class="hljs-comment">//触发Observer中的getter，将watcher注册到dep中</span><br>        Dep.target = <span class="hljs-literal">null</span><br>        <span class="hljs-keyword">return</span> oldVal<br>    &#125;<br>    <span class="hljs-comment">// 对比数据，更新视图</span><br>    <span class="hljs-function"><span class="hljs-title">compareVal</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">const</span> newVal = getDeepData(<span class="hljs-built_in">this</span>.vm, <span class="hljs-built_in">this</span>.val);<br>        newVal !== <span class="hljs-built_in">this</span>.oldVal &amp;&amp; (<span class="hljs-built_in">this</span>.update(), <span class="hljs-built_in">this</span>.oldVal = newVal) <span class="hljs-comment">//更新视图后将新值赋到oldVal上</span><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>observer.js中的defineReactive</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 响应拦截器，递归监听所有层级</span><br><span class="hljs-function"><span class="hljs-title">defineReactive</span>(<span class="hljs-params">data, key, val</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.initObserver(val) <span class="hljs-comment">//劫持子项</span><br>    <span class="hljs-keyword">const</span> dep = <span class="hljs-keyword">new</span> Dep() <span class="hljs-comment">//将observer与watcher连接，当watcher触发数据变化后，将watcher中的回调函数注册到dep中</span><br>    <span class="hljs-built_in">Object</span>.defineProperty(data, key, &#123;<br>        <span class="hljs-attr">enumerable</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 允许枚举</span><br>        <span class="hljs-attr">configurable</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 不能被定义</span><br>        <span class="hljs-attr">get</span>: <span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> &#123;<br>            Dep.target &amp;&amp; dep.subscribe(Dep.target); <span class="hljs-comment">//获取属性值时,将watcher中的回调函数注册到dep中（在页面初始化时调用）</span><br>            <span class="hljs-keyword">return</span> val<br>        &#125;,<br>        <span class="hljs-attr">set</span>: <span class="hljs-function"><span class="hljs-params">newVal</span> =&gt;</span> newVal !== val &amp;&amp; (val = newVal) <span class="hljs-comment">//设置属性时，对比新值和旧值有无差别</span><br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>现在，我们只剩下当数据发生改变时，如何通知watcher，因为上述的defineReactive中已经将watcher注册到了dep，此时我们只需在数据变化时也就是defineReactive的set中对数据更新进行响应，当某条数据被设置时，我们将dep中watcher触发即可</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 响应拦截器，递归监听所有层级</span><br><span class="hljs-function"><span class="hljs-title">defineReactive</span>(<span class="hljs-params">data, key, val</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.initObserver(val) <span class="hljs-comment">//劫持子项</span><br>    <span class="hljs-keyword">const</span> dep = <span class="hljs-keyword">new</span> Dep() <span class="hljs-comment">//将observer与watcher连接，当watcher触发数据变化后，将watcher中的回调函数注册到dep中</span><br>    <span class="hljs-built_in">Object</span>.defineProperty(data, key, &#123;<br>        <span class="hljs-attr">enumerable</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 允许枚举</span><br>        <span class="hljs-attr">configurable</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 不能被定义</span><br>        <span class="hljs-attr">get</span>: <span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> &#123;<br>            Dep.target &amp;&amp; dep.subscribe(Dep.target); <span class="hljs-comment">//获取属性值时,将watcher中的回调函数注册到dep中（在页面初始化时调用）</span><br>            <span class="hljs-keyword">return</span> val<br>        &#125;,<br>        <span class="hljs-attr">set</span>: <span class="hljs-function"><span class="hljs-params">newVal</span> =&gt;</span> newVal !== val &amp;&amp; (val = newVal, <span class="hljs-built_in">this</span>.initObserver(newVal), dep.fireEvent()) <span class="hljs-comment">//设置属性时，对比新值和旧值有无差别，若修改的值是引用型时，将属性重新注册到dep中,并更新视图</span><br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>至此，流程图中的所有功能均已实现，让我们在vue.js中实例化observer试试效果</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">VueDemo</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">options</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.options = options <span class="hljs-comment">//配置信息</span><br>        <span class="hljs-built_in">this</span>.$data = options.data;<br>        <span class="hljs-comment">// 判断options.el是否存在</span><br>        (<span class="hljs-built_in">this</span>.el = options.el) &amp;&amp; <span class="hljs-built_in">Object</span>.defineProperties(<span class="hljs-built_in">this</span>, &#123;<br>            <span class="hljs-comment">//observer和compile的顺序不要错，否则监听不到compile中的数据</span><br>            <span class="hljs-attr">observer</span>: &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> Observer(options.data) <span class="hljs-comment">// 数据监听器</span><br>            &#125;,<br>            <span class="hljs-attr">proxy</span>: &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> DataProxy(options.data, <span class="hljs-built_in">this</span>) <span class="hljs-comment">//data代理到this</span><br>            &#125;,<br>            <span class="hljs-attr">compile</span>: &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> Compile(options.el, <span class="hljs-built_in">this</span>) <span class="hljs-comment">//指令解析器</span><br>            &#125;<br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210808225030888.gif"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p><strong>感谢你看到了最后，希望文章能对你有帮助，同时也欢迎你提出宝贵的建议</strong></p><p><strong>最后附上<a href="https://gitee.com/DieHunter/myCode/tree/master/Vue%E5%8E%9F%E7%90%86">源码地址</a><br>喜欢这篇文章别忘了点个赞，你的支持是作者创作的动力</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：支持PC端和Mobile端的Canvas电子签名功能</title>
    <link href="/2021/05/13/JS%E6%A1%88%E4%BE%8B%20%E6%94%AF%E6%8C%81PC%E7%AB%AF%E5%92%8CMobile%E7%AB%AF%E7%9A%84Canvas%E7%94%B5%E5%AD%90%E7%AD%BE%E5%90%8D%E5%8A%9F%E8%83%BD/"/>
    <url>/2021/05/13/JS%E6%A1%88%E4%BE%8B%20%E6%94%AF%E6%8C%81PC%E7%AB%AF%E5%92%8CMobile%E7%AB%AF%E7%9A%84Canvas%E7%94%B5%E5%AD%90%E7%AD%BE%E5%90%8D%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<p><strong>前言：<br>这段时间项目迭代时遇到了一个新需求，基于react实现一个Pc版电子签名功能，并生成图片上传。于是我想到了<a href="https://github.com/szimek/signature_pad/">signature_pad</a>，并且在项目使用了这个插件<br>不得不说，用别人造的轮子是真的香，出于好奇，想用原生实现一下电子签名的功能</strong></p><p><strong>以下是实现过程</strong></p><p><strong>HTML和css可以参照<a href="https://gitee.com/DieHunter/myCode/tree/master/PrintPen">源码</a>，这里不过多介绍</strong></p><p><strong>首先引入<a href="https://gitee.com/DieHunter/myCode/blob/master/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F&%E5%8F%91%E5%B8%83%E8%80%85%E8%AE%A2%E9%98%85%E8%80%85%E6%A8%A1%E5%BC%8F/PubSubPattern/js/eventBus.js">eventBus</a>，方便代码解耦<br>然后实现Base基类存放公共方法和属性，后续有啥共用属性或方法可以往这加</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//基类：公共方法和属性</span><br><span class="hljs-keyword">import</span> event <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./eventBus.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Base</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">canvasEle, dom = <span class="hljs-built_in">document</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.event = event <span class="hljs-comment">//注册发布订阅</span><br>        <span class="hljs-built_in">this</span>.canvasEle = canvasEle <span class="hljs-comment">//待操作的画布标签</span><br>        <span class="hljs-built_in">this</span>.dom = dom <span class="hljs-comment">//dom</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>完成之后，我们先实现Pc版的电子签名功能，新建一个PcPrint继承自Base，参照之前写的<a href="https://blog.csdn.net/time_____/article/details/104444502">鼠标拖拽案例</a>，实现在canvas上拖拽功能，并将事件结果的坐标发布出去。<br>其中clearDefaultEvent函数和getClient函数在Base类中实现</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// PC端，鼠标事件</span><br><span class="hljs-keyword">import</span> Base <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./base.js&#x27;</span><br><span class="hljs-keyword">let</span> that = <span class="hljs-literal">null</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PcPrint</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Base</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">ele, dom</span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>(ele, dom)<br>        that = <span class="hljs-built_in">this</span> <span class="hljs-comment">//注册全局this</span><br>        <span class="hljs-built_in">this</span>.init()<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span> &#123;<br>        that.canvasEle.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, that.onMouseDown)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">onMouseDown</span>(<span class="hljs-params">e = event</span>)</span> &#123;<br>        that.clearDefaultEvent(e)<br>        that.dom.addEventListener(<span class="hljs-string">&#x27;mouseup&#x27;</span>, that.onMouseUp) <span class="hljs-comment">//给dom添加mouseup避免产生鼠标点下时，移出画布造成其他的问题</span><br>        that.canvasEle.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, that.onMouseMove)<br>        that.event.emitEvent(<span class="hljs-string">&#x27;pointStart&#x27;</span>, that.getClient(e)) <span class="hljs-comment">//触发开始签字事件</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">onMouseUp</span>(<span class="hljs-params">e = event</span>)</span> &#123;<br>        that.clearDefaultEvent(e)<br>        that.event.emitEvent(<span class="hljs-string">&#x27;pointEnd&#x27;</span>) <span class="hljs-comment">//触发结束签字事件</span><br>        that.canvasEle.removeEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, that.onMouseMove) <span class="hljs-comment">//移除移动事件</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">onMouseMove</span>(<span class="hljs-params">e = event</span>)</span> &#123;<br>        that.clearDefaultEvent(e)<br>        that.event.emitEvent(<span class="hljs-string">&#x27;pointMove&#x27;</span>, that.getClient(e)) <span class="hljs-comment">//触发签字事件</span><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>Base类添加以下代码：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 取消默认事件和事件冒泡</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>e 事件对象</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-title">clearDefaultEvent</span>(<span class="hljs-params">e</span>)</span> &#123;<br>    e.preventDefault()<br>    e.stopPropagation()<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取事件元素离body可视区域的坐标</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>target 事件目标</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-title">getClient</span>(<span class="hljs-params">target</span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">x</span>: target.clientX,<br>        <span class="hljs-attr">y</span>: target.clientY<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>接着，我们对事件抛出的三个发布进行订阅，新建Print类，对获取的坐标通过canvas进行绘制</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Base <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./Base.js&quot;</span><br><span class="hljs-keyword">import</span> PcPrint <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./pc.js&#x27;</span>;<br><span class="hljs-comment">// import MobilePrint from &#x27;./mobile.js&#x27;;</span><br><span class="hljs-keyword">let</span> that = <span class="hljs-literal">null</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Print</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Base</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">canvasEle, options, dom</span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>(canvasEle, dom)<br>        that = <span class="hljs-built_in">this</span><br>        <span class="hljs-built_in">this</span>.options = options <span class="hljs-comment">//配置画笔颜色，粗细，是否开启移动端或PC端，</span><br>        <span class="hljs-built_in">this</span>.init() <span class="hljs-comment">//初始化属性,配置,注册发布订阅等</span><br>        <span class="hljs-built_in">this</span>.initCanvas() <span class="hljs-comment">//初始化画布</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-comment">//Pc和Mobile启用开关</span><br>        <span class="hljs-built_in">this</span>.Pc = <span class="hljs-built_in">this</span>.options.Pc ? (<span class="hljs-keyword">new</span> PcPrint(<span class="hljs-built_in">this</span>.canvasEle)) : <span class="hljs-literal">null</span><br>        <span class="hljs-comment">// this.Mobile = this.options.Mobile ? (new MobilePrint(this.canvasEle)) : null</span><br>        <span class="hljs-built_in">this</span>.point = <span class="hljs-literal">null</span> <span class="hljs-comment">//存储上一次坐标</span><br>        <span class="hljs-built_in">this</span>.event.onEvent(<span class="hljs-string">&#x27;pointMove&#x27;</span>, that.pointMove) <span class="hljs-comment">//订阅签字事件</span><br>        <span class="hljs-built_in">this</span>.event.onEvent(<span class="hljs-string">&#x27;pointStart&#x27;</span>, that.pointStart) <span class="hljs-comment">//订阅签字开始事件</span><br>        <span class="hljs-built_in">this</span>.event.onEvent(<span class="hljs-string">&#x27;pointEnd&#x27;</span>, that.pointEnd) <span class="hljs-comment">//订阅签字结束事件</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">initCanvas</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.clientRect = <span class="hljs-built_in">this</span>.canvasEle.getBoundingClientRect() <span class="hljs-comment">// 获取标签相对可视区域的偏移量</span><br>        <span class="hljs-built_in">this</span>.canvasEle.width = <span class="hljs-built_in">this</span>.canvasEle.parentNode.offsetWidth <span class="hljs-comment">//设置为父元素的宽</span><br>        <span class="hljs-built_in">this</span>.canvasEle.height = <span class="hljs-built_in">this</span>.canvasEle.parentNode.offsetHeight <span class="hljs-comment">//设置为父元素的高</span><br>        <span class="hljs-built_in">this</span>.context = <span class="hljs-built_in">this</span>.canvasEle.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>)<br>        <span class="hljs-built_in">this</span>.context.strokeStyle = <span class="hljs-built_in">this</span>.options.color; <span class="hljs-comment">// 线条颜色</span><br>        <span class="hljs-built_in">this</span>.context.lineWidth = <span class="hljs-built_in">this</span>.options.weight; <span class="hljs-comment">// 线条宽度</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">pointStart</span>(<span class="hljs-params">point</span>)</span> &#123;<br>        that.point = that.shiftingPosition(point, that.clientRect) <span class="hljs-comment">//初始化起始位置</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">pointEnd</span>(<span class="hljs-params"></span>)</span> &#123;<br>        that.point = <span class="hljs-literal">null</span> <span class="hljs-comment">//清空起始位置</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">pointMove</span>(<span class="hljs-params">point</span>)</span> &#123;<br>        that.canvasDraw(that.shiftingPosition(point, that.clientRect)) <span class="hljs-comment">//签字效果</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">canvasDraw</span>(<span class="hljs-params">point</span>)</span> &#123; <span class="hljs-comment">//画布操作</span><br>        <span class="hljs-built_in">this</span>.context.beginPath() <span class="hljs-comment">//新建(重置)路径</span><br>        <span class="hljs-built_in">this</span>.context.moveTo(<span class="hljs-built_in">this</span>.point.x, <span class="hljs-built_in">this</span>.point.y) <span class="hljs-comment">//画布绘画起始点移动到前一个坐标</span><br>        <span class="hljs-built_in">this</span>.context.lineTo(point.x, point.y) <span class="hljs-comment">//画布从前一个坐标到当前坐标</span><br>        <span class="hljs-built_in">this</span>.context.stroke() <span class="hljs-comment">//从moveTo到lineTo进行绘制</span><br>        <span class="hljs-built_in">this</span>.context.closePath() <span class="hljs-comment">//创建从当前坐标回到前一个坐标的路径</span><br>        that.point = point <span class="hljs-comment">//将此次坐标赋值给下一次移动时的前一个坐标</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>考虑到canvas的偏移问题，在Base中添加shiftingPosition函数，解决画布绘制时坐标偏移问题</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 抵消画布偏移</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param </span>point 当前坐标</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param </span>shift 偏移量</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-function"><span class="hljs-title">shiftingPosition</span>(<span class="hljs-params">point, shift</span>)</span> &#123;<br>     <span class="hljs-keyword">return</span> &#123;<br>         <span class="hljs-attr">x</span>: point.x - shift.left,<br>         <span class="hljs-attr">y</span>: point.y - shift.top<br>     &#125;<br> &#125;<br></code></pre></td></tr></table></figure><p><strong>最后，在index中实例化电子签名</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">import</span> Print <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./js/print.js&quot;</span></span><br><span class="javascript">    <span class="hljs-keyword">new</span> Print(printBox,&#123;</span><br><span class="javascript">        <span class="hljs-attr">Pc</span>:<span class="hljs-literal">true</span>,</span><br><span class="javascript">        <span class="hljs-attr">Mobile</span>:<span class="hljs-literal">true</span>,</span><br><span class="javascript">        <span class="hljs-attr">color</span>:<span class="hljs-string">&#x27;lightcoral&#x27;</span>,</span><br><span class="javascript">        <span class="hljs-attr">weight</span>:<span class="hljs-number">5</span></span><br><span class="javascript">    &#125;)</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>效果如下：</strong><br><img src="https://img-blog.csdnimg.cn/20210513181545194.gif"></p><p><strong>Pc端实现完成之后是Mobile端，代码大同小异，除了事件类型不用之外，还一点就是移动端的多指触碰支持，touchevent支持双指事件，此时我们要判断是否单指输入</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Mobile端，触摸事件</span><br><span class="hljs-keyword">import</span> Base <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./base.js&#x27;</span><br><span class="hljs-keyword">let</span> that = <span class="hljs-literal">null</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MobilePrint</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Base</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">ele, dom</span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>(ele, dom)<br>        that = <span class="hljs-built_in">this</span> <span class="hljs-comment">//注册全局this</span><br>        <span class="hljs-built_in">this</span>.init()<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span> &#123;<br>        that.canvasEle.addEventListener(<span class="hljs-string">&#x27;touchstart&#x27;</span>, that.onTouchStart)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">onTouchStart</span>(<span class="hljs-params">e = event</span>)</span> &#123;<br>        that.clearDefaultEvent(e)<br>        that.canvasEle.addEventListener(<span class="hljs-string">&#x27;touchend&#x27;</span>, that.onTouchEnd) <span class="hljs-comment">//没有像pc一样给dom添加touchend,因为touchmove是基于touchstart和touchend之间触发的，只要touchend触发，touchmove便失效</span><br>        that.canvasEle.addEventListener(<span class="hljs-string">&#x27;touchmove&#x27;</span>, that.onTouchMove)<br>        that.event.emitEvent(<span class="hljs-string">&#x27;pointStart&#x27;</span>, that.getClient(e.touches[<span class="hljs-number">0</span>])) <span class="hljs-comment">//这里可以做一个判断e.touches是否只有一个（e.touches表示有几个手指触碰）</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">onTouchEnd</span>(<span class="hljs-params">e = event</span>)</span> &#123;<br>        that.clearDefaultEvent(e)<br>        that.event.emitEvent(<span class="hljs-string">&#x27;pointEnd&#x27;</span>)<br>        that.canvasEle.removeEventListener(<span class="hljs-string">&#x27;touchmove&#x27;</span>, that.onTouchMove)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">onTouchMove</span>(<span class="hljs-params">e = event</span>)</span> &#123;<br>        that.clearDefaultEvent(e)<br>        that.event.emitEvent(<span class="hljs-string">&#x27;pointMove&#x27;</span>, that.getClient(e.touches[<span class="hljs-number">0</span>]))<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>在移动端实现的效果：</strong></p><p><img src="https://img-blog.csdnimg.cn/20210513182906294.gif"></p><p><strong>最后：<br>附上源码地址：<a href="https://gitee.com/DieHunter/myCode/tree/master/PrintPen">Gitee</a></strong></p><p><strong>感谢你的阅读，如果这篇文章对你有帮助，希望三连支持一下，你的支持是我创作的动力，同时也欢迎大佬建议指正</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：将前端页面导出为PDF</title>
    <link href="/2021/04/28/JS%E6%A1%88%E4%BE%8B%20%E5%B0%86%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%E5%AF%BC%E5%87%BA%E4%B8%BAPDF/"/>
    <url>/2021/04/28/JS%E6%A1%88%E4%BE%8B%20%E5%B0%86%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%E5%AF%BC%E5%87%BA%E4%B8%BAPDF/</url>
    
    <content type="html"><![CDATA[<p><strong>前言：<br>记录一下最近的一个需求，产品需要打印表单凭证，需要实现将选中页面的元素或者是组件导出为PDF，方便打印<br>使用到的JS库：<a href="http://html2canvas.hertzen.com/">html2canvas</a>（截取页面生成canvas），<a href="https://github.com/MrRio/jsPDF">jsPDF</a>（使用JS生成PDF）</strong></p><p><strong>下面我针对该需求实现一个简单的Demo，并且分享一下遇到的问题</strong></p><p><strong>首先，我选择了<a href="https://gitee.com/DieHunter/myCode/tree/master/%E7%80%91%E5%B8%83%E6%B5%81&%E6%87%92%E5%8A%A0%E8%BD%BD/First">懒加载</a>的案例作为测试对象，因为图片可以检测截图效果，并且有滚动加载长页面<br>我们把整个demo分为两部分，分别是使用上述两个插件实现基本功能</strong></p><p><strong>使用html2canvas截屏生成canvas</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> printEle, <span class="hljs-comment">//截图按钮</span><br>    pdfEle, <span class="hljs-comment">//待截取标签</span><br>    canvasBox <span class="hljs-comment">//canvas显示区域</span><br><br>(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">init</span>(<span class="hljs-params">_win, _dom</span>) </span>&#123;<br>    printEle = _dom.querySelector(<span class="hljs-string">&#x27;#printEle&#x27;</span>)<br>    pdfEle = _dom.querySelector(<span class="hljs-string">&#x27;#pdfEle&#x27;</span>)<br>    canvasBox = _dom.querySelector(<span class="hljs-string">&#x27;#canvasBox&#x27;</span>)<br>    printEle.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, clickHandler) <span class="hljs-comment">//点击按钮生成截屏</span><br>&#125;)(<span class="hljs-built_in">window</span>, <span class="hljs-built_in">document</span>)<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (canvasBox.children.length) <span class="hljs-keyword">return</span> <span class="hljs-comment">//若canvas显示区域已经有标签则退出</span><br>    <span class="hljs-keyword">const</span> canvas = <span class="hljs-keyword">await</span> html2canvas(pdfEle, &#123; <span class="hljs-comment">//截取标签转换为canvas</span><br>        <span class="hljs-attr">background</span>: <span class="hljs-string">&#x27;#FFFFFF&#x27;</span>,<br>    &#125;)<br>    pdfEle.hidden = <span class="hljs-literal">true</span> <span class="hljs-comment">//隐藏之前的元素，更好对比</span><br>    canvasBox.appendChild(canvas) <span class="hljs-comment">//显示效果</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>原图 截图</strong></p><p><img src="https://img-blog.csdnimg.cn/20210427184301420.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210427184345303.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>二者清晰度差距看上去好像不是很大，但是放大图片后会发现截图结果很模糊</strong><br><img src="https://img-blog.csdnimg.cn/20210427184648498.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210427184545121.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>在网上找了一些方法，但是都不尽人意，用到最多的方法是修改配置项，在html2canvas异步函数中新增dpi和scale，但是在源码里搜索dpi字段并未找到，不知道是不是官方取消了，于是我找到另一种方法对canvas进行缩放，缓解失真</strong></p><p><strong>好在html2canvas提供了自定义canvas的属性，用户可以自定义canvas属性达到效果</strong><br><img src="https://img-blog.csdnimg.cn/20210427190052751.png"></p><p><strong>于是我们写一个新建canvas方法，对其进行缩放</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createCanvas</span>(<span class="hljs-params">target</span>) </span>&#123; <br>    <span class="hljs-comment">//target是待截取的标签，我们通过target生成对应大小的canvas</span><br>    <span class="hljs-keyword">let</span> canvas = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;canvas&quot;</span>);<br>    <span class="hljs-keyword">let</span> context = canvas.getContext(<span class="hljs-string">&quot;2d&quot;</span>)<br>    canvas.width = target.offsetWidth * scale; <span class="hljs-comment">// 画布实际宽度</span><br>    canvas.height = target.offsetHeight * scale; <span class="hljs-comment">// 画布实际高度</span><br>    canvas.style.width = target.offsetWidth + <span class="hljs-string">&#x27;px&#x27;</span> <span class="hljs-comment">// 浏览器上显示的宽度</span><br>    canvas.style.height = target.offsetHeight + <span class="hljs-string">&#x27;px&#x27;</span> <span class="hljs-comment">//浏览器上显示的高度</span><br>    context.scale(scale, scale); <span class="hljs-comment">//等比缩放</span><br>    <span class="hljs-keyword">return</span> canvas<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>在新建截图时调用</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> canvas = <span class="hljs-keyword">await</span> html2canvas(pdfEle, &#123; <span class="hljs-comment">//截取标签转换为canvas</span><br>    <span class="hljs-attr">canvas</span>: createCanvas(pdfEle),<br>    <span class="hljs-attr">background</span>: <span class="hljs-string">&#x27;#FFFFFF&#x27;</span>,<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>效果是这样的，清晰度的问题已经解决，但是打印canvas时会有Y轴上的距离偏移，由于本人对canvas不是很熟练，猜测是由于按钮的高度影响的，因为修改按钮高度（不超过待截屏的元素高度），偏移量相对应也发生同样长度的偏移</strong><br><img src="https://img-blog.csdnimg.cn/20210428090339296.gif"><br><strong>此时我们使用getBoundingClientRect()的方法获取待截取标签的位置相对于浏览器可视范围的偏移量，然后通过canvas的translate方式取反位移，即可解决该问题</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createCanvas</span>(<span class="hljs-params">target</span>) </span>&#123; <br>    <span class="hljs-comment">//target是待截取的标签，我们通过target生成对应大小的canvas</span><br>    <span class="hljs-keyword">let</span> canvas = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;canvas&quot;</span>);<br>    <span class="hljs-keyword">let</span> context = canvas.getContext(<span class="hljs-string">&quot;2d&quot;</span>)<br>    <span class="hljs-keyword">let</span> clientRect = target.getBoundingClientRect()<span class="hljs-comment">// 获取标签相对可视区域的偏移量</span><br>    canvas.width = target.offsetWidth * scale; <span class="hljs-comment">// 画布实际宽度</span><br>    canvas.height = target.offsetHeight * scale; <span class="hljs-comment">// 画布实际高度</span><br>    canvas.style.width = target.offsetWidth + <span class="hljs-string">&#x27;px&#x27;</span> <span class="hljs-comment">// 浏览器上显示的宽度</span><br>    canvas.style.height = target.offsetHeight + <span class="hljs-string">&#x27;px&#x27;</span> <span class="hljs-comment">//浏览器上显示的高度</span><br>    context.scale(scale, scale); <span class="hljs-comment">//等比缩放</span><br>    context.translate(-clientRect.left, -clientRect.top);<span class="hljs-comment">//通过translate取反位移</span><br>    <span class="hljs-keyword">return</span> canvas<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>效果如下，生成的图片要比之前的清晰很多，我们还可以通过修改scale来控制图片清晰度</strong></p><p><img src="https://img-blog.csdnimg.cn/202104280948238.gif"></p><p><strong>实现了将HTML页面通过canvas显示后，下一步我们就需要使用jsPDF生成PDF文件并下载了</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">downloadPdf</span>(<span class="hljs-params">canvas</span>) </span>&#123; <span class="hljs-comment">//将canvas变成PDF并下载</span><br>    <span class="hljs-keyword">const</span> size = [canvas.width / scale, canvas.height / scale] <span class="hljs-comment">//pdf真实宽高</span><br>    <span class="hljs-comment">//第一个参数表示横向与纵向，具体可看文档，我这里做了一个适配，宽比高长则是横向反之则是纵向</span><br>    <span class="hljs-keyword">const</span> doc = <span class="hljs-keyword">new</span> jsPDF(size[<span class="hljs-number">0</span>] / size[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;l&#x27;</span> : <span class="hljs-string">&#x27;p&#x27;</span>, <span class="hljs-string">&#x27;px&#x27;</span>, size)<br>    doc.addImage(canvas.toDataURL(<span class="hljs-string">&#x27;image/jpeg&#x27;</span>, <span class="hljs-number">1.0</span>), <span class="hljs-string">&#x27;JPEG&#x27;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, ...size) <span class="hljs-comment">//将canvas转换为图片并添加到jsPDF中</span><br>    doc.save(<span class="hljs-string">&quot;test.pdf&quot;</span>); <span class="hljs-comment">//保存PDF</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>我们试试长截屏</strong><br><img src="https://img-blog.csdnimg.cn/20210428110835544.gif"><br><strong>最后附上完整代码，界面和样式可以直接在<a href="https://gitee.com/DieHunter/myCode/tree/master/HTML_To_PDF_Demo">仓库</a>中找到</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123;<br>    jsPDF<br>&#125; = jspdf, scale = <span class="hljs-number">2</span> <span class="hljs-comment">//缩放程度，清晰度，越大越清晰，图片也越大</span><br><span class="hljs-keyword">let</span> printEle, <span class="hljs-comment">//截图按钮</span><br>    pdfEle, <span class="hljs-comment">//待截取标签</span><br>    canvasBox <span class="hljs-comment">//canvas显示区域</span><br><br><br>(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">init</span>(<span class="hljs-params">_dom</span>) </span>&#123;<br>    printEle = _dom.querySelector(<span class="hljs-string">&#x27;#printEle&#x27;</span>)<br>    pdfEle = _dom.querySelector(<span class="hljs-string">&#x27;#pdfEle&#x27;</span>)<br>    canvasBox = _dom.querySelector(<span class="hljs-string">&#x27;#canvasBox&#x27;</span>)<br>    printEle.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, clickHandler) <span class="hljs-comment">//点击按钮生成截屏</span><br>&#125;)(<span class="hljs-built_in">document</span>)<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (canvasBox.children.length) <span class="hljs-keyword">return</span> <span class="hljs-comment">//若canvas显示区域已经有标签则退出</span><br>    <span class="hljs-keyword">const</span> canvas = <span class="hljs-keyword">await</span> html2canvas(pdfEle, &#123; <span class="hljs-comment">//截取标签转换为canvas</span><br>        <span class="hljs-attr">canvas</span>: createCanvas(pdfEle),<br>        <span class="hljs-attr">background</span>: <span class="hljs-string">&#x27;#FFFFFF&#x27;</span><br>    &#125;)<br>    downloadPdf(canvas)<br>    pdfEle.hidden = <span class="hljs-literal">true</span> <span class="hljs-comment">//隐藏之前的元素，更好对比</span><br>    canvasBox.appendChild(canvas) <span class="hljs-comment">//显示效果</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">downloadPdf</span>(<span class="hljs-params">canvas</span>) </span>&#123; <span class="hljs-comment">//将canvas变成PDF并下载</span><br>    <span class="hljs-keyword">const</span> size = [canvas.width / scale, canvas.height / scale] <span class="hljs-comment">//pdf真实宽高</span><br>    <span class="hljs-comment">//第一个参数表示横向与纵向，具体可看文档，我这里做了一个适配，宽比高长则是横向反之则是纵向</span><br>    <span class="hljs-keyword">const</span> doc = <span class="hljs-keyword">new</span> jsPDF(size[<span class="hljs-number">0</span>] / size[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;l&#x27;</span> : <span class="hljs-string">&#x27;p&#x27;</span>, <span class="hljs-string">&#x27;px&#x27;</span>, size)<br>    doc.addImage(canvas.toDataURL(<span class="hljs-string">&#x27;image/jpeg&#x27;</span>, <span class="hljs-number">1.0</span>), <span class="hljs-string">&#x27;JPEG&#x27;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, ...size) <span class="hljs-comment">//将canvas转换为图片并添加到jsPDF中</span><br>    doc.save(<span class="hljs-string">&quot;test.pdf&quot;</span>); <span class="hljs-comment">//保存PDF</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createCanvas</span>(<span class="hljs-params">target</span>) </span>&#123; <span class="hljs-comment">//target是待截取的标签，我们通过target生成对应大小的canvas</span><br>    <span class="hljs-keyword">let</span> canvas = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;canvas&quot;</span>);<br>    <span class="hljs-keyword">let</span> context = canvas.getContext(<span class="hljs-string">&quot;2d&quot;</span>)<br>    <span class="hljs-keyword">let</span> clientRect = target.getBoundingClientRect() <span class="hljs-comment">// 获取标签相对可视区域的偏移量</span><br>    canvas.width = target.offsetWidth * scale; <span class="hljs-comment">// 画布实际宽度</span><br>    canvas.height = target.offsetHeight * scale; <span class="hljs-comment">// 画布实际高度</span><br>    canvas.style.width = target.offsetWidth + <span class="hljs-string">&#x27;px&#x27;</span> <span class="hljs-comment">// 浏览器上显示的宽度</span><br>    canvas.style.height = target.offsetHeight + <span class="hljs-string">&#x27;px&#x27;</span> <span class="hljs-comment">//浏览器上显示的高度</span><br>    context.scale(scale, scale); <span class="hljs-comment">//等比缩放</span><br>    context.translate(-clientRect.left, -clientRect.top); <span class="hljs-comment">//通过translate取反位移</span><br>    <span class="hljs-keyword">return</span> canvas<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>希望这篇文章对你有帮助，欢迎提出建议与优化，谢谢！</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>浅谈Vuex的使用</title>
    <link href="/2021/03/25/%E6%B5%85%E8%B0%88Vuex%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/03/25/%E6%B5%85%E8%B0%88Vuex%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p><strong>正如Redux一样，当你不知道是否需要<a href="https://vuex.vuejs.org/zh/guide/">Vuex</a>那就是不需要。不要因为想用Vuex而使用它。<br>用过Vue的人都知道，Vuex是Vue的一个全局状态管理模块，它的作用是多个组件共享状态及数据，当某个组件将全局状态修改时，在绑定了该状态的另一个组件也将响应。实际上可以将Vue理解为一个function，在Vue的作用域中有一个数据代理，在每个Vue的实例中都能对其读和写</strong></p><p><strong>我们都知道Vue的数据驱动原理是用Object.defineProperty()进行数据代理，在setter中对数据绑定的view进行异步响应（vue3.0则是使用proxy）<br>通过查看Vuex源码可知Vuex的核心原理就是在Vue的beforeCreate钩子前混入（mixin）Vuex，并在init中将$store属性注册到Vue中</strong><br><img src="https://img-blog.csdnimg.cn/20210320140007488.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210320140245733.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>为了使案例更具体，我这还是简单使用脚手架搭了个项目（可参考<a href="https://blog.csdn.net/time_____/article/details/85227914">另一篇文章</a>），虽然只有两个组件，但是能清晰的理解其用法，我的src目录如下，除了最基础的App.vue和main.js外只有两个组件和一个store</strong><br><img src="https://img-blog.csdnimg.cn/20210320213311743.png"><br><strong>先说明一下两个组件的作用，第一个组件是输入框，在里面输入字符，在二个组件div中显示，就是这么简单<br>首先我们使用常规方式(EventBus)实现一下，这里只需要在mainjs中创建一个vue实例，然后注册在vue中就可以通过事件emit和on来进行组件通信<br>main.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue<br>  <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> App<br>  <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App&#x27;</span><br>Vue.prototype.$eventBus = <span class="hljs-keyword">new</span> Vue()<br><br><span class="hljs-keyword">new</span> Vue(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,<br>  <span class="hljs-attr">components</span>: &#123;App&#125;,<br>  <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;App/&gt;&#x27;</span><br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>inputComp.vue</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;inputHandler&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;inputComp&quot;</span>,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">inputHandler</span>(<span class="hljs-params">e</span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.$eventBus.$emit(<span class="hljs-string">&#x27;changeVal&#x27;</span>,e.target.value)<span class="hljs-comment">//输入时通过eventBus发送消息</span></span><br><span class="javascript">    &#125;,</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span></span><br><span class="hljs-tag">  <span class="hljs-attr">scoped</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>divComp.vue</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    &#123;&#123;<br>      val<br>    &#125;&#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;divComp&quot;</span>,</span><br><span class="javascript">  data () &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">val</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  mounted () &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$eventBus.$on(<span class="hljs-string">&#x27;changeVal&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<span class="hljs-comment">//监听输入事件通过eventBus传递信息</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.val = e</span><br><span class="javascript">    &#125;)</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span></span><br><span class="hljs-tag">  <span class="hljs-attr">scoped</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>效果如下：</strong><br><img src="https://img-blog.csdnimg.cn/20210320215408166.gif"><br><strong>下面我会逐级介绍Vuex在这个案例中如何使用</strong></p><p><strong>首先我们先加入state用来存放数据值（类似于组件中的data），在store中添加一个state，并在main中引入store</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue<br>  <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> Vuex<br>  <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><br>Vue.use(Vuex);<br><span class="hljs-keyword">const</span> state = &#123;<br>  <span class="hljs-attr">val</span>: <span class="hljs-string">&#x27;&#x27;</span><br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> Vuex.Store(&#123;<br>  state<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>然后在上面的inputHandler中将eventBus换成以下代码</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">inputHandler</span>(<span class="hljs-params">e</span>)</span> &#123;<br>      <span class="hljs-built_in">this</span>.$store.state.val = e.target.value;<br>    &#125;<br></code></pre></td></tr></table></figure><p><strong>将div标签中的val换成this.$store.state.val，这就是最简单的Vuex使用，仅仅通过修改state从而达到全局状态的目的，如果你的项目并不复杂，这个简单的全局状态就足够了</strong></p><p><strong>下一步，我们加入一个mutations，这里我们可以将mutations当成<a href="https://blog.csdn.net/time_____/article/details/113770950">发布/订阅</a>的调度中心，将函数写在mutations中相当于注册了一个事件，在页面中通过emit来触发<br>在store中新增****mutations</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> state = &#123;<br>  <span class="hljs-attr">val</span>: <span class="hljs-string">&#x27;&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">const</span> mutations = &#123;<br>  changeVal (state, _val) &#123;<br>    state.val = _val<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> Vuex.Store(&#123;<br>  state,<br>  mutations<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>在inputHandler中调用一下该函数，其中changeVal是mutations中的函数名，通过emit传参达到和发布\订阅效果</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">this</span>.$store.commit(<span class="hljs-string">&#x27;changeVal&#x27;</span>,e.target.value)<br></code></pre></td></tr></table></figure><p><strong>了解了mutations，我们来看看getters，我们都知道Vue中有一个computed计算属性，当被代理的值发生变化时，它会被重新计算，Vuex中的派生属性getters会绑定state中的某个或某些值，通过传递参数，达到对该值过滤，修改的作用</strong></p><p><strong>这里我们做个简单的计算，输入字符后计算其长度并拼接一下，inputHandler中操作不变，在store中新增getters</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue<br>  <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> Vuex<br>  <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><br>Vue.use(Vuex);<br><span class="hljs-keyword">const</span> state = &#123;<br>  <span class="hljs-attr">val</span>: <span class="hljs-string">&#x27;&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">const</span> mutations = &#123;<br>  changeVal (state, _val) &#123;<br>    state.val = _val<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> getters = &#123;<br>  getValueLength (state) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">`长度：<span class="hljs-subst">$&#123;state.val.length&#125;</span>`</span><br>  &#125;<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> Vuex.Store(&#123;<br>  state,<br>  mutations,<br>  getters<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>然后在div标签中的this.$store.state.val后面添加this.$store.getters.getValueLength</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div&gt;<br>   &#123;&#123;<br>     <span class="hljs-built_in">this</span>.$store.state.val+<span class="hljs-built_in">this</span>.$store.getters.getValueLength<br>   &#125;&#125;<br> &lt;/div&gt;<br></code></pre></td></tr></table></figure><p><strong>效果如下：</strong><br><img src="https://img-blog.csdnimg.cn/20210321155310181.gif"><br><strong>如果到这一步，你仍然感觉难度不大，那么恭喜你，Vuex的使用已经掌握了一大半了</strong></p><p><strong>下面，我们来说说actions，在说actions之前，我们先回顾一下mutations，mutations中注册了一些事件，在组件中通过emit对事件进行触发，达到处理异步且解耦的效果，然而官方并不推荐我们直接对store进行操作<br>官方对actions的说明是：****Action 类似于 mutation，不同在于1.Action 提交的是 mutation，而不是直接变更状态。2.Action 可以包含任意异步操作。</strong></p><p><strong>也就是说，我们要把组件中的emit操作放到actions中，而在组件中通过某些方式来触发actions中的函数间接调用emit，****此时，为了让action更直观，我们添加一个清除输入框字符的方法，当点击清除按钮时清除state.val</strong><br><strong>在输入框组件中将value绑定到state上</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;inputHandler&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;this.$store.state.val&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;inputComp&quot;</span>,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">inputHandler</span>(<span class="hljs-params">e</span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.$store.dispatch(<span class="hljs-string">&quot;actionVal&quot;</span>, e.target.value);</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span></span><br><span class="hljs-tag">  <span class="hljs-attr">scoped</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>在另一个显示数据的组件中新增删除按钮并绑定删除事件，通过dispatch告知store并通过emit操作state</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;clickHandler&quot;</span>&gt;</span>清除<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123; this.$store.state.val + this.$store.getters.getValueLength &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;divComp&quot;</span>,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.$store.dispatch(<span class="hljs-string">&#x27;actionClearVal&#x27;</span>)</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span></span><br><span class="hljs-tag">  <span class="hljs-attr">scoped</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>最后在store中新建删除的actions和mutations</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue<br><span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> Vuex<br><span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><br>Vue.use(Vuex);<br><span class="hljs-keyword">const</span> state = &#123;<br>  <span class="hljs-attr">val</span>: <span class="hljs-string">&#x27;&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">const</span> mutations = &#123;<br>  <span class="hljs-function"><span class="hljs-title">changeVal</span>(<span class="hljs-params">state, _val</span>)</span> &#123;<br>    state.val = _val<br>  &#125;,<br>  <span class="hljs-function"><span class="hljs-title">clearVal</span>(<span class="hljs-params">state, _val</span>)</span> &#123;<br>    state.val = <span class="hljs-string">&#x27;&#x27;</span><br>  &#125;<br>&#125;<br><span class="hljs-keyword">const</span> actions = &#123;<br>  <span class="hljs-function"><span class="hljs-title">actionVal</span>(<span class="hljs-params">state, _val</span>)</span> &#123;<br>    state.commit(<span class="hljs-string">&#x27;changeVal&#x27;</span>, _val)<br>  &#125;,<br>  <span class="hljs-function"><span class="hljs-title">actionClearVal</span>(<span class="hljs-params">state</span>)</span> &#123;<br>    state.commit(<span class="hljs-string">&#x27;clearVal&#x27;</span>)<br>  &#125;<br>&#125;<br><span class="hljs-keyword">const</span> getters = &#123;<br>  <span class="hljs-function"><span class="hljs-title">getValueLength</span>(<span class="hljs-params">state</span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">`长度：<span class="hljs-subst">$&#123;state.val.length&#125;</span>`</span><br>  &#125;<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> Vuex.Store(&#123;<br>  state,<br>  mutations,<br>  actions,<br>  getters<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>最终效果如下：</strong></p><p><img src="https://img-blog.csdnimg.cn/20210324221759581.gif"><br><strong>到这里为止，Vuex的基本用法就介绍完毕了。<br>然而除此之外，Vuex官方还提供了辅助函数（mapState,mapMutations,mapGetters,mapActions）和Modules（store的子模块，当有许多全局状态时，我们为了避免代码臃肿，就可以将各个store分割成模块）方便我们书写<br>下面我们用辅助函数重新实现一下上述功能<br>输入框：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;inputHandler&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; mapState, mapMutations &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;inputComp&quot;</span>,</span><br><span class="javascript">  <span class="hljs-attr">computed</span>: &#123;</span><br><span class="javascript">    ...mapState(&#123; <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;val&quot;</span> &#125;),</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    ...mapMutations(&#123; <span class="hljs-attr">sendParams</span>: <span class="hljs-string">&quot;changeVal&quot;</span> &#125;), <span class="hljs-comment">// sendParams用来传递参数,先把sendParams注册到mutations上，输入时触发sendParams</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">inputHandler</span>(<span class="hljs-params">e</span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.sendParams(e.target.value);</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span></span><br><span class="hljs-tag">  <span class="hljs-attr">scoped</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>显示框：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;clickHandler&quot;</span>&gt;</span>清除<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123; value + valueLength &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; mapState, mapGetters, mapActions &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;divComp&quot;</span>,</span><br><span class="javascript">  <span class="hljs-attr">computed</span>: &#123;</span><br><span class="javascript">    ...mapState(&#123; <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;val&quot;</span> &#125;),</span><br><span class="javascript">    ...mapGetters(&#123; <span class="hljs-attr">valueLength</span>: <span class="hljs-string">&quot;getValueLength&quot;</span> &#125;),</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    ...mapActions(&#123; <span class="hljs-attr">clickHandler</span>: <span class="hljs-string">&quot;actionClearVal&quot;</span> &#125;),</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span></span><br><span class="hljs-tag">  <span class="hljs-attr">scoped</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>这里需要注意的一点就是mapActions和mapMutations的传参问题，这里我使用另一个函数接收参数并且注册到store中</strong></p><p><strong>关于Modules的这里就不多做介绍，官方已给出了详细说明</strong></p><p><strong>最后，附上<a href="https://gitee.com/DieHunter/myCode/tree/master/Vuex%E4%BD%BF%E7%94%A8">案例地址</a>，有需要可以自取，感谢你看到了最后，如果这篇文章有帮助到你，请帮忙支持一下，非常感谢！</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>没有云服务器？内网穿透了解一下</title>
    <link href="/2021/03/20/%E6%B2%A1%E6%9C%89%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B/"/>
    <url>/2021/03/20/%E6%B2%A1%E6%9C%89%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B/</url>
    
    <content type="html"><![CDATA[<p><strong>内网穿透又叫端口映射，用一句最简单的话来讲就是：将你的计算机所连接的私有网络映射到公网上，别人通过你给的域名或ip即可访问你本地的服务。具体的原理可参照<a href="https://baike.baidu.com/item/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/8597835">百度百科</a><br>这么做可以实现各大厂商的云服务器（阿里云，腾讯云，百度云，华为云等）的效果，通过公网地址访问服务器</strong></p><p><strong>这里分享一些提供内网穿透的网站，前三种是我用过的，感觉都还不错（仅供参考）：</strong></p><ol><li><strong><a href="https://www.ngrok.cc/">Sunny-Ngrok</a>：免费版，带宽：10 Mbps，限速：128Kbps，限流：无限，隧道数量：每种协议1条</strong></li><li><strong><a href="https://www.natfrp.com/">SAKURA FRP</a>：免费版（需要支付一元实名认证），带宽：10 Mbps，限速：4 Mbps，限流：5 GiB+限速流量（进入该状态24小时后会进行流量重置并恢复限速至正常限速），隧道数量：5条</strong></li><li><strong><a href="https://www.nsloop.com/nattunnel">NATTUNNEL</a>：免费版（隧道每天停止），带宽：1Mbps，限速：不限，限流：无限，隧道数量：1条</strong></li><li><strong><a href="https://frp.cool/">浮居内网穿透</a>：免费版，带宽：5Mbps，限速：5Mbps，限流：5GiB，隧道数量：2条</strong></li><li><strong><a href="https://natapp.cn/">NATAPP</a>：免费版，带宽：1Mbps，限速：1Mbps，限流：不限，隧道数量：0条</strong></li><li><strong><a href="https://hsk.oray.com/">花生壳</a>：免费版，带宽：1Mbps，限速：1Mbps，限流：1GiB，隧道数量：2条</strong></li><li><strong><a href="http://www.neiwangchuantou.net/">网穿云</a>：免费版，带宽：3Mbps，限速：3Mbps，限流：7天不限流量,激活后流量限制每月/1G，隧道数量：1条</strong></li><li><strong><a href="https://www.cpolar.com/">cpolar</a>：免费版，带宽：不清楚，限速：不清楚，限流：不清楚，隧道数量：1条</strong></li><li><strong><a href="http://www.luyouxia.com/">路由侠</a>：免费版，带宽：1Mbps，限速：1Mbps，限流：1GiB，隧道数量：2条</strong></li><li><strong><a href="http://www.mofasuidao.cn/">魔法隧道</a>：积分兑换版，带宽：官网说100M，限速：不清楚，限流：不清楚，隧道数量：不清楚</strong></li></ol><p><strong>下面，我就<a href="https://www.ngrok.cc/">Sunny-Ngrok</a>来分享一下服务器搭建，其实都大同小异，照着官方文档来，慢慢的就会了</strong></p><p><strong>这里我简单描述一下内网穿透的两个应用，一是服务器搭建，二是远程桌面的搭建</strong></p><p><strong>首先是服务器搭建，在此之前，我们得先开启本地服务器，这里以node为例，<a href="https://blog.csdn.net/time_____/article/details/114024145">环境搭建</a>，<a href="https://blog.csdn.net/time_____/article/details/114281583">静态文件服务</a>，<a href="https://blog.csdn.net/time_____/article/details/104439713">本地文件上线</a>，以及用到的<a href="https://blog.csdn.net/time_____/article/details/114326156">懒加载案例</a>在之前文章有说到，这里直接进入正题</strong></p><p><strong>开启本地服务运行懒加载案例，通过127.0.0.1访问网页，我这里是运行在VSCode插件（live server）下，当然也可以参照<a href="https://blog.csdn.net/time_____/article/details/114281583">静态文件服务</a>把项目运行在node服务下，首先保证网页和接口可以在本地运行访问<br>我的前端部分端口号是5500，后端接口端口号是1024</strong><br><img src="https://img-blog.csdnimg.cn/20210314140340632.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/2021031414041957.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>但是<a href="https://www.ngrok.cc/">Sunny-Ngrok</a>免费版的对http协议只提供一个端口的隧道，此时我们就要用Nginx进行端口代理了，Nginx配置可以参考<a href="https://blog.csdn.net/time_____/article/details/114750930">Nginx文章</a>，我这里的配置如下</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>       <span class="hljs-number">10240</span>;<span class="hljs-comment">#监听端口</span><br>    <span class="hljs-attribute">server_name</span>  localhost;<br>    <span class="hljs-attribute">location</span> / &#123;<br>        <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:1024/;<span class="hljs-comment">#反向代理后端接口</span><br>    &#125;<br>    <span class="hljs-attribute">location</span> /client &#123;<br>        <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:5500/;<span class="hljs-comment">#反向代理前端页面</span><br>    &#125;<br>    <br>    <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;<br>    <span class="hljs-attribute">location</span> = /50x.html &#123;<br>        <span class="hljs-attribute">root</span>   html;<br>    &#125;<br> <br>&#125;<br></code></pre></td></tr></table></figure><p><strong>此时通过输入<a href="http://127.0.0.1:10240/client/lazyLoad.html">http://127.0.0.1:10240/client/</a>就会代理到<a href="http://127.0.0.1:5500/">http://127.0.0.1:5500/</a>下，输入<a href="http://127.0.0.1:10240/getList?len1000">http://127.0.0.1:10240</a>/会被代理到<a href="http://127.0.0.1:10240/getList?len1000">http://127.0.0.1:1024/</a>下</strong></p><p><strong>下一步，注册<a href="https://www.ngrok.cc/">Sunny-Ngrok</a>账号，登录并购买免费服务器，配置服务器设置，最后下载穿透软件</strong><br><img src="https://img-blog.csdnimg.cn/20210312225657902.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210312225843323.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210314143154253.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210314143431919.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>下载完成后点击启动工具，在隧道管理中复制刚才新建的隧道id，粘贴到隧道软件中，并回车，进入到连接界面</strong><br><img src="https://img-blog.csdnimg.cn/20210314144024175.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20210314143842729.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210314144217617.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210314144414400.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>此时刷新隧道管理界面，点击查看状态，可以看到，当前连接的ip，说明内网穿透成功</strong></p><p><img src="https://img-blog.csdnimg.cn/20210314144528694.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>下一步，我们在新页面中打开赠送域名加路径，如：<a href="http://example.com/client/lazyLoad.html">http://example.com/client/lazyLoad.html</a>(example.com是赠送域名)，打开后会提示输入账号密码。<br>输入http验证用户名和密码即可</strong><br><img src="https://img-blog.csdnimg.cn/20210314145038500.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210314150441896.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>但是此时懒加载请求的接口是本地的127.0.0.1，我们要修改为<a href="http://example.com/getList?len1000">http://example.com/getList?len=1000</a>，最后打开<a href="http://example.com/client/lazyLoad.html">http://example.com/client/lazyLoad.html</a>，显示以下效果</strong><br><img src="https://img-blog.csdnimg.cn/2021031415095894.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210314151909628.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>做到这里，服务器内网穿透的服务器搭建就完成了。</strong></p><p><strong>接下来，我们来尝试搭建一下远程桌面</strong></p><p><strong>和之前一样，购买新的免费服务器，并且配置tcp协议，这里有两点需要注意：</strong></p><ol><li><strong>本地映射的ip不能使用127.0.0.1，而是使用局域网内的ip，通过ipconfig查看本机在局域网的ip并复制</strong></li><li><strong>远程桌面默认端口是3389</strong></li></ol><p><img src="https://img-blog.csdnimg.cn/20210314154208975.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>下面是我远程桌面的配置</strong><br><img src="https://img-blog.csdnimg.cn/20210314154305325.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>隧道管理</strong><br><img src="https://img-blog.csdnimg.cn/20210314154549688.png"><br><strong>最后和上面一样，运行内网穿透软件即可（可能会一直出现reconnecting提示，原因在<a href="https://www.ngrok.cc/_book/error/ngrok.html">官网文档</a>中，我这的解决方法是在隧道管理中踢下线，然后多连几次）</strong><br><img src="https://img-blog.csdnimg.cn/20210314160549637.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210314161635100.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>我们可以使用另一台电脑或者手机版的远程桌面连接当前电脑（手机版可以去酷安），下面是用手机连接的效果</strong><br><img src="https://img-blog.csdnimg.cn/20210314162219619.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210314162253401.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210314162343578.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>总结：内网穿透虽然比服务器要便宜，但是还要考虑自己电脑的电费和损耗，而且做服务器需要一直开着，所以，还是要对比，比较一下，选择适合自己的方案</strong></p><p><strong>希望这篇文章能帮助你</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Nginx常用指令，基本配置，反向代理</title>
    <link href="/2021/03/16/Nginx%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%EF%BC%8C%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%EF%BC%8C%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    <url>/2021/03/16/Nginx%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%EF%BC%8C%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%EF%BC%8C%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p><strong>前言：近期公司整改项目，前端的项目和接口全部采用Nginx重新部署，这里就最近用到的Nginx服务器做一个知识点整理，推荐一个<a href="https://www.nginx.cn/doc/">Nginx中文文档</a>网站</strong></p><p><strong>Nginx服务器就不多做介绍，直接进入正题，系统用的是window7 旗舰</strong></p><p><strong>首先，下载<a href="http://nginx.org/en/download.html">Nginx</a>，这里我下载了1.18版本，解压后得到以下Nginx根目录，推荐把根目录放到环境变量中</strong><br><img src="https://img-blog.csdnimg.cn/20210313161631371.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210313161905672.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>然后，在根目录导航栏输入cmd并回车进入命令控制</strong><br><img src="https://img-blog.csdnimg.cn/20210313162218840.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>常用命令：<br>nginx -t：检验配置文件<br>nginx -v：显示版本<br>start nginx：开启服务器<br>nginx -s stop：快速关闭服务器<br>nginx -s quit：正常关闭服务器<br>nginx -s reload：重载配置文件</strong></p><p><strong>之后，我们输入nginx start，系统会闪过一个命令控制台然后自动关闭，此时打开任务管理器，在进程中找得到nginx.exe，说明开启成功，在浏览器中打开127.0.0.1或localhost就会显示nginx欢迎页说明运行成功</strong><br><img src="https://img-blog.csdnimg.cn/20210313164140215.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210313164415616.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>下面介绍一下基本配置<br>打开根目录下的conf文件夹，用编辑器打开nginx.conf</strong><br><img src="https://img-blog.csdnimg.cn/20210313165533913.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210313165550480.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>代理服务：</strong></p><p><strong>以下代码可以修改代理网站的路径，访问默认的80端口会定向到html文件夹下的index.html文件，也就是nginx欢迎页，达到代理效果</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<span class="hljs-comment">#监听端口</span><br>    <span class="hljs-attribute">server_name</span>  localhost;<span class="hljs-comment">#监听域名访问</span><br><br>    <span class="hljs-attribute">location</span> / &#123;<br>        <span class="hljs-attribute">root</span>   html;<span class="hljs-comment">#代理文件夹</span><br>        <span class="hljs-attribute">index</span>  index.html index.htm;<span class="hljs-comment">#代理文件</span><br>    &#125;<br><br>    <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;<br>    <span class="hljs-attribute">location</span> = /50x.html &#123;<br>        <span class="hljs-attribute">root</span>   html;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>反向代理：</strong></p><p><strong>使用上面的代码稍作修改，实现反向代理功能，输入<a href="http://127.0.0.1:1024/baidu">http://127.0.0.1:1024/baidu</a>即可访问百度</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>        <br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">1024</span>;<span class="hljs-comment">#监听端口</span><br>        <span class="hljs-attribute">server_name</span>   localhost;<br>        <span class="hljs-attribute">location</span> /baidu &#123;<br>            <span class="hljs-attribute">proxy_pass</span> https://www.baidu.com/;<span class="hljs-comment">#反向代理baidu网址</span><br>        &#125;<br><br>        <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;<br>        <span class="hljs-attribute">location</span> = /50x.html &#123;<br>            <span class="hljs-attribute">root</span>   html;<br>        &#125;<br><br>    &#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021031317553334.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>https服务搭建可参考之前的<a href="https://blog.csdn.net/time_____/article/details/108050452">搭建一个线上版远程视频聊天</a>中的https搭建</strong></p><p><strong>以上就是我对nginx基础知识的整理，希望会对你有帮助</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>WebSocket使用及优化（心跳机制与断线重连）</title>
    <link href="/2021/03/13/WebSocket%E4%BD%BF%E7%94%A8%E5%8F%8A%E4%BC%98%E5%8C%96%EF%BC%88%E5%BF%83%E8%B7%B3%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%96%AD%E7%BA%BF%E9%87%8D%E8%BF%9E%EF%BC%89/"/>
    <url>/2021/03/13/WebSocket%E4%BD%BF%E7%94%A8%E5%8F%8A%E4%BC%98%E5%8C%96%EF%BC%88%E5%BF%83%E8%B7%B3%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%96%AD%E7%BA%BF%E9%87%8D%E8%BF%9E%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>WebSocket在2008年被提出，其通信协议于2011被制定为标准<br>与http不同，websocket支持全双工通信（即：在客户端和服务之间双向通信）在websocket问世之前，客户端与服务器通常采用http轮询和Comet等方式保持长链接<br>然而，这么做无疑会对服务端造成资源消耗，因为HTTP请求包含较长的头文件，只传递了少许的有用信息，十分消耗资源。<br>于是websocket便诞生了，它不仅节省资源和带宽，更是能实现长链接作用，只需客户端主动与服务端握手一次，即可进行实时通信，实现推送技术。</strong></p><p><strong>之前我也写过相关的文章：<a href="https://blog.csdn.net/time_____/article/details/86748679">Socket聊天室</a>，<a href="https://blog.csdn.net/time_____/article/details/104801205">使用JS+socket.io+WebRTC+nodejs+express搭建一个简易版远程视频聊天</a>，但是用到的模块都是socket.io，而且没有深入优化，在平时工作上真正用到时发现事情并不简单。有时前端或者后端会断线而对方不知道，像弱网或者后端服务器重启时，前端并不能保证一直连接</strong><br><strong>所以这篇文章，我们就来使用websocket做一个简单的demo，并且加上心跳和断线重连功能</strong></p><p><strong>首先是服务端，采用node+<a href="https://github.com/websockets/ws">ws模块</a>搭建websocket服务，在server文件夹下新建server.js，并在npm初始化后，下载ws模块</strong></p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> init -y<br><span class="hljs-built_in">npm</span> i ws<br></code></pre></td></tr></table></figure><p><strong>引入ws模块，并搭建一个简单的websocket服务</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> WebSocket = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;ws&#x27;</span>);<br><span class="hljs-keyword">const</span> port = <span class="hljs-number">1024</span><span class="hljs-comment">//端口</span><br><span class="hljs-keyword">const</span> pathname = <span class="hljs-string">&#x27;/ws/&#x27;</span><span class="hljs-comment">//访问路径</span><br><br><span class="hljs-keyword">new</span> WebSocket.Server(&#123;port&#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;websocket服务开启&#x27;</span>)<br>&#125;).on(<span class="hljs-string">&#x27;connection&#x27;</span>, connectHandler)<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connectHandler</span> (<span class="hljs-params">ws</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;客户端连接&#x27;</span>)<br>    ws.on(<span class="hljs-string">&#x27;error&#x27;</span>, errorHandler)<br>    ws.on(<span class="hljs-string">&#x27;close&#x27;</span>, closeHandler)<br>    ws.on(<span class="hljs-string">&#x27;message&#x27;</span>, messageHandler)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">messageHandler</span> (<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.info(<span class="hljs-string">&#x27;接收客户端消息&#x27;</span>)<br>    <span class="hljs-built_in">this</span>.send(e)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">errorHandler</span> (<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.info(<span class="hljs-string">&#x27;客户端出错&#x27;</span>)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">closeHandler</span> (<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.info(<span class="hljs-string">&#x27;客户端已断开&#x27;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>前端部分也搭建个ws访问客户端</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><br>        Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;test&#x27;</span><span class="hljs-comment">//连接用户名</span></span><br><span class="javascript">    <span class="hljs-keyword">let</span> wsUrl = <span class="hljs-string">&#x27;ws://127.0.0.1:1024/ws/?name=&#x27;</span> + name</span><br><span class="javascript">    <span class="hljs-keyword">const</span> ws = <span class="hljs-keyword">new</span> WebSocket(wsUrl)</span><br><span class="javascript">    ws.onopen = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;开启&#x27;</span>)</span><br><span class="javascript">        ws.send(<span class="hljs-built_in">JSON</span>.stringify(&#123;</span><br><span class="javascript">            <span class="hljs-attr">ModeCode</span>: <span class="hljs-string">&quot;message&quot;</span>,</span><br><span class="javascript">            <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;hello&#x27;</span></span><br><span class="javascript">        &#125;))</span><br><span class="javascript">    &#125;<span class="hljs-comment">//连接上时回调</span></span><br><span class="javascript">    ws.onclose = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;关闭&#x27;</span>)</span><br><span class="javascript">    &#125;<span class="hljs-comment">//断开连接时回调</span></span><br><span class="javascript">    ws.onmessage = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">let</span> data = <span class="hljs-built_in">JSON</span>.parse(e.data)</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;收到消息&#x27;</span> + data.msg)</span><br><span class="javascript">        ws.close()</span><br><span class="javascript">    &#125;<span class="hljs-comment">//收到服务端消息</span></span><br><span class="javascript">    ws.onerror = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;出错&#x27;</span>)</span><br><span class="javascript">    &#125;<span class="hljs-comment">//连接出错</span></span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>前端打印结果：</strong><br><img src="https://img-blog.csdnimg.cn/20210309165409626.png"><br><strong>服务端打印结果：</strong><br><img src="https://img-blog.csdnimg.cn/20210309165448717.png"><br><strong>有以上效果说明一个最简单的ws连接就实现了，下面，我们优化一下，为了降低耦合，我们先引入<a href="https://blog.csdn.net/time_____/article/details/113770950">eventBus</a>发布订阅，然后新建一个websocket类继承自原生WebSocket，因为，我们要在里面做心跳和重连<br>在服务端，我们先把server完善一下，通过http的upgrade过滤验证ws连接<br>在原有的服务端增加http服务并做好路径验证</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-keyword">const</span> server = http.createServer()<br><br>server.on(<span class="hljs-string">&quot;upgrade&quot;</span>, <span class="hljs-function">(<span class="hljs-params">req, socket, head</span>) =&gt;</span> &#123;<span class="hljs-comment">//通过http.server过滤数据</span><br>    <span class="hljs-keyword">let</span> url = <span class="hljs-keyword">new</span> URL(req.url, <span class="hljs-string">`http://<span class="hljs-subst">$&#123;req.headers.host&#125;</span>`</span>)<br>    <span class="hljs-keyword">let</span> name = url.searchParams.get(<span class="hljs-string">&#x27;name&#x27;</span>)<span class="hljs-comment">//获取连接标识</span><br>    <span class="hljs-keyword">if</span>(!checkUrl(url.pathname, pathname)) &#123;<span class="hljs-comment">//未按标准</span><br>        socket.write(<span class="hljs-string">&#x27;未按照标准访问&#x27;</span>);<br>        socket.destroy();<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>&#125;)<br>server.listen(port, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;服务开启&#x27;</span>)<br>&#125;)<br><br><span class="hljs-comment">//验证url标准</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkUrl</span> (<span class="hljs-params">url, key</span>) </span>&#123;<span class="hljs-comment">//判断url是否包含key</span><br>    <span class="hljs-keyword">return</span> - ~ url.indexOf(key)<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>完成httpServer后，我们再完善一下websocket服务，将每一个连接的用户都通过代理保存并实现增删，得到以下完整的服务端</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-keyword">const</span> WebSocket = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;ws&#x27;</span>);<br><span class="hljs-keyword">const</span> port = <span class="hljs-number">1024</span><span class="hljs-comment">//端口</span><br><span class="hljs-keyword">const</span> pathname = <span class="hljs-string">&#x27;/ws/&#x27;</span><span class="hljs-comment">//访问路径</span><br><span class="hljs-keyword">const</span> server = http.createServer()<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WebSocketServer</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">WebSocket</span>.<span class="hljs-title">Server</span> </span>&#123;<br>    <span class="hljs-title">constructor</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-built_in">super</span>(...arguments);<br>        <span class="hljs-built_in">this</span>.webSocketClient = &#123;&#125;<span class="hljs-comment">//存放已连接的客户端</span><br>    &#125;<br><br>    set ws (val) &#123;<span class="hljs-comment">//代理当前的ws，赋值时将其初始化</span><br>        <span class="hljs-built_in">this</span>._ws = val<br>        val.t = <span class="hljs-built_in">this</span>;<br>        val.on(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-built_in">this</span>.errorHandler)<br>        val.on(<span class="hljs-string">&#x27;close&#x27;</span>, <span class="hljs-built_in">this</span>.closeHandler)<br>        val.on(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-built_in">this</span>.messageHandler)<br>    &#125;<br><br>    get ws () &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._ws<br>    &#125;<br><br>    messageHandler (e) &#123;<br>        <span class="hljs-built_in">console</span>.info(<span class="hljs-string">&#x27;接收客户端消息&#x27;</span>)<br>        <span class="hljs-keyword">let</span> data = <span class="hljs-built_in">JSON</span>.parse(e)<br>        <span class="hljs-keyword">switch</span>(data.ModeCode) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;message&#x27;</span>:<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;收到消息&#x27;</span> + data.msg)<br>                <span class="hljs-built_in">this</span>.send(e)<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;heart_beat&#x27;</span>:<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`收到<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.name&#125;</span>心跳<span class="hljs-subst">$&#123;data.msg&#125;</span>`</span>)<br>                <span class="hljs-built_in">this</span>.send(e)<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br><br>    errorHandler (e) &#123;<br>        <span class="hljs-built_in">this</span>.t.removeClient(<span class="hljs-built_in">this</span>)<br>        <span class="hljs-built_in">console</span>.info(<span class="hljs-string">&#x27;客户端出错&#x27;</span>)<br>    &#125;<br><br>    closeHandler (e) &#123;<br>        <span class="hljs-built_in">this</span>.t.removeClient(<span class="hljs-built_in">this</span>)<br>        <span class="hljs-built_in">console</span>.info(<span class="hljs-string">&#x27;客户端已断开&#x27;</span>)<br>    &#125;<br><br>    addClient (item) &#123;<span class="hljs-comment">//设备上线时添加到客户端列表</span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.webSocketClient[item[<span class="hljs-string">&#x27;name&#x27;</span>]]) &#123;<br>            <span class="hljs-built_in">console</span>.log(item[<span class="hljs-string">&#x27;name&#x27;</span>] + <span class="hljs-string">&#x27;客户端已存在&#x27;</span>)<br>            <span class="hljs-built_in">this</span>.webSocketClient[item[<span class="hljs-string">&#x27;name&#x27;</span>]].close()<br>        &#125;<br>        <span class="hljs-built_in">console</span>.log(item[<span class="hljs-string">&#x27;name&#x27;</span>] + <span class="hljs-string">&#x27;客户端已添加&#x27;</span>)<br>        <span class="hljs-built_in">this</span>.webSocketClient[item[<span class="hljs-string">&#x27;name&#x27;</span>]] = item<br>    &#125;<br><br>    removeClient (item) &#123;<span class="hljs-comment">//设备断线时从客户端列表删除</span><br>        <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">this</span>.webSocketClient[item[<span class="hljs-string">&#x27;name&#x27;</span>]]) &#123;<br>            <span class="hljs-built_in">console</span>.log(item[<span class="hljs-string">&#x27;name&#x27;</span>] + <span class="hljs-string">&#x27;客户端不存在&#x27;</span>)<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-built_in">console</span>.log(item[<span class="hljs-string">&#x27;name&#x27;</span>] + <span class="hljs-string">&#x27;客户端已移除&#x27;</span>)<br>        <span class="hljs-built_in">this</span>.webSocketClient[item[<span class="hljs-string">&#x27;name&#x27;</span>]] = <span class="hljs-literal">null</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> webSocketServer = <span class="hljs-keyword">new</span> WebSocketServer(&#123;<span class="hljs-attr">noServer</span>: <span class="hljs-literal">true</span>&#125;)<br>server.on(<span class="hljs-string">&quot;upgrade&quot;</span>, <span class="hljs-function">(<span class="hljs-params">req, socket, head</span>) =&gt;</span> &#123;<span class="hljs-comment">//通过http.server过滤数据</span><br>    <span class="hljs-keyword">let</span> url = <span class="hljs-keyword">new</span> URL(req.url, <span class="hljs-string">`http://<span class="hljs-subst">$&#123;req.headers.host&#125;</span>`</span>)<br>    <span class="hljs-keyword">let</span> name = url.searchParams.get(<span class="hljs-string">&#x27;name&#x27;</span>)<span class="hljs-comment">//获取连接标识</span><br>    <span class="hljs-keyword">if</span>(!checkUrl(url.pathname, pathname)) &#123;<span class="hljs-comment">//未按标准</span><br>        socket.write(<span class="hljs-string">&#x27;未按照标准访问&#x27;</span>);<br>        socket.destroy();<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    webSocketServer.handleUpgrade(req, socket, head, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">ws</span>) </span>&#123;<br>        ws.name = name<span class="hljs-comment">//添加索引，方便在客户端列表查询某个socket连接</span><br>        webSocketServer.addClient(ws);<br>        webSocketServer.ws = ws<br>    &#125;);<br>&#125;)<br>server.listen(port, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;服务开启&#x27;</span>)<br>&#125;)<br><br><span class="hljs-comment">//验证url标准</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkUrl</span> (<span class="hljs-params">url, key</span>) </span>&#123;<span class="hljs-comment">//判断url是否包含key</span><br>    <span class="hljs-keyword">return</span> - ~ url.indexOf(key)<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>当连接断开时，只有客户端主动访问服务端才能实现重连，所以客户端的功能要比服务端更多一些，我们把客户端的websocket完善优化一下，添加一些简单的控制功能（连接，发消息，断开）的按钮，这里有一点需要注意：在下次连接之前一定要先关闭当前连接，否则会导致多个客户端同时连接，消耗性能</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><br>        Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;connect&quot;</span>&gt;</span><br>    连接<br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">disabled</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sendMessage&quot;</span>&gt;</span><br>    发送<br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">disabled</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;destroy&quot;</span>&gt;</span><br>    关闭<br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;test&#x27;</span><span class="hljs-comment">//连接用户名</span></span><br><span class="javascript">    <span class="hljs-keyword">let</span> connect = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#connect&#x27;</span>),<span class="hljs-comment">//连接按钮</span></span><br><span class="javascript">        sendMessage = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#sendMessage&#x27;</span>),<span class="hljs-comment">//发送按钮</span></span><br><span class="javascript">        destroy = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#destroy&#x27;</span>),<span class="hljs-comment">//关闭按钮</span></span><br><span class="javascript">        wsUrl = <span class="hljs-string">&#x27;ws://127.0.0.1:1024/ws/?name=&#x27;</span> + name,<span class="hljs-comment">//连接地址</span></span><br><span class="javascript">        ws;</span><br><span class="javascript"></span><br><span class="javascript">    connect.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, connectWebSocket)</span><br><span class="javascript">    sendMessage.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        ws.send(<span class="hljs-built_in">JSON</span>.stringify(&#123;</span><br><span class="javascript">            <span class="hljs-attr">ModeCode</span>: <span class="hljs-string">&quot;message&quot;</span>,</span><br><span class="javascript">            <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;hello&#x27;</span></span><br><span class="javascript">        &#125;))</span><br><span class="javascript">    &#125;)</span><br><span class="javascript">    destroy.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        ws.close()</span><br><span class="javascript">        ws = <span class="hljs-literal">null</span></span><br><span class="javascript">    &#125;)</span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connectWebSocket</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span>(!ws) &#123;<span class="hljs-comment">//第一次执行，初始化或ws断开时可执行</span></span><br><span class="javascript">            ws = <span class="hljs-keyword">new</span> WebSocket(wsUrl)</span><br><span class="javascript">            initWebSocket()</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;</span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initWebSocket</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        ws.onopen = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">            setButtonState(<span class="hljs-string">&#x27;open&#x27;</span>)</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;开启&#x27;</span>)</span><br><span class="javascript">        &#125;<span class="hljs-comment">//连接上时回调</span></span><br><span class="javascript">        ws.onclose = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">            setButtonState(<span class="hljs-string">&#x27;close&#x27;</span>)</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;关闭&#x27;</span>)</span><br><span class="javascript">        &#125;<span class="hljs-comment">//断开连接时回调</span></span><br><span class="javascript">        ws.onmessage = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-keyword">let</span> data = <span class="hljs-built_in">JSON</span>.parse(e.data)</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;收到消息&#x27;</span> + data.msg)</span><br><span class="javascript">        &#125;<span class="hljs-comment">//收到服务端消息</span></span><br><span class="javascript">        ws.onerror = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">            setButtonState(<span class="hljs-string">&#x27;close&#x27;</span>)</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;出错&#x27;</span>)</span><br><span class="javascript">        &#125;<span class="hljs-comment">//连接出错</span></span><br><span class="javascript">    &#125;</span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-comment">/*</span></span><br><span class="hljs-comment"><span class="javascript">  * 设置按钮是否可点击</span></span><br><span class="hljs-comment"><span class="javascript">  * @param state：open表示开启状态，close表示关闭状态</span></span><br><span class="hljs-comment"><span class="javascript">  */</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setButtonState</span> (<span class="hljs-params">state</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">switch</span>(state) &#123;</span><br><span class="javascript">            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;open&#x27;</span>:</span><br><span class="javascript">                connect.disabled = <span class="hljs-literal">true</span></span><br><span class="javascript">                sendMessage.disabled = <span class="hljs-literal">false</span></span><br><span class="javascript">                destroy.disabled = <span class="hljs-literal">false</span></span><br><span class="javascript">                <span class="hljs-keyword">break</span>;</span><br><span class="javascript">            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;close&#x27;</span>:</span><br><span class="javascript">                connect.disabled = <span class="hljs-literal">false</span></span><br><span class="javascript">                sendMessage.disabled = <span class="hljs-literal">true</span></span><br><span class="javascript">                destroy.disabled = <span class="hljs-literal">true</span></span><br><span class="javascript">                <span class="hljs-keyword">break</span>;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>效果如下：</strong><br><img src="https://img-blog.csdnimg.cn/2021030920045814.gif"></p><p><strong>到了这一步，我们websocket的demo已经可以手动运行，在此基础上，我们将其封装一下，并且通过eventBus对外进行通信就可以用了，具体流程将与接下来的心跳一起实现<br>websocket心跳机制：顾名思义，就是客户端每隔一段时间向服务端发送一个特有的心跳消息，每次服务端收到消息后只需将消息返回，此时，若二者还保持连接，则客户端就会收到消息，若没收到，则说明连接断开，此时，客户端就要主动重连，完成一个周期<br>心跳的实现也很简单，只需在第一次连接时用回调函数做延时处理，此时还需要设置一个心跳超时时间，若某时间段内客户端发送了消息，而服务端未返回，则认定为断线。下面，我就来实现一下心跳</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//this.heartBeat  ---&gt;  time：心跳时间间隔 timeout：心跳超时间隔</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 心跳初始函数</span><br><span class="hljs-comment"> * @param time：心跳时间间隔</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">startHeartBeat</span> (<span class="hljs-params">time</span>) </span>&#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-built_in">this</span>.sendMsg(&#123;<br>            <span class="hljs-attr">ModeCode</span>: ModeCode.HEART_BEAT,<br>            <span class="hljs-attr">msg</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<br>        &#125;)<br>        <span class="hljs-built_in">this</span>.waitingServer()<br>    &#125;, time)<br>&#125;<br><span class="hljs-comment">//延时等待服务端响应，通过webSocketState判断是否连线成功</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waitingServer</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.webSocketState = <span class="hljs-literal">false</span><span class="hljs-comment">//在线状态</span><br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.webSocketState) &#123;<br>            <span class="hljs-built_in">this</span>.startHeartBeat(<span class="hljs-built_in">this</span>.heartBeat.time)<br>            <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;心跳无响应，已断线&#x27;</span>)<br>        <span class="hljs-built_in">this</span>.close()<br>        <span class="hljs-comment">//重连操作</span><br>    &#125;, <span class="hljs-built_in">this</span>.heartBeat.timeout)<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>心跳实现完成后，只需要在ws.onopen中调用即可，效果如下：</strong><br><img src="https://img-blog.csdnimg.cn/20210309202721940.gif">  </p><p><strong>然后是重连部分，其实只需要新建一个延时回调，与心跳相似，只不过它是在连接失败时使用的，这里就不多做说明。以下是完整版的代码：<br>websocket部分：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> eventBus<br>    <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./eventBus.js&quot;</span><br><br><span class="hljs-keyword">const</span> ModeCode = &#123;<span class="hljs-comment">//websocket消息类型</span><br>    <span class="hljs-attr">MSG</span>: <span class="hljs-string">&#x27;message&#x27;</span>,<span class="hljs-comment">//普通消息</span><br>    <span class="hljs-attr">HEART_BEAT</span>: <span class="hljs-string">&#x27;heart_beat&#x27;</span><span class="hljs-comment">//心跳</span><br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyWebSocket</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">WebSocket</span> </span>&#123;<br>    <span class="hljs-title">constructor</span> (<span class="hljs-params">url, protocols</span>) &#123;<br>        <span class="hljs-built_in">super</span>(url, protocols);<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span><br>    &#125;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">     * 入口函数</span><br><span class="hljs-comment">     * @param heartBeatConfig  time：心跳时间间隔 timeout：心跳超时间隔 reconnect：断线重连时间间隔</span><br><span class="hljs-comment">     * @param isReconnect 是否断线重连</span><br><span class="hljs-comment">     */</span><br>    init (heartBeatConfig, isReconnect) &#123;<br>        <span class="hljs-built_in">this</span>.onopen = <span class="hljs-built_in">this</span>.openHandler<span class="hljs-comment">//连接上时回调</span><br>        <span class="hljs-built_in">this</span>.onclose = <span class="hljs-built_in">this</span>.closeHandler<span class="hljs-comment">//断开连接时回调</span><br>        <span class="hljs-built_in">this</span>.onmessage = <span class="hljs-built_in">this</span>.messageHandler<span class="hljs-comment">//收到服务端消息</span><br>        <span class="hljs-built_in">this</span>.onerror = <span class="hljs-built_in">this</span>.errorHandler<span class="hljs-comment">//连接出错</span><br>        <span class="hljs-built_in">this</span>.heartBeat = heartBeatConfig<br>        <span class="hljs-built_in">this</span>.isReconnect = isReconnect<br>        <span class="hljs-built_in">this</span>.reconnectTimer = <span class="hljs-literal">null</span><span class="hljs-comment">//断线重连时间器</span><br>        <span class="hljs-built_in">this</span>.webSocketState = <span class="hljs-literal">false</span><span class="hljs-comment">//socket状态 true为已连接</span><br>    &#125;<br><br>    openHandler () &#123;<br>        eventBus.emitEvent(<span class="hljs-string">&#x27;changeBtnState&#x27;</span>, <span class="hljs-string">&#x27;open&#x27;</span>)<span class="hljs-comment">//触发事件改变按钮样式</span><br>        <span class="hljs-built_in">this</span>.webSocketState = <span class="hljs-literal">true</span><span class="hljs-comment">//socket状态设置为连接，做为后面的断线重连的拦截器</span><br>        <span class="hljs-built_in">this</span>.heartBeat &amp;&amp; <span class="hljs-built_in">this</span>.heartBeat.time ? <span class="hljs-built_in">this</span>.startHeartBeat(<span class="hljs-built_in">this</span>.heartBeat.time) : <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">//是否启动心跳机制</span><br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;开启&#x27;</span>)<br>    &#125;<br><br>    messageHandler (e) &#123;<br>        <span class="hljs-keyword">let</span> data = <span class="hljs-built_in">this</span>.getMsg(e)<br>        <span class="hljs-keyword">switch</span>(data.ModeCode) &#123;<br>            <span class="hljs-keyword">case</span> ModeCode.MSG:<span class="hljs-comment">//普通消息</span><br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;收到消息&#x27;</span> + data.msg)<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> ModeCode.HEART_BEAT:<span class="hljs-comment">//心跳</span><br>                <span class="hljs-built_in">this</span>.webSocketState = <span class="hljs-literal">true</span><br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;收到心跳响应&#x27;</span> + data.msg)<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br><br>    closeHandler () &#123;<span class="hljs-comment">//socket关闭</span><br>        eventBus.emitEvent(<span class="hljs-string">&#x27;changeBtnState&#x27;</span>, <span class="hljs-string">&#x27;close&#x27;</span>)<span class="hljs-comment">//触发事件改变按钮样式</span><br>        <span class="hljs-built_in">this</span>.webSocketState = <span class="hljs-literal">false</span><span class="hljs-comment">//socket状态设置为断线</span><br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;关闭&#x27;</span>)<br>    &#125;<br><br>    errorHandler () &#123;<span class="hljs-comment">//socket出错</span><br>        eventBus.emitEvent(<span class="hljs-string">&#x27;changeBtnState&#x27;</span>, <span class="hljs-string">&#x27;close&#x27;</span>)<span class="hljs-comment">//触发事件改变按钮样式</span><br>        <span class="hljs-built_in">this</span>.webSocketState = <span class="hljs-literal">false</span><span class="hljs-comment">//socket状态设置为断线</span><br>        <span class="hljs-built_in">this</span>.reconnectWebSocket()<span class="hljs-comment">//重连</span><br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;出错&#x27;</span>)<br>    &#125;<br><br>    sendMsg (obj) &#123;<br>        <span class="hljs-built_in">this</span>.send(<span class="hljs-built_in">JSON</span>.stringify(obj))<br>    &#125;<br><br>    getMsg (e) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.parse(e.data)<br>    &#125;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">     * 心跳初始函数</span><br><span class="hljs-comment">     * @param time：心跳时间间隔</span><br><span class="hljs-comment">     */</span><br>    startHeartBeat (time) &#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.sendMsg(&#123;<br>                <span class="hljs-attr">ModeCode</span>: ModeCode.HEART_BEAT,<br>                <span class="hljs-attr">msg</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<br>            &#125;)<br>            <span class="hljs-built_in">this</span>.waitingServer()<br>        &#125;, time)<br>    &#125;<br><br>    <span class="hljs-comment">//延时等待服务端响应，通过webSocketState判断是否连线成功</span><br>    waitingServer () &#123;<br>        <span class="hljs-built_in">this</span>.webSocketState = <span class="hljs-literal">false</span><br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.webSocketState) &#123;<br>                <span class="hljs-built_in">this</span>.startHeartBeat(<span class="hljs-built_in">this</span>.heartBeat.time)<br>                <span class="hljs-keyword">return</span><br>            &#125;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;心跳无响应，已断线&#x27;</span>)<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-built_in">this</span>.close()<br>            &#125; <span class="hljs-keyword">catch</span>(e) &#123;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;连接已关闭，无需关闭&#x27;</span>)<br>            &#125;<br>            <span class="hljs-built_in">this</span>.reconnectWebSocket()<br>        &#125;, <span class="hljs-built_in">this</span>.heartBeat.timeout)<br>    &#125;<br><br>    <span class="hljs-comment">//重连操作</span><br>    reconnectWebSocket () &#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">this</span>.isReconnect) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-built_in">this</span>.reconnectTimer = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            eventBus.emitEvent(<span class="hljs-string">&#x27;reconnect&#x27;</span>)<br>        &#125;, <span class="hljs-built_in">this</span>.heartBeat.reconnect)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>index.html部分：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><br>        Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;connect&quot;</span>&gt;</span><br>    连接<br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">disabled</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sendMessage&quot;</span>&gt;</span><br>    发送<br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">disabled</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;destroy&quot;</span>&gt;</span><br>    关闭<br><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">import</span> eventBus</span><br><span class="javascript">        <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./js/eventBus.js&quot;</span></span><br><span class="javascript">    <span class="hljs-keyword">import</span> MyWebSocket</span><br><span class="javascript">        <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./js/webSocket.js&#x27;</span></span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">const</span> name = <span class="hljs-string">&#x27;test&#x27;</span><span class="hljs-comment">//连接用户名</span></span><br><span class="javascript">    <span class="hljs-keyword">let</span> connect = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#connect&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">let</span> sendMessage = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#sendMessage&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">let</span> destroy = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#destroy&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">let</span> myWebSocket,</span><br><span class="javascript">        wsUrl = <span class="hljs-string">&#x27;ws://127.0.0.1:1024/ws/?name=&#x27;</span> + name</span><br><span class="javascript"></span><br><span class="javascript">    eventBus.onEvent(<span class="hljs-string">&#x27;changeBtnState&#x27;</span>, setButtonState)<span class="hljs-comment">//设置按钮样式</span></span><br><span class="javascript">    eventBus.onEvent(<span class="hljs-string">&#x27;reconnect&#x27;</span>, reconnectWebSocket)<span class="hljs-comment">//接收重连消息</span></span><br><span class="javascript">    connect.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, reconnectWebSocket)</span><br><span class="javascript">    sendMessage.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        myWebSocket.sendMsg(&#123;</span><br><span class="javascript">            <span class="hljs-attr">ModeCode</span>: <span class="hljs-string">&quot;message&quot;</span>,</span><br><span class="javascript">            <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;hello&#x27;</span></span><br><span class="javascript">        &#125;)</span><br><span class="javascript">    &#125;)</span><br><span class="javascript">    destroy.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        myWebSocket.close()</span><br><span class="javascript">    &#125;)</span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reconnectWebSocket</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span>(!myWebSocket) &#123;<span class="hljs-comment">//第一次执行，初始化</span></span><br><span class="javascript">            connectWebSocket()</span><br><span class="javascript">        &#125;</span><br><span class="javascript">        <span class="hljs-keyword">if</span>(myWebSocket &amp;&amp; myWebSocket.reconnectTimer) &#123;<span class="hljs-comment">//防止多个websocket同时执行</span></span><br><span class="javascript">            <span class="hljs-built_in">clearTimeout</span>(myWebSocket.reconnectTimer)</span><br><span class="javascript">            myWebSocket.reconnectTimer = <span class="hljs-literal">null</span></span><br><span class="javascript">            connectWebSocket()</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;</span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connectWebSocket</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        myWebSocket = <span class="hljs-keyword">new</span> MyWebSocket(wsUrl);</span><br><span class="javascript">        myWebSocket.init(&#123;<span class="hljs-comment">//time：心跳时间间隔 timeout：心跳超时间隔 reconnect：断线重连时</span></span><br><span class="javascript">            <span class="hljs-attr">time</span>: <span class="hljs-number">30</span> * <span class="hljs-number">1000</span>,</span><br><span class="javascript">            <span class="hljs-attr">timeout</span>: <span class="hljs-number">3</span> * <span class="hljs-number">1000</span>,</span><br><span class="javascript">            <span class="hljs-attr">reconnect</span>: <span class="hljs-number">10</span> * <span class="hljs-number">1000</span></span><br><span class="javascript">        &#125;, <span class="hljs-literal">true</span>)</span><br><span class="javascript">    &#125;</span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-comment">/*</span></span><br><span class="hljs-comment"><span class="javascript">     * 设置按钮是否可点击</span></span><br><span class="hljs-comment"><span class="javascript">     * @param state：open表示开启状态，close表示关闭状态</span></span><br><span class="hljs-comment"><span class="javascript">     */</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setButtonState</span> (<span class="hljs-params">state</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">switch</span>(state) &#123;</span><br><span class="javascript">            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;open&#x27;</span>:</span><br><span class="javascript">                connect.disabled = <span class="hljs-literal">true</span></span><br><span class="javascript">                sendMessage.disabled = <span class="hljs-literal">false</span></span><br><span class="javascript">                destroy.disabled = <span class="hljs-literal">false</span></span><br><span class="javascript">                <span class="hljs-keyword">break</span>;</span><br><span class="javascript">            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;close&#x27;</span>:</span><br><span class="javascript">                connect.disabled = <span class="hljs-literal">false</span></span><br><span class="javascript">                sendMessage.disabled = <span class="hljs-literal">true</span></span><br><span class="javascript">                destroy.disabled = <span class="hljs-literal">true</span></span><br><span class="javascript">                <span class="hljs-keyword">break</span>;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>最终实现的效果如下，即使后端服务关闭，或者是断网状态，客户端都能保持重连状态</strong><br><img src="https://img-blog.csdnimg.cn/20210309210551664.gif"><br><strong>最后，感谢你看到了这里，文章有任何问题欢迎大佬指出与讨论<br>附上源码：<a href="https://gitee.com/DieHunter/myCode/tree/master/WebSocket">Gitee</a></strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：触底懒加载</title>
    <link href="/2021/03/09/JS%E6%A1%88%E4%BE%8B%20%E8%A7%A6%E5%BA%95%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    <url>/2021/03/09/JS%E6%A1%88%E4%BE%8B%20%E8%A7%A6%E5%BA%95%E6%87%92%E5%8A%A0%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<p><strong>接着上篇文章：<a href="https://blog.csdn.net/time_____/article/details/114311580">ajax获取图片列表</a>，我们来实现一下JS的经典案例，懒加载</strong></p><p><strong>在web应用中，系统的响应速度对用户体验十分重要，其最主要的影响来源于服务端数据库查询，以及DOM渲染。<br>数据库查询数据量大的情况下，我们可以进行分页配合前端分页或者懒加载进行优化，而这篇文章主要讲的是如何处理后端百万级数据对DOM渲染造成的影响，当然这也是大厂常问的题。</strong></p><p><strong>在实现功能前，我们先了解一下懒加载，这是我之前实现的<a href="https://blog.csdn.net/time_____/article/details/84639454">懒加载</a>，懒加载也就是现在先加载一小部分，当某些条件触发时（触底，触及可视区，滚动条高度到了某个条件），进行延迟加载，解决大量资源同时加载缓慢导致用户体验下降。</strong></p><p><strong>这里我将使用ajax获取图片列表的流程，从后端一次性传递几万几十万甚至上百万张图片信息（一般情况下后端会做分页处理，这样对服务端性能损耗很大），前端采取触底加载与分页处理解决DOM渲染问题。</strong></p><p><strong>下面就来实现一下</strong></p><p><strong>在服务端需要实现两个功能：</strong></p><ul><li><strong>根据有限数组根据随机索引取某个单项（图片数量有限，暂时先使用几张图片循环出一定数量的随机图片列表）</strong></li><li><strong>服务端接收前端发送的参数决定传递几条数据（这样做就可以不需要修改后端，直接在前端看效果）</strong></li></ul><p><strong>首先新建图片path，一共5张图片</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> picList = [<span class="hljs-string">&#x27;1.jpg&#x27;</span>, <span class="hljs-string">&#x27;2.jpg&#x27;</span>, <span class="hljs-string">&#x27;3.jpg&#x27;</span>, <span class="hljs-string">&#x27;4.jpg&#x27;</span>, <span class="hljs-string">&#x27;5.jpg&#x27;</span>]<br></code></pre></td></tr></table></figure><p><strong>编写随机数方法，传入数字n产生1-n之间的随机数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">random</span> (<span class="hljs-params">count</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * count)<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>编写生成图片列表函数，传入数字n，产生长度为n的随机图片数组</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createPicList</span> (<span class="hljs-params">len</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> _list = []<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; len; i ++) &#123;<br>        _list.push(picList[random(picList.length)])<br>    &#125;<br>    <span class="hljs-keyword">return</span> _list<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>然后在getList接口中将该值返回至前端（通过前端参数使长度可控）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">res.write(<span class="hljs-built_in">JSON</span>.stringify(createPicList(data.len)));<br></code></pre></td></tr></table></figure><p><strong>最后，打开server，在浏览器中输入<a href="http://127.0.0.1:1024/getList?len10">http://127.0.0.1:1024/getList?len=10</a>，传递10条，服务端就会返回10条随机图片地址</strong><br><img src="https://img-blog.csdnimg.cn/20210304100430568.png"></p><p><strong>此时，服务端就算是大功告成，下面来客户端测试一下性能，修改ajax参数为1000，并添加时间戳记录运行时间</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(),<br>    serverDate,<br>    domDate;<br>utils.myAjax(&#123;<br>    <span class="hljs-attr">url</span>: baseUrl + <span class="hljs-string">&#x27;/getList&#x27;</span>,<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;get&#x27;</span>,<br>    <span class="hljs-attr">data</span>: &#123;<span class="hljs-attr">len</span>: <span class="hljs-number">1000</span>&#125;,<span class="hljs-comment">//传递长度为多少的列表（加载几张图片）</span><br>    <span class="hljs-attr">timeout</span>: <span class="hljs-number">10</span> * <span class="hljs-number">1000</span><br>&#125;).then(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>    serverDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<br>    loadPic.create(loadBox, data)<br>    domDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<br>    <span class="hljs-comment">//其他问题损耗时间暂时忽略不计</span><br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;收到请求：&#x27;</span>, (serverDate - date) / <span class="hljs-number">1000</span>)<span class="hljs-comment">//后端运行速度+传输速度等等（单位/秒）</span><br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;DOM渲染：&#x27;</span>, (domDate - serverDate) / <span class="hljs-number">1000</span>)<span class="hljs-comment">//DOM渲染速度（单位/秒）</span><br>&#125;).catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(err)<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>1000张图片，无论是加载速度还是DOM渲染速度都是很可观的</strong><br><img src="https://img-blog.csdnimg.cn/20210304102242973.png"></p><p><strong>图片数量升到10000张，后端变化不是很大，但是Dom渲染明显慢了很多</strong><br><img src="https://img-blog.csdnimg.cn/20210304102315164.png"><br><strong>把图片数量升至100000，好家伙，CPU和内存直接飚升</strong><br><img src="https://img-blog.csdnimg.cn/20210304102802264.png"><img src="https://img-blog.csdnimg.cn/20210304102857672.png"><br><strong>最后，我作死尝试一下1000000张图片，差点没裂开，后端貌似挺稳健，DOM足足渲染了70秒</strong><br><img src="https://img-blog.csdnimg.cn/20210304103512812.png"><img src="https://img-blog.csdnimg.cn/20210304103553529.png"></p><p><strong>这说明在后端百万级数据数据传递可控条件下，我们得在前端做好优化</strong></p><p><strong>首先，我们引入之前造的轮子：<a href="https://blog.csdn.net/time_____/article/details/113770950">发布/订阅busEvent</a>（不引入也行，可以使用回调函数，主要作用是通知渲染view），这里我们需要将node中使用的****module.exports=EventBus.Instance()修改为当前适用的export default EventBus.Instance()</strong></p><p><strong>然后新建LazyLoad类如下：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> eventBus<br>    <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./eventBus.js&#x27;</span><br><span class="hljs-keyword">import</span> Utils<br>    <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./utils.js&#x27;</span><br><br><span class="hljs-keyword">const</span> utils = <span class="hljs-keyword">new</span> Utils()<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LazyLoad</span> </span>&#123;<br>    <span class="hljs-title">constructor</span> (<span class="hljs-params">pageConfig, ele, data</span>) &#123;<br>        <span class="hljs-built_in">Object</span>.defineProperties(<span class="hljs-built_in">this</span>, &#123;<br>            <span class="hljs-comment">//前端分页功能的分页配置</span><br>            <span class="hljs-string">&#x27;pageConfig&#x27;</span>: &#123;<br>                <span class="hljs-attr">value</span>: pageConfig,<br>                <span class="hljs-attr">writable</span>: <span class="hljs-literal">true</span><br>            &#125;,<br>            <span class="hljs-comment">//待监听滚动的元素</span><br>            <span class="hljs-string">&#x27;ele&#x27;</span>: &#123;<br>                <span class="hljs-attr">value</span>: ele,<br>                <span class="hljs-attr">writable</span>: <span class="hljs-literal">false</span><br>            &#125;,<br>            <span class="hljs-comment">//所有数据，图片列表</span><br>            <span class="hljs-string">&#x27;data&#x27;</span>: &#123;<br>                <span class="hljs-attr">value</span>: data,<br>                <span class="hljs-attr">writable</span>: <span class="hljs-literal">false</span><br>            &#125;<br>        &#125;);<br>        <span class="hljs-built_in">this</span>.init()<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 对总列表分页后截取start到end数据，并通知渲染页面</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>val  截取的数据</span><br><span class="hljs-comment">     */</span><br>    set pagingData (val) &#123;<br>        <span class="hljs-comment">//是否清除上一页</span><br>        <span class="hljs-built_in">this</span>.pageConfig.clear ? (utils.clearEle(<span class="hljs-built_in">this</span>.ele), <span class="hljs-built_in">this</span>.ele.scrollTop = <span class="hljs-number">0</span>) : <span class="hljs-string">&quot;&quot;</span><br>        eventBus.emitEvent(<span class="hljs-string">&#x27;lazyLoadStep&#x27;</span>, val)<span class="hljs-comment">//数据翻页后通知渲染层，并将截取的数据传递过去</span><br>    &#125;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">     * 初始化函数</span><br><span class="hljs-comment">     */</span><br>    init () &#123;<br>        <span class="hljs-built_in">this</span>.scrollLoadPage(<span class="hljs-built_in">this</span>.ele)<br>        <span class="hljs-built_in">this</span>.nextPage()<span class="hljs-comment">//获取第一页</span><br>    &#125;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">     * 翻页功能，若大于总页数则跳出</span><br><span class="hljs-comment">     */</span><br>    nextPage () &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.pageConfig.page &gt; <span class="hljs-built_in">this</span>.pageConfig.totalPage) &#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;到底了！&#x27;</span>)<br>            <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-built_in">this</span>.pagingData = <span class="hljs-built_in">this</span>.paging(<span class="hljs-built_in">this</span>.pageConfig, <span class="hljs-built_in">this</span>.data)<br>        <span class="hljs-built_in">this</span>.pageConfig.page ++<br>    &#125;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">     * 滚动事件</span><br><span class="hljs-comment">     */</span><br>    scrollLoadPage (ele) &#123;<br>        ele.addEventListener(<span class="hljs-string">&#x27;scroll&#x27;</span>, <span class="hljs-built_in">this</span>.loadHandler.bind(<span class="hljs-built_in">this</span>))<br>    &#125;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">     * 滚动事件回调</span><br><span class="hljs-comment">     */</span><br>    loadHandler (e) &#123;<br>        <span class="hljs-keyword">if</span>(<br>            e.target.scrollHeight - e.target.scrollTop &lt;= e.target.clientHeight<br>        ) &#123;<br>            <span class="hljs-built_in">this</span>.nextPage()<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">     * 分页功能,截取数据</span><br><span class="hljs-comment">     * @param pageConfig  分页配置属性（page：第几页，pageSize；单页大小，totalPage：总页数,第一页无此属性）</span><br><span class="hljs-comment">     * @param data 总数据</span><br><span class="hljs-comment">     * @return data 当前页面截取的数据</span><br><span class="hljs-comment">     */</span><br>    paging (pageConfig, data) &#123;<br>        <span class="hljs-keyword">let</span> &#123;<br>            page,<br>            pageSize<br>        &#125; = pageConfig<br>        pageConfig.totalPage = <span class="hljs-built_in">Math</span>.ceil(data.length / pageConfig.pageSize)<br>        <span class="hljs-keyword">let</span> startIndex = page * pageSize - pageSize<br>        <span class="hljs-keyword">let</span> endIndex = page * pageSize<br>        <span class="hljs-keyword">return</span> data.slice(startIndex, endIndex)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>最后在HTML页面中引入eventBus和lazyLoad，并将之前的loadPic.create函数替换为new LazyLoad(pageConfig, loadBox, data)，并且将loadPic.create放在eventBus的异步处理中便可以得到以下代码：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Utils<br>    <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./js/utils.js&quot;</span><br><span class="hljs-keyword">import</span> LoadPic<br>    <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./js/loadPic.js&#x27;</span><br><span class="hljs-keyword">import</span> LazyLoad<br>    <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./js/lazyLoad.js&quot;</span>;<br><span class="hljs-keyword">import</span> eventBus<br>    <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./js/eventBus.js&#x27;</span><br><br><span class="hljs-keyword">let</span> pageConfig = &#123;<br>    <span class="hljs-attr">page</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//第几页</span><br>    <span class="hljs-attr">pageSize</span>: <span class="hljs-number">30</span>,<span class="hljs-comment">//每页大小</span><br>    <span class="hljs-attr">clear</span>: <span class="hljs-literal">false</span><span class="hljs-comment">//翻页时是否清空上一页</span><br>&#125;<br><span class="hljs-keyword">let</span> baseUrl = <span class="hljs-string">&#x27;http://127.0.0.1:1024&#x27;</span><span class="hljs-comment">//请求地址</span><br><span class="hljs-keyword">let</span> picPath = <span class="hljs-string">&#x27;/static/&#x27;</span><span class="hljs-comment">//静态文件路径</span><br><span class="hljs-keyword">let</span> utils = <span class="hljs-keyword">new</span> Utils()<br><span class="hljs-keyword">let</span> loadBox = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#loadBox&#x27;</span>)<span class="hljs-comment">//需要进行懒加载的元素</span><br><span class="hljs-keyword">let</span> loadPic = <span class="hljs-keyword">new</span> LoadPic()<br><span class="hljs-keyword">let</span> lazyLoad;<br><span class="hljs-keyword">let</span> serverDate=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(),<span class="hljs-comment">//服务器响应时间</span><br>    domDate;<span class="hljs-comment">//view渲染时间</span><br>loadPic.baseUrl = baseUrl + picPath<br>eventBus.onEvent(<span class="hljs-string">&#x27;lazyLoadStep&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<span class="hljs-comment">//监听翻页动作，渲染页面</span><br>    domDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<span class="hljs-comment">//初始化view渲染时间</span><br>    loadPic.create(loadBox, e)<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;DOM渲染：&#x27;</span>, (<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>() - domDate) / <span class="hljs-number">1000</span>)<span class="hljs-comment">//DOM渲染速度（单位/秒）</span><br>&#125;)<br>utils.myAjax(&#123;<br>    <span class="hljs-attr">url</span>: baseUrl + <span class="hljs-string">&#x27;/getList&#x27;</span>,<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;get&#x27;</span>,<br>    <span class="hljs-attr">data</span>: &#123;<span class="hljs-attr">len</span>: <span class="hljs-number">1000</span>&#125;,<span class="hljs-comment">//传递长度为多少的列表（加载几张图片）</span><br>    <span class="hljs-attr">timeout</span>: <span class="hljs-number">10</span> * <span class="hljs-number">1000</span><span class="hljs-comment">//请求超时时间</span><br>&#125;).then(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;收到请求：&#x27;</span>, (<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>() - serverDate) / <span class="hljs-number">1000</span>)<span class="hljs-comment">//后端运行速度+传输速度等等（单位/秒）</span><br>    lazyLoad = <span class="hljs-keyword">new</span> LazyLoad(pageConfig, loadBox, data)<span class="hljs-comment">//初始化懒加载</span><br>&#125;).catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(err)<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>至此，一个简单的Ajax请求后端并获取图片列表，并对列表进行分页懒加载图片的小案例完成，我们试试效果</strong><br><img src="https://img-blog.csdnimg.cn/20210304153651847.gif"><br><strong>如果把pageConfig中的清空上一页改为true，那就变成了只能看到下一页的懒加载了，但是这么做的好处能减少dom元素较多导致后续内存升高问题</strong><br><img src="https://img-blog.csdnimg.cn/20210304154108442.gif"></p><p><strong>最后，感谢看到了最后的你，附上<a href="https://gitee.com/DieHunter/myCode/tree/master/%E7%80%91%E5%B8%83%E6%B5%81&%E6%87%92%E5%8A%A0%E8%BD%BD/Third">源码地址</a>，希望对你有所帮助。</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：ajax获取图片列表</title>
    <link href="/2021/03/04/JS%E6%A1%88%E4%BE%8B%20ajax%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E5%88%97%E8%A1%A8/"/>
    <url>/2021/03/04/JS%E6%A1%88%E4%BE%8B%20ajax%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E5%88%97%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<p><strong>AJAX是个啥？有什么作用？如何实现AJAX？如何使用AJAX？这几个问题我在前端JS的面试题中，遇见了不少，对于前后端分离，单页面渲染流行的今日，ajax似乎变得很重要。</strong></p><p><strong>那么什么是Ajax？<br>Ajax（Asynchronous JavaScript and XML），又被称为异步 JavaScript 和 XML，它不是一门语言，而是web应用的一门技术。要知道，如果在2009年你了解前端的dom操作，ajax技术和一点点JS语法，你就已经可以找到一份不错的web前端的工作了。也正是Ajax技术将前后端分离和单页面渲染流行度提升了很大的空间</strong></p><p><strong>Ajax有什么作用？<br>ajax的作用用官话来讲就是：在不需要刷新页面的情况下，就可以产生局部刷新的效果，也就是在页面不刷新的情况下实现局部渲染，使前后端数据传输得到提升。ajax实现了在浏览器与服务器之间进行http传输（只需要获得少量数据，而不用渲染整个页面），使web程序更快，更小。</strong></p><p><strong>如何实现AJAX？<br>在<a href="https://www.w3school.com.cn/ajax/index.asp">W3School</a>上有详细文档<br>有几点需要注意：</strong></p><ul><li><strong>IE低版本浏览器与其他浏览器兼容性问题</strong></li><li><strong>GET与POST请求方式的写法问题（GET需要将参数拼接在URL中并且不需要传data，而POST需要传data不需要拼接URL）</strong></li><li><strong>同步与异步方式中的请求超时timeout（异步可以填写timeout，而同步会报错）</strong></li></ul><p><strong>这里我也简单实现一下：<br>首先，我们写个将对象属性拼接到url中的函数，方便get方式请求时调用</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 将对象属性拼接到url中</span><br><span class="hljs-comment"> * @param url：接口地址</span><br><span class="hljs-comment"> * @param obj：需要操作的对象</span><br><span class="hljs-comment"> * @return string:拼接结果</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">urlJoin</span> (<span class="hljs-params">url, obj</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> list = []<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> obj) &#123;<br>        <span class="hljs-keyword">if</span>(obj.hasOwnProperty(key)) &#123;<br>            list.push(<span class="hljs-string">`<span class="hljs-subst">$&#123;key&#125;</span>=<span class="hljs-subst">$&#123;obj[key]&#125;</span>`</span>)<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;url&#125;</span>?<span class="hljs-subst">$&#123;list.join(<span class="hljs-string">&#x27;&amp;&#x27;</span>)&#125;</span>`</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>然后就是ajax的基本写法（这里对ajax响应做了一个Promise操作，当然也可以改为回调或者事件监听）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * ajax请求方法</span><br><span class="hljs-comment"> * @param config method：请求类型 url：接口地址 data：输入参数 timeout：超时时间</span><br><span class="hljs-comment"> * @return Promise:Promise异步处理</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myAjax</span> (<span class="hljs-params">config</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> xhr;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">window</span>.ActiveXObject) &#123; <span class="hljs-comment">//ie浏览器</span><br>        xhr = <span class="hljs-keyword">new</span> ActiveXObject(<span class="hljs-string">&quot;Microsoft.XMLHTTP&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">window</span>.XMLHttpRequest) &#123; <span class="hljs-comment">//其他浏览器</span><br>        xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();<br>    &#125;<br>    config.method === <span class="hljs-string">&#x27;get&#x27;</span> ? (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<span class="hljs-comment">//判断get与post等请求方式</span><br>        config.url = urlJoin(config.url, config.data);<br>        config.data = <span class="hljs-literal">null</span><br>    &#125;()) : <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-comment">//open(请求方式|string，请求路径|string，是否异步|bool)异步一般选择true，false代表同步，选false则会使请求不堵塞,不会等待请求结果,此时的timeout也无意义</span><br>    xhr.open(config.method, config.url, config.async || <span class="hljs-literal">true</span>);<br>    xhr.send(config.data ? config.data : &#123;&#125;)<br>    config.async ? xhr.timeout = config.timeout || <span class="hljs-number">10</span> * <span class="hljs-number">1000</span> : <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-comment">//ajax请求超时，默认10秒</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        xhr.addEventListener(<span class="hljs-string">&#x27;timeout&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<span class="hljs-comment">//超时抛错</span><br>            reject(<span class="hljs-built_in">this</span>)<br>            <span class="hljs-keyword">throw</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&#x27;request timeout&#x27;</span>)<br>        &#125;)<br>        xhr.addEventListener(<span class="hljs-string">&#x27;load&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            <span class="hljs-keyword">if</span>(xhr.readyState === <span class="hljs-number">4</span> &amp;&amp; xhr.status === <span class="hljs-number">200</span>) &#123;<span class="hljs-comment">//请求成功</span><br>                resolve(<span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">this</span>.response))<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                reject(<span class="hljs-built_in">this</span>)<br>            &#125;<br>        &#125;)<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>实现完成后得点个题啊，文章的目的是获取图片列表，接着上篇文章的<a href="https://blog.csdn.net/time_____/article/details/114281583">nodejs搭建静态目录服务</a>继续往下整<br>在上篇文章的其他接口中，新增一个获取图片列表的接口getList</strong><br><img src="https://img-blog.csdnimg.cn/2021030315423597.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>这里我优化了一下，处理跨域，摒弃了node旧模块而使用了URL类，于是得到以下代码</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> server = http.createServer(<span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    res.setHeader(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>)<span class="hljs-comment">//设置响应头解决跨域</span><br>    <span class="hljs-keyword">let</span> url = <span class="hljs-keyword">new</span> URL(req.url, <span class="hljs-string">`http://<span class="hljs-subst">$&#123;req.headers.host&#125;</span>`</span>)<span class="hljs-comment">//解析请求的地址</span><br>    <span class="hljs-keyword">let</span> data = urlSplit(url.href)<span class="hljs-comment">//获取参数</span><br>    <span class="hljs-keyword">if</span>(req.url.indexOf(<span class="hljs-string">&#x27;/static/&#x27;</span>) !== - <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;获取静态文件&#x27;</span>)<br>        readFile(<span class="hljs-string">&#x27;.&#x27;</span> + req.url).then(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>            res.write(data, <span class="hljs-string">&quot;binary&quot;</span>);<br>            res.end();<br>        &#125;)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">switch</span>(url.pathname) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/getList&#x27;</span>:<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;获取列表&#x27;</span>)<br>                res.write(<span class="hljs-built_in">JSON</span>.stringify([<span class="hljs-string">&#x27;1.jpg&#x27;</span>, <span class="hljs-string">&#x27;2.jpg&#x27;</span>, <span class="hljs-string">&#x27;3.jpg&#x27;</span>, <span class="hljs-string">&#x27;4.jpg&#x27;</span>, <span class="hljs-string">&#x27;5.jpg&#x27;</span>]));<br>                res.end();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                res.writeHead(<span class="hljs-number">404</span>, &#123;<span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;text/plain&#x27;</span>&#125;)<br>                res.write(<span class="hljs-string">&quot;not find&quot;</span>);<br>                res.end();<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>通过访问<a href="http://127.0.0.1:1024/getList">http://127.0.0.1:1024/getList</a>就可以获取到列表</strong><br><img src="https://img-blog.csdnimg.cn/20210303164839769.png"><br><strong>于是我们就可以开始实现view的渲染，新建一个loadPic类，功能是获取静态资源路径并渲染图片（其中utils类是工具类，包括ajax在内，后续在完整项目中可以看到）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Utils<br>    <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./utils.js&#x27;</span>;<br><br><span class="hljs-keyword">let</span> utils = <span class="hljs-keyword">new</span> Utils()<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoadPic</span> </span>&#123;<br>    <span class="hljs-comment">//静态资源路径</span><br>    set baseUrl (val) &#123;<br>        <span class="hljs-built_in">this</span>._baseUrl = val<br>    &#125;<br><br>    get baseUrl () &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._baseUrl<br>    &#125;<br><br>    <span class="hljs-comment">//根据数据渲染图片</span><br>    create (ele, data) &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; data.length; i ++) &#123;<br>            <span class="hljs-keyword">let</span> liBox = utils.createEle(<span class="hljs-string">&#x27;li&#x27;</span>, &#123;<span class="hljs-attr">listStyle</span>: <span class="hljs-string">&#x27;none&#x27;</span>&#125;, &#123;&#125;, ele)<br>            utils.createEle(<span class="hljs-string">&#x27;img&#x27;</span>, <span class="hljs-literal">null</span>, &#123;<br>                <span class="hljs-attr">src</span>: <span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.baseUrl&#125;</span><span class="hljs-subst">$&#123;data[i]&#125;</span>`</span><br>            &#125;, liBox)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>然后我们在JS中使用ajax来获取数据并加载图片</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><br>        lazyLoad<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">        <span class="hljs-selector-tag">li</span>, <span class="hljs-selector-tag">li</span> &gt; <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">float</span>: left;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;</span><br><span class="css">        &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loadBox&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">import</span> Utils</span><br><span class="javascript">        <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./js/utils.js&quot;</span></span><br><span class="javascript">    <span class="hljs-keyword">import</span> LoadPic</span><br><span class="javascript">        <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./js/loadPic.js&#x27;</span></span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">let</span> baseUrl = <span class="hljs-string">&#x27;http://127.0.0.1:1024&#x27;</span></span><br><span class="javascript">    <span class="hljs-keyword">let</span> picPath = <span class="hljs-string">&#x27;/static/&#x27;</span></span><br><span class="javascript">    <span class="hljs-keyword">let</span> utils = <span class="hljs-keyword">new</span> Utils()</span><br><span class="javascript">    <span class="hljs-keyword">let</span> loadBox = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#loadBox&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">let</span> loadPic = <span class="hljs-keyword">new</span> LoadPic()</span><br><span class="javascript">    loadPic.baseUrl = baseUrl + picPath</span><br><span class="javascript">    utils.myAjax(&#123;</span><br><span class="javascript">        <span class="hljs-attr">url</span>: baseUrl + <span class="hljs-string">&#x27;/getList&#x27;</span>,</span><br><span class="javascript">        <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;get&#x27;</span>,</span><br><span class="javascript">        <span class="hljs-attr">data</span>: &#123;<span class="hljs-attr">len</span>: <span class="hljs-number">100</span>&#125;,</span><br><span class="javascript">        <span class="hljs-attr">timeout</span>: <span class="hljs-number">3</span> * <span class="hljs-number">1000</span></span><br><span class="javascript">    &#125;).then(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;</span><br><span class="javascript">        loadPic.create(loadBox, data)</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(data)</span><br><span class="javascript">    &#125;).catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(err)</span><br><span class="javascript">    &#125;)</span><br><span class="javascript"></span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>列表效果与之前一样，图片也加载出来了</strong><br><img src="https://img-blog.csdnimg.cn/2021030316525169.png"><img src="https://img-blog.csdnimg.cn/20210303171604984.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>最后附上源码：<a href="https://gitee.com/DieHunter/myCode/tree/master/Ajax%E8%AF%B7%E6%B1%82node%E6%8E%A5%E5%8F%A3">gitee地址，</a>希望对各位有所帮助</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>原生Node实现静态目录</title>
    <link href="/2021/03/02/%E5%8E%9F%E7%94%9FNode%E5%AE%9E%E7%8E%B0%E9%9D%99%E6%80%81%E7%9B%AE%E5%BD%95/"/>
    <url>/2021/03/02/%E5%8E%9F%E7%94%9FNode%E5%AE%9E%E7%8E%B0%E9%9D%99%E6%80%81%E7%9B%AE%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p><strong>一个朋友让我实现静态资源托管，之前写的都是直接通过Express或Koa框架实现的，一行代码就可以解决</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">app.use(<span class="hljs-string">&#x27;/img&#x27;</span>, express.static(path.join(__dirname, <span class="hljs-string">&#x27;./img&#x27;</span>)));<br></code></pre></td></tr></table></figure><p><strong>恰好最近在看原生node，于是我自己试着实现了一个简单的静态资源托管，同时也为下篇懒加载文章做铺垫</strong></p><p><strong>首先，项目需要在node环境下运行服务器，搭建配置node参照<a href="https://blog.csdn.net/time_____/article/details/114024145">这篇文章</a></strong></p><p><strong>新建server.js文件执行node代码，在server.js中引入等会要用到的模块http和fs（filesystem）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br></code></pre></td></tr></table></figure><p><strong>在server中创建http服务并且监听1024端口</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> server = http.createServer(<span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    <br>&#125;)<br>server.listen(<span class="hljs-number">1024</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;服务开启！&#x27;</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>然后新增方法同步读取文件内容并返回读取结果</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">readFile</span> (<span class="hljs-params">filePath</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        fs.readFile(filePath, <span class="hljs-string">&quot;binary&quot;</span>, <span class="hljs-function">(<span class="hljs-params">err, data</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span>(err) &#123;<br>                reject(err);<br>                <span class="hljs-keyword">return</span><br>            &#125;<br>            resolve(data)<br>        &#125;)<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>最后，在http服务中对请求的url做判断，并调用读取文件的函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span>(req.url.indexOf(<span class="hljs-string">&#x27;/static/&#x27;</span>) !== - <span class="hljs-number">1</span>) &#123;<span class="hljs-comment">//判断请求路径是否包含static目录（简单判断）</span><br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;获取静态文件&#x27;</span>)<br>    readFile(<span class="hljs-string">&#x27;.&#x27;</span> + req.url).then(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>        res.write(data, <span class="hljs-string">&quot;binary&quot;</span>);<br>        res.end();<br>    &#125;)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;其他接口&#x27;</span>)<br>    res.write(<span class="hljs-string">&quot;other&quot;</span>);<br>    res.end();<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>完整的server.js文件</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">let</span> server = http.createServer(<span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(req.url.indexOf(<span class="hljs-string">&#x27;/static/&#x27;</span>) !== - <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;获取静态文件&#x27;</span>)<br>        readFile(<span class="hljs-string">&#x27;.&#x27;</span> + req.url).then(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>            res.write(data, <span class="hljs-string">&quot;binary&quot;</span>);<br>            res.end();<br>        &#125;)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;其他接口&#x27;</span>)<br>        res.write(<span class="hljs-string">&quot;other&quot;</span>);<br>        res.end();<br>    &#125;<br>&#125;)<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">readFile</span> (<span class="hljs-params">filePath</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        fs.readFile(filePath, <span class="hljs-string">&quot;binary&quot;</span>, <span class="hljs-function">(<span class="hljs-params">err, data</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span>(err) &#123;<br>                reject(err);<br>                <span class="hljs-keyword">return</span><br>            &#125;<br>            resolve(data)<br>        &#125;)<br>    &#125;)<br>&#125;<br><br>server.listen(<span class="hljs-number">1024</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;服务开启！&#x27;</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>server.js完成后，在server目录下创建img文件夹，并放几个静态文件</strong><br><img src="https://img-blog.csdnimg.cn/20210302141256926.png"><br><strong>通过node server.js或node server启动服务器</strong><br><img src="https://img-blog.csdnimg.cn/20210302141442565.png"><br><strong>在浏览器输入框输入url，我这里是：<a href="http://127.0.0.1:1024/static/1.jpg">http://127.0.0.1:1024/static/1.jpg</a>和<a href="http://127.0.0.1:1024/static/1.txt">http://127.0.0.1:1024/static/1.txt</a></strong><br><img src="https://img-blog.csdnimg.cn/20210302141627402.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210302141659812.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>显示出相关资源后就算完成了</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>TypeScript学习笔记（一）TS介绍，环境安装与运行</title>
    <link href="/2021/02/25/TypeScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89TS%E4%BB%8B%E7%BB%8D%EF%BC%8C%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E8%BF%90%E8%A1%8C/"/>
    <url>/2021/02/25/TypeScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89TS%E4%BB%8B%E7%BB%8D%EF%BC%8C%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E8%BF%90%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a><strong>介绍：</strong></h3><p><strong>TypeScript是JavaScript的超集，扩展了JavaScript的语法，因此现有的JavaScript代码可与TypeScript一起工作无需任何修改，TypeScript通过类型注解提供编译时的静态类型检查。其源于JavaScript（JS的拓展），终于JavaScript（编译成JS）<br>TypeScript 起源于使用JavaScript开发的大型项目 。由于JavaScript语言本身的局限性，难以胜任和维护大型项目开发。因此微软开发了TypeScript ，使得其能够胜任开发大型项目。</strong></p><h3 id="环境安装："><a href="#环境安装：" class="headerlink" title="环境安装："></a><strong>环境安装：</strong></h3><p><strong>首先安装node与npm，参考<a href="https://blog.csdn.net/time_____/article/details/114024145">这篇文章</a><br>打开cmd，运行以下命令安装TypeScript</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> -g typescript<br></code></pre></td></tr></table></figure><p><strong>安装完成后输入 tsc -v 查看安装是否成功，然而有时会碰上下图问题，系统禁止执行脚本</strong><br><img src="https://img-blog.csdnimg.cn/20210224220356608.png"><br><strong>首先输入get-ExecutionPolicy来获取是否允许脚本执行状态，显示Restricted说明脚本不被允许执行，此时我们输入set-ExecutionPolicy RemoteSigned即可</strong><br><img src="https://img-blog.csdnimg.cn/2021022422055293.png"><br><strong>网上还有一种方式是删除ts依赖下的tsc.ps1文件，亲测有效，副作用尚未发现</strong><br><img src="https://img-blog.csdnimg.cn/20210224221040298.png"></p><h3 id="IDE推荐："><a href="#IDE推荐：" class="headerlink" title="IDE推荐："></a>IDE推荐：</h3><p><strong>微软官方的Visual Studio Code（简称VS Code）:做开发以来使用的最舒服的轻量级IDE，支持ts开发，之前用的sublime和atom总感觉缺点什么，这款编辑器插件丰富，界面简洁，如今支持配置同步，让开发得心应手<br>JetBrains公司旗下的WebStorm：作为一款重量级web编辑器，功能可以说是非常齐全，在编辑ts时可以配置自动编译，如果说VScode轻量简洁开发舒服，Webstorm可以说是功能强大，专为web开发而生的神器</strong></p><h3 id="开发与运行："><a href="#开发与运行：" class="headerlink" title="开发与运行："></a><strong>开发与运行：</strong></h3><p><strong>以VS-Code为例：<br>在目录下新建app.ts文件，输入以下代码</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloWorld</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123; &#125;<br>    <span class="hljs-function"><span class="hljs-title">say</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hello world&#x27;</span>)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">new</span> HelloWorld().say()<br></code></pre></td></tr></table></figure><p><strong>将cmd打开于当前目录下，输入tsc app.ts或者简写tsc app，ts会编译一个app.js文件生成在目录下，编译结果如下</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> HelloWorld = <span class="hljs-comment">/** <span class="hljs-doctag">@class </span>*/</span> (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">HelloWorld</span>(<span class="hljs-params"></span>) </span>&#123;<br>    &#125;<br>    HelloWorld.prototype.say = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hello world&#x27;</span>);<br>    &#125;;<br>    <span class="hljs-keyword">return</span> HelloWorld;<br>&#125;());<br><span class="hljs-keyword">new</span> HelloWorld().say();<br></code></pre></td></tr></table></figure><p><strong>这就是我们熟悉的JS原生代码，我们使用node app.js或者简写node app执行app.js，控制台会输出hello world</strong><br><img src="https://img-blog.csdnimg.cn/20210225152057132.png"><br><strong>然而每次都需要编译ts并在node执行调试有点麻烦，这里推荐一个插件<a href="https://www.npmjs.com/package/ts-node">ts-node</a>，在cmd中全局安装依赖</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">npm i ts-<span class="hljs-keyword">node</span> <span class="hljs-title">-g</span><br></code></pre></td></tr></table></figure><p><strong>安装完成之后在cmd中执行 ts-node app，会直接编译并在node中执行，打印hello world（注意：该操作不会生成app.js文件，而是直接自动编译直接执行）</strong><br><img src="https://img-blog.csdnimg.cn/20210225152709909.png"></p><p><strong>当然，在webstorm中，打开设置，将TS的自动编译打开，也会节省不少事</strong><br><img src="https://img-blog.csdnimg.cn/20210225153104157.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a><strong>总结：</strong></h3><p><strong>以上就是TypeScript起步的介绍，环境安装与运行及注意事项</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Nodejs安装配置与npm配置</title>
    <link href="/2021/02/24/Nodejs%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E4%B8%8Enpm%E9%85%8D%E7%BD%AE/"/>
    <url>/2021/02/24/Nodejs%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E4%B8%8Enpm%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p><strong>该片文章主要介绍一下node环境的安装流程及排雷，为下篇TypeScript文章做铺垫</strong></p><h3 id="环境安装："><a href="#环境安装：" class="headerlink" title="环境安装："></a><strong>环境安装：</strong></h3><p><strong>这里我使用的是nvm（node管理工具）对node进行安装，直接一步到位，省去一些配置<br><a href="https://gitee.com/DieHunter/myCode/tree/master/Nvm%E5%B7%A5%E5%85%B7">我的gitee上的nvm托管地址</a><br>当然也可以去<a href="https://github.com/coreybutler/nvm-windows/releases">GitHub</a>或者<a href="https://gitee.com/mirrors/nvm">码云托管</a>上下载nvm</strong></p><p><strong>下载好安装包后双击安装nvm，选择我同意，并点击下一步</strong><br><img src="https://img-blog.csdnimg.cn/2021022415321390.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>选择安装路径，点击下一步</strong><br><img src="https://img-blog.csdnimg.cn/20210224153246499.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>选择安装好后，node快捷方式的路径</strong><br><img src="https://img-blog.csdnimg.cn/20210224153421927.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>最后点击安装，途中若杀毒软件提示应用修改环境变量点击允许即可</strong><br><img src="https://img-blog.csdnimg.cn/20210224153536972.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>安装完成后在环境变量中多出以下变量，并且在cmd中输入nvm -version显示下图，说明安装成功</strong></p><p><img src="https://img-blog.csdnimg.cn/20210224154223333.png"><br><img src="https://img-blog.csdnimg.cn/20210224154515847.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>下一步，我们设置一下nvm的下载镜像，提升其下载node的速度<br>我们进入到nvm安装目录下，打开settings.txt，并在最后一行添加淘宝镜像路径，替换原始的下载地址</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">node_mirror: https:<span class="hljs-comment">//npm.taobao.org/mirrors/node/</span><br>npm_mirror: https:<span class="hljs-comment">//npm.taobao.org/mirrors/npm/</span><br></code></pre></td></tr></table></figure><p><strong>替换完成后，我们就可以进行下一步的操作</strong><br><img src="https://img-blog.csdnimg.cn/20210224155119979.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>再次打开cmd，输入以下命令用于安装nodejs指定版本（注：win7不支持node v12版本以上的，win8、win10支持高版本的node，我的电脑是win7系统，所以至今为止，我能安装的最高版本是12.20.2）</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nvm</span> install node@<span class="hljs-number">12</span>.<span class="hljs-number">20</span>.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p><strong>显示以下结果就说明安装node和nvm成功了</strong><br><img src="https://img-blog.csdnimg.cn/20210224160250765.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>我们输入nvm use node版本号即可切换当前使用的node版本<br>如：nvm use 12.20.2，控制台提示Now using node v12.20.2 (64-bit)说明切换成功</strong><br><strong>​​​​此时我们运行node即可进入node环境，在node环境中连续按两次ctrl+c即可退出node</strong><br><img src="https://img-blog.csdnimg.cn/20210224160758258.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>node也可以正常运行后，我们来配置一下npm的一些属性<br>打开cmd，输入npm -v，显示出版本号说明npm安装成功（npm一般是自动随node一起安装的）<br>输入以下命令设置npm全局安装路径及缓存路径，具体根据自己需要进行配置，这里最好不要配置在node文件夹中，因为node版本会变化，下次又要重新配置</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">全局依赖安装路径：npm<span class="hljs-built_in"> config </span><span class="hljs-builtin-name">set</span><span class="hljs-built_in"> prefix </span><span class="hljs-string">&quot;D:\soft\nvm\global&quot;</span><br>npm缓存路径：npm<span class="hljs-built_in"> config </span><span class="hljs-builtin-name">set</span> cache <span class="hljs-string">&quot;D:\soft\nvm\cache&quot;</span><br></code></pre></td></tr></table></figure><p><strong>设置完成后，之后安装的全局依赖包都会在global文件夹下</strong><br><img src="https://img-blog.csdnimg.cn/20210224162743695.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>最后，我们设置npm镜像，有两种方式提速：第一种是使用cnpm（可以理解为下载速度更快的npm），第二种是设置npm代理淘宝镜像<br>cnpm：打开cmd输入以下命令</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm install -g cnpm --registry=https:<span class="hljs-regexp">//</span>registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p><strong>后续可以使用cnpm进行依赖安装，如cnpm -i axios，但是如果项目一开始就使用cnpm，那么后续操作就必须都使用cnpm，不能换成npm下载，反之亦然</strong></p><p><strong>设置npm镜像：个人比较推荐这种方式，解决npm在国内对于某些包下载比较慢的问题<br>同样打开cmd输入以下命令</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">npm config set registry https:<span class="hljs-comment">//registry.npm.taobao.org</span><br></code></pre></td></tr></table></figure><p><strong>至此，nodejs安装配置以及npm配置已经全部结束</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：Observer Pattern(观察者模式)和Publisher-Subscriber Pattern(发布者/订阅者模式)</title>
    <link href="/2021/02/11/JS%E6%A1%88%E4%BE%8B%20Observer%20Pattern(%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F)%E5%92%8CPublisher-Subscriber%20Pattern(%E5%8F%91%E5%B8%83%E8%80%85%20%E8%AE%A2%E9%98%85%E8%80%85%E6%A8%A1%E5%BC%8F)/"/>
    <url>/2021/02/11/JS%E6%A1%88%E4%BE%8B%20Observer%20Pattern(%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F)%E5%92%8CPublisher-Subscriber%20Pattern(%E5%8F%91%E5%B8%83%E8%80%85%20%E8%AE%A2%E9%98%85%E8%80%85%E6%A8%A1%E5%BC%8F)/</url>
    
    <content type="html"><![CDATA[<h3 id="发布-订阅模式和观察者模式一样吗？"><a href="#发布-订阅模式和观察者模式一样吗？" class="headerlink" title="发布/订阅模式和观察者模式一样吗？"></a><strong>发布/订阅模式和观察者模式一样吗？</strong></h3><p><strong>在许多地方我们都能见到基于这二者或者说基于某种设计模式的框架，函数或插件</strong></p><p><strong>在浏览器中使用addEventListener(type,fn)对dom元素进行事件委托，事件监听用户的异步操作<br>Android中也有一个事件发布/订阅的轻量级框架：EventBus，原理与web相似<br>Socket.io的许多方法也是基于此类模式，监听与触发事件，批量广播等<br>在Node中同样也有一个events事件触发器解决异步操作的同步响应</strong></p><p><strong>那么其二者有什么区别吗，下面两张图可以简单描述他们的过程（发布者/订阅者模式我直接用事件的侦听（addeventlistener）与事件的派遣（dispatchevent）来形容帮助理解）</strong><br><img src="https://img-blog.csdnimg.cn/20210209212521379.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20210209221110581.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="Observer-Pattern-观察者模式-："><a href="#Observer-Pattern-观察者模式-：" class="headerlink" title="Observer Pattern(观察者模式)："></a><strong>Observer Pattern(观察者模式)：</strong></h3><p><strong>Subject(主题，或者叫被观察者)：当状态发送变化时，需要通知队列中关联对象<br>Observer(观察者)：当Subject发送消息时，通过回调获得信息<br>Observer(观察者)将事件（记做fn回调）丢给Subject(被观察者)，然后就开始监视着他的一举一动，当Subject(被观察者)的（异步）任务完成后，同步触发事件fn回调将消息传输给Observer(观察者)后，完成一个完整的周期</strong></p><p><strong>实现过程：<br>Observer.js：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">module</span>.exports = <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Observer</span> </span>&#123; <span class="hljs-comment">//定义观察者类，每个实例化后的观察者拥有订阅（subscribe）功能</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;&#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 订阅</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>target 被观察者Subject的实例对象</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>fn 订阅注册的回调</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">subscribe</span>(<span class="hljs-params">target, fn</span>)</span> &#123;<br>        target.observerList.push(fn)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>Subject.js：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">module</span>.exports = <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Subject</span> </span>&#123; <span class="hljs-comment">//定义被观察者类，每个实例化后拥有注册的观察者回调的列表（observerList）和触发回调（fireEvent）功能</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.observerList = []<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 触发</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>e 被观察者传递给观察者的参数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">fireEvent</span>(<span class="hljs-params">e</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.observerList.forEach(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>            item(e)<br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>main.js（使用场景）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Observer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./js/observer&#x27;</span>);<br><span class="hljs-keyword">const</span> Subject = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./js/subject&#x27;</span>)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyObserver</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Observer</span> </span>&#123;&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MySubject</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Subject</span> </span>&#123;&#125;<br><br><span class="hljs-comment">// 实例化两个观察者，同时对一个subject进行监听</span><br><span class="hljs-keyword">const</span> observer = <span class="hljs-keyword">new</span> MyObserver()<br><span class="hljs-keyword">const</span> observer2 = <span class="hljs-keyword">new</span> MyObserver()<br><span class="hljs-keyword">const</span> subject = <span class="hljs-keyword">new</span> MySubject()<br><br>observer.subscribe(subject, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(e) <span class="hljs-comment">//hello world</span><br>&#125;)<br>observer2.subscribe(subject, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(e) <span class="hljs-comment">//hello world</span><br>&#125;)<br><span class="hljs-comment">// 延时激活观察者注册的函数，传递参数</span><br><span class="hljs-built_in">setTimeout</span>(subject.fireEvent.bind(subject, <span class="hljs-string">&#x27;hello world&#x27;</span>), <span class="hljs-number">1000</span>)<br></code></pre></td></tr></table></figure><h3 id="Publisher-Subscriber-Pattern-发布者-订阅者模式-："><a href="#Publisher-Subscriber-Pattern-发布者-订阅者模式-：" class="headerlink" title="Publisher-Subscriber Pattern(发布者/订阅者模式)："></a><strong>Publisher-Subscriber Pattern(发布者/订阅者模式)：</strong></h3><p><strong>Subscriber(订阅者)：将事件注册到事件调度中心（Event Channel或者可以看做EventBus(事件总线)）<br>Publisher(发布者)：触发调度中心的事件<br>Event Channel(调度中心)，与Vue和Android中的EventBus(事件总线)相似：得到Publisher(发布者)的消息后，统一处理Subscriber(订阅者)注册的事件<br>Subscriber(订阅者)通过on将事件注册到Event Channel(调度中心)，并与Event Channel通过回调进行数据传递，当Subscriber(订阅者)触发Event Channel(调度中心)的事件并将数据传递至其中时，调度中心会激活之前与Subscriber(订阅者)建立的联系，通过emit发送数据，订阅者收到数据后完成一个周期</strong></p><p><strong>实现过程：<br>eventBus.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 发布/订阅设计模式(Pub/Sub)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">EventBus</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._eventList = &#123;&#125; <span class="hljs-comment">//调度中心列表</span><br>    &#125;<br><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">Instance</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//返回当前类的实例的单例</span><br>        <span class="hljs-keyword">if</span> (!EventBus._instance) &#123;<br>            <span class="hljs-built_in">Object</span>.defineProperty(EventBus, <span class="hljs-string">&quot;_instance&quot;</span>, &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> EventBus()<br>            &#125;);<br>        &#125;<br>        <span class="hljs-keyword">return</span> EventBus._instance;<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 注册事件至调度中心</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>type 事件类型，特指具体事件名</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>fn 事件注册的回调</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">onEvent</span>(<span class="hljs-params">type, fn</span>)</span> &#123; <span class="hljs-comment">//订阅者</span><br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.isKeyInObj(<span class="hljs-built_in">this</span>._eventList, type)) &#123; <span class="hljs-comment">//若调度中心未找到该事件的队列，则新建某个事件列表（可以对某个类型的事件注册多个回调函数）</span><br>            <span class="hljs-built_in">Object</span>.defineProperty(<span class="hljs-built_in">this</span>._eventList, type, &#123;<br>                <span class="hljs-attr">value</span>: [],<br>                <span class="hljs-attr">writable</span>: <span class="hljs-literal">true</span>,<br>                <span class="hljs-attr">enumerable</span>: <span class="hljs-literal">true</span>,<br>                <span class="hljs-attr">configurable</span>: <span class="hljs-literal">true</span><br>            &#125;)<br>        &#125;<br>        <span class="hljs-built_in">this</span>._eventList[type].push(fn)<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 触发调度中心的某个或者某些该事件类型下注册的函数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>type 事件类型，特指具体事件名</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>data 发布者传递的参数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">emitEvent</span>(<span class="hljs-params">type, data</span>)</span> &#123; <span class="hljs-comment">//发布者</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.isKeyInObj(<span class="hljs-built_in">this</span>._eventList, type)) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>._eventList[type].length; i++) &#123;<br>                <span class="hljs-built_in">this</span>._eventList[type][i] &amp;&amp; <span class="hljs-built_in">this</span>._eventList[type][i](data)<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">offEvent</span>(<span class="hljs-params">type, fn</span>)</span> &#123; <span class="hljs-comment">//销毁监听</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>._eventList[type].length; i++) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._eventList[type][i] &amp;&amp; <span class="hljs-built_in">this</span>._eventList[type][i] === fn) &#123;<br>                <span class="hljs-built_in">this</span>._eventList[type][i] = <span class="hljs-literal">null</span><br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 检查对象是否包含该属性，除原型链</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>obj 被检查对象</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>key 被检查对象的属性</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">isKeyInObj</span>(<span class="hljs-params">obj, key</span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Object</span>.hasOwnProperty.call(obj, key)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>    &#125;<br>&#125;<br><br><span class="hljs-built_in">module</span>.exports = EventBus.Instance()<br></code></pre></td></tr></table></figure><p><strong>main.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> EventBus = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./js/eventBus&#x27;</span>)<br><span class="hljs-keyword">let</span> list = [], <span class="hljs-comment">//记录异步操作</span><br>    count = <span class="hljs-number">0</span>, <span class="hljs-comment">//计数器</span><br>    timeTick = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (count++ &gt; <span class="hljs-number">3</span>) &#123; <span class="hljs-comment">//当执行到一定时间时，销毁事件、定时器</span><br>            EventBus.offEvent(<span class="hljs-string">&#x27;finish&#x27;</span>, eventHandler)<br>            <span class="hljs-built_in">clearInterval</span>(timeTick)<br>        &#125;<br>        list.push(count)<br>        EventBus.emitEvent(<span class="hljs-string">&#x27;finish&#x27;</span>, &#123;<br>            list<br>        &#125;)<br>    &#125;, <span class="hljs-number">1000</span>)<br><br>EventBus.onEvent(<span class="hljs-string">&#x27;finish&#x27;</span>, eventHandler)<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">eventHandler</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(e)<br>    <span class="hljs-comment">// &#123; list: [ 1 ] &#125;</span><br>    <span class="hljs-comment">// &#123; list: [ 1, 2 ] &#125;</span><br>    <span class="hljs-comment">// &#123; list: [ 1, 2, 3 ] &#125;</span><br>    <span class="hljs-comment">// &#123; list: [ 1, 2, 3, 4 ] &#125;</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>总结：发布者/订阅者模式实际上是基于观察者模式上优化实现的，然而其二者的区别还是有的</strong></p><p><strong>观察者模式：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新<br>优点：观察者和被观察者是抽象耦合的，其二者建立了一套触发机制，松耦合<br>缺点：二者之间循环依赖，如果关系复杂，如观察者数量过多，还是会造成性能问题，解决方式是避免同步执行造成线程阻塞</strong></p><p><strong>发布者/订阅者模式：与观察者模式类似，但是核心区别是发布者与订阅者互相无耦合，并不知道通知与被通知的对方的具体身份，而是将注册的函数放在统一的调度中心进行管理<br>优点：发布者/订阅者完全解耦，可扩展性高，常应用在分布式，紧耦合服务中<br>缺点：发布者解耦订阅者，这点既是主要优点，亦是缺点，打个比方，在Socket中，倘若服务端发送消息给客户端，不会在意是否发送成功，此时需要客户端返回接收到了消息才能算是保证了代码的可靠性和可用性</strong></p><p><strong>相关源码：<a href="https://gitee.com/DieHunter/myCode/tree/master/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F&%E5%8F%91%E5%B8%83%E8%80%85%E8%AE%A2%E9%98%85%E8%80%85%E6%A8%A1%E5%BC%8F">码云地址</a></strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>React（前端面试题整合）</title>
    <link href="/2020/12/16/React%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89/"/>
    <url>/2020/12/16/React%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>谈谈对react的理解</strong></p><p><strong>react是基于v（视图层）层的一款框架，虚拟dom和diff算法<br>react特点：<br>声明式设计<br>高效，其中高效以现在虚拟dom，最大限度减少与dom的交互和diff算法<br>灵活，体现在可以与已知的框架或库很好的配合<br>JSX，是js语法的扩展<br>组件化，构建组件，是代码的更容易得到复用，比较建议在大型项目的开发<br>单项数据，实现单项数流，从而减少代码复用</strong></p><p><strong>react有哪几个生命周期</strong></p><p><strong><a href="https://blog.csdn.net/time_____/article/details/85253541">自己的总结</a></strong></p><p><strong>分为三个阶段，初始，运行中，销毁</strong></p><p><strong>初始化：</strong></p><ul><li><strong>执行getDefaultProps钩子函数，执行一次，挂载属性props（无Dom元素，有组件相关的this但是无法获取数据，组件想要拥有默认属性可以通过这个钩子函数设置）</strong></li><li><strong>执行getInitialState钩子函数，初始化自身状态state（同上，无Dom元素，有组件相关的this，但是无法获取数据，组件想要拥有状态只能通过这个钩子函数）</strong></li><li><strong>componentWillMount（）挂载前（类似于Vue的created加beforeMount阶段，可以进行数据请求（ajax），做一些初始数据的获取和设置，并且在这里更改数据不会触发运行阶段的钩子函数，在这里还可以更改this的指向问题）</strong></li><li><strong>render(构建组件的虚拟DOM结构进行编译)</strong></li><li><strong><strong>componentDidMount（）挂载完成（有Dom元素，数据准备完毕，这里可以操作DOM，并且可以访问已经渲染的DOM，在这个钩子函数里面也可以进行对数据的获取）</strong></strong></li></ul><p><strong>运行中：</strong></p><ul><li><strong>componentWillReceiveProps函数：当props发生变化时调用（当接收到的属性发生变化时触发，可以在这里更改改变后的属性去做一些事情，比如更改自己的状态，在这里this上的属性还没有更新，要想使用新的数据需要从参数中得到）</strong></li><li><strong>shouldComponentUpdate函数：主要做效率优化，控制组件是否随之更新，函数返回的true或false表示视图是否渲染，如：在函数中比较this.props.name（数据更新前）和props.name（数据更新后）对比，二者是否相同，从而避免重复渲染，加强优化</strong></li><li><strong>componentWillUpdate函数：准备工作，多做一些调试工作，在props和state发生改变的时候执行，并且在render方法之前执行，但是你在这个钩子函数里不能更改状态，否则会造成死循环，类似Vue中的beforeUpdate render：重新渲染Dom</strong></li><li><strong><strong>componentDidUpdate：页面更新渲染完成，组件的更新结束后执行,在这里可以操作更新完成后的dom，类似Vue的updated</strong></strong></li></ul><p><strong>组件销毁：</strong></p><ul><li><strong>componentWillUnmount：组件将要销毁，可以将定时器，事件等取消或结束 （ReactDOM.unmountComponentAtNode(node) 销毁节点中的组件）</strong></li></ul><p><strong>props与state的区别</strong></p><p><strong>props是一个从外部传进组件的参数，由于React具有单向数据流，所以它的主要作用是从父组件向子组件传递数据，它是不可改变的。如果想要改变它，只能通过外部组件传入新的props来重新渲染子组件，否则子组件的props以及展现形式不会改变。 props除了可以传字符串、数字，还可以传数组，对象、甚至是回调函数。</strong></p><p><strong>state的主要作用是用于组件保存、控制以及修改自己的状态，它只能在constructor中初始化，state是可以被改变的。state放改动的一些属性，比如点击选中，再点击取消。类似的这种属性就可以放到state里。 没有state的叫做无状态组件，多用props少用state，多写无状态组件。 修改state的值时，必须通过setState()方法。当我们调用this.setState方法时，React会更新组件的数据状态state，并且重新调用render方法</strong></p><p><strong>主要区别：<br>state是组件自己管理数据，控制自己的状态，值是可以改变的；<br>props是外部传入的数据参数，不可变；<br>相同点：</strong></p><ul><li><strong>props和state都是导出HTML的原始数据</strong></li><li><strong>props和state都是确定性的，如果我们写的组件为同一props和state的组合生成了不同的输出，那么我们肯定在哪里做错了</strong></li><li><strong>props和state更改都会触发渲染更新，这里讨论同一个组件内的props和state，即props是从外层组件获取的，而state是当前组件自己维护的（这里可以看做是共同点也可看做是不同点，因为虽然都是会触发渲染更新，但是如何更改的机制不一样）</strong></li><li><strong>props和state都是纯JS对象（对象字面量，{}，我们会简称为对象；对于[]，我们会简称为数组），我们可以用typeof来判断他们，结果都是object</strong></li><li><strong>可以从父组件得到初始值props和state的初始值</strong></li></ul><p><strong>不同点：</strong></p><ul><li><strong>可以从父组件修改自组件的props，而不能从父组件修改自组件的state</strong></li><li><strong>可以在组件内部分别对state和props设置初始值</strong></li><li><strong>props不可以在组件内部修改，但state可以在内部修改</strong></li></ul><p><strong>react组件之间如何传值？</strong></p><p><strong><a href="https://blog.csdn.net/time_____/article/details/85275221">自己的总结</a></strong></p><p><strong>父组件向子组件传值，初步使用，这个是相当容易的，在使用 React 开发的过程中经常会使用到，主要是利用props来进行交流<br>子组件向父组件传值，子组件控制自己的 state 然后告诉父组件的点击状态，然后在父组件中展示出来。<br>没有任何嵌套关系的组件之间传值(事件总线，flux，redux)</strong></p><p><strong>React中，在setState后，发生了什么</strong></p><p><strong>当调用 setState 时，React会做的第一件事情是将传递给 setState 的对象合并到组件的当前状态。 这将启动一个称为和解（reconciliation）的过程。 和解（reconciliation）的最终目标是以最有效的方式，根据这个新的状态来更新UI。 为此，React将构建一个新的React元素树（可以将其视为 UI 的对象表示）。一旦有了这个树，为了弄清 UI 如何响应新的状态而改变，React 会将这个新树与上一个元素树相比较（diff）。 通过这样做， React 将会知道发生的确切变化，并且通过了解发生什么变化，只需在绝对必要的情况下进行更新即可最小化 UI 的占用空间。</strong></p><p><strong>vue react angular 怎么检测数据变化的</strong></p><p><strong>Angular：****在angular版本里面还是采用脏值检测来检测数据的变更的，但是和angularjs不一样的是,angular引入了zone.js来处理数据的变更。性能可以达到angularjs脏值检测的3到10倍<br>Vue：vue.js 则是采用数据劫持结合发布者-订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发相应的监听回调<br>React：react状态变化只能通过setState,调用setState就会更新状态重新渲染dom</strong></p><p><strong>Virtual Dom实现的原理</strong></p><p><strong>虚拟dom相当在js和真实dom中间加了一个缓存，利用dom diff算法避免了没有必要的dom操作，从而提高性能<br>用 javaScript对象结构表示dom树的结构；然后用这个树构建一个真正的dom树，插到文档中<br>当状态变更的时候，重新构建一颗新的对象树。然后用新的树和旧的树进行比较，记录两颗树的差异<br>把记录的差异之处重新进行dom 渲染 视图就更新了</strong></p><p><strong>如何实现Virtual Dom算法</strong></p><p><strong>树的递归：<br>新的节点的tagName或者key和旧的不同，这种情况代表需要替换旧的节点，并且也不再需要遍历新旧节点的子元素了，因为整个旧节点都被删掉了，新的节点的tagName和 key（可能都没有）和旧的相同，开始遍历子树，没有新的节点，那么什么都不用做</strong></p><p><strong>判断属性的更改（具体分为三个步骤）：</strong></p><ul><li><strong>遍历旧的属性列表，查看每个属性是否还存在于新的属性列表中</strong></li><li><strong>遍历新的属性列表，判断两个列表中都存在的属性的值是否有变化</strong></li><li><strong>在第二步中同时查看是否有属性不存在与旧的属性列列表中</strong></li></ul><p><strong>判断列表差异算法实现（这个算法是整个 Virtual Dom 中最核心的算法）：</strong></p><ul><li><strong>遍历旧的节点列表，查看每个节点是否还存在于新的节点列表中</strong></li><li><strong>遍历新的节点列表，判断是否有新的节点</strong></li><li><strong>在第二步中同时判断节点是否有移动</strong></li></ul><p><strong>遍历子元素并创建标识：</strong></p><ul><li><strong>判断两个列表差异</strong></li><li><strong>给节点打上标记</strong></li></ul><p><strong>渲染差异：</strong></p><ul><li><strong>深度遍历树，将需要做变更操作的取出来</strong></li><li><strong>局部更新 DOM</strong></li></ul><p><strong>使用setState遇到的问题（异步）</strong></p><p><strong>this.setState()会调用render方法，但并不会立即改变state的值，state是在render方法中赋值的。所以执行this.setState()后立即获取state的值是不变的。同样的直接赋值state并不会触发更新，因为没有调用render函数。</strong></p><p><strong>解决方法：****setState(data，callback)，DOM渲染完成后调用第二个参数callback，解决异步问题</strong></p><p><strong>在react中，什么是高阶组件</strong></p><p><strong>高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件。 高阶组件的作用，其实就是为了组件之间的代码复用。组件可能有着某些相同的逻辑，把这些逻辑抽离出来，放到高阶组件中进行复用。高阶组件内部的包装组件和被包装组件之间通过 props 传递数据。</strong></p><p><strong>如何在React中访问DOM</strong></p><p><strong>在React的标签中可以通过ref={(ele) =&gt; this.ele= ele}接收放在实例上实际的 DOM 元素ele，通过this.ele访问原生ele标签，在React中，refs允许你直接访问DOM元素或组件实例。为了使用它们，可以向组件添加一个 ref 属性，该属性的值是一个回调函数，它将接收底层的 DOM 元素或组件的已挂接实例，作为其第一个参数。</strong></p><p><strong>React Native相对于原生的ios和Android有哪些优劣势</strong></p><p><strong>优势:<br>它对比原生开发更为灵活，对比H5体验更为高效。<br>跨平台，开发者只需学习一种语言就能轻易为任何平台高效地编写代码。<br>替代传统的WebView，打开效率更高，和原生之间的交互更方便。<br>多个版本迭代后的今天，它已经拥有了丰富第三方插件支持。<br>React Native解决不了的，可以通过各位熟悉的原生来解决，互补益彰。<br>更方便的热更新。</strong></p><p><strong>劣势:<br>尽管是跨平台，但是不同平台Api的特性与显示并不一定一致。<br>相对增大了app的体积。<br>调试相对麻烦。<br>Android上的兼容性问题。</strong></p><p><strong>React Native适合作为项目中的补充，而不是作为核心去开发APP。因为尽管是跨平台和快捷开发，但是以React Native为核心，去开发稍微偏中型以上的项目，后期维护的人员绝对不比原生的少多少，而且项目大了，体验依旧是个大问题。<br>相反，把React Native作为项目开发中的补充，可以在一定程度上实现平台业务的统一，还有灵活的开发效率，补充原生的不足。</strong></p><p><strong>react-router有几种传参方式</strong></p><p><strong><a href="https://blog.csdn.net/time_____/article/details/85387384">自己的总结</a></strong></p><p><strong>React Router 是一个基于React之上的强大路由库</strong></p><p><strong>传参方式：</strong></p><ul><li><strong>params：在编程式导航的push或replace中加 / : key，传递方式由路由匹配，只能传字符（JOSN处理），刷新界面依然保存</strong></li><li><strong>query：在路由path处写{path：‘/admin’，query：{name：aaa，age：20}},无需动态路由（即，在路径处有个 /：key），刷新后不保存，可传任何数据</strong></li><li><strong>state：类似query，在路由path处写{path：‘/admin’，state：{name：aaa，age：20}}，无需动态路由，刷新后保存，可传任何数据</strong></li></ul><p><strong>react-router的实现原理是什么</strong></p><p><strong>当用户点击页面跳转时，react-router阻止了浏览器的默认跳转行为，而改用history模块的pushState方法去触发url更新，当执行history.push时，执行了注册的listener函数，listener中的setState函数也被执行，将当前url地址栏对应的url传递下去，当Route组件匹配到该地址栏的时候，就会渲染该组件，如果匹配不到，Route组件就返回null</strong></p><p><strong>react-router依赖基础是history库：<br>老浏览器的history: 主要通过hash来实现，对应createHashHistory<br>高版本浏览器: 通过html5里面的history，对应createBrowserHistory<br>node环境下: 主要存储在memeory里面，对应createMemoryHistory</strong></p><p><strong>说说对Vuex，Flux和Redux的理解</strong></p><p><strong>Vuex是一个专为Vue.js应用程序开发的状态管理模式，它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化</strong></p><p><strong>Flux和Redux都不是必须和React搭配使用的，因为Flux和Redux是完整的架构，在学习React的时候，只是将React的组件作为Redux中的视图层去使用了</strong></p><p><strong>Flux和Redux区别：Redux是基于Flux实现的，Vuex是Redux的基础上进行改变，在Redux中我们只能定义一个store，在Flux中我们可以定义多个，在Redux中，store和dispatch都放到了store，在redux中本身就内置State对象</strong></p><p><strong>Redux和Vuex的区别：Vuex是在Redux的基础上进行改变，Vuex使用mutation来替换Redux中的reducer，Vuex有自动渲染的功能</strong></p><p><strong>一个Flux应用包含四个部分：</strong></p><p><strong>Dispatcher，处理动作分发，维持 Store 之间的依赖关系<br>Store，负责存储数据和处理数据相关逻辑<br>Action，触发 Dispatcher<br>View，视图，负责显示用户界面</strong></p><p><strong>Redux分为三部分****：</strong></p><p><strong>Action，就是一个单纯的包含 { type, payload } 的对象，type 是一个常量用来标示动作类型，payload 是这个动作携带的数据。<br>Reducer 用来处理 Action 触发的对状态树的更改。</strong><br><strong>Store 的作用就是连接上两者</strong></p><p><strong>vuex核心：</strong></p><p><strong>state：存放多个组件共享的状态（数据）<br>mutations：存放更改state里状态的方法，用于变更状态，是唯一一个更改状态的属性<br>getters：将state中某个状态进行过滤，然后获取新的状态，类似于vue中的computed<br>actions：用于调用事件动作，并传递给mutation<br>modules：主要用来拆分state</strong></p><p><strong>说明Flux和Redux的处理流程</strong></p><p><strong>Flux：</strong></p><ul><li><strong>用户通过与 view 交互或者外部产生一个 Action，Dispatcher 接收到 Action 并执行那些已经注册的回调，向所有 Store 分发 Action。</strong></li><li><strong>通过注册的回调，Store 响应那些与他们所保存的状态有关的 Action。</strong></li><li><strong>然后 Store 会触发一个 change 事件，来提醒 controller-views 数据已经发生了改变。</strong></li><li><strong>Controller-views 监听这些事件并重新从 Store 中获取数据。</strong></li><li><strong>这些 controller-views 调用他们自己的 setState() 方法，重新渲染自身以及组件树上的所有后代组件。</strong></li></ul><p><strong>Redux：</strong></p><ul><li><strong>store通过reducer创建了初始状态</strong></li><li><strong>view通过store.getState()获取到了store中保存的state挂载在了自己的状态上</strong></li><li><strong>用户产生了操作，调用了actions 的方法</strong></li><li><strong>actions的方法被调用，创建了带有标示性信息的action</strong></li><li><strong>actions将action通过调用store.dispatch方法发送到了reducer中</strong></li><li><strong>reducer接收到action并根据标识信息判断之后返回了新的state</strong></li><li><strong>store的state被reducer更改为新state的时候，store.subscribe方法里的回调函数会执行，此时就可以通知view去重新获取state</strong></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>VueJs（前端面试题整合）</title>
    <link href="/2020/12/10/VueJs%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89/"/>
    <url>/2020/12/10/VueJs%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>vue和react的区别</strong></p><ul><li><strong>React严格上只针对MVC的view层，Vue则是MVVM模式</strong></li><li><strong>virtual（虚拟） DOM不一样，vue会跟踪每一个组件的依赖关系，不需要重新渲染整个组件树。而对于React而言，每当应用的状态被改变时，全部组件都会重新渲染，所以react中会需要shouldComponentUpdate这个生命周期函数方法来进行控制</strong></li><li><strong>组件写法不一样，React推荐的做法是 JSX + inline style，也就是把HTML和CSS全都写进JavaScript了，即’all in js’；Vue推荐的做法是webpack+vue-loader的单文件组件格式，即html，css，js写在同一个文件</strong></li><li><strong>数据绑定：vue实现了数据的双向绑定，react数据流动是单向的</strong></li><li><strong>state对象在react应用中不可变的，需要使用setState方法更新状态；在vue中，state对象不是必须的，数据由data属性在vue对象中管理</strong></li></ul><p><strong>redux和vuex的区别</strong></p><ul><li><strong>vuex是redux的基础上进行改变，对仓库的管理更加明确</strong></li><li><strong>使用mutation来替换redux中的reducer</strong></li><li><strong>vuex有自动渲染的功能,所以不需要更新</strong></li><li><strong>vuex是专门为vue提供的状态管理工具,而redux是一个泛用的状态管理框架</strong></li></ul><p><strong>vuex的实现原理</strong></p><p><strong>Vuex的状态存储是响应式的，当Vue组件从store中读取状态时，若store中状态发生改变，响应的组件也会得到更新状态。但不能直接改变state,必须通过显示的提交(commit)mutations来追踪每一个状态的变化</strong></p><p><strong>双向数据绑定的原理</strong></p><p><strong>vue实现双向数据绑定的原理就是利用了 Object.defineProperty() 这个方法重新定义了对象获取属性值(get)和设置属性值(set)的操作来实现的。<br>在MDN上对该方法的说明是：Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性， 并返回这个对象。 它接收三个参数，要操作的对象，要定义或修改的对象属性名，属性描述符。重点就是最后的属性描述符。<br>属性描述符是一个对象，主要有两种形式：数据描述符和存取描述符。这两种对象只能选择一种使用，不能混合两种描述符的属性同时使用。上面说的get和set就是属于存取描述符对象的属性。 然后我们可以通过在存取描述符中的get和set方法内写入自定义的逻辑来实现对象获取属性和设置属性时的行为。</strong></p><p><strong>Vue中父组件如何向子组件传值</strong></p><p><strong>父子组件传参：</strong></p><p><strong>1.父传子：通过props属性实现；子组件要做类型检测；</strong></p><p><strong>2.子传父：</strong></p><ul><li><strong>子组件this.$emit触发父组件监听的方法；$emit第二个参数为：向父组件传递的数据</strong></li><li><strong>父组件监听子组件触发的事件，然后调用绑定的方法；</strong></li></ul><p><strong>非父子组件传参：</strong></p><ul><li><strong>路由传值：<router-link>和编程式导航中，均可在query/params中传值，在子组件中：this.$route.query</strong></li><li><strong>通过$parent $children方法调用层级关系的组件内部的数据和方法：this.$parent.$data.id 获取父元素data中的id，但是容易造成代码耦合性太强，难以维护</strong></li><li><strong>eventBus：在全局定义一个eventBus</strong>  </li><li><em>window.eventBus = new Vue( )或者Vue.eventBus = new Vue( )</em>*  </li><li><em>在需要传递参数的组件中定义一个emit发送需要传递的值：eventBus.$emit(‘name’,id)</em>*  </li><li><em>在需要接受参数的组件中，用on接受该值：eventBus.$on(‘name’,(val) =&gt; {…})</em>*  </li><li><em>注意：使用完后要在beforeDestroy( )中关闭这个eventBus eventBus.$off(‘name’)</em>*</li><li><strong>本地存储：localStorage或者sessionStorage，setItem存储value，getItem获取value</strong></li><li><strong>状态管理 Vuex</strong></li></ul><p><strong>列举Vue中的事件修饰符</strong></p><p><strong>Vue.js为v-on提供了事件修饰符。<br>修饰符是由点开头的指令后缀来表示的。<br>.stop 阻止事件继续传播<br>.prevent 阻止默认事件<br>.capture 使用捕获模式<br>.self 只当事件在该元素本身（而不是子元素）触发时触发回调<br>.once 事件只会触发一次</strong></p><p><strong>vue常用指令有哪些</strong></p><ul><li><strong>v-on 监听DOM事件，比如v-on:click=”handleFunction”，可简写为 @click</strong></li><li><strong>v-bind 绑定属性，比如 v-bind:href=”url”，可简写为 : href</strong></li><li><strong>v-for 循环列表</strong></li><li><strong>v-if 根据表达式seen的真假来插入/删除对应标签，比如 v-if=”seen”</strong></li><li><strong>v-else 必须跟在v-if后</strong></li><li><strong>v-show 根据表达式的真假值来切换元素的display CSS属性</strong></li><li><strong>v-model 表单元素的数据双向绑定</strong></li><li><strong>v-text 定义元素文本，比如 v-text=”message”</strong></li><li><strong>v-html 更新元素的innerHTML</strong></li><li><strong>v-once 只渲染元素和组件一次</strong></li></ul><p><strong>用过哪些基于Vue****的组件库？</strong></p><p><strong>Element-ui桌面端 mint-ui 移动端<br><a href="https://blog.csdn.net/time_____/article/details/109178004">自己总结的</a></strong></p><p><strong>Vue生命周期钩子有哪些，作用是什么</strong></p><p><strong>Vue实例从创建到销毁的过程，就是生命周期<br>Vue的生命周期包括：开始创建、初始化数据、编译模板、挂载Dom、渲染→更新→渲染、卸载等一系列过程。<br>在Vue的整个生命周期中，提供了一系列的事件，可以注册JS方法，达到控制整个过程的目的，在这些JS方法中的this直接指向的是vue的实例。 在Vue的整个生命周期中，实例可以调用一些生命周期钩子，这提供了执行自定义逻辑的机会。</strong></p><p><strong>Vue提供的生命周期钩子如下：</strong></p><ul><li><strong>beforeCreate 在实例初始化之后，数据观测(data observer，开始监控Data对象数据变化)和初始化事件(init event，Vue内部初始化事件)之前被调用。</strong></li><li><strong>created 在实例已经创建完成之后被调用。实例已完成以下的配置：数据观测(data observer)，属性和方法的运算，event事件回调。挂载阶段尚未开始，$el 属性不可见。</strong></li><li><strong>beforeMount 在挂载开始之前被调用。相关的render函数首次被调用。实例已完成以下的配置：编译模板，把data里面的数据和模板生成html。注意此时还没有挂载html到页面上。</strong></li><li><strong>mounted 在el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用。实例已完成以下的配置：用上面编译好的html内容替换el属性指向的DOM对象。此时模板中的html渲染到了html页面中，此时一般可以做一些Ajax操作。注意mounted只会执行一次。</strong></li><li><strong>beforeUpdate 在数据更新之前调用，发生在虚拟DOM重新渲染和打补丁之前。可以在该钩子中进一步地更改状态，不会触发附加的重渲染过程。</strong></li><li><strong>updated 在由于数据更改导致的虚拟DOM重新渲染和打补丁之后调用。调用时，组件DOM已经更新，所以可以执行依赖于DOM的操作。然而在大多数情况下，应该避免在此期间更改状态，因为这可能会导致更新无限循环。该钩子在服务器端渲染期间不被调用。</strong></li><li><strong>beforeDestroy 在实例销毁之前调用。实例仍然完全可用。</strong></li><li><strong>destroyed 在实例销毁之后调用。调用后，所有的事件监听器会被移除，所有的子实例也会被销毁。该钩子在服务器端渲染期间不被调用。</strong></li></ul><p><strong><a href="https://blog.csdn.net/time_____/article/details/85227914">自己的总结</a></strong></p><p><strong>v-if和v-show区别</strong></p><ul><li><strong>相同点：v-if 和 v-show 动态控制dom元素显示隐藏。</strong></li><li><strong>不同点：v-if显示隐藏是将dom元素整个添加或删除，（例如：<div v-if=""></div>，v-if 当值为 true时，显示div ，当值为false时，改元素消失，代码也会消失，相当于将代码删除了，当在为true时，页面会重新渲染div）；而v-show显示隐藏只是将css属性设为display: block 或none。dom元素还在。</strong></li><li><strong>编译过程：v-if切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件；v-show只是简单的基于css切换。</strong></li><li><strong>编译条件：v-if是惰性的，如果初始条件为假，则什么也不做；只有在条件第一次变为真时才开始局部编译（编译被缓存？编译被缓存后，然后再切换的时候进行局部卸载);v-show是在任何条件下（首次条件是否为真）都被编译，然后被缓存，而且DOM元素保留。</strong></li><li><strong>性能消耗：一般的，v-if有更高的切换消耗，而v-show有更多的初始化渲染消耗。</strong></li><li><strong>使用场景：如果需要频繁的切换而对安全性无要求，使用v-show。如果在运行时，条件不可能改变，则使用v-if较好。</strong></li></ul><p><strong>watch和****computed区别</strong></p><p><strong>应用方面，watch比较适合对状态的监控，比如监控页面一个变量的值改变，需要进行什么操作。而computed适合简单计算并返回结果，结果随着内部变量改变而改变。<br>调用方面，watch适合比较耗时的操作，比如网络异步请求，一个变量改变触发网络请求。watch可以看做一个onchange事件，computed可以看做几个变量的组合体。</strong></p><p><strong>Vuex用过哪些方法，你如何在项目中使用它</strong></p><p><strong>Store 表示对Vuex对象的全局引用。组件通过Store来访问Vuex对象中的State<br>State Vuex对象的状态，即其所拥有的数据<br>Getter 相当于Store的计算属性。因为就像计算属性一样，Getter 的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算。下面会说到具体的使用场景 Mutation 定义了对State中数据的修改操作。组件使用State中的数据的时候并不能直接对数据进行修改操作，需要调用Mutation定义的操作来实现对数据的修改。这也是Vuex定义中所说的用相应的规则来让数据发生变化的具体实现 Action Mutation中定义的操作只能执行同步操作，Vuex中的异步操作在Action中进行，Action最终通过调用Mutation的操作来更新数据</strong></p><p><strong>在vuex中用过dispatch()，commit()，mapstate，mapgetters，mapmutation，mapaction。</strong></p><p><strong>在项目中的使用：<br>首先通过npm install vuex –save 安装vuex<br>在项目的源代码文件夹下（如src文件夹）新建一个store文件夹(叫别的名字也行)<br>store文件夹下新建一个store.js文件，用来存放Vuex实例。可以把store注入到在vue实例中，那么所有的组件都可以通过this.$store.state去调用。</strong></p><p><strong>流程：vue Components使用dispatch()方法触发action里面的函数，通过在Action里面写公共的异步调用获取数据，供公共的组件渲染。Action使用commit()方法触发mutations里面的函数，Mutations去修改state，state重新render vue Components。</strong></p><p><strong>vuex的使用便于大型项目管理，Store包含多个Module，Module包含State、Mutation和Action。</strong></p><p><strong>mutation和action写在methods中</strong></p><p><strong>getters和state写在computed中</strong></p><p><strong>说说Vue.nextTick钩子的应用场景</strong></p><p><strong>场景一：在created()钩子函数执行的时候，DOM并未进行任何渲染，这时操作DOM时会报错，这时，在created中使用Vue.nextTick（callback）进行操作即可解决。实际上直接将操作放在mounted钩子中是不会发生这种情况的，因为mounted函数执行时代表DOM已经渲染完毕</strong></p><p><strong>场景二：当DOM渲染完成后，执行某些操作改变其结构时，需要把异步结果放在Vue.nextTick（callback）中</strong></p><p><strong>其实可以理解为，Vue的数据驱动页面更新并不是数据改变后DOM立即做出响应，Vue 在更新 DOM 时是异步执行的，通过数据更新队列，监听数据变化，从而更新视图。而Vue.nextTick（callback）就是每次DOM渲染后触发的钩子</strong></p><p><strong>Vue3.0使用Proxy代替Vue2.0中Obeject.defineProperty的原因</strong></p><p><strong>Obeject.defineProperty虽然已经能够实现双向绑定了，但是他还是有缺陷的。只能对属性进行数据劫持，所以需要深度遍历整个对象，对于数组不能监听到数据的变化，虽然Vue中确实能检测到数组数据的变化，但是其实是使用了hack的办法，并 且也是有缺陷的。</strong></p><p><strong>反观Proxy就没以上的问题，原生支持监听数组变化，并且可以直接对整个对象进行拦截，所以在Vue3.0中使用Proxy替换 Obeject.defineProperty</strong></p><p><strong>简述路由原理</strong></p><p><strong>前端路由就是监听 URL 的变化，然后匹配路由规则， 显示相应的页面，并且无须刷新。目前单页面使用的路由就只有两种实现方式<br>hash 模式和history 模式</strong></p><p><strong>像<a href="http://www.example.com/#/index%E5%B0%B1%E6%98%AF">www.example.com/#/index就是</a> Hash URL，当 ## 后面的哈希值发生变化时，不会向服务 器请求数据，可以通过 hashchange 事件来监听到 URL 的变化，从而进行跳转页面。<br>而<a href="http://www.example.com/index%E5%B0%B1%E6%98%AFHistory">www.example.com/index就是History</a> 模式，它是HTML5新推出的功能，比之HashURL更加美观。</strong></p><p><strong>谈谈Virtual Dom（虚拟DOM）的意义及原理</strong></p><p><strong>意义：直接通过JS操作DOM对象会对性能损耗很大，此时，我们可以通过JS对象模拟DOM对象，优化性能</strong></p><p><strong>原理：</strong></p><p><strong>Virtual Dom：如果需要对比两个完整的DOM多叉树，时间复杂度就是O（n^3）。React的核心就是通过diff算法调和，优化Virtual Dom，其团队优化了普通的DOM多叉树比较，将时间复杂度降低至O（n），其核心就是对比同层的节点，而不是跨层对比，Vue2.0中也引入了Virtual Dom算法，它是基于snabbdom算法修改的</strong></p><p><strong>Virtual Dom中的Diff算法过程：</strong></p><p><strong>首先从上至下，从左往右遍历对象，也就是树的深度遍历，这一步中会给每个 节点添加索引，便于最后渲染差异，****一旦节点有子元素，就去判断子元素是否有不同</strong></p><p><strong>Virtual Dom算法的实现步骤</strong></p><ul><li><strong>通过JS来模拟创建DOM对象</strong></li><li><strong>判断两个对象的差异</strong></li><li><strong><strong>渲染差异</strong></strong></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>NodeJs（前端面试题整合）</title>
    <link href="/2020/11/28/NodeJs%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89/"/>
    <url>/2020/11/28/NodeJs%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>谈谈对Node的理解</strong></p><p><strong>Node.js 在浏览器外运行V8 JavaScript引擎，单线程 非阻塞I/O 事件驱动,适应于数据高并发,适合多请求,但不适合高运算,有权限读取操作系统级别的API，****无法直接渲染静态页面，提供静态服务，没有根目录的概念，必须通过路由程序指定文件才能渲染文件，比其他服务端性能更好，速度更快，npm 仓库，常用框架：Express，koa，Socket.io，AdonisJs，NestJS</strong></p><p><strong>什么是gulp？作用？机制是什么？常用命令有哪些？</strong></p><p><strong>gulp是基于node的自动化构建工具</strong></p><p><strong>作用：</strong></p><p><strong>1 自动压缩JS文件</strong></p><p><strong>2 自动压缩CSS文件</strong></p><p><strong>3 自动合并文件</strong></p><p><strong>4 自动编译sass</strong></p><p><strong>5 自动压缩图片</strong></p><p><strong>6 自动刷新浏览器</strong></p><p><strong>机制：</strong></p><p><strong>Unix操作系统的管道（pipe）思想 前一级输出 后一级输入</strong></p><p><strong>常用命令：</strong></p><p><strong>.src 输出（Emits）符合所提供的匹配模式（glob）或者匹配模式的数组（array of globs）的文件。 将返回一个 Vinyl files 的 stream 它可以被 piped 到别的插件中。<br>.watch 监视文件，并且可以在文件发生改动时候做一些事情。它总会返回一个 EventEmitter 来发射（emit） change 事件。<br>.dest 能被 pipe 进来，并且将会写文件。并且重新输出（emits）所有数据，因此你可以将它 pipe 到多个文件夹。如果某文件夹不存在，将会自动创建它。<br>.pipe 传入方法的是一个function，这个function作用无非是接受上一个流（stream）的结果，并返回一个处理后流的结果(返回值应该是一个stream对象)。<br>.task 定义一个使用 Orchestrator 实现的任务（task）</strong></p><p><strong>如何判断当前脚本运行在浏览器还是node环境中？</strong></p><p><strong>this === window ? ‘browser’ : ‘node’，通过判断Global对象是否为window，如果不为window，当前脚本没有运行在浏览器中</strong></p><p><strong>node.js有哪些常用模块？</strong></p><p><strong>util是node 里面一个工具模块，node里面几乎所有的模块都会用到这个模块<br>功能：</strong><br><strong>1：实现继承这是主要功能</strong><br><strong>2：实现对象的完整输出</strong><br><strong>3：实现判断数据类型</strong></p><p><strong>path模块<br>功能：格式规范化路径</strong></p><p><strong>fs模块<br>功能：<br>1：操作文件<br>2：操作目录</strong></p><p><strong>http模块：用于搭建HTTP服务端和客户端</strong></p><p><strong>url模块：用户解析和处理URL字符串<br>url.parse(将url字符串解析并返回一个url的对象)<br>url.format(将url对象编程一个url字符串并返回)<br>url.resolve(将url中的参数用/进行拼接)</strong></p><p><strong>zlib模块：提供了用Gzip和Deflate/Inflate实现的压缩功能</strong></p><p><strong>socket.io: 实现客服端与服务端之间的实时通信方式</strong></p><p><strong>uglify-js: 用来压缩合并js文件</strong></p><p><strong>child_process：新建子进程。</strong></p><p><strong>querystring：解析URL中的查询字符串。</strong></p><p><strong>crypto：提供加密和解密功能。</strong></p><p><strong>Express框架的核心特性是什么</strong></p><p><strong>1.可以设置中间件来响应http请求<br>2.定义了路由表用于执行不同的HTTP请求动作<br>3.可以通过向模板传递参数来动态渲染html页面</strong></p><p><strong>对Node的思想一切皆异步的理解</strong></p><p><strong>node本身就是非阻塞I/O，与其他后端编程思想不同，虽然php, python, java中也有异步方法，但是编程人员的思想是同步的，node的思想目的是可以让开发者轻松编写高性能的web服务端，而不会通过同步思想api阻塞了服务器从而影响性能。而且node.js大部分api都是异步的，只有小量同步api，这与其他大部分语言刚好相反。</strong></p><p><strong>node如何实现异步非阻塞（I/O）</strong></p><p><strong>在node中，I/O（输入输出）是异步非堵塞的关键，I/O操作通常比较耗时但不会独占CPU，典型的I/O比如文件读写，远程数据库读写，网络请求等，如果用同步API来进行I/O操作，在返回结果之前就只能等待，此时阻塞代码会霸占cpu，导致本进程所有代码都等待，而node.js里面的I/O API都是不会霸占CPU的（原因：node中的核心库libuv会将建立的所有I/O操作内容绑定到单个线程上。只要每个事件循环在不同的线程中，就可以运行多个事件循环，libuv为Node.js提供了跨平台、线程池、事件池、异步I/O等能力），所以是非阻塞的。拿JS中的setTimeout来打比方，当用户使用setTimeout时，JS会开辟出一个异步线程池，与主线程分开执行，结果就是之前的代码继续执行，setTimeout的代码延时执行，等成功后再调用主线程的方法</strong></p><p><strong>node中的exports如何实现的，它和module.exports有什么关系</strong></p><p><strong>exports实现：exports = module.exports = {};就好像是var a = { } var b = a，看上去没有太大区别，但使用起来却又不同</strong></p><p><strong>module是一个对象，当我们在控制台输入node并执行，在node中执行module或者执行js文件打印module时会发现以下log</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Module &#123;<br>  <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;&lt;repl&gt;&#x27;</span>,<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;.&#x27;</span>,<br>  <span class="hljs-attr">exports</span>: &#123;&#125;,<br>  <span class="hljs-attr">parent</span>: <span class="hljs-literal">undefined</span>,<br>  <span class="hljs-attr">filename</span>: <span class="hljs-literal">null</span>,<br>  <span class="hljs-attr">loaded</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-attr">children</span>: [],<br>  <span class="hljs-attr">paths</span>: [<br>    ...<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>不难发现，module是Module的实例，exports是其中一个属性，也就是说当你在node中执行一个js文件或者使用require引入模块时，nodejs都会新建一个varmodule = new Module（），并执行exports = module.exports，这也就是为什么直接打印exports和exports时，控制台不会报错，如果在node中执行以下代码，就能清楚的看出这二者的引用关系了</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">module</span>.exports) <span class="hljs-comment">// &#123;&#125;</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">exports</span>) <span class="hljs-comment">// &#123;&#125;</span><br><span class="hljs-built_in">module</span>.exports.name = <span class="hljs-string">&#x27;张三&#x27;</span><br><span class="hljs-built_in">exports</span>.age = <span class="hljs-number">22</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">module</span>.exports) <span class="hljs-comment">// &#123; name: &#x27;张三&#x27;, age: 22 &#125;</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">exports</span>) <span class="hljs-comment">// &#123; name: &#x27;张三&#x27;, age: 22 &#125;</span><br></code></pre></td></tr></table></figure><p><strong>谈谈Node.js加载模块机制</strong></p><p><strong>node.js中模块有两种类型：核心模块和文件模块</strong></p><p><strong>核心模块直接使用名称获取，文件模块只能按照路径加载（可以省略默认的.js拓展名，不是js文件的话需要显示声明书写）</strong></p><p><strong>模块加载规则：</strong></p><ul><li><strong>核心模块优先级最高，直接使用名字加载，在有命名冲突的时候首先加载核心模块</strong></li><li><strong>可通过绝对路径和相对路径查找</strong></li><li><strong>查找node_modules目录，我们知道在调用 npm install <name> 命令的时候会在当前目录下创建node_module目录(如果不存在) 安装模块，当 require 遇到一个既不是核心模块,又不是以路径形式表示的模块名称时,会试图 在当前目录下的 node_modules 目录中来查找是不是有这样一个模块。如果没有找到,则会 在当前目录的上一层中的 node_modules 目录中继续查找,反复执行这一过程,直到遇到根 目录为止</strong></li></ul><p><strong>对Node的优点和缺点提出了自己的看法</strong></p><p><strong>优点：因为Node是基于事件驱动和无阻塞的，所以非常适合处理并发请求， 因此构建在Node上的代理服务器相比其他技术实现（如Ruby）的服务器表现要好得多。 此外，与Node代理服务器交互的客户端代码是由javascript语言编写的， 因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。</strong></p><p><strong>缺点：Node是一个相对新的开源项目，所以不太稳定，它总是一直在变， 而且缺少足够多的第三方库支持（第三方库现在已经很丰富了，所以这个缺点可以说不存在了）。看起来，就像是Ruby/Rails当年的样子。</strong></p><p><strong>Node.js的适用场景</strong></p><ul><li><strong>实时应用：如在线聊天，实时通知推送等等（如socket.io）</strong></li><li><strong>分布式应用：通过高效的并行I/O使用已有的数据</strong></li><li><strong>工具类应用：海量的工具，小到前端压缩部署（如grunt），大到桌面图形界面应用程序</strong></li><li><strong>游戏类应用：游戏领域对实时和并发有很高的要求（如网易的pomelo框架）</strong></li><li><strong>利用稳定接口提升Web渲染能力</strong></li><li><strong>前后端编程语言环境统一：前端开发人员可以非常快速地切入到服务器端的开发（如著名的纯Javascript全栈式MEAN架构）</strong></li></ul><p><strong>原生Node如何解决跨域</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><br>http.createServer(<span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br> res.setHeader(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>);<br> res.setHeader(<span class="hljs-string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="hljs-string">&quot;X-Requested-With&quot;</span>);<br> res.setHeader(<span class="hljs-string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="hljs-string">&quot;PUT,POST,GET,DELETE,OPTIONS&quot;</span>);<br>&#125;).listen(<span class="hljs-number">8080</span>);<br></code></pre></td></tr></table></figure><p><strong>反向代理是什么，如何实现</strong></p><p><strong>反向代理是指代理服务器来接受客户端的网络访问连接请求，然后服务器将请求有策略的转发给网络中实际工作的业务服务器，并将从业务服务器处理的结果，返回给网络上发起连接请求的客户端</strong></p><p><strong>实现过程（这里的目标服务器是用getman产生的假数据）：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html">前端部分：<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        $.post(<span class="hljs-string">&#x27;http://127.0.0.1:1024&#x27;</span>, &#123;<span class="hljs-comment">// 访问代理服务端，获取目标服务器的数据</span></span><br><span class="javascript">            <span class="hljs-attr">token</span>: <span class="hljs-string">&#x27;1234&#x27;</span></span><br><span class="javascript">        &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">JSON</span>.parse(res))</span><br><span class="javascript">        &#125;)</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//服务端</span><br><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-keyword">const</span> https = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;https&#x27;</span>)<br><span class="hljs-keyword">const</span> reqOption = &#123; <span class="hljs-comment">// getman产生的虚拟数据的请求地址</span><br>    <span class="hljs-attr">protocol</span>: <span class="hljs-string">&#x27;https:&#x27;</span>,<br>    <span class="hljs-attr">host</span>: <span class="hljs-string">&#x27;getman.cn&#x27;</span>,<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/mock/shopList&#x27;</span>,<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>    <span class="hljs-attr">headers</span>: &#123;<br>        <span class="hljs-string">&quot;content-type&quot;</span>: <span class="hljs-string">&quot;application/json&quot;</span>,<br>    &#125;<br>&#125;<br><span class="hljs-keyword">let</span> server = http.createServer(<span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 写请求头，解决跨域</span><br>    res.setHeader(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="hljs-string">&#x27;http://127.0.0.1:5500&#x27;</span>); <span class="hljs-comment">// 若允许所有域名和ip，则设置成*</span><br>    res.setHeader(<span class="hljs-string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="hljs-string">&quot;X-Requested-With&quot;</span>);<br>    res.setHeader(<span class="hljs-string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="hljs-string">&quot;PUT,POST,GET,DELETE,OPTIONS&quot;</span>);<br>    <span class="hljs-keyword">let</span> _data = <span class="hljs-string">&#x27;&#x27;</span><br>    req.on(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> _data += data)<br>    req.on(<span class="hljs-string">&#x27;end&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>        proxyApi(_data).then(<span class="hljs-function">(<span class="hljs-params">_res</span>) =&gt;</span> &#123; <span class="hljs-comment">// 服务端收到前端请求后，请求目标服务器，将结果返回至前端</span><br>            res.write(_res)<br>            res.end()<br>        &#125;)<br>    &#125;)<br>&#125;)<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">proxyApi</span>(<span class="hljs-params">_data</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> req = https.request(reqOption, <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">let</span> data = <span class="hljs-string">&#x27;&#x27;</span>;<br>            res.on(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">chunk</span>) =&gt;</span> &#123;<br>                data += chunk;<br>            &#125;);<br>            res.on(<span class="hljs-string">&#x27;end&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>                resolve(data)<br>            &#125;);<br>        &#125;)<br>        req.write(_data)<br>        req.end();<br>    &#125;)<br>&#125;<br>server.listen(<span class="hljs-number">1024</span>, <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;1024服务开启，开始侦听&quot;</span>));<br></code></pre></td></tr></table></figure><p><strong>Node事件循环的流程是什么，在事件循环中，如何判断是否有事件需要处理呢</strong></p><p><strong>事件循环的流程：在进程启动时，node会生成一个循环（类似于while（true）），每执行一次循环被称为一次Tick，每次的循环体Tick的过程会对事件进行判断，若发现存在事件，则执行相关操作，并进入下一个Tick，如果不再有事件，则退出进程</strong></p><p><strong>判断Tick是否有事件：node中的Tick通过观察者判断是否有需要处理的事件，主要来源于网络请求的网络I/O观察者，和文件操作的文件I/O观察者，事件循环从观察者中取出事件并处理</strong></p><p><strong>webSocket相对http的优势</strong></p><ul><li><strong>客户端与服务器只需要一个TCP连接，比http长轮询使用更少的连接</strong></li><li><strong>webSocket服务端可以推送数据到客户端</strong></li><li><strong>更轻量的协议头，减少数据传输量</strong></li></ul><p><strong>简述明文、密文、密码、密钥、对称加密、非对称加密、摘要、数字签名、数字证书的概念</strong></p><ul><li><strong>明文（plaintext）是加密之前的原始数据</strong></li><li><strong>密文是通过密码（cipher）运算后得到的结果成为密文（ciphertext）</strong></li><li><strong>密码学中的密码（cipher）和我们日常生活中所说的密码不太一样，计算机术语 ‘ 密码 cipher ‘ 是一种用于加密或者解密的算法，而我们日常所使用的 密码 (password)是一种口令，它是用于认证用途的一组文本字符串，这里我们要讨论的是前者：cipher。</strong></li><li><strong>密钥(key)是一种参数，它是在明文转换为密文或将密文转换为明文的算法中输入的参数。密钥分为对称密钥与非对称密钥，分别应用在对称加密和非对称加密上。</strong></li><li><strong>对称密钥（Symmetric-key algorithm）又叫做私钥加密，即信息的发送方和接收方使用同一个密钥去加密和解密数据。对称加密的特点是算法公开、加密和解密速度快，适合于对大数据量进行加密，常见的对称加密算法有DES、3DES、TDEA、Blowfish、RC5和IDEA。</strong></li><li><strong>非对称密钥（public-key cryptography）也叫做公钥加密。非对称加密与对称加密相比，其安全性更好。对称加密的通信双方使用相同的密钥，如果一方的密钥遭泄露，那么整个通信就会被破解。而非对称加密使用一对密钥，即公钥和私钥，且二者成对出现。私钥被自己保存，不能对外泄露。公钥指的是公共的密钥，任何人都可以获得该密钥。用公钥或私钥中的任何一个进行加密，用另一个进行解密。</strong></li><li><strong>摘要算法又称哈希/散列算法。它通过一个函数，把任意长度的数据转换为一个长度固定的数据串（通常用16进制的字符串表示）。算法不可逆。</strong></li><li><strong>数据在浏览器和服务器之间传输时，有可能在传输过程中被冒充的盗贼把内容替换了，那么如何保证数据是真实服务器发送的而不被调包呢，同时如何保证传输的数据没有被人篡改呢，要解决这两个问题就必须用到数字签名，数字签名就如同日常生活的中的签名一样，一旦在合同书上落下了你的大名，从法律意义上就确定是你本人签的字儿，这是任何人都没法仿造的，因为这是你专有的手迹，任何人是造不出来的。那么在计算机中的数字签名怎么回事呢？数字签名就是用于验证传输的内容是不是真实服务器发送的数据，发送的数据有没有被篡改过，它就干这两件事，是非对称加密的一种应用场景。不过他是反过来用私钥来加密，通过与之配对的公钥来解密。</strong></li><li><strong>数字证书是指在互联网通讯中标志通讯各方身份信息的一个数字认证，人们可以在网上用它来识别对方的身份。因此数字证书又称为数字标识。数字证书对网络用户在计算机网络交流中的信息和数据等以加密或解密的形式保证了信息和数据的完整性和安全性。</strong></li></ul><p><strong>什么是中间件，好处是什么</strong></p><p><strong>中间件是一类连接软件组件和应用的计算机软件，它包括一组服务。以便于运行在一台或多台机器上的多个软件通过网络进行交互。使用node作为中间件更好提升了性能。</strong></p><p><strong>好处：</strong></p><ul><li><strong>代理，处理前端产生的访问接口跨域，通过node反向代理，访问目标服务器</strong></li><li><strong>缓存，用户触发数据更新时，使用node作为暂时缓存，节省后端资源</strong></li><li><strong>限流，针对接口和路由做出响应路由</strong></li><li><strong>监控，高并发请求特点</strong></li><li><strong>鉴权，对页面路由权限做出判断</strong></li><li><strong>渲染，使用node对前端页面进行预渲染</strong></li><li><strong>等等…</strong></li></ul><p><strong>node中的Connect模块是什么，Koa与Express的中间件有什么区别</strong></p><p><strong>Connect是一个node中间件（middleware）框架，每个中间件在http处理过程中通过改写request或（和）response的数据、状态，实现了特定的功能</strong></p><p><strong>Koa与Express中间件的****区别：</strong></p><p><strong>Express主要基于Connect中间件框架，中间件一个接一个的顺序执行，通常会将 response 响应写在最后一个中间件中</strong></p><p><strong>而koa主要基于co中间件框架，它的中间件是通过<code>async await</code>实现的，中间件执行顺序是“洋葱圈”模型。执行效果类似于Promise.all</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ES6+（前端面试题整合）</title>
    <link href="/2020/11/23/ES6+%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89/"/>
    <url>/2020/11/23/ES6+%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>谈一谈let与var和const的区别</strong></p><p><strong>let为ES6新添加申明变量的命令，它类似于var，但是有以下不同：</strong></p><ul><li><strong>let命令不存在变量提升，如果在let前使用，会导致报错</strong></li><li><strong>let暂时性死区的本质，其实还是块级作用域必须“先声明后使用”的性质，let 暂时性死区的原因：var 会变量提升，let 不会。</strong></li><li><strong>let，const和class声明的全局变量不是全局对象的属性</strong></li><li><strong>const可以在多个模块间共享</strong></li><li><strong>const声明的变量与let声明的变量类似，它们的不同之处在于，const声明的变量只可以在声明时赋值，不可随意修改，否则会导致SyntaxError（语法错误）</strong></li><li><strong>const只是保证变量名指向的地址不变，并不保证该地址的数据不变</strong></li></ul><p><strong>说说箭头函数的特点</strong></p><ul><li><strong>箭头函数不属于普通的 function，所以没有独立的上下文。</strong></li><li><strong>箭头函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象。</strong></li><li><strong>由于箭头函数没有自己的this，函数对象中的call、apply、bind三个方法，无法”覆盖”箭头函数中的this值。</strong></li><li><strong>箭头函数没有原本(传统)的函数有的隐藏arguments对象。</strong></li><li><strong>箭头函数不能当作generators使用，使用yield会产生错误。</strong></li></ul><p><strong>在以下场景中不要使用箭头函数去定义：</strong></p><p><strong>1. 定义对象方法、定义原型方法、定义构造函数、定义事件回调函数。</strong></p><p><strong>2. 箭头函数里不但没有 this，也没有 arguments, super</strong></p><p><strong>对Symbol，Map和Set的理解</strong></p><p><strong>Symbol 是一种特殊的、不可变的数据类型，可以作为对象属性的标识符使用，即使使用同样的参数实例化symbol，得到的symbol实例也不会相等</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> _symbol1 = <span class="hljs-built_in">Symbol</span>(<span class="hljs-string">&#x27;test&#x27;</span>);<br><span class="hljs-keyword">let</span> _symbol2 = <span class="hljs-built_in">Symbol</span>(<span class="hljs-string">&#x27;test&#x27;</span>);<br><span class="hljs-built_in">console</span>.log(_symbol1 == _symbol2);<span class="hljs-comment">//false</span><br></code></pre></td></tr></table></figure><p><strong>Map对象保存键值对，有点类似于Object，但是Object的键只能是字符串或者Symbols，而Map可以是任何值</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> myMap = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()<br><span class="hljs-keyword">let</span> str1 = <span class="hljs-string">&#x27;dog&#x27;</span><br><span class="hljs-keyword">let</span> str2 = <span class="hljs-string">&#x27;cat&#x27;</span><br>myMap.set(str1, <span class="hljs-string">&#x27;汪&#x27;</span>)<br>myMap.set(str2, <span class="hljs-string">&#x27;喵&#x27;</span>)<br><span class="hljs-built_in">console</span>.log(myMap) <span class="hljs-comment">// &#123;0: &#123;&quot;dog&quot; =&gt; &quot;汪&quot;&#125;1: &#123;&quot;cat&quot; =&gt; &quot;喵&quot;&#125;&#125;</span><br><span class="hljs-built_in">console</span>.log(myMap.get(str1)) <span class="hljs-comment">// 汪</span><br></code></pre></td></tr></table></figure><p><strong>Set 对象允许你存储任何类型的唯一值（数组去重），有点类似于Array，Set中的元素只会出现一次</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> mySet = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()<br>mySet.add(<span class="hljs-string">&#x27;hello&#x27;</span>)<br>mySet.add(<span class="hljs-string">&#x27;1&#x27;</span>)<br>mySet.add(<span class="hljs-string">&#x27;2&#x27;</span>)<br>mySet.add(<span class="hljs-string">&#x27;2&#x27;</span>)<br><span class="hljs-built_in">console</span>.log(mySet) <span class="hljs-comment">// &#123;0: &quot;hello&quot;,1: &quot;1&quot;,2: &quot;2&quot;&#125;</span><br></code></pre></td></tr></table></figure><p><strong>使用ES6如何监测数组变化（proxy监测读写）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br><span class="hljs-comment">// 代理</span><br><span class="hljs-keyword">let</span> _proxy = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Proxy</span>(list, &#123;<br>    <span class="hljs-attr">set</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">target, prop, val, rec</span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;写入&#x27;</span>)<br>        target[prop] = val<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">get</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">target, prop</span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;读取&#x27;</span>)<br>        <span class="hljs-keyword">return</span> target[prop]<br>    &#125;<br>&#125;)<br>_proxy[<span class="hljs-number">0</span>] = <span class="hljs-number">4</span> <span class="hljs-comment">// 写入</span><br><span class="hljs-built_in">console</span>.log(_proxy[<span class="hljs-number">1</span>]) <span class="hljs-comment">// 读取</span><br></code></pre></td></tr></table></figure><p><strong>JS有哪些处理异步的方法</strong></p><p><strong>回调函数：回调是一个函数被作为一个参数传递到另一个函数里，在那个函数执行完后再执行</strong></p><p><strong>优点：简单，方便，实用，易懂<br>缺点：当逻辑复杂时，会产生回调函数地狱，耦合度高，流程会很混乱</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 回调</span><br><span class="hljs-keyword">let</span> cb = <span class="hljs-function">(<span class="hljs-params">props</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(props) <span class="hljs-comment">// 2</span><br>&#125;<br><span class="hljs-keyword">let</span> init = <span class="hljs-function">(<span class="hljs-params">props</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 异步操作</span><br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        cb(props) <span class="hljs-comment">// 异步传参</span><br>    &#125;, <span class="hljs-number">1000</span>)<br>&#125;<br>init(<span class="hljs-number">2</span>)<br><span class="hljs-built_in">console</span>.log(<span class="hljs-number">1</span>) <span class="hljs-comment">// 1</span><br></code></pre></td></tr></table></figure><p><strong>事件发布/订阅：采用事件驱动模式，任务的执行取决于某一个事件是否发生</strong></p><p><strong>优点：事件监听方式相对回调实现了代码的解耦，对模块化开发很友好<br>缺点：每次执行任务都需要发布/订阅事件</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 事件发布/订阅</span><br><span class="hljs-keyword">let</span> cb = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(event.props) <span class="hljs-comment">// 2</span><br>&#125;<br><span class="hljs-keyword">let</span> init = <span class="hljs-function">(<span class="hljs-params">props</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 异步操作</span><br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> event = <span class="hljs-keyword">new</span> Event(<span class="hljs-string">&#x27;myEvent&#x27;</span>)<br>        event.props = props <span class="hljs-comment">// 异步传参</span><br>        <span class="hljs-built_in">document</span>.dispatchEvent(event)<br>    &#125;, <span class="hljs-number">1000</span>)<br>&#125;<br>init(<span class="hljs-number">2</span>)<br><span class="hljs-built_in">console</span>.log(<span class="hljs-number">1</span>) <span class="hljs-comment">// 1</span><br><span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">&#x27;myEvent&#x27;</span>, cb)<br></code></pre></td></tr></table></figure><p><strong>Promise：Promise是异步编程，它将异步操作以同步的方式表现出来，避免回调地狱的产生</strong></p><p><strong>优点：避免回调地狱，链式调用，函数思路清晰，逻辑相对前两者更强<br>缺点：理解性差，异步操作在promise构造函数内部</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// ES6  Promise</span><br><span class="hljs-keyword">let</span> init = <span class="hljs-function">(<span class="hljs-params">props</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// 异步操作</span><br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            resolve(props)<br>        &#125;, <span class="hljs-number">1000</span>)<br>    &#125;)<br>&#125;<br>init(<span class="hljs-number">2</span>).then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(res) <span class="hljs-comment">// 2</span><br>&#125;)<br><span class="hljs-built_in">console</span>.log(<span class="hljs-number">1</span>) <span class="hljs-comment">// 1</span><br></code></pre></td></tr></table></figure><p><strong>Generator：generator（生成器）是ES6标准引入Python的新的数据类型</strong></p><p><strong>优点：取消链式调用的then，和发布/订阅模式非常相似，对于理解同步操作很直观<br>缺点：多个异步函数时不够直观，原函数需要通过next去维护外部函数的yield</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// ES6  Generator</span><br><span class="hljs-keyword">const</span> fn = init(<span class="hljs-number">2</span>)<br><span class="hljs-keyword">let</span> cb = <span class="hljs-function">(<span class="hljs-params">props</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(props) <span class="hljs-comment">// 2</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">init</span>(<span class="hljs-params">props</span>) </span>&#123;<br>    <span class="hljs-comment">// 异步操作</span><br>    <span class="hljs-keyword">yield</span> <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        fn.next()<br>    &#125;, <span class="hljs-number">500</span>)<br>    <span class="hljs-keyword">yield</span> <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        fn.next()<br>    &#125;, <span class="hljs-number">500</span>)<br>    cb(props)<br>&#125;<br>fn.next()<br><span class="hljs-built_in">console</span>.log(<span class="hljs-number">1</span>) <span class="hljs-comment">// 1</span><br></code></pre></td></tr></table></figure><p><strong>async/await：<code>async函数是generator函数的语法糖，函数（function关键字）前添加async关键字，函数中通过await等待异步执行</code></strong></p><p><strong>优点：同步流程清晰，简洁，异步操作可以返回promise对象，后续操作更方便<br>缺点：JS的执行器功能较其他co模块较弱</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// ES6+  async/await</span><br><span class="hljs-keyword">let</span> cb = <span class="hljs-function">(<span class="hljs-params">props</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(props) <span class="hljs-comment">// 2</span><br>&#125;<br><span class="hljs-keyword">let</span> cb2 = <span class="hljs-function">(<span class="hljs-params">props</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            resolve(props)<br>        &#125;, <span class="hljs-number">1000</span>)<br>    &#125;)<br>&#125;<br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">init</span>(<span class="hljs-params">props</span>) </span>&#123;<br>    <span class="hljs-comment">// 异步操作</span><br>    <span class="hljs-keyword">let</span> num2 = <span class="hljs-keyword">await</span> cb2(props)<br>    cb(num2)<br>&#125;<br>init(<span class="hljs-number">2</span>)<br><span class="hljs-built_in">console</span>.log(<span class="hljs-number">1</span>) <span class="hljs-comment">// 1</span><br></code></pre></td></tr></table></figure><p><strong>ES6中的class关键字跟function什么区别</strong></p><ul><li><strong>在function定义的构造函数中，其prototype.constructor属性指向构造器自身，在class定义的类中，constructor其实也相当于定义在prototype属性上</strong></li><li><strong>function如果重复定义，会覆盖之前定义的方法，而class重复定义则会报错</strong></li><li><strong>class中定义的方法不可用Object.keys(Point.prototype)枚举到，function构造器原型方法可被Object.keys(Point.prototype)枚举到</strong></li><li><strong>class没有变量提升，也就是说，必须先定义class，再使用，而function定义后，会被提升至当前作用域顶端</strong></li><li><strong>class定义的类没有私有方法和私有属性，function可以通过闭包实现私有方法和属性</strong></li></ul><p><strong>ES6新增哪些数组方法</strong></p><p><strong>find()：返回数组中第一个满足条件的元素（如果有的话）， 如果没有，则返回 undefined<br>findIndex()：返回数组中第一个满足条件的元素的索引（如果有的话）， 如果没有，则返回 -1<br>keys()：返回一个数组索引的迭代器<br>values()：返回一个数组迭代器对象，该对象包含数组中每个索引的值<br>entries()：返回一个数组迭代器对象，该对象包含数组中每个索引的键值对</strong></p><p><strong>for in<strong><strong>和 for of 的</strong></strong>区别</strong></p><p><strong>for in适合用于遍历对象，for of可以用来遍历数组，类数组对象，argument，字符串，Map和Set</strong></p><p><strong>for in 遍历数组时会有以下问题：</strong></p><ul><li><strong>index索引为字符串型数字，不能直接进行几何运算</strong></li><li><strong>遍历顺序有可能不是按照实际数组的内部顺序</strong></li><li><strong>使用for in会遍历数组所有的可枚举属性，包括原型，原型上的方法和属性</strong></li></ul><p><strong>所以for in 不适合遍历数组，而适合用于遍历对象</strong></p><p><strong>而for of<strong><strong>遍历数组时</strong></strong>：</strong></p><p><strong>只会遍历数组内的元素，而不包括数组的原型属性method和索引name</strong></p><p><strong>CommonJS 中的 require/exports 和 ES6 中的 import/export 区别</strong></p><ul><li><strong>CommonJS模块输出的是一个值的拷贝，ES6模块输出的是值的引用</strong></li><li><strong>CommonJS模块是运行时加载，ES6模块是编译时输出接口，ES6可以在编译时就完成模块加载，效率要比CommonJS模块的加载方式高</strong></li><li><strong>CommonJS模块输出的是值的拷贝，也就是说，一旦输出一个值，模块内部的变化就影响不到这个值。而Es6模块的运行机制与CommonJS不一样。JS引擎对脚本静态分析的时候，遇到模块加载命令import，就会生成一个只读引用。等到脚本真正执行时，在根据引用到被加载的那个模块里面去取值。ES6模块是动态引用，并且不会缓存值，模块里面的变量绑定其所在的模块。</strong></li><li><strong>require/exports是CommonJS在Node中实现的，import/export是ES6的模块</strong></li><li><strong>require/exports是同步导入，因为用于服务端，文件都在本地，同步导入即使卡住主线程影响也不大。而ES6模块是异步导入，因为用于浏览器，需要下载文件，如果也采用导入会对渲染有很大影响</strong></li><li><strong>ES6模块的设计思想，是尽量静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量，ES6模块会编译成 require/exports 来执行的</strong></li><li><strong>export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能</strong></li></ul><p><strong>尝试实现Promise</strong></p><p><strong><a href="https://blog.csdn.net/time_____/article/details/109721703">https://blog.csdn.net/time_____/article/details/109721703</a></strong></p><p><strong>Object.is()与“==”，“===”的区别</strong></p><p><strong>“==”会在比较时进行类型转换</strong></p><p><strong>“===”比较时不进行隐式类型转换</strong></p><p><strong>Object.is()在三等号判等的基础上特别处理了NaN、-0和+0，保证-0和+0不再相同，但Object.is(NaN,NaN)会返回true</strong></p><p><strong>ES6中为何出现Class</strong></p><p><strong>Class的功能实际上在ES5都能实现，可以算是ES6的语法糖，其作用是使JS语法清晰，更像面向对象语法</strong></p><p><strong>基础写法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyEvent</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">EventTarget</span> </span>&#123; <span class="hljs-comment">// 继承EventTarget</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">e</span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>(e) <span class="hljs-comment">// 父类的构造函数</span><br>        <span class="hljs-built_in">this</span>.consoleThis() <span class="hljs-comment">// 执行函数</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">consoleThis</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">let</span> myEvent = <span class="hljs-keyword">new</span> MyEvent(<span class="hljs-built_in">document</span>) <span class="hljs-comment">// EventTarget</span><br></code></pre></td></tr></table></figure><p><strong>ES6语法糖的对象的属性简写和属性名表达式是什么</strong></p><p><strong>属性简写：对象的字面量可以直接写入与之名称相同的变量和函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> name = <span class="hljs-string">&#x27;小明&#x27;</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">showName</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.name)<br>&#125;<br><span class="hljs-keyword">let</span> person = &#123;<br>    name,<br>    showName<br>&#125;<br><span class="hljs-built_in">console</span>.log(person.name)<span class="hljs-comment">// 小明</span><br>person.showName()<span class="hljs-comment">// 小明</span><br></code></pre></td></tr></table></figure><p><strong>属性名表达式简写：ES6允许把表达式放在方括号内，作为对象的属性名</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> num = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> obj = &#123;<br>    <span class="hljs-string">&quot;1&quot;</span>: <span class="hljs-string">&#x27;a&#x27;</span>,<br>    <span class="hljs-string">&quot;2&quot;</span>: <span class="hljs-string">&#x27;b&#x27;</span>,<br>    <span class="hljs-string">&quot;3&quot;</span>: <span class="hljs-string">&#x27;c&#x27;</span><br>&#125;<br><span class="hljs-built_in">console</span>.log(obj[++num]) <span class="hljs-comment">// a</span><br><span class="hljs-built_in">console</span>.log(obj[++num]) <span class="hljs-comment">// b</span><br><span class="hljs-built_in">console</span>.log(obj[++num]) <span class="hljs-comment">// c</span><br></code></pre></td></tr></table></figure><p><strong>谈谈解构赋值的理解</strong></p><p><strong>解构赋值是对赋值运算符的扩展，是一种针对数组或者对象进行模式匹配，然后对其中的变量进行赋值</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 数组</span><br><span class="hljs-keyword">let</span> [a, b, c] = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<br><span class="hljs-built_in">console</span>.log(a, b, c) <span class="hljs-comment">// 1,2,3</span><br><span class="hljs-comment">// 对象</span><br><span class="hljs-keyword">let</span> &#123;<br>    d,<br>    e,<br>    f<br>&#125; = &#123;<br>    <span class="hljs-attr">d</span>: <span class="hljs-number">4</span>,<br>    <span class="hljs-attr">e</span>: <span class="hljs-number">5</span><br>&#125;;<br><span class="hljs-built_in">console</span>.log(d, e, f) <span class="hljs-comment">// 4,5,undefined</span><br></code></pre></td></tr></table></figure><p><strong>使用ES6如何合并多个对象，复制对象</strong></p><p><strong>ES6中的对象新增（…）拓展运算符，用于取出参数对象所有可遍历属性然后拷贝到当前对象</strong></p><p><strong>ES6新增对象拷贝方法：Object.assign(target, source1，source2，source3， ···)，将源对象的所有可枚举属性复制到目标对象中，即，将source1，source2，source3……复制到target中</strong></p><p><strong>合并：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> name = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;小明&#x27;</span><br>&#125;<br><span class="hljs-keyword">let</span> age = &#123;<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">20</span><br>&#125;<br><span class="hljs-keyword">let</span> hobby = &#123;<br>    <span class="hljs-attr">hobby</span>: <span class="hljs-string">&#x27;music&#x27;</span><br>&#125;<br><span class="hljs-keyword">let</span> person = &#123;<span class="hljs-comment">// 拓展运算符</span><br>    ...name,<br>    ...age,<br>    ...hobby<br>&#125;<br><span class="hljs-built_in">console</span>.log(person)<span class="hljs-comment">// age: 20,hobby: &quot;music&quot;,name: &quot;小明&quot;</span><br><br><span class="hljs-built_in">Object</span>.assign(person, name, age, hobby)<span class="hljs-comment">// 对象拷贝</span><br><span class="hljs-built_in">console</span>.log(person) <span class="hljs-comment">// age: 20,hobby: &quot;music&quot;,name: &quot;小明&quot;</span><br></code></pre></td></tr></table></figure><p><strong>复制：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br><span class="hljs-keyword">let</span> list2 = [...list]<span class="hljs-comment">// 拓展运算符</span><br><span class="hljs-built_in">Object</span>.assign(list2, list)<span class="hljs-comment">// 对象拷贝</span><br><span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br><span class="hljs-keyword">do</span> &#123;<br>    list[index] += <span class="hljs-number">10</span><br>&#125; <span class="hljs-keyword">while</span> (index++ &lt; list.length - <span class="hljs-number">1</span>)<br><span class="hljs-built_in">console</span>.log(list, list2) <span class="hljs-comment">// [11, 12, 13, 14, 15]  [1, 2, 3, 4, 5]</span><br></code></pre></td></tr></table></figure><p><strong>如何控制类中属性的读写性</strong></p><p><strong>setter…getter…</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._dog = <span class="hljs-string">&#x27;小黑&#x27;</span><br>        <span class="hljs-built_in">this</span>._cat = <span class="hljs-string">&#x27;小黄&#x27;</span><br>    &#125;<br>    <span class="hljs-keyword">set</span> <span class="hljs-title">cat</span>(<span class="hljs-params">val</span>) &#123; <span class="hljs-comment">// 只写</span><br>        <span class="hljs-built_in">this</span>._cat = val<br>    &#125;<br>    <span class="hljs-keyword">get</span> <span class="hljs-title">dog</span>() &#123; <span class="hljs-comment">// 只读</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._dog<br>    &#125;<br>&#125;<br><span class="hljs-keyword">let</span> animal = <span class="hljs-keyword">new</span> Animal()<br>animal.dog = <span class="hljs-string">&#x27;小白&#x27;</span><br>animal.cat = <span class="hljs-string">&#x27;小灰&#x27;</span><br><span class="hljs-built_in">console</span>.log(animal.dog, animal.cat) <span class="hljs-comment">// 小黑 undefined</span><br><span class="hljs-built_in">console</span>.log(animal._dog, animal._cat) <span class="hljs-comment">// 小黑 小灰</span><br></code></pre></td></tr></table></figure><p><strong>Object.defineProperty（）修改对象只读</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.dog = <span class="hljs-string">&#x27;小白&#x27;</span><br>    &#125;<br>&#125;<br><span class="hljs-keyword">let</span> animal = <span class="hljs-keyword">new</span> Animal()<br><span class="hljs-built_in">Object</span>.defineProperty(animal, <span class="hljs-string">&#x27;dog&#x27;</span>, &#123;<br>    <span class="hljs-attr">writable</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 可写，false为只读</span><br>&#125;);<br>animal.dog = <span class="hljs-string">&#x27;小黑&#x27;</span><br><span class="hljs-built_in">console</span>.log(animal.dog) <span class="hljs-comment">// 小白</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：实现Promise</title>
    <link href="/2020/11/17/JS%E6%A1%88%E4%BE%8B%20%E5%AE%9E%E7%8E%B0Promise/"/>
    <url>/2020/11/17/JS%E6%A1%88%E4%BE%8B%20%E5%AE%9E%E7%8E%B0Promise/</url>
    
    <content type="html"><![CDATA[<p><strong>说到ES6的Promise，大家并不陌生，它是JS中解决异步的方法之一<br>其优点：避免回调地狱，链式调用，函数思路清晰，逻辑相对回调函数和事件发布/订阅更强<br>缺点：理解性差，异步操作在promise构造函数内部</strong></p><p><strong>这段时间在整理面试题时发现，Promise的实现可以单独拿出来分享，于是自己简单实现了一下<br>码云地址：<a href="https://gitee.com/DieHunter/myCode/tree/master/Promise%E5%B0%81%E8%A3%85">https://gitee.com/DieHunter/myCode/tree/master/Promise%E5%B0%81%E8%A3%85</a></strong></p><p><strong>实现完整功能之前，我们先了解一下Promise的用法，并实现一个简单的Promise和Promise.then函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">Promise</span>(executor: <span class="hljs-function">(<span class="hljs-params">resolve: (value?: any) =&gt; <span class="hljs-keyword">void</span>, reject: (reason?: any) =&gt; <span class="hljs-keyword">void</span></span>) =&gt;</span> <span class="hljs-keyword">void</span>): <span class="hljs-built_in">Promise</span>&lt;any&gt;<br></code></pre></td></tr></table></figure><p><strong>上述配置提示中显示，Promise需要传入一个回调函数，函数有两个参数（resolve, reject），第一个是异步执行成功后回调，另一个是失败时的回调。Promise.then方法是执行异步函数成功，即resolve执行时，才会执行then方法中的回调，以下是Promise最简单的一个用法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>&#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        resolve(<span class="hljs-string">&#x27;success&#x27;</span>)<span class="hljs-comment">// 传参</span><br>    &#125;, <span class="hljs-number">500</span>)<br>&#125;).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(res) <span class="hljs-comment">// success</span><br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>下面，我们实现一个最简单的Promise，用于解析Promise.then的原理，主要原理就是用两个回调函数嵌套，将函数作为参数放入至异步操作中，当异步操作执行后再执行作为参数的回调</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">MyPromise</span>(<span class="hljs-params">fn</span>) </span>&#123; <span class="hljs-comment">// 主要原理就是用两个回调函数嵌套，将函数作为参数放入至异步操作中，当异步操作执行后再执行作为参数的回调</span><br>    <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span>;<br>    _this.params = <span class="hljs-literal">null</span>; <span class="hljs-comment">// 传递的参数</span><br>    _this.tempResolve = <span class="hljs-literal">null</span> <span class="hljs-comment">// _this.tempResolve的作用是将参数传递至then方法中</span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolve</span>(<span class="hljs-params">params</span>) </span>&#123; <span class="hljs-comment">// 异步操作之后才会执行该方法，执行前一直等待</span><br>        _this.params = params<br>        _this.tempResolve(_this.params)<br>    &#125;<br>    fn(resolve) <span class="hljs-comment">// 将resolve通过回调返回到异步操作函数中,当resolve执行时，才是异步操作执行后</span><br>&#125;<br><br>MyPromise.prototype.then = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">_resolve</span>) </span>&#123; <span class="hljs-comment">// 异步操作传递参数，简言之就是连接then和resolve</span><br>    <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span><br>    _this.tempResolve = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        _resolve(_this.params)<br>    &#125;<br>&#125;<br>MyPromise.prototype.constructor = MyPromise<br><br><span class="hljs-keyword">new</span> MyPromise(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res, rej</span>) </span>&#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            res(<span class="hljs-string">&#x27;success&#x27;</span>)<br>        &#125;, <span class="hljs-number">1000</span>)<br>    &#125;)<br>    .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(res) <span class="hljs-comment">// success</span><br>    &#125;)<br></code></pre></td></tr></table></figure><p><strong>如果理解了上面的代码，就已经成功了一半，接下来，我们对Promise进行深入的实现，与上述代码差别是，添加then的链式调用，其实可以理解为多层Promise嵌套，但是我们需要对每层Promise做出操作，所以，我们在每层promise中添加status用于记录当前promise是否已执行，tempResolve也要改成tempResolveList，因为需要执行的函数不止一个，变成了一个队列，在上面代码的基础上，我们对resolve进行优化</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolve</span>(<span class="hljs-params">params</span>) </span>&#123; <span class="hljs-comment">// 异步操作之后才会执行该方法，执行前一直等待</span><br>    <span class="hljs-keyword">if</span> (_this.status === <span class="hljs-string">&#x27;pending&#x27;</span>) &#123;<br>        _this.status = <span class="hljs-string">&#x27;resolve&#x27;</span>; <span class="hljs-comment">// 进入函数后，立即修改函数状态，防止下面的循环重复执行函数</span><br>        _this.params = params;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; array.length; i++) &#123;<br>            _this.tempResolveList[i](_this.params) <span class="hljs-comment">// 执行所有then的链式调用的函数</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>除此之外，在then函数中，还需要添加一段代码，其目的是将Promise返回到下一层链式调用，将回调函数通过resolve传递至下一层，达到依次同步执行的目的</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript">MyPromise.prototype.then = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">tempResolve</span>) </span>&#123; <span class="hljs-comment">// 异步操作传递参数，简言之就是连接then和resolve</span><br>    <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span><br>    <span class="hljs-keyword">var</span> _promise = <span class="hljs-keyword">new</span> MyPromise(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (_this.status == <span class="hljs-string">&#x27;pending&#x27;</span>) &#123;<br>            _this.tempResolveList.push(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                resolve(tempResolve(_this<br>                    .params)) <span class="hljs-comment">// 将上一层tempResolve通过resolve的参数异步传递给下一层的Promise中，每层都会异步叠加</span><br>            &#125;)<br>        &#125;<br>    &#125;)<br>    <span class="hljs-keyword">return</span> _promise <span class="hljs-comment">// 返回Promise用于链式调用</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>完成之后，我们会发现一个问题，当我们通过resolve传递tempResolve执行结果时，只有一层链式调用的话，返回的是原回调函数，当到了第二层时，返回的是上一层的resolve，此时我们需要在resolve函数之前做个过滤，并且把参数中的then放在本层，直接执行</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (params &amp;&amp; <span class="hljs-keyword">typeof</span> params === <span class="hljs-string">&#x27;function&#x27;</span> || <span class="hljs-keyword">typeof</span> params ===<br>    <span class="hljs-string">&#x27;object&#x27;</span>) &#123; <span class="hljs-comment">// 这里要判断参数是普通参数params，还是MyPromise方法，链式调用一定会产生MyPromise构造函数</span><br>    <span class="hljs-keyword">var</span> _then = params.then <span class="hljs-comment">// 如果参数是MyPromise构造函数，则将上层的then放到本层继续执行后续操作</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> _then === <span class="hljs-string">&#x27;function&#x27;</span>) &#123;<br>        _then.call(params, resolve); <span class="hljs-comment">// 链式调用then</span><br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>Promise.then的链式调用完整代码</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">MyPromise</span>(<span class="hljs-params">fn</span>) </span>&#123; <span class="hljs-comment">// 主要原理就是用两个回调函数嵌套，将函数作为参数放入至异步操作中，当异步操作执行后再执行作为参数的回调</span><br>    <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span>;<br>    _this.status = <span class="hljs-string">&#x27;pending&#x27;</span>; <span class="hljs-comment">// 每层Promise的待定状态，只有当前Promise处于pending的时候，才会执行异步函数</span><br>    _this.params = <span class="hljs-literal">null</span>; <span class="hljs-comment">// 传递的参数</span><br>    _this.tempResolveList = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>() <span class="hljs-comment">// 储存链式调用then中的函数队列</span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolve</span>(<span class="hljs-params">params</span>) </span>&#123; <span class="hljs-comment">// 异步操作之后才会执行该方法，执行前一直等待</span><br>        <span class="hljs-keyword">if</span> (params &amp;&amp; <span class="hljs-keyword">typeof</span> params === <span class="hljs-string">&#x27;function&#x27;</span> || <span class="hljs-keyword">typeof</span> params ===<br>            <span class="hljs-string">&#x27;object&#x27;</span>) &#123; <span class="hljs-comment">// 这里要判断参数是普通参数params，还是MyPromise方法，链式调用一定会产生MyPromise构造函数</span><br>            <span class="hljs-keyword">var</span> _then = params.then <span class="hljs-comment">// 如果参数是MyPromise构造函数，则将上层的then放到本层继续执行后续操作</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> _then === <span class="hljs-string">&#x27;function&#x27;</span>) &#123;<br>                _then.call(params, resolve); <span class="hljs-comment">// 链式调用then</span><br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (_this.status === <span class="hljs-string">&#x27;pending&#x27;</span>) &#123;<br>            _this.status = <span class="hljs-string">&#x27;resolve&#x27;</span>; <span class="hljs-comment">// 进入函数后，立即修改函数状态，防止下面的循环重复执行函数</span><br>            _this.params = params;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; _this.tempResolveList.length; i++) &#123;<br>                _this.tempResolveList[i](_this.params) <span class="hljs-comment">// 执行所有then的链式调用的函数</span><br>            &#125;<br>        &#125;<br>    &#125;<br>    fn(resolve) <span class="hljs-comment">// 将resolve通过回调返回到异步操作函数中,当resolve执行时，才是异步操作执行后</span><br>&#125;<br><br>MyPromise.prototype.then = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">tempResolve</span>) </span>&#123; <span class="hljs-comment">// 异步操作传递参数，简言之就是连接then和resolve</span><br>    <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span><br>    <span class="hljs-keyword">var</span> _promise = <span class="hljs-keyword">new</span> MyPromise(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (_this.status == <span class="hljs-string">&#x27;pending&#x27;</span>) &#123;<br>            _this.tempResolveList.push(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                resolve(tempResolve(_this<br>                    .params)) <span class="hljs-comment">// 将上一层tempResolve通过参数异步传递给下一层的Promise中，每层都会异步叠加</span><br>            &#125;)<br>        &#125;<br>    &#125;)<br>    <span class="hljs-keyword">return</span> _promise <span class="hljs-comment">// 返回Promise用于链式调用</span><br>&#125;<br>MyPromise.prototype.constructor = MyPromise<br><span class="hljs-keyword">var</span> count = <span class="hljs-number">1</span><br><span class="hljs-keyword">new</span> MyPromise(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res, rej</span>) </span>&#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            res(<span class="hljs-string">&#x27;success&#x27;</span> + count++)<br>        &#125;, <span class="hljs-number">1000</span>)<br>    &#125;)<br>    .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(res) <span class="hljs-comment">// success1</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> MyPromise(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res, rej</span>) </span>&#123;<br>            <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                res(<span class="hljs-string">&#x27;success&#x27;</span> + count++)<br>            &#125;, <span class="hljs-number">1000</span>)<br>        &#125;)<br>    &#125;).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(res) <span class="hljs-comment">// success2</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> MyPromise(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res, rej</span>) </span>&#123;<br>            <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                res(<span class="hljs-string">&#x27;success&#x27;</span> + count++)<br>            &#125;, <span class="hljs-number">1000</span>)<br>        &#125;)<br>    &#125;).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(res) <span class="hljs-comment">// success3</span><br>    &#125;)<br></code></pre></td></tr></table></figure><p><strong>实现了链式调用后，我们对reject以及catch进行一个简单的实现，其实现过程与then相似，我们对一些方法封装一下，得到以下代码（catch没有完善链式调用，导致then方法执行数量大于1时失效）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">MyPromise</span>(<span class="hljs-params">fn</span>) </span>&#123; <span class="hljs-comment">// 主要原理就是用两个回调函数嵌套，将函数作为参数放入至异步操作中，当异步操作执行后再执行作为参数的回调</span><br>    <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span>;<br>    _this.status = <span class="hljs-string">&#x27;pending&#x27;</span>; <span class="hljs-comment">// 每层Promise的待定状态，只有当前Promise处于pending的时候，才会执行异步函数</span><br>    _this.params = <span class="hljs-literal">null</span>; <span class="hljs-comment">// 传递的参数</span><br>    _this.tempResolveList = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>() <span class="hljs-comment">// 储存链式调用then中的函数队列</span><br>    _this.tempRejectList = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>() <span class="hljs-comment">// 储存链式调用catch中的函数队列</span><br><br>    _this.runCommandList = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">_status, _params,</span></span><br><span class="hljs-params"><span class="hljs-function">        _commandList</span>) </span>&#123; <span class="hljs-comment">// 若函数状态是pending待定状态，函数执行后会有两个状态，resolve和reject</span><br>        <span class="hljs-keyword">if</span> (_params &amp;&amp; <span class="hljs-keyword">typeof</span> _params === <span class="hljs-string">&#x27;function&#x27;</span> || <span class="hljs-keyword">typeof</span> _params ===<br>            <span class="hljs-string">&#x27;object&#x27;</span>) &#123; <span class="hljs-comment">// 这里要判断参数是普通参数params，还是MyPromise方法，链式调用一定会产生MyPromise构造函数</span><br>            <span class="hljs-keyword">var</span> _then = _params.then <span class="hljs-comment">// 如果参数是MyPromise构造函数，则将上层的then放到本层继续执行后续操作</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> _then === <span class="hljs-string">&#x27;function&#x27;</span>) &#123;<br>                _then.call(_params, resolve); <span class="hljs-comment">// 链式调用then</span><br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (_this.status === <span class="hljs-string">&#x27;pending&#x27;</span>) &#123;<br>            _this.status = _status; <span class="hljs-comment">// 进入函数后，立即修改函数状态，防止下面的循环重复执行函数</span><br>            _this.params = _params;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; _commandList.length; i++) &#123;<br>                _commandList[i](_this.params) <span class="hljs-comment">// 执行所有then的链式调用的函数</span><br>            &#125;<br>        &#125;<br>    &#125;<br>    _this.runCallBack = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject, finishFn</span>) </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">var</span> temp = finishFn(_this.params);<br>                resolve(temp);<br>            &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>                reject(error);<br>            &#125;<br>        &#125;<br>    &#125;<br>    _this.createPromise = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">temp, tempList</span>) </span>&#123;<br>        <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> MyPromise(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (_this.status == <span class="hljs-string">&#x27;pending&#x27;</span>) &#123;<br>                tempList.push(_this.runCallBack(resolve, reject,<br>                    temp)) <span class="hljs-comment">// 将上一层tempResolve通过参数异步传递给下一层的Promise中，每层都会异步叠加</span><br>            &#125;<br>        &#125;)<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resolve</span>(<span class="hljs-params">params</span>) </span>&#123; <span class="hljs-comment">// 异步操作之后才会执行该方法，执行前一直等待,通过回调返回到new Promise(fn)参数中</span><br>        _this.runCommandList(<span class="hljs-string">&#x27;resolve&#x27;</span>, params, _this.tempResolveList)<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reject</span>(<span class="hljs-params">params</span>) </span>&#123; <span class="hljs-comment">// 异步操作之后才会执行该方法，执行前一直等待,通过回调返回到new Promise(fn)参数中</span><br>        _this.runCommandList(<span class="hljs-string">&#x27;reject&#x27;</span>, params, _this.tempRejectList)<br>    &#125;<br>    <span class="hljs-keyword">try</span> &#123; <span class="hljs-comment">//捕获异常</span><br>        fn(resolve, reject)<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>        reject(error)<br>    &#125; <span class="hljs-comment">// 将resolve通过回调返回到异步操作函数中,当resolve执行时，才是异步操作执行后</span><br>&#125;<br><br>MyPromise.prototype.then = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">tempResolve</span>) </span>&#123; <span class="hljs-comment">// 异步操作传递参数，简言之就是连接then和resolve</span><br>    <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span><br>    <span class="hljs-keyword">var</span> _promise = _this.createPromise(tempResolve, _this.tempResolveList)<br>    _promise.catch = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">tempReject</span>) </span>&#123; <span class="hljs-comment">// 异步操作传递参数，简言之就是连接then和resolve</span><br>        _this.createPromise(tempReject, _this.tempRejectList)<br>    &#125;<br>    <span class="hljs-keyword">return</span> _promise <span class="hljs-comment">// 返回Promise用于链式调用</span><br>&#125;<br><br><br><br>MyPromise.prototype.constructor = MyPromise<br><span class="hljs-keyword">var</span> count = <span class="hljs-number">1</span><br><span class="hljs-keyword">new</span> MyPromise(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res, rej</span>) </span>&#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            rej(<span class="hljs-string">&#x27;success&#x27;</span> + count++)<br>        &#125;, <span class="hljs-number">1000</span>)<br>        <span class="hljs-comment">// setTimeout(function () &#123;</span><br>        <span class="hljs-comment">//     res(&#x27;success&#x27; + count++)</span><br>        <span class="hljs-comment">// &#125;, 1000)</span><br>    &#125;)<br>    .then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(res) <span class="hljs-comment">// success1</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> MyPromise(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res, rej</span>) </span>&#123;<br>            <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                res(<span class="hljs-string">&#x27;success&#x27;</span> + count++)<br>            &#125;, <span class="hljs-number">1000</span>)<br>        &#125;)<br>    &#125;).catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(err) <span class="hljs-comment">// success1</span><br>    &#125;)<br></code></pre></td></tr></table></figure><p><strong>总结：代码可能有地方不完善，欢迎大佬指出</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS从看懂到看开（前端面试题整合）</title>
    <link href="/2020/11/11/JS%E4%BB%8E%E7%9C%8B%E6%87%82%E5%88%B0%E7%9C%8B%E5%BC%80%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89/"/>
    <url>/2020/11/11/JS%E4%BB%8E%E7%9C%8B%E6%87%82%E5%88%B0%E7%9C%8B%E5%BC%80%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>解释一下为何[ ] == ![ ] // —&gt; true</strong></p><p><strong>首先看一张图</strong></p><p><img src="https://img-blog.csdnimg.cn/2020110610052125.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>！[ ] 是 false<br>原式：[ ] == false<br>根据第八条，false通过tonumber（）转换为0<br>原式：[ ] == 0<br>根据第十条，[ ]通过ToPrimitive()转换为’ ‘<br>原式：’ ‘ == 0<br>根据第六条<br>原式：0 == 0</strong></p><p><strong>尝试实现new</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ObjectClass</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-comment">//对象</span><br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">arguments</span>[<span class="hljs-number">0</span>])<br>&#125;<br>ObjectClass.prototype.constructor = ObjectClass<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">create</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">// 创建一个空的对象</span><br>    <span class="hljs-keyword">var</span> obj = &#123;&#125;<br>    <span class="hljs-comment">// 获得构造函数</span><br>    <span class="hljs-keyword">var</span> _constructor = <span class="hljs-built_in">this</span><br>    <span class="hljs-comment">// 链接到原型</span><br>    obj.__proto__ = _constructor.prototype<br>    <span class="hljs-comment">// 绑定 this，执行构造函数</span><br>    <span class="hljs-keyword">var</span> result = _constructor.apply(obj, <span class="hljs-built_in">arguments</span>)<br>    <span class="hljs-comment">// 确保 new 出来的是个对象</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> result === <span class="hljs-string">&#x27;object&#x27;</span> ? result : obj<br>&#125;<br>create.call(ObjectClass, <span class="hljs-string">&#x27;hello world&#x27;</span>)<span class="hljs-comment">//实例化</span><br></code></pre></td></tr></table></figure><p><strong>拓展typeof功能使其支持更多类型（array，object，null区分），并解释一下typeof null为何是object</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myTypeOf</span>(<span class="hljs-params">target</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> _type = <span class="hljs-keyword">typeof</span> (target)<br>    <span class="hljs-keyword">var</span> temp = &#123;<br>        <span class="hljs-string">&quot;[object Object]&quot;</span>: <span class="hljs-string">&#x27;object&#x27;</span>,<br>        <span class="hljs-string">&quot;[object Array]&quot;</span>: <span class="hljs-string">&#x27;array&#x27;</span>,<br>        <span class="hljs-string">&quot;[object Number]&quot;</span>: <span class="hljs-string">&#x27;number&#x27;</span>,<br>        <span class="hljs-string">&quot;[object String]&quot;</span>: <span class="hljs-string">&#x27;string&#x27;</span>,<br>        <span class="hljs-string">&quot;[object Boolean]&quot;</span>: <span class="hljs-string">&#x27;boolean&#x27;</span><br>    &#125;<br>    <span class="hljs-keyword">if</span> (target === <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;null&#x27;</span><br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (_type == <span class="hljs-string">&#x27;object&#x27;</span>) &#123;<br>        <span class="hljs-keyword">var</span> str = <span class="hljs-built_in">Object</span>.prototype.toString.call(target)<span class="hljs-comment">//根据toString区分</span><br>        <span class="hljs-keyword">return</span> temp[str]<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> _type<br>    &#125;<br>&#125;<br><span class="hljs-built_in">console</span>.log(myTypeOf(<span class="hljs-string">&#x27;hello&#x27;</span>)) <span class="hljs-comment">//string</span><br><span class="hljs-built_in">console</span>.log(myTypeOf(<span class="hljs-number">111</span>)) <span class="hljs-comment">// number</span><br><span class="hljs-built_in">console</span>.log(myTypeOf(<span class="hljs-literal">true</span>)) <span class="hljs-comment">// boolean</span><br><span class="hljs-built_in">console</span>.log(myTypeOf(&#123;&#125;)) <span class="hljs-comment">// object</span><br><span class="hljs-built_in">console</span>.log(myTypeOf([])) <span class="hljs-comment">// array</span><br><span class="hljs-built_in">console</span>.log(myTypeOf(<span class="hljs-literal">null</span>)) <span class="hljs-comment">// null</span><br><span class="hljs-built_in">console</span>.log(myTypeOf(<span class="hljs-literal">undefined</span>)) <span class="hljs-comment">// undefined</span><br><span class="hljs-built_in">console</span>.log(myTypeOf(<span class="hljs-built_in">Symbol</span>())) <span class="hljs-comment">// symbol</span><br></code></pre></td></tr></table></figure><p><strong>typeof null为何是object</strong></p><p><strong>因为在早期js初版本中，操作系统使用的是32位，出于性能考虑，使用低位存储变量类型，object的类型前三位是000，而null是全0，从而系统将null误判为object</strong></p><p><strong>instanceof是什么？尝试实现一下</strong></p><p><strong>用官话来讲：instanceof用于检测构造函数的<code>prototype</code>属性是否出现在某个实例对象的原型链上</strong></p><p><strong>通俗来讲，a instanceof b也就是判断a是否是由b实例化得来的</strong></p><p><strong>实现：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ObjectClass</span>(<span class="hljs-params"></span>) </span>&#123;&#125;<br>ObjectClass.prototype.constructor = ObjectClass<br><span class="hljs-keyword">var</span> _objectClass = <span class="hljs-keyword">new</span> ObjectClass()<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myInstanceof</span>(<span class="hljs-params">orgProto, tag</span>) </span>&#123; <span class="hljs-comment">//org前者，实例化对象, tag后者，类</span><br>    <span class="hljs-keyword">var</span> tagProto = tag.prototype<br>    orgProto = orgProto.__proto__<br>    <span class="hljs-keyword">for</span> (;;) &#123; <span class="hljs-comment">//死循环查询原型链上是否有类的原型</span><br>        <span class="hljs-keyword">if</span> (orgProto === <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>        &#125;<br>        <span class="hljs-keyword">if</span> (orgProto === tagProto) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125;<br>        orgProto = orgProto.__proto__<br>    &#125;<br>&#125;<br><span class="hljs-built_in">console</span>.log(myInstanceof(<span class="hljs-built_in">Object</span>, <span class="hljs-built_in">Function</span>)) <span class="hljs-comment">// true</span><br><span class="hljs-built_in">console</span>.log(myInstanceof(<span class="hljs-built_in">Object</span>, <span class="hljs-built_in">Object</span>)) <span class="hljs-comment">// true</span><br><span class="hljs-built_in">console</span>.log(myInstanceof(<span class="hljs-built_in">String</span>, <span class="hljs-built_in">Object</span>)) <span class="hljs-comment">// true</span><br><span class="hljs-built_in">console</span>.log(myInstanceof(_objectClass, <span class="hljs-built_in">Object</span>)) <span class="hljs-comment">// true</span><br><span class="hljs-built_in">console</span>.log(myInstanceof(<span class="hljs-built_in">String</span>, <span class="hljs-built_in">String</span>)) <span class="hljs-comment">// false</span><br><span class="hljs-built_in">console</span>.log(myInstanceof(<span class="hljs-built_in">Boolean</span>, <span class="hljs-built_in">Boolean</span>)) <span class="hljs-comment">// false</span><br></code></pre></td></tr></table></figure><p><strong>解释以下代码分别在控制台显示什么，并简单说明</strong></p><p><strong>有一个对象Car，分别对以下四种情况进行作答</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Car.prototype.name = <span class="hljs-string">&#x27;BMW&#x27;</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Car</span>(<span class="hljs-params"></span>) </span>&#123;&#125;<br></code></pre></td></tr></table></figure><p><strong>1.实例化对象时打印BMW，因为Car.prototype.name = ‘BMW’，实例化的car本身没有name属性，于是会在Car的原型上找。此时将Car.prototype.name = ‘Benz’，实例化后的car.name也会等于Benz，因为name是基本数据类型（原始值），当值发送变化，实例化后的对象也会改变</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> car = <span class="hljs-keyword">new</span> Car()<br><span class="hljs-built_in">console</span>.log(car.name) <span class="hljs-comment">//BMW</span><br>Car.prototype.name = <span class="hljs-string">&#x27;Benz&#x27;</span><br><span class="hljs-built_in">console</span>.log(car.name) <span class="hljs-comment">//Benz</span><br></code></pre></td></tr></table></figure><p><strong>2.实例化对象时打印Benz，因为在实例化之前就已经改变构造函数原型上的name值</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Car.prototype.name = <span class="hljs-string">&#x27;Benz&#x27;</span><br><span class="hljs-keyword">var</span> car = <span class="hljs-keyword">new</span> Car()<br><span class="hljs-built_in">console</span>.log(car.name) <span class="hljs-comment">//Benz</span><br></code></pre></td></tr></table></figure><p><strong>3.第一个log的BMW与上述一样，第二个log依然打印BMW的原因是，这里将Car.prototype直接改变成另一个对象，由于对象是引用数据类型（引用值），指向的是内存地址而不是值，new之前和new之后的实例对象引用的name地址不同</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> car = <span class="hljs-keyword">new</span> Car()<br><span class="hljs-built_in">console</span>.log(car.name) <span class="hljs-comment">//BMW</span><br>Car.prototype = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Benz&#x27;</span><br>&#125;<br><span class="hljs-built_in">console</span>.log(car.name) <span class="hljs-comment">//BMW</span><br></code></pre></td></tr></table></figure><p><strong>4.和上述相同，原因是修改了prototype，改变的是引用地址，new之前和new之后的实例对象引用的name地址不同</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Car.prototype = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Benz&#x27;</span><br>&#125;<br><span class="hljs-keyword">var</span> car = <span class="hljs-keyword">new</span> Car()<br><span class="hljs-built_in">console</span>.log(car.name) <span class="hljs-comment">//Benz</span><br></code></pre></td></tr></table></figure><p><strong>写一个函数，计算字符串Unicode总长度（例如：abcd，打印4，qwerdf，打印6）</strong></p><p><strong>需要注意的是，英文字符占1个字节，中文字符占两个字节</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unicodeLength</span>(<span class="hljs-params">str</span>) </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, count = <span class="hljs-number">0</span>; i &lt; str.length; i++) &#123;<br>        <span class="hljs-built_in">console</span>.log(str.charCodeAt(i))<br>        <span class="hljs-keyword">if</span> (str.charCodeAt(i) &gt; <span class="hljs-number">255</span>) &#123; <span class="hljs-comment">//中文字符</span><br>            count += <span class="hljs-number">2</span><br>        &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">//英文字符</span><br>            count++<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> count<br>&#125;<br><span class="hljs-built_in">console</span>.log(unicodeLength(<span class="hljs-string">&#x27;hello，1024，你好&#x27;</span>)) <span class="hljs-comment">//17</span><br></code></pre></td></tr></table></figure><p><strong>实现一下js中window自带的isNaN()函数</strong></p><p><strong>注意点：如果直接使用NaN==NaN来判断，会返回false，需要将NaN转换成字符串，再来判断</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">isNaN</span>(<span class="hljs-string">&#x27;asda&#x27;</span>) <span class="hljs-comment">//window下的原函数</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">isNaN</span>(<span class="hljs-number">13</span>)) <span class="hljs-comment">//false</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">isNaN</span>(<span class="hljs-string">&#x27;aaa&#x27;</span>)) <span class="hljs-comment">//true</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myIsNaN</span>(<span class="hljs-params">number</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span> + <span class="hljs-built_in">Number</span>(number) == <span class="hljs-string">&quot;NaN&quot;</span> ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span><br>&#125;<br><span class="hljs-built_in">console</span>.log(myIsNaN(<span class="hljs-number">32323</span>)) <span class="hljs-comment">//false</span><br><span class="hljs-built_in">console</span>.log(myIsNaN(<span class="hljs-string">&#x27;aaa&#x27;</span>)) <span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><p><strong>实现数组push()方法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myPush</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">arguments</span>.length; i++) &#123;<br>        <span class="hljs-built_in">this</span>[<span class="hljs-built_in">this</span>.length] = <span class="hljs-built_in">arguments</span>[i]<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.length<br>&#125;<br><span class="hljs-built_in">Array</span>.prototype.myPush = myPush<br><span class="hljs-keyword">var</span> list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br><span class="hljs-keyword">var</span> item = <span class="hljs-number">6</span><br><span class="hljs-built_in">console</span>.log(list.myPush(item)) <span class="hljs-comment">//6</span><br><span class="hljs-built_in">console</span>.log(list) <span class="hljs-comment">//[1, 2, 3, 4, 5, 6]</span><br></code></pre></td></tr></table></figure><p><strong>实现数组乱序（提示：使用Array.sort）</strong></p><p><strong>Array.sort((a,b)=&gt;{})中a-b升序，b-a降序</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">Array</span>.prototype.random = random<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">random</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.sort(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.random() - <span class="hljs-number">0.5</span><br>    &#125;)<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span><br>&#125;<br><span class="hljs-keyword">var</span> list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>]<br><span class="hljs-built_in">console</span>.log(list.random())<span class="hljs-comment">//[3, 2, 6, 4, 9, 8, 1, 5, 7] 结果每次都不同</span><br></code></pre></td></tr></table></figure><p><strong>以下代码在控制台显示什么？说明原因</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> obj = &#123;<br>    <span class="hljs-string">&quot;0&quot;</span>: <span class="hljs-string">&#x27;a&#x27;</span>,<br>    <span class="hljs-string">&quot;1&quot;</span>: <span class="hljs-string">&#x27;b&#x27;</span>,<br>    <span class="hljs-string">&quot;2&quot;</span>: <span class="hljs-string">&#x27;c&#x27;</span>,<br>    <span class="hljs-string">&quot;length&quot;</span>: <span class="hljs-number">3</span>,<br>    <span class="hljs-string">&quot;push&quot;</span>: <span class="hljs-built_in">Array</span>.prototype.push<br>&#125;<br>obj.push(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br><span class="hljs-built_in">console</span>.log(obj)<br></code></pre></td></tr></table></figure><p><strong>打印结果是</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>    <span class="hljs-number">0</span>: <span class="hljs-string">&quot;a&quot;</span><br>    <span class="hljs-number">1</span>: <span class="hljs-string">&quot;b&quot;</span><br>    <span class="hljs-number">2</span>: <span class="hljs-string">&quot;c&quot;</span><br>    <span class="hljs-number">3</span>: <span class="hljs-number">1</span><br>    <span class="hljs-number">4</span>: <span class="hljs-number">2</span><br>    <span class="hljs-number">5</span>: <span class="hljs-number">3</span><br>    <span class="hljs-attr">length</span>: <span class="hljs-number">6</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>原因：说明原因之前先看一段Array.prototype.push的源码：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ArrayPush</span> (<span class="hljs-params"></span>) </span>&#123;  <br><span class="hljs-keyword">var</span> n = TO_UNIT32(<span class="hljs-built_in">this</span>.length);  <br><span class="hljs-keyword">var</span> m = %_ArgumentsLength();  <br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; m; i++) &#123;<br>    <span class="hljs-built_in">this</span>[i + n ] = %_Arguments(i);<br>  &#125;  <span class="hljs-built_in">this</span>.length = n + m;<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.length;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>push的原理是在原对象后面将push的内容遍历进去，获取this.length并且在此基础上加上push的个数，这就不难解释为何push了三个数后length为6</strong></p><p><strong>解释以下代码打印为undefined的原因</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> num = <span class="hljs-number">123</span>;<br>num.item = <span class="hljs-string">&#x27;abc&#x27;</span><br><span class="hljs-built_in">console</span>.log(num.item) <span class="hljs-comment">//undefined</span><br></code></pre></td></tr></table></figure><p><strong>第一步：var num = 123</strong></p><p><strong>第二步：num.item = ‘abc’//隐式转换，相当于new Number(num).item = ‘abc’（包装类生成引用类型数据），此时底层会判定此时的num是原始值，不存在属性值，所以执行delete（num.item）</strong></p><p><strong>第三步：打印undefined</strong></p><p><strong>使用JS原生实现function中的call，apply，bind函数</strong></p><p><strong>call:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">Function</span>.prototype.myCall = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">arguments</span>[<span class="hljs-number">0</span>] || <span class="hljs-built_in">window</span>; <span class="hljs-comment">//第一项是需要this指向的对象</span><br>    _this._function = <span class="hljs-built_in">this</span> <span class="hljs-comment">//this是要执行的函数，改变指向为_this</span><br>    <span class="hljs-keyword">var</span> args = [] <span class="hljs-comment">//把除this之外的所有参数放在args中</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-built_in">arguments</span>.length; i++) &#123; <span class="hljs-comment">//i = 1，第二项到最后一项是参数</span><br>        args[i - <span class="hljs-number">1</span>] = <span class="hljs-built_in">arguments</span>[i]<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">eval</span>(<span class="hljs-string">&quot;_this._function(&quot;</span> + args + <span class="hljs-string">&quot;)&quot;</span>) <span class="hljs-comment">//eval能将数组隐式拆分，效果与join相似，但二者区别很大，return将函数执行结果返回</span><br>    <span class="hljs-keyword">delete</span> _this._function <span class="hljs-comment">//执行完成后删除当前_function,这个_function用来放this</span><br>&#125;<br><span class="hljs-keyword">var</span> a = <span class="hljs-string">&#x27;window&#x27;</span><br><span class="hljs-keyword">var</span> obj1 = &#123;<br>    <span class="hljs-attr">a</span>: <span class="hljs-string">&#x27;obj1&#x27;</span>,<br>    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.a)<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">arguments</span>)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> obj2 = &#123;<br>    <span class="hljs-attr">a</span>: <span class="hljs-string">&#x27;obj2&#x27;</span><br>&#125;<br>obj1.fn.myCall(obj2, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>) <span class="hljs-comment">//obj2  arguments[1, 2, 3, 4]</span><br>obj1.fn.myCall(<span class="hljs-built_in">this</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>) <span class="hljs-comment">//window  arguments[3, 2, 1]</span><br></code></pre></td></tr></table></figure><p><strong>apply（调用上面的myCall实现即可）:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">Function</span>.prototype.myApply = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">arguments</span>[<span class="hljs-number">0</span>] || <span class="hljs-built_in">window</span>; <span class="hljs-comment">//第一项是需要this指向的对象</span><br>    _this._function = <span class="hljs-built_in">this</span> <span class="hljs-comment">//this是要执行的函数，改变指向为_this</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">eval</span>(<span class="hljs-string">&quot;_this._function.myCall(_this, &quot;</span> + <span class="hljs-built_in">arguments</span>[<span class="hljs-number">1</span>] + <span class="hljs-string">&quot;)&quot;</span>) <span class="hljs-comment">//eval能将数组隐式拆分，效果与join相似，但二者区别很大，return将函数执行结果返回</span><br>    <span class="hljs-keyword">delete</span> _this._function <span class="hljs-comment">//执行完成后删除当前_function,这个_function用来放this</span><br>&#125;<br><span class="hljs-keyword">var</span> a = <span class="hljs-string">&#x27;window&#x27;</span><br><span class="hljs-keyword">var</span> obj1 = &#123;<br>    <span class="hljs-attr">a</span>: <span class="hljs-string">&#x27;obj1&#x27;</span>,<br>    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.a)<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">arguments</span>)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> obj2 = &#123;<br>    <span class="hljs-attr">a</span>: <span class="hljs-string">&#x27;obj2&#x27;</span><br>&#125;<br>obj1.fn.myApply(obj2, [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]) <span class="hljs-comment">//obj2  arguments[1, 2, 3, 4]</span><br>obj1.fn.myApply(<span class="hljs-built_in">this</span>, [<span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>]) <span class="hljs-comment">//window  arguments[3, 2, 1]</span><br></code></pre></td></tr></table></figure><p><strong>bind（继续调用上面myApply）:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">Function</span>.prototype.myBind = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> t = <span class="hljs-built_in">this</span>;<br>    <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">arguments</span>[<span class="hljs-number">0</span>] || <span class="hljs-built_in">window</span>; <span class="hljs-comment">//第一项是需要this指向的对象</span><br>    <span class="hljs-keyword">var</span> args = <span class="hljs-built_in">Array</span>.prototype.slice.myApply(<span class="hljs-built_in">arguments</span>, [<br>        <span class="hljs-number">1</span>], ) <span class="hljs-comment">//这项的目的是为了去除第一项arguments[0]，就与上面的myCall中的遍历作用相同，Array.prototype.slice传一个参数，slice(start,end)表示删除第start到end项并返回删除后的数组，这里我们只用截取，不用删除，这里是删除第一项（由于用的是myApply，第二个参数是数组所以用[1]）并返回删除后的数组</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">return</span> t.myApply(_this, args)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> a = <span class="hljs-string">&#x27;window&#x27;</span><br><span class="hljs-keyword">var</span> obj1 = &#123;<br>    <span class="hljs-attr">a</span>: <span class="hljs-string">&#x27;obj1&#x27;</span>,<br>    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.a)<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">arguments</span>)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> obj2 = &#123;<br>    <span class="hljs-attr">a</span>: <span class="hljs-string">&#x27;obj2&#x27;</span><br>&#125;<br>obj1.fn.myBind(obj2, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>)() <span class="hljs-comment">//obj2  arguments[1, 2, 3, 4]</span><br>obj1.fn.myBind(<span class="hljs-built_in">this</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>)() <span class="hljs-comment">//window  arguments[3, 2, 1]</span><br></code></pre></td></tr></table></figure><p><strong>对mvvm，mvp和mvc的理解</strong></p><p><strong>Model–View–ViewModel(MVVM)，Model-View-Presenter（MVP）和Model–View-Controller（MVC）都是软件架构设计模式</strong></p><p><strong>相同的地方</strong></p><ul><li><strong>Model 是指任何一个领域模型(domain model)，一般做数据处理，可以理解为数据库，用来存放应用的所有数据对象。模型不必知晓视图和控制器的细节，模型只需包含数据及直接和这些数据相关的逻辑。任何事件处理代码、视图模版，以及那些和模型无关的逻辑都应当隔离在模型之外，它代表了真实情况的内容（一个面向对象的方法），或表示内容（以数据为中心的方法）的数据访问层</strong></li><li><strong>View就是用户界面（UI），视图层是呈现给用户的，用户与之产生交互。在javaScript应用中，视图大都是由html、css和JavaScript模版组成的。除了模版中简单的条件语句之外，视图不应当包含任何其他逻辑。事实上和模型类似，视图也应该从应用的其他部分中解耦出来</strong></li></ul><p><strong>不同的地方</strong></p><ul><li><strong>MVC的Controller控制器是模型和视图的纽带。控制器从视图获得事件和输入，对它们进行处理，并相应地更新视图。当页面加载时，控制器会给视图添加事件监听，比如监听表单提交和按钮单击。然后当用户和应用产生交互时，控制器中的事件触发器就开始工作。</strong></li><li><strong>MVVM的ViewModel是一个公开公共属性和命令的抽象的view。取代了 MVC 模式的 controller，或 MVP 模式的任命者(presenter)，MVVM 有一个驱动。 在 viewmodel 中，这种驱动传达视图和数据绑定的通信。此 viewmodel 已被描述为该 model 中的数据的状态。</strong></li><li><strong>MVP的Presenter负责逻辑的处理，在MVP中View并不直接使用Model，它们之间的通信是通过Presenter来进行的，所有的交互都发生在Presenter内部，而 在MVC中View会直接从Model中读取数据而不是通过Controller。</strong></li></ul><p><strong>谈谈对前端页面渲染的理解（过程，原理，性能，重绘和回流）</strong></p><p><strong>页面渲染分为以下步骤<br>1. 处理HTML语句标签并构建 DOM 树<br>2. 处理CSS语句并构建CSSOM树<br>3. 将处理好的DOM与CSSOM合并成一个渲染树<br>4. 根据渲染树来布局，计算每个节点的位置样式等等<br>5. 调GPU（显卡）绘制页面，合成图层，最后显示在浏览器</strong></p><p><strong>在处理CSSOM时，会暂时堵塞DOM渲染，并且扁平层级关系有利于渲染速度，越详细的样式选择器，会导致页面渲染越慢<br>CSS加载会影响JS文件或语句加载，JS需要等待CSS解析完毕后运行</strong></p><p><strong>document中的DOMContentLoaded和Load的区别​​：前者只需HTML加载完成后，就会触发，后者需要等HTML，CSS，JS都加载完成才会触发​​​​​</strong></p><p><strong>图层概念：普通文档流就是一个图层，特定的属性可以生成一个新的图层。 不同的图层渲染互不影响，所以对于某些频繁需要渲染的建议单独生成一个新图层，提高性能。但也不能生成过多的图层，会引起反作用<br>以下CSS属性可以生成新图层：</strong></p><ul><li><strong>3D 变换：translate3d、translateZ</strong></li><li><strong>will-change</strong></li><li><strong>video、iframe 标签</strong></li><li><strong>通过动画实现的 opacity 动画转换</strong></li><li><strong>position: fixed</strong></li></ul><p><strong>重绘（Repaint）和回流（Reflow）<br>重绘是当节点需要更改外观而不会影响布局的，比如改变color就叫称为重绘回流是布局或者几何属性需要改变就称为回流。<br>回流必定会发生重绘，重绘不一定会引发回流。<br>回流所需的成本比重绘高的多，改变深层次的节点很可能导致父节点的一系列回流。</strong></p><p><strong>所以以下几个动作可能会导致性能问题：</strong></p><ul><li><strong>改变 window 大小</strong></li><li><strong>改变字体</strong></li><li><strong>添加或删除样式</strong></li><li><strong>文字改变</strong></li><li><strong>定位或者浮动</strong></li><li><strong>盒模型</strong></li></ul><p><strong>如何减少重绘和回流</strong></p><ul><li><strong>使用 translate 替代 top</strong></li><li><strong>使用 visibility 替换 display: none ，因为前者只会引起重绘，后者会引发 回流（改变了布局）</strong></li><li><strong>把DOM离线后修改，比如：先把DOM给display:none（回流），然后你修改100次，然后再把它显示出来</strong></li><li><strong>不要把 DOM 结点的属性值放在一个循环里当成循环里的变量</strong></li><li><strong>不要使用 table 布局，可能很小的一个小改动会造成整个 table 的重新布局</strong></li><li><strong>动画实现的速度的选择，动画速度越快，回流次数越多，也可以选择使用requestAnimationFrame</strong></li><li><strong>CSS 选择符从右往左匹配查找，避免 DOM 深度过深</strong></li><li><strong>将频繁运行的动画变为图层，图层能够阻止该节点回流影响别的元素。比如对 于 video 标签，浏览器会自动将该节点变为图层。</strong></li></ul><p><strong>谈谈对前端继承的理解</strong></p><p><strong>原型链继承，子类实例继承的属性有，子类构造函数的属性，父类构造函数的属性，父类原型上的属性<br>缺点：无法向父类传参，当父类原型上的属性改变时，所以子类实例相对应的属性都会对应改变</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Father</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;father&quot;</span>;<br>    <span class="hljs-built_in">this</span>.sex = <span class="hljs-string">&quot;man&quot;</span><br>&#125;<br>Father.prototype.hobby = <span class="hljs-string">&#x27;fish&#x27;</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Son</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;son&quot;</span>;<br>&#125;<br><span class="hljs-comment">// 原型链继承</span><br>Son.prototype = <span class="hljs-keyword">new</span> Father()<br><span class="hljs-keyword">var</span> son1 = <span class="hljs-keyword">new</span> Son()<br><span class="hljs-keyword">var</span> son2 = <span class="hljs-keyword">new</span> Son()<br>Father.prototype.hobby = <span class="hljs-string">&#x27;dog&#x27;</span> <span class="hljs-comment">//缺点，修改父类prototype上的属性时，所有子类都会随之修改</span><br><span class="hljs-built_in">console</span>.log(son1.hobby) <span class="hljs-comment">// dog</span><br><span class="hljs-built_in">console</span>.log(son2.hobby) <span class="hljs-comment">// dog</span><br><span class="hljs-built_in">console</span>.log(son1 <span class="hljs-keyword">instanceof</span> Father) <span class="hljs-comment">// true</span><br></code></pre></td></tr></table></figure><p><strong>构造函数继承（通过call，apply），子类可继承多个父类，可传参给父类<br>缺点：每个实例都有父类的构造函数，父类prototype上的属性无法继承</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 构造函数继承（通过call，apply）</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Father</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;father&quot;</span>;<br>    <span class="hljs-built_in">this</span>.sex = <span class="hljs-string">&quot;man&quot;</span><br>&#125;<br>Father.prototype.hobby = <span class="hljs-string">&#x27;fish&#x27;</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Son</span>(<span class="hljs-params">sex</span>) </span>&#123;<br>    Father.call(<span class="hljs-built_in">this</span>, sex) <span class="hljs-comment">//可继承多个父类,但是每个实例都有父类的构造函数</span><br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;son&quot;</span>;<br>&#125;<br><span class="hljs-keyword">var</span> son = <span class="hljs-keyword">new</span> Son(<span class="hljs-string">&#x27;woman&#x27;</span>)<br><span class="hljs-built_in">console</span>.log(son.sex) <span class="hljs-comment">//woman,可传参给父类</span><br><span class="hljs-built_in">console</span>.log(son.hobby) <span class="hljs-comment">//undefined，缺点，父类prototype上的属性无法继承</span><br><span class="hljs-built_in">console</span>.log(son <span class="hljs-keyword">instanceof</span> Father) <span class="hljs-comment">// false</span><br></code></pre></td></tr></table></figure><p><strong>组合继承，上述两者的结合，解决了上面的缺点和问题（常用）<br>缺点：Father.call()和new Father()执行了两次父类构造函数，增加了性能损耗，父类的原型上的constructor指向了子类，此时需要在实例化父类（new Father）后在实例化子类（new Son）之前添加一句话：Father.prototype.constructor=Father</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 组合继承</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Father</span>(<span class="hljs-params">sex</span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;father&quot;</span>;<br>    <span class="hljs-built_in">this</span>.sex = sex<br>&#125;<br>Father.prototype.hobby = <span class="hljs-string">&#x27;fish&#x27;</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Son</span>(<span class="hljs-params">sex</span>) </span>&#123;<br>    Father.call(<span class="hljs-built_in">this</span>, sex) <span class="hljs-comment">//可继承多个父类</span><br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;son&quot;</span>;<br>&#125;<br>Son.prototype = <span class="hljs-keyword">new</span> Father()<br>Father.prototype.constructor = Father <span class="hljs-comment">//解决父类的原型上的constructor指向了子类</span><br><span class="hljs-keyword">var</span> son = <span class="hljs-keyword">new</span> Son(<span class="hljs-string">&#x27;woman&#x27;</span>)<br><span class="hljs-built_in">console</span>.log(son.sex) <span class="hljs-comment">//woman,可传参给父类</span><br><span class="hljs-built_in">console</span>.log(son.hobby) <span class="hljs-comment">//fish</span><br><span class="hljs-built_in">console</span>.log(son <span class="hljs-keyword">instanceof</span> Father) <span class="hljs-comment">// true</span><br></code></pre></td></tr></table></figure><p><strong>原型式继承，和Object.create相似，通过函数进行继承，会继承父类所有属性<br>缺点：父类原型上的属性发生变化时，所有子类对应属性都会改变，子类无法直接修改属性，复用性较差</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 原型式继承</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Father</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;father&quot;</span>;<br>    <span class="hljs-built_in">this</span>.sex = <span class="hljs-string">&#x27;man&#x27;</span><br>&#125;<br>Father.prototype.hobby = <span class="hljs-string">&#x27;fish&#x27;</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Son</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;son&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">inherit</span>(<span class="hljs-params">father</span>) </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Fn</span>(<span class="hljs-params"></span>) </span>&#123;&#125;<br>    Fn.prototype = father;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Fn() <span class="hljs-comment">//类似于复制了father这个对象</span><br>&#125;<br><span class="hljs-keyword">var</span> father = <span class="hljs-keyword">new</span> Father()<br><span class="hljs-keyword">var</span> son1 = inherit(father)<br>Father.prototype.hobby = <span class="hljs-string">&#x27;dog&#x27;</span> <span class="hljs-comment">//缺点，修改父类prototype上的属性时，所有子类都会随之修改</span><br><span class="hljs-keyword">var</span> son2 = inherit(father)<br><span class="hljs-built_in">console</span>.log(son1.sex) <span class="hljs-comment">//man</span><br><span class="hljs-built_in">console</span>.log(son1.hobby) <span class="hljs-comment">//dog</span><br><span class="hljs-built_in">console</span>.log(son2.hobby) <span class="hljs-comment">//dog</span><br><span class="hljs-built_in">console</span>.log(son1 <span class="hljs-keyword">instanceof</span> Father) <span class="hljs-comment">// true</span><br></code></pre></td></tr></table></figure><p><strong>寄生式继承，继承父类所有属性，并且可以添加子类自己的属性方法<br>缺点：代码复用率低</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Father</span>(<span class="hljs-params">sex</span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;father&quot;</span>;<br>    <span class="hljs-built_in">this</span>.sex = sex <span class="hljs-comment">//实例传参</span><br>&#125;<br>Father.prototype.hobby = <span class="hljs-string">&#x27;fish&#x27;</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Son</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;son&quot;</span>;<br>&#125;<br><span class="hljs-built_in">Object</span>.prototype.myCreate = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>&#123;<span class="hljs-comment">//实现Object.create</span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Fn</span>(<span class="hljs-params"></span>) </span>&#123;&#125;<br>    Fn.prototype = obj;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Fn()<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">inherit</span>(<span class="hljs-params">father</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> _father = <span class="hljs-built_in">Object</span>.myCreate(father)<span class="hljs-comment">//克隆对象</span><br>    _father.getInfo = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<span class="hljs-comment">//增强子类，修改属性，产生子类独有的方法和属性，但是耦合高，复用性差，不同子类的写法各不同</span><br>        <span class="hljs-built_in">console</span>.log(_father.name)<br>        <span class="hljs-built_in">console</span>.log(_father.hobby)<br>        <span class="hljs-built_in">console</span>.log(_father.sex)<br>    &#125;<br>    <span class="hljs-keyword">return</span> _father;<br>&#125;<br><span class="hljs-keyword">var</span> father = <span class="hljs-keyword">new</span> Father(<span class="hljs-string">&#x27;woman&#x27;</span>)<br><span class="hljs-keyword">var</span> son = inherit(father)<br>son.getInfo() <span class="hljs-comment">//father，fish，woman</span><br></code></pre></td></tr></table></figure><p><strong>寄生式组合继承，继承父类所有属性，解决调用两次父类构造函数问题：一次是在创建子类型原型，一次在子类内部（理论上是最理想的继承）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 寄生式组合继承</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Father</span>(<span class="hljs-params">sex</span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;father&quot;</span>;<br>    <span class="hljs-built_in">this</span>.sex = sex <span class="hljs-comment">//实例传参</span><br>&#125;<br>Father.prototype.hobby = <span class="hljs-string">&#x27;fish&#x27;</span><br>Father.prototype.getName = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.name)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Son</span>(<span class="hljs-params">sex</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.superClass) <span class="hljs-comment">//Father</span><br>    Father.call(<span class="hljs-built_in">this</span>, sex); <span class="hljs-comment">//构造函数继承传递参数</span><br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;son&quot;</span>;<br>    <span class="hljs-built_in">this</span>.hobby = <span class="hljs-string">&quot;dog&quot;</span>;<br>&#125;<br>Son.prototype.getName = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.name)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Grandson</span>(<span class="hljs-params">sex</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.superClass) <span class="hljs-comment">//Son</span><br>    Son.call(<span class="hljs-built_in">this</span>, sex); <span class="hljs-comment">//构造函数继承传递参数</span><br>    <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;grandson&quot;</span>;<br>    <span class="hljs-built_in">this</span>.hobby = <span class="hljs-string">&quot;cat&quot;</span>;<br>&#125;<br><br><span class="hljs-keyword">var</span> inherit = (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">F</span>(<span class="hljs-params"></span>) </span>&#123;&#125; <span class="hljs-comment">//使用闭包产生私有函数，使每个子类继承的父类属性无引用关系</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">father, son</span>) </span>&#123;<br>        F.prototype = father.prototype; <span class="hljs-comment">//私有函数取出父类的原型</span><br>        son.prototype = <span class="hljs-keyword">new</span> F();<br>        son.prototype.superClass = father; <span class="hljs-comment">//子类的超类指向父类，子类通过this.superClass调用Father</span><br>        son.prototype.constructor = son;<br>    &#125;<br>&#125;())<br>inherit(Father, Son)<br>inherit(Son, Grandson)<br><span class="hljs-keyword">var</span> father = <span class="hljs-keyword">new</span> Father(<span class="hljs-string">&#x27;fatherMan&#x27;</span>)<br><span class="hljs-keyword">var</span> son = <span class="hljs-keyword">new</span> Son(<span class="hljs-string">&#x27;sonMan&#x27;</span>)<br><span class="hljs-keyword">var</span> grandson = <span class="hljs-keyword">new</span> Grandson(<span class="hljs-string">&#x27;grandsonMan&#x27;</span>)<br><span class="hljs-built_in">console</span>.log(son <span class="hljs-keyword">instanceof</span> Father) <span class="hljs-comment">//true</span><br><span class="hljs-built_in">console</span>.log(grandson <span class="hljs-keyword">instanceof</span> Son) <span class="hljs-comment">//true</span><br><span class="hljs-built_in">console</span>.log(grandson <span class="hljs-keyword">instanceof</span> Father) <span class="hljs-comment">//true</span><br><span class="hljs-built_in">console</span>.log(father.sex) <span class="hljs-comment">//fatherMan</span><br><span class="hljs-built_in">console</span>.log(son.sex) <span class="hljs-comment">//sonMan</span><br><span class="hljs-built_in">console</span>.log(grandson.sex) <span class="hljs-comment">//grandsonMan</span><br><span class="hljs-built_in">console</span>.log(father.hobby) <span class="hljs-comment">//fish</span><br><span class="hljs-built_in">console</span>.log(son.hobby) <span class="hljs-comment">//dog</span><br><span class="hljs-built_in">console</span>.log(grandson.hobby) <span class="hljs-comment">//cat</span><br>father.getName() <span class="hljs-comment">//father</span><br>son.getName() <span class="hljs-comment">//son</span><br>grandson.getName() <span class="hljs-comment">//grandson</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS进阶篇（前端面试题整合）（二）</title>
    <link href="/2020/11/07/JS%E8%BF%9B%E9%98%B6%E7%AF%87%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2020/11/07/JS%E8%BF%9B%E9%98%B6%E7%AF%87%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>Ajax 是什么? 如何创建一个Ajax？</strong></p><p><strong>AJAX全称是Asychronous JavaScript And Xml（异步的 JavaScript 和 XML）<br>它的作用是用来实现客户端与服务器端的异步通信效果，实现页面的局部刷新，早期的浏览器并不能原生支持ajax，可以使用隐藏帧（iframe）方式变相实现异步效果，后来的浏览器提供了对ajax的原生支持<br>其主要通过XMLHttpRequest(标准浏览器)、ActiveXObject(IE浏览器)对象实现异步通信效果<br>实现方式（<a href="https://gitee.com/DieHunter/myCode/blob/master/Tools/methods.js">gitee上的案例</a>）：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> xhr =<span class="hljs-literal">null</span>;<span class="hljs-comment">//创建对象 </span><br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">window</span>.XMLHttpRequest)&#123;<br>xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>xhr = <span class="hljs-keyword">new</span> ActiveXObject(<span class="hljs-string">&quot;Microsoft.XMLHTTP&quot;</span>);<br>&#125;<br>xhr.open(“方式”,”地址”,”标志位”);<span class="hljs-comment">//初始化请求 </span><br>xhr.setRequestHeader(“”,””);<span class="hljs-comment">//设置http头信息 </span><br>xhr.onreadystatechange =<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;&#125;<span class="hljs-comment">//指定回调函数 </span><br>xhr.send();<span class="hljs-comment">//发送请求 </span><br></code></pre></td></tr></table></figure><p><strong>Ajax的优缺点</strong></p><p><strong>优点：</strong></p><ul><li><strong>通过异步模式，提升了用户体验</strong></li><li><strong>优化了浏览器和服务器之间的传输，按需获取数据，减少不必要的数据往返，减少了带宽占用</strong></li><li><strong><strong>Ajax在客户端运行，承担了一部分本来由服务器承担的工作，减少了大用户量下的服务器负载。</strong></strong></li></ul><p><strong>缺点：</strong></p><ul><li><strong>ajax不支持浏览器back按钮</strong></li><li><strong>安全问题 AJAX暴露了与服务器交互的细节</strong></li><li><strong>对搜索引擎的支持比较弱</strong></li><li><strong>破坏了程序的异常机制。</strong></li></ul><p><strong>一个页面从输入 URL 到页面加载显示完成，发生了什么？</strong></p><ul><li><strong>当发送一个 URL 请求时，不管这个 URL 是 Web 页面的 URL 还是 Web 页面上每个资源的 URL，浏览器都会开启一个线程来处理这个请求，同时在远程 DNS 服务器上启动一个 DNS 查询。这能使浏览器获得请求对应的 IP 地址。</strong></li><li><strong>浏览器与远程 Web 服务器通过 TCP 三次握手协商来建立一个 TCP/IP 连接。该握手包括一个同步报文，一个同步-应答报文和一个应答报文，这三个报文在 浏览器和服务器之间传递。该握手首先由客户端尝试建立起通信，而后服务器应答并接受客户端的请求，最后由客户端发出该请求已经被接受的报文。</strong></li><li><strong>一旦 TCP/IP 连接建立，浏览器会通过该连接向远程服务器发送 HTTP 的 GET 请求。远程服务器找到资源并使用 HTTP 响应返回该资源，值为 200 的 HTTP 响应状态表示一个正确的响应。</strong></li><li><strong>此时，Web 服务器提供资源服务，客户端开始下载资源。</strong></li><li><strong>后续HTML页面解析参照<a href="https://blog.csdn.net/time_____/article/details/109472503">前端面试题整合（JS进阶篇）（一）</a>的</strong>“<strong>html页面怎么解析的？它加载顺序是什么？</strong>”</li></ul><p><strong>JQuery一个对象为何可以同时绑定多个事件</strong></p><p><strong>低层实现方式是使用addEventListner或attachEvent兼容不同的浏览器实现事件的绑定，这样可以给同一个对象注册多个事件</strong></p><p><strong>对页面某个节点的拖曳</strong></p><p><strong>1. 给需要拖拽的节点绑定mousedown, mousemove, mouseup事件<br>2. mousedown事件触发后，开始拖拽<br>3. mousemove时，需要通过event.clientX和clientY获取拖拽位置，并实时更新位置<br>4. mouseup时，拖拽结束<br>5. 需要注意浏览器边界的情况</strong></p><p><strong><a href="https://gitee.com/DieHunter/myCode/blob/master/Tools/methods.js">gitee上的案例</a></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mouseMove</span>(<span class="hljs-params">ele, parent</span>) </span>&#123;<br>    ele.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, moveHandler);<br>    ele.style.position = <span class="hljs-string">&#x27;absolute&#x27;</span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">moveHandler</span>(<span class="hljs-params">e</span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&#x27;mousedown&#x27;</span>) &#123;<br>            parent.ele = <span class="hljs-built_in">this</span>;<br>            parent.point = &#123;<br>                <span class="hljs-attr">x</span>: e.offsetX,<br>                <span class="hljs-attr">y</span>: e.offsetY<br>            &#125;<br>            parent.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, moveHandler);<br>            parent.addEventListener(<span class="hljs-string">&#x27;mouseup&#x27;</span>, moveHandler);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&#x27;mousemove&#x27;</span>) &#123;<br>            <span class="hljs-built_in">this</span>.ele.style.left = e.x - <span class="hljs-built_in">this</span>.point.x + <span class="hljs-string">&quot;px&quot;</span>;<br>            <span class="hljs-built_in">this</span>.ele.style.top = e.y - <span class="hljs-built_in">this</span>.point.y + <span class="hljs-string">&quot;px&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&#x27;mouseup&#x27;</span>) &#123;<br>            parent.removeEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>, moveHandler);<br>            parent.ele = <span class="hljs-literal">null</span>;<br>            parent.point = <span class="hljs-literal">null</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>new操作符具体干了什么</strong></p><ol><li><strong>创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。</strong></li><li><strong>属性和方法被加入到 this 引用的对象中。</strong></li><li><strong>新创建的对象由 this 所引用，并且最后隐式的返回 this</strong></li></ol><p><strong>以下是模拟操作：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">new</span> TestObj(<span class="hljs-string">&#x27;str&#x27;</span>)=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">let</span> obj=&#123;&#125;;  <span class="hljs-comment">//创建一个空对象</span><br>    obj.__proto__=TestObj.prototype;<br>    <span class="hljs-comment">//把该对象的原型指向构造函数的原型对象，就建立起原型了：obj-&gt;Animal.prototype-&gt;Object.prototype-&gt;null</span><br>    <span class="hljs-keyword">return</span> TestObj.call(obj,<span class="hljs-built_in">arguments</span>);<span class="hljs-comment">// 绑定this到实例化的对象上</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>前端开发的优化问题</strong></p><p><strong>（1） 减少http请求次数：CSS Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。<br>（2） 前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存AJAX请求结果，每次操作本地变量，不用请求，减少请求次数<br>（3） 用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。<br>（4） 当需要设置的样式很多时设置className而不是直接操作style。<br>（5） 少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。<br>（6） 避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。<br>（7） 图片预加载，将样式表放在顶部，将脚本放在底部 加上时间戳。<br>（8） 避免在页面的主体布局中使用table，table要等其中的内容完全下载之后才会显示出来，显示比div+css布局慢。</strong></p><p><strong>fetch和Ajax有什么不同</strong></p><ul><li><strong>XMLHttpRequest 是一个设计粗糙的 API，不符合关注分离（Separation of Concerns）的原则，配置和调用方式非常混乱，而且基于事件的异步模型写起来也没有现代的 Promise，generator/yield，async/await 友好</strong></li><li><strong>fetch 是浏览器提供的一个新的 web API，它用来代替 Ajax（XMLHttpRequest），其提供了更优雅的接口，更灵活强大的功能。</strong></li><li><strong>Fetch 优点主要有：****语法简洁，更加语义化</strong>，<strong>基于标准 Promise 实现，支持 async/await</strong></li></ul><p><strong>如何编写高性能的Javascript</strong></p><ul><li><strong>使用 DocumentFragment 优化多次 append</strong></li><li><strong>通过模板元素 clone，替代 createElement</strong></li><li><strong>使用一次 innerHTML 赋值代替构建 dom 元素</strong></li><li><strong>使用 firstChild 和 nextSibling 代替 childNodes 遍历 dom 元素</strong></li><li><strong>使用 Array 做为 StringBuffer ，代替字符串拼接的操作</strong></li><li><strong>将循环控制量保存到局部变量</strong></li><li><strong>顺序无关的遍历时，用 while 替代 for</strong></li><li><strong>将条件分支，按可能性顺序从高到低排列</strong></li><li><strong>在同一条件子的多（ &gt;2 ）条件分支时，使用 switch 优于 if</strong></li><li><strong>使用三目运算符替代条件分支</strong></li><li><strong>需要不断执行的时候，优先考虑使用 setInterval</strong></li></ul><p><strong>定时器setInterval有一个有名函数fn，setInterval（fn,500）与setInterval（fn(),500）有什么区别？</strong></p><p><strong>第一个是重复执行每500毫秒执行一次，后面一个只执行一次。</strong></p><p><strong>简述一下浏览器内核</strong></p><p><strong>浏览器内核又可以分成两部分：渲染引擎和 JS 引擎。它负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。JS 引擎则是解析 Javascript 语言，执行 javascript 语言来实现网页的动态效果。</strong></p><p><strong>JavaScript的属性元数据有哪些？</strong></p><ul><li><strong>writable:true属性值可修改</strong></li><li><strong>enumerable:true属性可枚举</strong></li><li><strong>configurable:true属性可重新配置</strong></li><li><strong>writable:false属性值不可修改</strong></li><li><strong>enumerable:false属性不可枚举</strong></li><li><strong>configurable:false 属性不可重新配置</strong></li></ul><p><strong>懒加载（瀑布流）的实现原理</strong></p><p><strong>意义：懒加载的主要目的是作为服务器前端优化，减少请求数或延迟请求数实现原理：先加载一部分数据，当触发某个条件时利用异步加载剩余的数据，新得到的数据，不会影响有数据的显示，同时最大程度上减少服务器的资源消耗<br>实现方式：<br>（1）延迟加载，使用setTimeOut或setInterval进行加载延迟<br>（2）符合某些条件，或触发了某些事件才开始异步下载<br>（3）可视区加载</strong></p><p><strong>我的<a href="https://blog.csdn.net/time_____/article/details/84639454">懒加载文章</a>，以及<a href="https://gitee.com/DieHunter/myCode/tree/master/%E7%80%91%E5%B8%83%E6%B5%81">源码地址</a></strong></p><p><strong>js实现数组去重</strong></p><p><strong>双层循环，外层循环元素，内层循环时比较值，****如果有相同的值则跳过，不相同则push进数组</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyArray</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Array</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>(...arguments)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">distinct</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">var</span> myArr = <span class="hljs-built_in">this</span>,<br>            list = []<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; myArr.length; i++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = i + <span class="hljs-number">1</span>; j &lt; myArr.length; j++) &#123;<br>                <span class="hljs-keyword">if</span> (myArr[i] === myArr[j]) &#123;<br>                    j = ++i;<br>                &#125;<br>            &#125;<br>            list.push(myArr[i]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> list;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> _arr = <span class="hljs-keyword">new</span> MyArray(<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>);<br><span class="hljs-built_in">console</span>.log(_arr.distinct()); <span class="hljs-comment">//[7, 1, 8, 5, 2, 4, 6, 9]</span><br></code></pre></td></tr></table></figure><p><strong>利用对象的属性不能相同的特点进行去重</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyArray</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Array</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>(...arguments)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">distinct</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">var</span> myArr = <span class="hljs-built_in">this</span>,<br>            list = [],<br>            obj = &#123;&#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; myArr.length; i++) &#123;<br>            obj[myArr[i]] || (obj[myArr[i]] = <span class="hljs-number">1</span>,<br>                list.push(myArr[i])) <span class="hljs-comment">//如果能查找到，证明数组元素重复了</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> list;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> _arr = <span class="hljs-keyword">new</span> MyArray(<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>);<br><span class="hljs-built_in">console</span>.log(_arr.distinct()); <span class="hljs-comment">//[4, 5, 6, 7, 1, 2, 8, 9]</span><br></code></pre></td></tr></table></figure><p><strong>Set数据结构，它类似于数组，其成员的值都是唯一的</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dedupe</span>(<span class="hljs-params">array</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Array</span>.from(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(array));<br>&#125;<br><span class="hljs-built_in">console</span>.log(dedupe([<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>])) <span class="hljs-comment">//[1,2,3]</span><br></code></pre></td></tr></table></figure><p><strong>实现快速排序和冒泡排序</strong></p><p><strong>快速排序****：选取位置在数组中间的一个数，然后比它小的放在left[]的一个新数组里面，比他大的放在right[]的一个新数组里面，以此类推，重复执行这个过程，利用递归的思想，直至执行到left[]和right[]里面都只有一个数</strong><br><strong>冒泡排序：两两比较，前面的比后面的大，则换位。第一轮list.length-1次，挑出最大的；第二轮list.length-1-1次，挑出第二大的。以此往复</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyArray</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Array</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>(...arguments)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">quickSort</span>(<span class="hljs-params">list</span>)</span> &#123; <span class="hljs-comment">//快速排序</span><br>        <span class="hljs-keyword">var</span> myArr = <span class="hljs-built_in">this</span>,<br>            listConfig = &#123;<br>                <span class="hljs-attr">midItem</span>: myArr[<span class="hljs-built_in">parseInt</span>(myArr.length / <span class="hljs-number">2</span>)],<br>                <span class="hljs-attr">leftList</span>: <span class="hljs-keyword">new</span> MyArray(),<br>                <span class="hljs-attr">rightList</span>: <span class="hljs-keyword">new</span> MyArray()<br>            &#125;<br>        <span class="hljs-keyword">if</span> (myArr.length &lt;= <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span> myArr<br>        &#125;;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; myArr.length; i++) &#123;<br>            myArr[i] &lt; listConfig.midItem ? listConfig.leftList.push(myArr[i]) : myArr[i] &gt; listConfig<br>                .midItem ? listConfig.rightList.push(myArr[i]) : <span class="hljs-string">&#x27;&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> listConfig.leftList.quickSort().concat([listConfig.midItem], listConfig.rightList<br>            .quickSort()); <span class="hljs-comment">//递归</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">bubbleSort</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//冒泡排序</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.length - <span class="hljs-number">1</span>; i++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-built_in">this</span>.length - <span class="hljs-number">1</span> - i; j++) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>[j] &gt; <span class="hljs-built_in">this</span>[j + <span class="hljs-number">1</span>]) &#123;<br>                    <span class="hljs-keyword">var</span> item = <span class="hljs-built_in">this</span>[j];<br>                    <span class="hljs-built_in">this</span>[j] = <span class="hljs-built_in">this</span>[j + <span class="hljs-number">1</span>];<br>                    <span class="hljs-built_in">this</span>[j + <span class="hljs-number">1</span>] = item;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span><br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> quickSortArray = <span class="hljs-keyword">new</span> MyArray(<span class="hljs-number">19</span>, <span class="hljs-number">15</span>, <span class="hljs-number">18</span>, <span class="hljs-number">17</span>, <span class="hljs-number">11</span>, <span class="hljs-number">21</span>, <span class="hljs-number">14</span>, <span class="hljs-number">61</span>, <span class="hljs-number">13</span>, <span class="hljs-number">10</span>, <span class="hljs-number">25</span>);<br><span class="hljs-keyword">var</span> bubbleSortArray = <span class="hljs-keyword">new</span> MyArray(<span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">10</span>, <span class="hljs-number">25</span>);<br><span class="hljs-built_in">console</span>.log(quickSortArray.quickSort()); <span class="hljs-comment">//[10, 11, 13, 14, 15, 17, 18, 19, 21, 25, 61]</span><br><span class="hljs-built_in">console</span>.log(bubbleSortArray.bubbleSort()); <span class="hljs-comment">//[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 25]</span><br></code></pre></td></tr></table></figure><p><strong>谈谈节流和防抖，如何实现</strong></p><p><strong>节流：使频繁执行的函数，定时执行，高频率函数执行时，使执行率减少，每n秒才能执行一次，打个比方：每隔1秒钟，会执行5次滚动条滚动事件，我只让它每一秒执行一次（案例：网站中的返回顶部）</strong></p><p><strong>防抖：使频繁执行的函数，延时执行，高频率函数执行时，n秒内只执行一次，在事件内多次执行会延时，打个比方：用户在输入框中输入字符，当用户一直在输入时，我们做个延时，当用户输入完毕后会有一段时间停顿，若这个停顿时间大于我们的我们延时时间，我们就进行下一步操作，反之则不进行并且一直延时（案例：搜索引擎搜索输入框）</strong></p><p><strong>区别：对于高频率执行函数，节流是每隔规定时间都会执行一次，防抖是只在规定时间外的最后一次执行</strong></p><p><strong>实现过程：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> count = <span class="hljs-number">0</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">OptimizeEvent</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;&#125;<br>    <span class="hljs-function"><span class="hljs-title">throttle</span>(<span class="hljs-params">fn, time</span>)</span> &#123; <span class="hljs-comment">//节流</span><br>        <span class="hljs-keyword">var</span> canDo = <span class="hljs-literal">true</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (!canDo) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>            &#125;<br>            canDo = <span class="hljs-literal">false</span><br>            <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>                fn.call(<span class="hljs-built_in">this</span>)<br>                canDo = <span class="hljs-literal">true</span><br>            &#125;, time)<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">debounce</span>(<span class="hljs-params">fn, time</span>)</span> &#123; <span class="hljs-comment">//防抖</span><br>        <span class="hljs-keyword">var</span> _timer = <span class="hljs-literal">null</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (_timer) &#123;<br>                <span class="hljs-built_in">clearTimeout</span>(_timer)<br>                _timer = <span class="hljs-literal">null</span><br>            &#125;<br>            _timer = <span class="hljs-built_in">setTimeout</span>(fn, time)<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> _event = <span class="hljs-keyword">new</span> OptimizeEvent()<br>inputBox.addEventListener(<span class="hljs-string">&#x27;input&#x27;</span>, _event.debounce(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    showBox.textContent = inputBox.value<br>&#125;, <span class="hljs-number">1000</span>))<br><span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">&#x27;scroll&#x27;</span>, _event.throttle(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(count++)<br>&#125;, <span class="hljs-number">1000</span>))<br></code></pre></td></tr></table></figure><p><strong>谈谈深拷贝的实现</strong></p><p><strong>深拷贝相对浅拷贝不同的是，深拷贝内所有引用类型属性值都是在新开辟的内存地址，被拷贝的原数据发生改变时不会影响复制后的对象。</strong></p><p><strong>常见方法</strong></p><ul><li><p><strong>JSON.parse(),JSON.stringify()</strong></p></li><li><p><strong>jQury的$.extend(true,{},obj)</strong></p></li><li><p><strong>lodash的</strong><strong>_.cloneDeep</strong></p></li><li><p><strong><a href="https://blog.csdn.net/time_____/article/details/85392699">我的深复制文章</a></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">deepClone</span>(<span class="hljs-params">org, tag</span>) </span>&#123;<br><span class="hljs-keyword">var</span> tag = tag || &#123;&#125;; <span class="hljs-comment">//初始化要复制的对象</span><br><span class="hljs-keyword">var</span> name = <span class="hljs-built_in">Object</span>.getOwnPropertyNames(org); <span class="hljs-comment">//获取该对象的属性名，以字符串数组返回</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; name.length; i++) &#123; <span class="hljs-comment">//遍历对象</span><br><span class="hljs-keyword">var</span> desc = <span class="hljs-built_in">Object</span>.getOwnPropertyDescriptor(org, name[i]); <span class="hljs-comment">//获取对象的属性描述对象，无引用关系，返回另一个对象，改变时原对象不发生变化(复制的关键)</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> desc.value === <span class="hljs-string">&#x27;object&#x27;</span> &amp;&amp; desc.value !== <span class="hljs-literal">null</span>) &#123; <span class="hljs-comment">//若遍历的每一项非空且为对象，则为引用值，则进行下一步</span><br><span class="hljs-keyword">var</span> obj = desc.value.toString() === <span class="hljs-string">&#x27;[object Object]&#x27;</span> ? &#123;&#125; : []; <span class="hljs-comment">//判断是数组还是对象</span><br><span class="hljs-built_in">Object</span>.defineProperty(tag, name[i], &#123; <span class="hljs-comment">//设置对象属性值，前三个的值是返回true或false</span><br><span class="hljs-attr">configurable</span>: desc.configurable, <span class="hljs-comment">//是否可删除可替换</span><br><span class="hljs-attr">enumerable</span>: desc.enumerable, <span class="hljs-comment">//是否可枚举可遍历</span><br><span class="hljs-attr">writable</span>: desc.writable, <span class="hljs-comment">//是否可写入</span><br><span class="hljs-attr">value</span>: obj <span class="hljs-comment">//对象的值</span><br>&#125;);<br>copyObj(desc.value, obj); <span class="hljs-comment">//再次执行函数</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">Object</span>.defineProperty(tag, name[i], desc); <span class="hljs-comment">//否则直接将该对象的属性值进行复制(原始值)</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> tag;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>常用的对象方法有哪些</strong></p></li><li><p><strong>添加或更改对象属性<br>Object.defineProperty(object, property, descriptor)</strong></p></li><li><p><strong>添加或更改多个对象属性<br>Object.defineProperties(object, descriptors)</strong></p></li><li><p><strong>访问属性<br>Object.getOwnPropertyDescriptor(object, property)</strong></p></li><li><p><strong>以数组返回所有属性<br>Object.getOwnPropertyNames(object)</strong></p></li><li><p><strong>以数组返回所有可枚举的属性<br>Object.keys(object)</strong></p></li><li><p><strong>访问原型<br>Object.getPrototypeOf(object)</strong></p></li><li><p><strong>阻止向对象添加属性<br>Object.preventExtensions(object)</strong></p></li><li><p><strong>如果可将属性添加到对象，则返回 true<br>Object.isExtensible(object)</strong></p></li><li><p><strong>防止更改对象属性（而不是值）<br>Object.seal(object)</strong></p></li><li><p><strong>如果对象被密封，则返回 true<br>Object.isSealed(object)</strong></p></li><li><p><strong>防止对对象进行任何更改<br>Object.freeze(object)</strong></p></li><li><p><strong>如果对象被冻结，则返回 true<br>Object.isFrozen(object)</strong></p></li></ul><p><strong>实现以下输出</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> a = ?<br> <span class="hljs-keyword">if</span> (a == <span class="hljs-number">1</span>&amp;&amp; a == <span class="hljs-number">2</span> &amp;&amp; a == <span class="hljs-number">3</span>) &#123;<br>     <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;回答正确&#x27;</span>)<br> &#125;<br> <span class="hljs-comment">// 打印回答正确</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ConsoleA</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">this</span>.num = <span class="hljs-number">0</span><br>        <span class="hljs-built_in">this</span>.valueOf()<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">valueOf</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.num++<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> ConsoleA()<br>    <span class="hljs-keyword">if</span> (a == <span class="hljs-number">1</span>&amp;&amp; a == <span class="hljs-number">2</span> &amp;&amp; a == <span class="hljs-number">3</span>) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;回答正确&#x27;</span>)<br>    &#125;<br>    <span class="hljs-comment">// 打印回答正确</span><br></code></pre></td></tr></table></figure><p><strong>因为直接调用a==1会进行隐式类型转换从而调用object的valueOf函数</strong></p><p><strong>思考以下代码输出，为什么？</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> num = <span class="hljs-number">9</span><br><span class="hljs-keyword">switch</span> (num) &#123;<br>    <span class="hljs-attr">default</span>:<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;default&#x27;</span>)<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">break</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>输出 default 1 2<br>一般情况下default放在switch最后，作为类似于else的作用，而写在switch最上面就相当于if(true)，而switch的特点是进入case之后不break跳出来就会一直执行而不做条件判断，所以后面case中的代码都会运行</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS进阶篇（前端面试题整合）（一）</title>
    <link href="/2020/11/06/JS%E8%BF%9B%E9%98%B6%E7%AF%87%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2020/11/06/JS%E8%BF%9B%E9%98%B6%E7%AF%87%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>js的垃圾回收机制是什么原理</strong></p><p><strong>垃圾回收机制有两种方法</strong></p><ul><li><strong>第一种是标记清除法：当变量进入执行环境时,就标记这个变量为”进入环境”,当变量离开环境的时候,则将其标记为”离开环境”,垃圾收集器在运行的时候会给储存在内存中的所有变量都加上标记,然后它会去掉环境中的标量以及被环境中的变量引用的标记,而在此之后再被加上标记的变量将被视为准备删除的变量,原因是环境中的变量已经无法访问到这些变量了,最后,垃圾收集器完成内存清除工作,销毁那些带标记的值,并回收他们所占用的内存空间</strong></li><li><strong>第二种是引用计数法：当声明了一个变量并将一个引用类型赋值给改变量是,则这个值得引用次数就是1,相反,如果包含对这个值引用的变量又取得了另外一个值,则这个值得引用次数就减1,当这个引用次数变成0时,则说明没有办法在访问这个值了,因而就可以将其所占的内存空间给收起来,这样垃圾收集器再下次运行时,它就会释放那些引用次数为0的值所占的内存</strong></li></ul><p><strong>哪些操作会造成内存泄露，怎样避免内存泄露</strong></p><p><strong>会造成内存泄漏的操作：</strong></p><ul><li><strong>意外的全局变量引起的内存泄露</strong></li><li><strong>闭包引起的内存泄露</strong></li><li><strong>控制台日志</strong></li><li><strong>没有清理的DOM元素引用</strong></li><li><strong>被遗忘的定时器或者回调</strong></li></ul><p><strong>避免内存泄露的操作：</strong></p><ul><li><strong>减少不必要的全局变量，或者生命周期较长的对象，及时对无用的数据进行垃圾回收</strong></li><li><strong>注意程序逻辑，避免“死循环”之类的</strong></li><li><strong>避免创建过多的对象 原则：不用了的东西要及时归还（置为null）</strong></li></ul><p><strong>AMD\CMD区别</strong></p><ul><li><strong>AMD即Asynchronous Module Definition,翻译过来就是异步模块化定义（RequireJS）</strong></li><li><strong>CMD即 common moudle definition,翻译过来即通用模块定义（SeaJS）</strong></li><li><strong>RequireJS在主文件里是将所有的文件同时加载，然而SeaJS强调一个文件一个模块。</strong></li><li><strong>AMD推崇依赖前置，CMD推崇依赖就近。</strong></li><li><strong>AMD加载完模块后，就立马执行该模块；CMD加载完某个模块后没有立即执行而是等到遇到require语句的时再执行</strong></li><li><strong>所以，他们两者的不同导致各自的优点是AMD用户体验好，因为模块提前执行了；CMD性能好，因为只有用户需要的时候才执行。</strong></li></ul><p><strong>面向对象的三个特性</strong></p><p><strong>封装 ： 屏蔽内部细节 用户直接调用被封装的功能<br>继承 ： 子类拥有父类的所有属性或方法<br>多态 （js中不存在多态概念）</strong></p><p><strong>原型，原型链的理解</strong></p><p><strong>所有的构造函数都有一个prototype属性，这个属性也叫 原型对象 构造函数.prototype 所有的构造函数new出来的对象也都有一个原型对象 实现 ：对象.__proto__<br>原型链就是实例对象和原型之间的链接<br>原型对象的执行流程：</strong></p><ul><li><strong>首先去实例上查找，如果找到了就返回</strong></li><li><strong><strong>如果没做查找到，就去改构造函数的原型上查找，如果找到了就返回，如果没找到，就去Object.prototype的原型上查找，找到了就返回，否则返回undefined</strong></strong></li></ul><p><strong>继承的方式</strong></p><p><strong>1.通过改变父类的执行环境来实现<br>2.通过call<br>3.通过apply<br>4.原型继承<br>5.混合继承<br>6.es6构造函数</strong></p><p><strong>作用域链的理解</strong></p><p><strong>作用域链的作用是保证执行环境里有权访问的变量和函数是有序的，作用域链的变量只能向上访问，变量访问到window对象即被终止，作用域链向下访问变量是不被允许的</strong><br><strong>安全隐患：污染全局环境，或者造成内存泄露的问题，变量的提升</strong></p><p><strong>闭包的理解</strong></p><p><strong>什么是闭包<br>一个函数内部返回一个匿名函数，这个函数就称为闭包<br>闭包中this指向 window<br>特点<br>（1）函数嵌套函数<br>（2）函数可以引用外层的参数和变量<br>（3）参数和变量不会被垃圾回收机制回收<br>闭包的缺点：常驻内存，会增大内存使用量，使用不当很容易造成内存泄露。<br>为何要使用闭包：为了设计私有方法和变量，避免全局变量污染 希望一个变量长期驻扎在内存中</strong></p><p><strong>下面这个ul，如何点击每一列的时候alert其index（闭包解决方式）</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;test&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是第一条<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是第二条<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是第三条<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>方法一：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//将i属性绑定到标签对象中的index</span><br><span class="hljs-keyword">var</span> liItems=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;test&#x27;</span>).getElementsByTagName(<span class="hljs-string">&#x27;li&#x27;</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;liItems.length;i++)<br>&#123;<br>    liItems[i].index=i;<br>    liItems[i].onclick=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>        alert(<span class="hljs-built_in">this</span>.index);<br>    &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>方法二：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//将i属性通过参数传递至function作用域中，立即执行函数在下一次循环之前先将i绑定至作用域</span><br><span class="hljs-keyword">var</span> liItems=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;test&#x27;</span>).getElementsByTagName(<span class="hljs-string">&#x27;li&#x27;</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;liItems.length;i++)<br>&#123;<br>     liItems[i].onclick=(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>            alert(a);<br>        &#125;<br>    &#125;)(i);<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>方法三（es6的let产生暂时性死区，与声明的变量所在的块级作用域（for循环内）都不会造成闭包，var只受function的作用域影响，let受所有带‘{}‘大括号的作用域影响）：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//通过let</span><br><span class="hljs-keyword">var</span> liItems=<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;test&#x27;</span>).getElementsByTagName(<span class="hljs-string">&#x27;li&#x27;</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; liItems.length; i++) &#123;<br>            liItems[i].onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                alert(i);<br>            &#125;<br>        &#125;<br></code></pre></td></tr></table></figure><p><strong>高内聚低耦合的理解</strong></p><p><strong>高内聚 ：模块内部高内聚 。 一个系统有多个模块组成，在划分模块式，要把功能关系紧密的放到一个模块中，这就叫做高内聚低耦合：功能关系远的放到其它模块中。模块之间的联系越少越好，接口越简单越好，这叫做低耦合，也称为细线通信</strong></p><p><strong>TCP和UDP的最完整的区别</strong></p><p><strong>1.基于连接与无连接<br>2.TCP要求系统资源较多，UDP较少；<br>3.UDP程序结构较简单<br>4.流模式（TCP）与数据报模式(UDP);<br>5.TCP保证数据正确性，UDP可能丢包<br>6.TCP保证数据顺序，UDP不保证</strong></p><p><strong>JS处理异步的方式</strong></p><ul><li><strong>利用回调函数（es5常用方法）</strong></li><li><strong>用async和await来处理异步（es7-8中新增）</strong></li><li><strong>promise（es6新增）</strong></li><li><strong>发布/订阅 我们假定，存在一个”信号中心”，某个任务执行完成，就向信号中心”发布”（publish）一个信号，其他任务可以向信号中心”订阅”（subscribe）这个信号，从而知道什么时候自己可以开始执行。这就叫做”发布/订阅模式”（publish-subscribe pattern），又称”观察者模式”（observer pattern）（和事件原理一样）</strong></li><li><strong>事件 触发一个事件也可以作为异步的处理 当触发某个事件再来执行某件事（js底层解决异步常用方法）</strong></li></ul><p><strong>深拷贝浅拷贝的理解</strong></p><p><strong>浅拷贝：只是复制当前的对象，该对象内部的引用（Object,Array等堆内存数据）不能复制<br>深拷贝：对对象内部的引用均复制，是创建一个新的实例<br>简言之：是否复制了子对象，修改了克隆后的对象属性值，影响到原对象-浅拷贝 不影响-深拷贝</strong></p><p><strong>常见的HTTP请求返回状态码</strong></p><ul><li><strong>200成功</strong></li><li><strong>304请求浏览器缓存的内容</strong></li><li><strong>400语义有误，当前请求无法被服务器理解</strong></li><li><strong>401当前请求需要用户验证</strong></li><li><strong>404未找到</strong></li><li><strong>403服务器已经理解请求，但是拒绝执行它</strong></li><li><strong>500服务器错误</strong></li><li><strong>503服务器端暂时无法处理请求</strong></li></ul><p><strong>1开头的（信息类）：表示接收到请求并且继续处理，用于指定客户端应相应的某些动作<br>2开头的（响应成功）：表示动作被成功接收，理解和接受。<br>3开头的（重定向）：为了完成指定的动作，必须接受进一步处理，用于已经移动的文件并且常被包含在定位头信息中指定新的地址信息<br>4开头的（客户端错误类）：请求包含错误语法或不能正确执行<br>5开头的（服务器端错误）：服务器遇到错误，无法完成请求</strong></p><p><strong>html页面怎么解析的？它加载顺序是什么？</strong></p><ol><li><strong>用户输入网址（假设是个html页面，并且是第一次访问），浏览器向服务器发出请求，服务器返回html文件</strong></li><li><strong>浏览器开始载入html代码，如果发现<head>标签内有一个<link>标签引用外部CSS文件</strong></li><li><strong>浏览器又发出CSS文件的请求，服务器返回这个CSS文件</strong></li><li><strong>浏览器继续载入html中<body>部分的代码，并且CSS文件已经加载完成了，开始渲染页面</strong></li><li><strong>如果浏览器在代码中发现一个<img>标签引用了一张图片，向服务器发出请求。此时浏览器不会等到图片下载完，而是异步渲染后面的代码</strong></li><li><strong>服务器返回图片文件，由于图片占用了一定面积，影响了后面段落的排布，因此浏览器需要回过头来重新渲染这部分代码</strong></li><li><strong>如果浏览器发现了一个包含一行Javascript代码的<script>标签，会立即运行它</strong></li><li><strong>如果Javascript脚本执行了浏览器隐藏掉代码中的某个<style>（style.display=”none”），浏览器就得重新渲染这部分代码</strong></li><li><strong>如果这时用户点了一下界面中的“换肤”按钮，Javascript让浏览器换了一下＜link＞标签的CSS路径，那么浏览器就会向服务器请求了新的CSS文件，重新渲染页面</strong></li></ol><p><strong>总结：最好将无论内部或是外部JS文件放到所有html内容之后，这样会令用户感觉页面加载速度变快了，否则如果将所有外部文件（包括css和JS）引用都放到<head>中，意味着必须等到全部的JS代码都被下载解析和执行完毕后，才能开始呈现页面的内容（当浏览器遇到<body>）,这样会导致呈现页面时出现明显的延迟，二延迟期间的浏览器窗口将是一片空白。</strong></p><p><strong>谈谈web攻击技术</strong></p><ul><li><strong>XSS攻击</strong></li><li><strong>CSRF攻击</strong></li><li><strong>网络劫持攻击</strong></li><li><strong>控制台注入代码</strong></li><li><strong>钓鱼</strong></li></ul><p><strong>同步和异步的区别</strong></p><p><strong>同步：阻塞的，A需要等待B完成任务后再开始任务<br>异步：非阻塞的，A，B同时开始任务</strong></p><p><strong>打个简单的比方：Ajax请求数据渲染页面操作，需要使用同步方式渲染，因为js执行的时间很短，几乎可以忽略不计，而Ajax请求需要等待时间，所以，需要等待Ajax请求完毕，收到响应信息后再渲染页面</strong></p><p><strong>解释a = b||c，fn&amp;&amp;fn()，a=(b,c)，a?b:c的作用或含义</strong></p><p><strong>a = b||c：和if(!b) {a=c}效果一致，如果b存在，把b的值赋给a，否则把c的值赋给a（短路求值，提升效率）</strong><br><strong>fn&amp;&amp;fn()：<strong><strong>和上面的效果一样，但条件相反，如果fn不存在，则不执行，否则将执行</strong></strong>（短路求值，提升效率）</strong><br><strong>a=(b,c)：****这里是逗号运算符的用法之一，先执行运算符左侧的操作数，然后再执行右侧的操作数，最后返回右侧操作数的值，即a=c</strong><br><strong>a?b:c：****条件表达式（三元表达式），若a为真，返回b，若a为假，则返回c</strong></p><p><strong>对if语句的优化</strong></p><ul><li><strong>把次数多的条件和执行结果放到最前面</strong></li><li><strong>减少第一次无用的判断，可以用嵌套判断</strong></li><li><strong>判断语句禁止出现三次嵌套</strong></li></ul><p><strong>对switch的理解</strong></p><ul><li><strong>switch的括号里面放的是一个变量</strong></li><li><strong>case相对应的值是关于这个变量的一个值</strong></li><li><strong>switch里面的这个变量和case里面这个变量不会进行隐式类型的一个转换，而是进行了恒等比较。所以一定要注意这个变量和这个case里 面的值是不是一个类型</strong></li><li><strong>关于switch里面的case会有一个穿透效果，这个效果有的时候会给我们带来好处(详情请看最后一个案例)，有的时候会给我们带来坏处， 如果不需要这种穿透效果的时候加break</strong></li><li><strong>swicth里面如果这个变量没有匹配到case里面这个值，那么就需要返回一个信息。所以在case的末尾一定要加上一个default;这样既给用 户的体验比较完美，另一方面对代码的今后维护也有很大的帮助</strong></li><li><strong>比较的值是固定值</strong></li></ul><p><strong>if和swicth的应用场景</strong></p><p><strong>if :<br>1、具体的值进行判断<br>2、区间的判断<br>3、对运算的结果是boolean类型表达式进行判断 true false<br>switch：<br>1、对具体的值进行判断<br>2、值的个数是固定的<br>对于几个固定的值判断，建议使用switch 语句。因为switch 语句会将具体的答案都加载进内存，效率相对高一点 基于代码的可读性：如果条件较少时,if-else容易阅读,而条件较多时switch更容易阅读</strong></p><p><strong>do-while循环的使用及while的区别</strong></p><p><strong>do-while() 无论条件是否成立至少执行一次，和while规则一样，唯一不同的是do{}while会先执行一次(先执行后判断</strong></p><p><strong>while和for的区别</strong></p><p><strong>for循环是知道了循环次数，while是不知道循环次数</strong><br><strong>for限定了循环次数</strong><br><strong>while是条件循环</strong></p><p><strong>break和continue return的区别</strong></p><p><strong>continue只是中止本次循环，接着开始下一次循环 ，只能出现在循环中<br>break用于完全结束一个循环，跳出循环体 不在执行break下面的代码，只能出现在选择或者循环中<br>return作用是返回函数的值，不在执行return下面的代码，只能出现函数中</strong></p><p><strong>函数的作用</strong></p><p><strong>减少代码的编写(代码重复利用)<br>隐藏处理细节，便于今后的修改和维护<br>控制执行时机</strong></p><p><strong>对参数的理解</strong></p><p><strong>参数分为：形参和实参<br>有了参数以后可以使函数变的更加灵活<br>形参和实参要一一对应<br>如果对应的形参没有传值，那么值是undefined</strong></p><p><strong>对arguments的了解</strong></p><ul><li><strong>函数内部自带的一个对象</strong></li><li><strong>存储的是所有的实参</strong></li><li><strong>可以使用[ ]及下标访问arguments中的内容 arguments[0] 访问第一个实参</strong></li><li><strong>可以使用 arguments.length 确定传入实参的个数</strong></li><li><strong>最常用的用途： 判断传入参数的个数(根据参数个数做不同的事情)</strong></li></ul><p><strong>请说一下js的编译和执行</strong></p><p><strong>js的预编译：<br>把var 和 function 定义的变量提升到script的最上方<br>赋值语句不会被提升，哪怕等号后面是一个function</strong></p><p><strong>js执行：代码从上往下执行</strong></p><p><strong>递归与循环的区别</strong></p><p><strong>递归算法：</strong><br><strong>优点：代码简洁、清晰，并且容易验证正确性。<br>缺点：<br>它的运行需要较多次数的函数调用，如果调用层数比较深，每次都要创建新的变量，需要增加额外的堆栈处理，会对执行效率有一定影 响，占用过多的内存资源。<br>递归算法解题的运行效率较低。在递归调用的过程中系统为每一层的返回点、局部变量等开辟了栈来储存。递归次数过多容易造成栈溢出 等<br>注意：递归就是在过程或函数里调用自身；<br>使用递归策略时要注意的几个条件：<br>必须有一个明确的递归结束条件，称为递归出口。<br>递归需要有边界条件、递归前进段和递归返回段。<br>当边界条件不满足时，递归前进。当边界条件满足时，递归返回。</strong></p><p><strong>循环算法：</strong><br><strong>优点：速度快，结构简单。<br>缺点：并不能解决所有的问题。有的问题适合使用递归而不是循环。如果使用循环并不困难的话，最好使用循环</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS基础篇（前端面试题整合）（二）</title>
    <link href="/2020/11/04/JS%E5%9F%BA%E7%A1%80%E7%AF%87%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2020/11/04/JS%E5%9F%BA%E7%A1%80%E7%AF%87%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>如何创建函数</strong></p><ul><li><strong>第一种（函数声明）： function sum1(num1,num2){ return num1+num2; }</strong></li><li><strong>第二种（函数表达式）： var sum2 = function(num1,num2){ return num1+num2; }</strong></li><li><strong>第三种（函数对象方式）： var sum3 = new Function(“num1”,”num2”,”return num1+num2”);</strong></li></ul><p><strong>三种弹窗的单词以及三种弹窗的功能</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">1.</span>alert  <br><span class="hljs-comment">//弹出对话框并输出一段提示信息  </span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ale</span>(<span class="hljs-params"></span>) </span>&#123;  <br>        <span class="hljs-comment">//弹出一个对话框  </span><br>        alert(<span class="hljs-string">&quot;提示信息！&quot;</span>);  <br>  <br>    &#125;  <br>  <br><span class="hljs-number">2.</span>confirm<br>    <span class="hljs-comment">//弹出一个询问框，有确定和取消按钮  </span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">firm</span>(<span class="hljs-params"></span>) </span>&#123;  <br>        <span class="hljs-comment">//利用对话框返回的值 （true 或者 false）  </span><br>        <span class="hljs-keyword">if</span> (confirm(<span class="hljs-string">&quot;你确定提交吗？&quot;</span>)) &#123;  <br>            alert(<span class="hljs-string">&quot;点击了确定&quot;</span>);  <br>        &#125;  <br>        <span class="hljs-keyword">else</span> &#123;  <br>            alert(<span class="hljs-string">&quot;点击了取消&quot;</span>);  <br>        &#125;  <br>  <br>    &#125;  <br>  <br><span class="hljs-number">3.</span>prompt<br>    <span class="hljs-comment">//弹出一个输入框，输入一段文字，可以提交  </span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">prom</span>(<span class="hljs-params"></span>) </span>&#123;  <br>        <span class="hljs-keyword">var</span> name = prompt(<span class="hljs-string">&quot;请输入您的名字&quot;</span>, <span class="hljs-string">&quot;&quot;</span>); <span class="hljs-comment">//将输入的内容赋给变量 name ，  </span><br>  <br>        <span class="hljs-comment">//这里需要注意的是，prompt有两个参数，前面是提示的话，后面是当对话框出来后，在对话框里的默认值  </span><br>        <span class="hljs-keyword">if</span> (name)<span class="hljs-comment">//如果返回的有内容  </span><br>        &#123;  <br>            alert(<span class="hljs-string">&quot;欢迎您：&quot;</span> + name)  <br>        &#125;  <br>    &#125;<br></code></pre></td></tr></table></figure><p><strong>JavaScript的循环语句</strong></p><p><strong>for,for..in,while,do…while</strong></p><p><strong>减低页面加载时间的方法</strong></p><p><strong>1、压缩css、js文件<br>2、合并js、css文件，减少http请求<br>3、外部js、css文件放在最底下<br>4、减少dom操作，尽可能用变量替代不必要的dom操作</strong></p><p><strong>对象有哪些原生方法</strong></p><ul><li><strong>Object.hasOwnProperty( ) 检查属性是否被继承</strong></li><li><strong>Object.isPrototypeOf( ) 一个对象是否是另一个对象的原型</strong></li><li><strong>Object.propertyIsEnumerable( ) 是否可以通过for/in循环看到属性</strong></li><li><strong>Object.toLocaleString( ) 返回对象的本地字符串表示</strong></li><li><strong>Object.toString( ) 定义一个对象的字符串表示</strong></li><li><strong>Object.valueOf( ) 指定对象的原始值</strong></li></ul><p><strong>JS 怎么实现一个类。怎么实例化这个类</strong></p><p><strong>严格来讲js中并没有类的概念，不过js中的函数可以作为构造函数来使用，通过new来实例化，其实函数本身也是一个对象。</strong></p><p><strong>外部JS文件出现中文字符，会出现什么问题，怎么解决</strong></p><p><strong>会出现乱码，加charset=”utf-8”;</strong></p><p><strong>target与currentTarget区别</strong></p><p><strong>target在事件流的目标阶段；<br>currentTarget在事件流的捕获，目标及冒泡阶段。<br>只有当事件流处在目标阶段的时候，两个的指向才是一样的， 而当处于捕获和冒泡阶段的时候，target指向被单击的对象而currentTarget指向当前事件活动的对象（一般为父级）。</strong></p><p><strong>DOM的增删改查操作</strong></p><p><strong>创建新节点</strong></p><ul><li><strong>createDocumentFragment() //创建一个DOM片段</strong></li><li><strong>createElement() //创建一个具体的元素</strong></li><li><strong>createTextNode() //创建一个文本节点</strong></li></ul><p><strong>添加、移除、替换、插入</strong></p><ul><li><strong>appendChild()</strong></li><li><strong>removeChild()</strong></li><li><strong>replaceChild()</strong></li><li><strong>insertBefore() //在已有的子节点前插入一个新的子节点</strong></li></ul><p><strong>查找</strong></p><ul><li><strong>getElementsByTagName() //通过标签名称</strong></li><li><strong>getElementsByName() //通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)</strong></li><li><strong>getElementById() //通过元素Id，唯一性</strong></li><li><strong>queryselector()//es6新增的，可选择id（#ele），class（.ele），tagName（ele）等</strong></li></ul><p><strong>documen.write和 innerHTML区别</strong></p><p><strong>document.write只能重绘整个页面<br>innerHTML可以重绘页面的一部分</strong></p><p><strong>Ajax 解决浏览器缓存问题？</strong></p><p><strong>1、在ajax发送请求前加上 anyAjaxObj.setRequestHeader(“If-Modified-Since”,”0”)<br>2、在ajax发送请求前加上 anyAjaxObj.setRequestHeader(“Cache-Control”,”no-cache”)<br>3、在URL后面加上一个随机数： “fresh=” + Math.random();<br>4、在URL后面加上时间戳：”nowtime=” + new Date().getTime();<br>5、如果是使用jQuery，直接这样就可以了 $.ajaxSetup({cache:false})。这样页面的所有ajax都会执行这条语句就是不需要保存缓存记录。</strong></p><p><strong>bind，call和apply的区别</strong></p><p><strong>bind方法:</strong></p><ul><li><strong>语法：bind(thisObj，Object1,Object2…)</strong></li><li><strong>定义：调用一个对象的一个方法，以另一个对象替换当前对象。</strong></li><li><strong><strong>说明：</strong>bind<strong>方法会返回执行上下文被改变的函数而不会立即执行</strong></strong></li></ul><p><strong>call方法:</strong></p><ul><li><strong>语法：call(thisObj，Object1,Object2…)</strong></li><li><strong>定义：调用一个对象的一个方法，以另一个对象替换当前对象。</strong></li><li><strong><strong>说明： call 方法可以用来代替另一个对象调用一个方法。call 方法可将一个函数的对象上下文从初始的上下文改变为由 thisObj 指定的新对象。 如果没有提供 thisObj 参数，那么 Global 对象被用作 thisObj。</strong></strong></li></ul><p><strong>apply方法：</strong></p><ul><li><strong>语法：apply(thisObj，[argArray])</strong></li><li><strong>定义：应用某一对象的一个方法，用另一个对象替换当前对象。</strong></li><li><strong>说明： 如果 argArray 不是一个有效的数组或者不是 arguments 对象，那么将导致一个 TypeError。 如果没有提供 argArray 和 thisObj 任何一个参数，那么 Global 对象将被用作 thisObj， 并且无法被传递任何参数。</strong></li></ul><p><strong>javascript的本地对象，内置对象和宿主对象</strong></p><ul><li><strong>本地对象为array obj regexp等可以new实例化</strong></li><li><strong>内置对象为gload Math 等不可以实例化的</strong></li><li><strong>宿主为浏览器自带的document,window 等</strong></li></ul><p><strong>列举浏览器对象模型BOM里常用的对象，并列举window对象的常用方法</strong></p><p><strong>对象：window, document, location, screen, history, navigator<br>方法：alert(), confirm(), prompt(), open(), close()</strong></p><p><strong>iframe的优缺点</strong></p><p><strong>优点：<br>1. 解决加载缓慢的第三方内容如图标和广告等的加载问题<br>2. Security sandbox<br>3. 并行加载脚本<br>缺点：<br>1. iframe会阻塞主页面的Onload事件<br>2. 即时内容为空，加载也需要时间<br>3. 没有语意</strong></p><p><strong>Cookie的弊端</strong></p><ul><li><strong>Cookie数量和长度的限制。每个domain最多只能有20条cookie，每个cookie长度不能超过4KB，否则会被截掉。</strong></li><li><strong>安全性问题。如果cookie被人拦截了，那人就可以取得所有的session信息。即使加密也与事无补，因为拦截者并不需要知道cookie的意义，他只要原样转发cookie就可以达到目的了。</strong></li><li><strong>有些状态不可能保存在客户端。例如，为了防止重复提交表单，我们需要在服务器端保存一个计数器。如果我们把这个计数器保存在客户端，那么它起不到任何作用。</strong></li></ul><p><strong>谈谈js精度问题</strong></p><p><strong>由于计算机是用二进制来存储和处理数字，不能精确表示浮点数，而JavaScript是一种弱类型的脚本语言，没有相应的封装类来处理浮点数运算，直接计算会导致运算精度丢失，c#的decimal和Java的BigDecimal之所以没有出现精度差异，只是因为在其内部作了相应处理，把这种精度差异给屏蔽掉了，而javascript是一种弱类型的脚本语言，本身并没有对计算精度做相应的处理，这就需要我们另外想办法处理了。所以0.1+0.2！==0.3。<br>为了避免产生精度差异，把需要计算的数字升级（乘以10的n次幂）成计算机能够精确识别的整数，等计算完毕再降级（除以10的n次幂），这是大部分编程语言处理精度差异的通用方法。</strong></p><p><strong>js哪些值会强制转换为false</strong></p><p><strong>在条件判断时，除了 undefined， null， false， NaN， ‘’， 0， -0，其他所 有值都转为 true，包括所有对象。</strong></p><p><strong>link添加预加载预渲染</strong></p><p>**预加载：强制浏览器请求资源，并且不会阻塞 onload 事件， 可以使用以下代码开启预加载  </p><link rel="preload" href="http://test.com">  预渲染:可以通过预渲染将下载的文件预先在后台渲染，可以使用以下代码开启预渲染  <link rel="prerender" href="http://test.com">**<p><strong>JS事件的offsetX、offsetY、clientX、clientY、pageX、pageY、screenX、screenY的区别</strong></p><p><strong>offsetX、offsetY: 鼠标相对于事件源元素（srcElement）的X，Y坐标</strong></p><p><strong>clientX、clientY: 鼠标相对于浏览器窗口可视区域的X，Y坐标（窗口坐标），可视区域不包括工具栏和滚动条。</strong></p><p><strong>pageX、pagey: 类似于event.clientX、event.clientY，但它们使用的是文档坐标而非窗口坐标。这2个属性不是标准属性，但得到了广泛支持，IE事件中没有这2个属性</strong></p><p><strong>screenX、screenY: 鼠标相对于用户显示器屏幕左上角的X，Y坐标。</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS基础篇（前端面试题整合）（一）</title>
    <link href="/2020/11/03/JS%E5%9F%BA%E7%A1%80%E7%AF%87%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2020/11/03/JS%E5%9F%BA%E7%A1%80%E7%AF%87%EF%BC%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%89%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>typeof返回的数据类型</strong></p><ul><li><strong>undefined</strong></li><li><strong>string</strong></li><li><strong>boolean</strong></li><li><strong>number</strong></li><li><strong>object</strong></li><li><strong>function</strong></li><li><strong>symbol</strong></li></ul><p><strong>js数据类型</strong></p><p><strong>基本六种</strong></p><ul><li><strong>string 字符串</strong></li><li><strong>number 数字</strong></li><li><strong>boolean 布尔</strong></li><li><strong>Null 空</strong></li><li><strong>undefined 未定义</strong></li><li><strong>Object 引用类型</strong></li><li><strong>es6新增 symbol类型</strong></li></ul><p><strong>”==”和“===”的区别</strong></p><p><strong>前者会强制转换类型 后者不会</strong></p><p><strong>有哪些强制类型转换和隐式类型转换</strong></p><p><strong>强制：parseInt(),parseFloat(),Number()<br>隐式：== ,!=</strong></p><p><strong>解决js兼容性问题</strong></p><ul><li><strong>Ajax兼容</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest() || <span class="hljs-keyword">new</span> ActiveXObject(<span class="hljs-string">&quot;Microsoft,XMLHTTP&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li><strong>获取键盘e.key信息</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">e.keyCode || e.which<br></code></pre></td></tr></table></figure><ul><li><strong><strong>获取非行间样式</strong></strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// IE： currentStyle[attr]</span><br><span class="hljs-comment">// 标准： getComputedStyle[attr]</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getStyle</span>(<span class="hljs-params">obj, attr</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (obj.currentStyle) &#123;<br>        <span class="hljs-keyword">return</span> obj.currentStyle[attr]<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> getComputedStyle(obj, <span class="hljs-literal">false</span>)[attr];<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>事件监听和解绑</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">addEventListener() <span class="hljs-comment">//普通</span><br>attachEvent() <span class="hljs-comment">//IE</span><br>removeEventListener() <span class="hljs-comment">//普通</span><br>detachEvent() <span class="hljs-comment">//IE</span><br></code></pre></td></tr></table></figure><ul><li><strong>使用 event对象</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">eventHandler</span>(<span class="hljs-params">event</span>) </span>&#123;<br>    event = event || <span class="hljs-built_in">window</span>.event<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>获取滚动条属性</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> scrollTop = <span class="hljs-built_in">document</span>.documentElment.scrollTop || <span class="hljs-built_in">document</span>.body.scrollTop<br></code></pre></td></tr></table></figure><ul><li><strong>阻止浏览器默认行为</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">eventHandler</span>(<span class="hljs-params">event</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (event.preventDefault) &#123;<br>        event.preventDefault();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        event.returnValue = <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>事件冒泡</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">eventHandler</span>(<span class="hljs-params">event</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (event.stopPropagation) &#123;<br>        event.stopPropagation()<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        event.cancelBubble()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>事件流</strong></p><p><strong>冒泡型事件流：事件的传播是从最特定的事件目标到最不特定的事件目标。即从DOM树的叶子到根。就子元素向父元素触发<br>捕获型事件流：事件的传播是从最不特定的事件目标到最特定的事件目标。 即从DOM树的根到叶子。就是父元素向子元素触发 优点：<br>（1）可以大量节省内存占用<br>（2）可以实现当新新增对象时，无需在对其进行绑定</strong></p><p><strong>事件委托</strong></p><p><strong>可以为同样元素绑定多次同一事件<br>可以确定是冒泡还是捕获<br>动态创建元素，可以创建元素的函数体外部为其添加<br>把某个事件加到父元素上提高程序执行效率</strong></p><p><strong>浏览器的事件机制</strong></p><p><strong>事件捕获阶段—处于目标阶段—事件的冒泡阶段—-事件的默认阶段</strong></p><p><strong>事件绑定和普通事件的区别</strong></p><ul><li><strong>普通添加事件的方法：</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> btn = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;ele&quot;</span>);<br> btn.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>   alert(<span class="hljs-number">1</span>); <br>&#125;<br> btn.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>   alert(<span class="hljs-number">2</span>); <br>&#125; <br></code></pre></td></tr></table></figure><p><strong>执行上面的代码只会alert 2</strong></p><ul><li><strong>事件绑定方式添加事件：</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> btn = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;ele&quot;</span>);<br>btn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    alert(<span class="hljs-number">1</span>);<br>&#125;,<span class="hljs-literal">false</span>);<br>btn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    alert(<span class="hljs-number">2</span>);<br>&#125;,<span class="hljs-literal">false</span>);<br><br></code></pre></td></tr></table></figure><p><strong>执行上面的代码会先alert 1 再 alert 2</strong></p><ul><li><strong>普通添加事件的方法不支持添加多个事件，最下面的事件会覆盖上面的，而事件绑定 （addEventListener）方式添加事件可以添加多个。</strong></li><li><strong>addEventListener不兼容低版本IE</strong></li><li><strong>普通事件无法取消（无函数方式取消，使用置空和置为false）</strong></li><li><strong>addEventLisntener还支持事件冒泡+事件捕获</strong></li></ul><p><strong>eval的理解</strong></p><ul><li><strong>可以将字符串生成语句执行，一般执行动态js语句</strong></li><li><strong>eval的使用场合：有时候我们预先不知道要执行什么语句，只有当条件和参数给时才知到执行什么语句，这时候eval就派上用场了 eval和json.parse的谁更高效？</strong></li><li><strong>是json.parse</strong></li><li><strong>因为evel他是转化在解析而json.parse是直接解析</strong></li><li><strong>应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。</strong></li></ul><p><strong>数组的方法</strong></p><ul><li><strong>push() 从队尾添加,改变原数组</strong></li><li><strong>pop() 移除数组末尾最后一项,返回移除的项</strong></li><li><strong>shift() 删除数组第一项,返回删除元素的值,如果数组为空返回undefined</strong></li><li><strong>unshift() 添加头部,改变原数组</strong></li><li><strong>sort() 数组排序,参数为一个匿名函数,如果匿名函数返回正值,则升序排列,反之相反</strong></li><li><strong>reverse() 翻转数组项的顺序 原数组改变</strong></li><li><strong>concat() 将参数添加到原数组,将参数添加到数组的末尾,并返回一个新数组,不改变原数组</strong></li><li><strong>slice() 返回原数组中指定开始下标到结束下标之间的项组成的新数组,slice接受两个参数,如果致谢一个参数,slice方法返回从该参数到数组末尾的所有项,如果有两个参数,该方法返回起始位置和结束位置之间的项,但不包括结束位置的项</strong></li><li><strong>splice() 可以实现删除,插入,替换 删除(可以删除任意属相的项,只需要指定2个参数,要删除的第一项的位置和要删除的项) 插入,替换(可以向指定位置插入任意数量的项,只需提供3个参数:起始位置,0(要删除的项),插入的项),splice()方法始终都会返回一个数组,数组中包括从原数组中删除的项,如果没有删除任何项则返回一个空数组</strong></li><li><strong>map() 对数组中的每一项运行给定函数,返回每次函数调用的结果组成的数组</strong></li><li><strong>some() 判断数组中是否存在满足条件的项,只要有一项满足条件,就返回true</strong></li><li><strong>every() 判断数组中每一项都是否满足条件,只有所有选项都满足条件,才会返回true</strong></li><li><strong>filter() 过滤功能,数组中的每一项运行给定函数,返回满足过滤条件组成的数组</strong></li><li><strong>forEach() 对数组进行循环遍历,对数组中的每一项运行给定函数,这个方法没有返回值,参数都是function类型,默认有传参功能,参数分别是,便利的数组内容,对应的索引,数组本身</strong></li><li><strong>indexOf() 接受两个参数,要查找的项和表示查找起点位置的索引,返回查找的项在数组的位置,没找到的情况下返回-1</strong></li></ul><p><strong>伪数组转成真数组的方法</strong></p><ul><li><strong>Array.from()</strong></li><li><strong>Array.prototype.slice.call();</strong></li><li><strong>循环并push到新数组</strong></li><li><strong>解构赋值：list=[…_list]（es6）</strong></li></ul><p><strong>window.onload与$(document).ready()的区别</strong></p><ul><li><strong>执行时间 window.onload必须等到页面内包括图片的所有元素加载完毕后才能执行。 $(document).ready()是DOM结构绘制完毕后就执行，不必等到加载完毕.</strong></li><li><strong>编写个数不同 window.onload不能同时编写多个，如果有多个window.onload方法，只会执行一个 $(document).ready()可以同时编写多个，并且都可以得到执行</strong></li><li><strong>简化写法 window.onload没有简化写法 $(document).ready(function(){})可以简写成$(function(){});</strong></li></ul><p><strong>this的理解</strong></p><p><strong>this代表函数运行时，自动生成的一个内部对象，只能在函数内部使用，随着函数使用场合的不同，this的值会发生变化。但有一个总的原则就是，谁调用它，它就指向谁。一般在这几种情况下会用到它.</strong></p><ul><li><strong>单纯的函数调用；</strong></li><li><strong>作为对象方法的调用；</strong></li><li><strong>作为构造函数调用；</strong></li><li><strong>apply调用，apply（）是函数对象的一个方法，它的作用是改变函数的调用对象，它的第一个参数就表示改变后的调用这个函数的对象，当它的参数为空时，默认调用全局对象</strong></li></ul><p><strong>跨域机制是什么，解决方式</strong></p><p><strong>因为同源策略的诞生,只能访问相同端口,协议,域名的网站,所以我们要进行跨域，以下是常见解决方式</strong></p><ul><li><strong>通过JsonP(动态创建一个script标签,通过src属性,设置一个端口号,通过接口上的某个参数向服务器传送一个函数,通过之歌回调函数接受服务器返回的数据)</strong></li><li><strong>通过修改document.domain来跨子域</strong></li><li><strong>使用window.name来进行跨域</strong></li><li><strong>cors</strong></li><li><strong>反向代理</strong></li><li><strong>webSocket</strong></li></ul><p><strong>get和post的区别</strong></p><p><strong>共同点：</strong></p><ul><li><strong>无论是get还是post，都是可以发送数据，也可以接受数据</strong></li></ul><p><strong>区别：</strong></p><ul><li><strong>get是以url方式传递数据，而post是以http请求中的body部分传递数据 ，所以说post更安全</strong></li><li><strong>get传递数据时，直接再浏览器地址栏可以看到；而post可以使用开发者工具中看到</strong></li><li><strong>get传递数据，中文不会被编码或有可能出现乱码，而post不会</strong></li><li><strong>get在IE下会走缓存，而post不会</strong></li></ul><p><strong>js如何创建一个对象</strong></p><p><strong>对象的字面量创建 var obj= {}<br>创建实例对象 var obj = new Object（）<br>构造函数的模式 function fn(){}, new fn()<br>工厂模式 用一个函数，通过传参数返回对象</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createObj</span>(<span class="hljs-params">name,age,family</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> o = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Object</span>();<br>    o.name = name;<br>    o.age = age;<br>    o.family = family;<br>    <span class="hljs-keyword">return</span> o;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>原型模式</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Obj</span>(<span class="hljs-params"></span>) </span>&#123;<br>&#125;<br><br>Obj.prototype.name = <span class="hljs-string">&quot;Obj&quot;</span>;<br>Obj.prototype.age = <span class="hljs-number">10</span>;<br><span class="hljs-keyword">var</span> obj= <span class="hljs-keyword">new</span> Obj()<br></code></pre></td></tr></table></figure><p><strong>混合模式</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createObj</span>(<span class="hljs-params">name,age</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> obj = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Object</span>();<br>    obj.name = name;<br>    obj.age = age;<br>    <span class="hljs-keyword">return</span> o;<br>&#125;<br><br>createObj.prototype.name = <span class="hljs-string">&quot;Obj&quot;</span>;<br>createObj.prototype.age = <span class="hljs-number">10</span>;<br><span class="hljs-keyword">var</span> _obj= <span class="hljs-keyword">new</span> createObj()<br></code></pre></td></tr></table></figure><p><strong>null，undefined 的区别</strong></p><ul><li><strong>null表示一个对象是“没有值”的值，也就是值为“空”；</strong></li><li><strong>undefined表示一个变量声明了没有初始化(赋值)；</strong></li><li><strong>undefined不是一个有效的JSON，而null是；</strong></li><li><strong>undefined的类型(typeof)是undefined； null的类型(typeof)是object；</strong></li><li><strong>Javascript将未赋值的变量默认值设为undefined； Javascript不会将变量设为null。null是用来让程序员表明某个用var声明的变量时没有值的。</strong></li><li><strong>null == undefined // true null === undefined // false</strong></li></ul><p><strong>对****JSON 的了解</strong></p><p><strong>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。<br>它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小<br>JSON字符串转换为JSON对象:</strong></p><ul><li><strong>var obj =eval(‘(‘+ str +’)’);</strong></li><li><strong>var obj = str.parseJSON();</strong></li><li><strong>var obj = JSON.parse(str);</strong></li></ul><p><strong>JSON对象转换为JSON字符串：</strong></p><ul><li><strong>var last=obj.toJSONString();</strong></li><li><strong>var last=JSON.stringify(obj);</strong></li></ul><p><strong>js延迟加载的方式有哪些？</strong></p><p><strong>defer和async、动态创建DOM方式（用得最多）、按需异步载入js</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>联想Tab M10 FHD PLUS (TB-X606F)解锁BL，获取root权限（无需第三方recovery），刷xp框架（太极-阳）适用大部分联发科CPU（国际版rom底包）</title>
    <link href="/2020/11/03/%E8%81%94%E6%83%B3Tab%20M10%20FHD%20PLUS%20(TB-X606F)%E8%A7%A3%E9%94%81BL%EF%BC%8C%E8%8E%B7%E5%8F%96root%E6%9D%83%E9%99%90%EF%BC%88%E6%97%A0%E9%9C%80%E7%AC%AC%E4%B8%89%E6%96%B9recovery%EF%BC%89%EF%BC%8C%E5%88%B7xp%E6%A1%86%E6%9E%B6%EF%BC%88%E5%A4%AA%E6%9E%81-%E9%98%B3%EF%BC%89%E9%80%82%E7%94%A8%E5%A4%A7%E9%83%A8%E5%88%86%E8%81%94%E5%8F%91%E7%A7%91CPU%EF%BC%88%E5%9B%BD%E9%99%85%E7%89%88rom%E5%BA%95%E5%8C%85%EF%BC%89/"/>
    <url>/2020/11/03/%E8%81%94%E6%83%B3Tab%20M10%20FHD%20PLUS%20(TB-X606F)%E8%A7%A3%E9%94%81BL%EF%BC%8C%E8%8E%B7%E5%8F%96root%E6%9D%83%E9%99%90%EF%BC%88%E6%97%A0%E9%9C%80%E7%AC%AC%E4%B8%89%E6%96%B9recovery%EF%BC%89%EF%BC%8C%E5%88%B7xp%E6%A1%86%E6%9E%B6%EF%BC%88%E5%A4%AA%E6%9E%81-%E9%98%B3%EF%BC%89%E9%80%82%E7%94%A8%E5%A4%A7%E9%83%A8%E5%88%86%E8%81%94%E5%8F%91%E7%A7%91CPU%EF%BC%88%E5%9B%BD%E9%99%85%E7%89%88rom%E5%BA%95%E5%8C%85%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>注意：此文章仅作为学习和参考，造成的所有后果与本人无关，在进行所有操作之前请进行备份，备份，备份！！！其次请确保你有一定的刷机基础，如救砖刷机，线刷，卡刷。如果是解锁BootLoader一定会双清，如果你是国行版的，并且使用该教程，数据一定会双清，请做好抉择！！！并备份文件！！！！！</strong></p><p><strong>前言：5月份的时候在网上买了个联想M10 FHD PLUS平板（国行版），当时想找root方法拓展平板更多功能，发现几乎查不到教程，在国外网站也只有一些比较模糊的教程，并且由于当时工作较忙，也就没有深入研究教程。<br>其中包括<a href="https://forum.xda-developers.com/general/help/lenovo-tb-x605f-magisk-root-t3992477">https://forum.xda-developers.com/general/help/lenovo-tb-x605f-magisk-root-t3992477</a><br>和<a href="https://forum.frandroid.com/topic/275557-root-lenovo-tab-m10-fhd-plus-tb-x606f/">https://forum.frandroid.com/topic/275557-root-lenovo-tab-m10-fhd-plus-tb-x606f/</a><br>之前照着这两个教程发现无法达到目的，但是还是感谢这两个作者提供的思路</strong></p><p><strong>时隔五个月，我再次搜索M10 FHD PLUS root教程时找到了相关教程<br><a href="https://forum.frandroid.com/topic/275622-tuto-bootloader-et-root-du-lenovo-tab-m10-fhd-plus-tb-x606f-sans-twrp/">https://forum.frandroid.com/topic/275622-tuto-bootloader-et-root-du-lenovo-tab-m10-fhd-plus-tb-x606f-sans-twrp/</a><br>国际版rom刷机包（自带谷歌全套，国行版无法安装谷歌套件）：<a href="https://mirrors.lolinet.com/firmware/lenovo/Tab_M10_FHD_Plus_2nd_Gen/TB-X606F/">https://mirrors.lolinet.com/firmware/lenovo/Tab_M10_FHD_Plus_2nd_Gen/TB-X606F/</a><br>联想官方软件和驱动：<br><a href="https://pcsupport.lenovo.com/us/zh/products/tablets/m-series-tablets/tab-m10-fhd-plus/downloads/driver-list/component?name%E8%BB%9F%E9%AB%94%E5%8F%8A%E5%85%AC%E7%94%A8%E7%A8%8B%E5%BC%8F">https://pcsupport.lenovo.com/us/zh/products/tablets/m-series-tablets/tab-m10-fhd-plus/downloads/driver-list/component?name=%E8%BB%9F%E9%AB%94%E5%8F%8A%E5%85%AC%E7%94%A8%E7%A8%8B%E5%BC%8F</a><br>联想官方论坛：<br><a href="https://club.lenovo.com.cn/search.php?modforum&searchid482&orderbylastpost&ascdescdesc&searchsubmityes&kwM10">https://club.lenovo.com.cn/search.php?mod=forum&amp;searchid=482&amp;orderby=lastpost&amp;ascdesc=desc&amp;searchsubmit=yes&amp;kw=M10</a></strong></p><p><strong>获取root及xp后的效果</strong><br><img src="https://img-blog.csdnimg.cn/20201027092214825.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027092235266.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027092304729.jpeg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>以下是我获取root及xp的完整过程（如果要获取root权限，请确保你有一定的刷机基础，并可以救砖刷机，因为之后的操作可能会使你的机器变砖，我就踩了个坑，后面会说到）：</strong></p><p><strong>准备工作</strong></p><ul><li><strong>电量充足的联想Tab M10 FHD PLUS平板</strong></li><li><strong>type-c数据线</strong></li><li><strong>电脑</strong></li><li><strong><a href="https://mirrors.lolinet.com/firmware/lenovo/Tab_M10_FHD_Plus_2nd_Gen/TB-X606F/">国际版官方ROM</a></strong></li><li><strong>adb工具</strong></li><li><strong>magisk.apk</strong></li></ul><p><strong>adb工具：</strong><strong><a href="https://gitee.com/DieHunter/myCode/tree/master/%E5%88%B7%E6%9C%BA%E5%B7%A5%E5%85%B7/lenovo">https://gitee.com/DieHunter/myCode/tree/master/%E5%88%B7%E6%9C%BA%E5%B7%A5%E5%85%B7/lenovo</a>（已集成magisk_patched.img）</strong></p><p><strong>首先将平板的adb和OEM打开，这两者都需要先打开开发者模式，点击七次版本号，在下图第二张图中会出现开发者选项，点进去就是图四。</strong><br><img src="https://img-blog.csdnimg.cn/20201027085658393.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027085729843.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027085751969.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027085827504.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>其次，使用type-c数据线将平板连接电脑，等待安装驱动，充电选项选择文件传输，当计算机出现图四时，勾选一律允许，并点确定</strong></p><p><img src="https://img-blog.csdnimg.cn/20201027090259160.png"><img src="https://img-blog.csdnimg.cn/20201027090804662.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027090843326.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/2020102709103063.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>然后，解锁BootLoader：打开adb工具文件夹，其中步骤如下图<br>输入adb devices，查找已连接设备</strong><br><img src="https://img-blog.csdnimg.cn/20201027104156733.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027104448291.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>运行 adb reboot bootloader，重启至bootloader模式，出现以下效果表示进入成功，或者也可以在关机状态下按住开机键+音量减，直至震动开机，松开后会显示以下图示</strong></p><p><img src="https://img-blog.csdnimg.cn/20201027105412735.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>输入 fastboot flashing unlock达到以下效果，按下音量下键即可解锁BootLoader，这里我第二次手贱，按了一下，导致系统恢复出厂设置，注意：在这步之前备份还来得及，如果有重要文件，请一定要备份！！！（这里我已经吃了两次亏了），这里会格式化设备分区</strong></p><p><img src="https://img-blog.csdnimg.cn/2020102711090716.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027111014770.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>运行fastboot reboot重启设备至初始化界面，第一次开机会等待一段时间<br>以上就是完整的BootLoader解锁过程，下一步将对magisk_patched刷入，获取root权限，需要保证boot镜像与当前系统对应，也就是说如果你是国行平板，必须使用国行ROM进行解压并提取boot镜像，我这里没有找到国行包，并且需要谷歌套件，所以我索性直接重新刷了国际版ROM包</strong></p><p><strong>重启成功后把之前的usb调试和文件传输打开，需要更新最新版magisk，把网盘中的magisk.apk放到平板根目录下，并在平板中安装，这里建议下载一个快传软件通过手机发送软件，打开Magisk，更新软件。<br>点击安装，选择当前系统镜像中解压的boot.img文件，等待magisk生成magisk_patched.img文件至download文件夹下，复制该文件到电脑adb根目录下，就可以正式开始刷root权限了</strong></p><p><strong>这里踩了个坑：由于我是国行的平板，安装的ROM是国内版包，但是由于我之前不知道我下载的系统包是国际版的，包内的boot.img是不同的，导致机器刷成后，系统崩溃（打开任何软件都会重启），但是我又找不到国行的ROM，于是干脆刷成了国际版，教程在后面会贴出，所以一定要保证使用的boot.img是正在使用的系统中解压的，或者直接刷成国际版ROM，地址在上面都已经给出。</strong><br><img src="https://img-blog.csdnimg.cn/20201027112320475.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027122524984.jpeg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027135944177.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/2020102714004024.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027140115938.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027143930662.jpeg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027144115917.jpeg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20201027140351807.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>获取root权限的准备工作完成，下面开始操作<br>运行adb reboot bootloader 启动到BootLoader模式下</strong></p><p><strong>执行 fastboot flash boot magisk_patched.img 刷入magisk生成的img文件</strong></p><p><strong>最后执行 fastboot reboot 重启</strong></p><p><img src="https://img-blog.csdnimg.cn/20201027145003846.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>如果重启后打开Magisk显示以下图示，那么恭喜你，root成功，获取root权限之后能做些啥就不用多说了</strong><br><img src="https://img-blog.csdnimg.cn/20201027145313293.jpeg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027145335917.jpeg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>下一步说说xposed框架支持，安卓较高版本用的是<a href="https://www.taichi-app.com/#/index">太极</a>，在官网下载太极安装并打开，这里需要安装一个太极阳Magisk模块，官网上有详细的教程<br>我的<a href="https://gitee.com/DieHunter/myCode/blob/master/%E5%88%B7%E6%9C%BA%E5%B7%A5%E5%85%B7/magisk-taichi-v6.2.3.zip">仓库上</a>也有上传，把zip包放在平板根目录，使用magisk加载模块并刷入系统</strong></p><p><img src="https://img-blog.csdnimg.cn/20201027151809289.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027151746732.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027151830426.jpeg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>magisk刷入zip模块过程，首先在magisk首页选择模块，选择本地安装，找到太极阳模块zip，自动安装，点击重启即可</strong></p><p><img src="https://img-blog.csdnimg.cn/20201027153549665.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027153642142.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027153748945.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027153907470.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>最后附上简易的线刷救砖教程（百度网盘都有详细的教程，理论支持大部分联发科CPU）<br>准备工作（文件都在百度网盘中）：</strong></p><ul><li><strong>官方ROM包（我这里用的是上面链接中ROM包）</strong></li><li><strong>线刷工具flash_tool</strong></li><li><strong>驱动包</strong></li></ul><p><strong>首先将官方ROM解压</strong></p><p><img src="https://img-blog.csdnimg.cn/2020102717292355.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>其次安装驱动</strong></p><p><img src="https://img-blog.csdnimg.cn/20201027211904613.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027211806989.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027211833562.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>打开flash_tool程序,并进行以下操作（相关操作在百度云链接都有），这里简单介绍一下，图二是正在刷机，图三是刷机完成<br>如果点了下载没反应，请将平板或手机关机</strong></p><p><img src="https://img-blog.csdnimg.cn/20201027173858340.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/202010271744497.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201027174635985.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>总结：无论是解锁bl，刷机，root，xp框架一定要备份好数据，刷机无情，数据无价！！！为了完成这篇文章，我自己就尝到了教训，解锁时不小心双清了！如果文章内容对你有帮助，请帮忙点个赞~非常感谢！！！</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>前端面试题整合（HTML，CSS等基础篇）</title>
    <link href="/2020/10/30/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%88HTML%EF%BC%8CCSS%E7%AD%89%E5%9F%BA%E7%A1%80%E7%AF%87%EF%BC%89/"/>
    <url>/2020/10/30/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E5%90%88%EF%BC%88HTML%EF%BC%8CCSS%E7%AD%89%E5%9F%BA%E7%A1%80%E7%AF%87%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<ul><li><p><strong>浏览器的内核</strong></p><p><strong>IE: trident内核，Firefox：gecko内核，Safari:webkit内核，Opera:以前是presto内核，Opera现已改用Google Chrome的Blink内核，Chrome:Blink(基于webkit，Google与Opera Software共同开发)</strong></p></li><li><p><strong>HTML中的Doctype有什么作用<br>此标签可告知浏览器文档使用哪种HTML或XHTML规范。（重点：告诉浏览器按照何种规范解析页面）</strong></p></li><li><p><strong>div+css的布局较table布局有什么优点<br>改版的时候更方便 只要改css文件。 页面加载速度更快、结构化清晰、页面显示简洁。 表现与结构相分离。 易于优化（seo）搜索引擎更友好，排名更容易靠前</strong></p></li><li><p><strong>img的alt与title有何异同？ strong与em的异同？<br>alt(alt text):为不能显示图像、窗体或applets的用户代理（UA），alt属性用来指定替换文字。替换文字的语言由lang属性指定。(在IE浏览器下会在没有title时把alt当成 tool tip显示)<br>title(tool tip):该属性为设置该属性的元素提供建议性的信息。<br>strong:粗体强调标签，强调，表示内容的重要性。<br>em:斜体强调标签，更强烈强调，表示内容的强调点。</strong></p></li><li><p><strong>渐进增强和优雅降级之间的不同<br>渐进增强 progressive enhancement：针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。 优雅降级 graceful degradation：一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。 区别：优雅降级是从复杂的现状开始，并试图减少用户体验的供给，而渐进增强则是从一个非常基础的，能够起作用的版本开始，并不断扩充，以适应未来环境的需要。降级（功能衰减）意味着往回看；而渐进增强则意味着朝前看，同时保证其根基处于安全地带。</strong></p></li><li><p><strong>为什么利用多个域名来存储网站资源会更有效？<br>CDN缓存更方便<br>突破浏览器并发限制<br>节约cookie带宽<br>节约主域名的连接数，优化页面响应速度<br>防止不必要的安全问题</strong></p></li><li><p><strong>cookies，sessionStorage和localStorage的区别<br>sessionStorage用于本地存储一个会话（session）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。而localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽，另外cookie还需要指定作用域，不可以跨域调用。</strong></p></li><li><p><strong>src与href的区别<br>简单来讲，src用于替换当前元素，href用于在当前文档和引用资源之间确立联系。</strong>  </p></li><li><p><em>src：src是source的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。<br>当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。<br>harf：href是Hypertext Reference的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，如果我们在文档中添加 <link href=”common.css” rel=”stylesheet”/> 那么浏览器会识别该文档为css文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用link方式来加载css，而不是使用@import方式。</em>*</p></li><li><p><strong>什么是微格式，谈谈理解<br>微格式（Microformats）是一种让机器可读的语义化XHTML词汇的集合，是结构化数据的开放标准。是为特殊应用而制定的特殊格式。优点：将智能数据添加到网页上，让网站内容在搜索引擎结果界面可以显示额外的提示。</strong></p></li><li><p><strong>在css/js代码上线之后开发人员经常会优化性能，从用户刷新网页开始，一次js请求一般情况下有哪些地方会有缓存处理？<br>dns缓存，cdn缓存，浏览器缓存，服务器缓存</strong></p></li><li><p><strong>优化大型网站加载图片方案</strong>  </p></li><li><p><em>图片懒加载，在页面上的未可视区域可以添加一个滚动条事件，判断图片位置与浏览器顶端的距离与页面的距离，如果前者小于后者，优先加载。 如果为幻灯片、相册等，可以使用图片预加载技术，将当前展示图片的前一张和后一张优先下载。 如果图片为css图片，可以使用CSSsprite，SVGsprite，Iconfont、Base64等技术。 如果图片过大，可以使用特殊编码的图片，加载时会先加载一张压缩的特别厉害的缩略图，以提高用户体验。 如果图片展示区域小于图片的真实大小，则因在服务器端根据业务需要先行进行图片压缩，图片压缩后大小与展示一致。</em>*</p></li><li><p><strong>HTML结构的语义化</strong>  </p></li><li><p><em>html本身是没有表现的，我们看到例如<h1>是粗体，字体大小2em，加粗；<strong>是加粗的，不要认为这是html的表现，这些其实html默认的css样式在起作用，所以去掉或样式丢失的时候能让页面呈现清晰的结构不是语义化的HTML结构的优点，但是浏览器都有有默认样式，默认样式的目的也是为了更好的表达html的语义，可以说浏览器的默认样式和语义化的HTML结构是不可分割的。</em>*</p></li><li><p><strong>有哪项方式可以对一个DOM设置它的CSS样式<br>外部样式表，引入一个外部css文件<br>内部样式表，将css代码放在 <head> 标签内部<br>内联样式，将css样式直接定义在 HTML 元素内部</strong></p></li><li><p><strong>CSS都有哪些选择器</strong>  </p></li><li><p><em>派生选择器（用HTML标签申明）<br>id选择器（用DOM的ID申明）<br>类选择器（用一个样式类名申明）</em>*  </p></li><li><p><em>属性选择器（a[rel = “external”]）<br>除了前3种基本选择器，还有一些扩展选择器，<br>包括 后代选择器（利用空格间隔，比如div .a{ }）<br>相邻选择器（利用加号间隔，h1 + p）<br>群组选择器（利用逗号间隔，比如p,div,#a{ }）<br>通配符选择器（ * ）<br>伪类选择器（a: hover, li: nth - child）</em>*</p></li><li><p><strong>CSS中可以通过哪些属性定义，使得一个DOM元素不显示在浏览器可视范围内<br>设置display属性为none，或者设置visibility属性为hidden<br>设置宽高为0，设置透明度为0，设置z-index位置在-1000em</strong></p></li><li><p><strong>超链接访问过后hover样式就不出现的问题是什么？如何解决？</strong>  </p></li><li><p><em>被点击访问过的超链接样式不在具有hover和active了,解决方法是改变CSS属性的排列顺序: L-V-H-A（link,visited,hover,active）</em>*</p></li><li><p><strong>什么是Css Hack？ie6,7,8的hack分别是什么？<br>针对不同的浏览器写不同的CSS code的过程，就是CSS hack。<br>示例如下：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs css">   <span class="hljs-selector-id">#test</span>&#123;   <br>        <span class="hljs-attribute">width</span>:<span class="hljs-number">300px</span>;   <br>        <span class="hljs-attribute">height</span>:<span class="hljs-number">300px</span>;   <br>        <span class="hljs-attribute">background-color</span>:blue;      <span class="hljs-comment">/*firefox*/</span><br>        <span class="hljs-attribute">background-color</span>:red\<span class="hljs-number">9</span>;      <span class="hljs-comment">/*all ie*/</span><br>        <span class="hljs-attribute">background-color</span>:yellow;    <span class="hljs-comment">/*ie8*/</span><br>        +<span class="hljs-attribute">background-color</span>:pink;        <span class="hljs-comment">/*ie7*/</span><br>        _background-<span class="hljs-attribute">color</span>:orange;       <span class="hljs-comment">/*ie6*/</span>    &#125;  <br>        <span class="hljs-selector-pseudo">:root</span> <span class="hljs-selector-id">#test</span> &#123; <span class="hljs-attribute">background-color</span>:purple\<span class="hljs-number">9</span>; &#125;  <span class="hljs-comment">/*ie9*/</span><br><span class="hljs-keyword">@media</span> all <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>:<span class="hljs-number">0px</span>)<br>     &#123; <span class="hljs-selector-id">#test</span> &#123;<span class="hljs-attribute">background-color</span>:black;&#125; &#125;  <span class="hljs-comment">/*opera*/</span><br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">-webkit-min-device-pixel-ratio</span>:<span class="hljs-number">0</span>)<br>&#123; <span class="hljs-selector-id">#test</span> &#123;<span class="hljs-attribute">background-color</span>:gray;&#125; &#125;       <span class="hljs-comment">/*chrome and safari*/</span><br></code></pre></td></tr></table></figure></li><li><p><strong>行内元素和块级元素的具体区别是什么？</strong>  </p></li><li><p><em>块级元素(block)特性： 总是独占一行，表现为另起一行开始，而且其后的元素也必须另起一行显示; 宽度(width)、高度(height)、内边距(padding)和外边距(margin)都可控制;<br>内联元素(inline)特性： 和相邻的内联元素在同一行;</em>*</p></li><li><p><strong>什么是外边距重叠？有什么效果<br>外边距重叠就是margin-collapse。 在CSS当中，相邻的两个盒子（可能是兄弟关系也可能是祖先关系）的外边距可以结合成一个单独的外边距。这种合并外边距的方式被称为折叠，并且因而所结合成的外边距称为折叠外边距。<br>折叠结果遵循下列计算规则： 两个相邻的外边距都是正数时，折叠结果是它们两者之间较大的值。 两个相邻的外边距都是负数时，折叠结果是两者绝对值的较大值。 两个外边距一正一负时，折叠结果是两者的相加的和。</strong></p></li><li><p><strong>rgba()和opacity的透明效果有什么不同？<br>rgba()和opacity都能实现透明效果，但最大的不同是opacity作用于元素，以及元素内的所有内容的透明度， 而rgba()只作用于元素的颜色或其背景色。（设置rgba透明的元素的子元素不会继承透明效果！）</strong></p></li><li><p><strong>水平垂直居中一个浮动元素</strong></p><p><strong><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label0http:/www.tuicool.com/articles/_blank">方法一：</a><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label0http:/www.tuicool.com/articles/_blank">position</a><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label0http:/www.tuicool.com/articles/_blank">加</a><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label0http:/www.tuicool.com/articles/_blank">margin</a></strong></p><p><strong><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label1http:/www.tuicool.com/articles/_blank">方法二：</a><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label1http:/www.tuicool.com/articles/_blank">diaplay:table-cell</a></strong></p><p><strong><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label2http:/www.tuicool.com/articles/_blank">方法三：</a><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label2http:/www.tuicool.com/articles/_blank">position</a><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label2http:/www.tuicool.com/articles/_blank">加</a><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label2http:/www.tuicool.com/articles/_blank">transform</a></strong></p><p><strong><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label3http:/www.tuicool.com/articles/_blank">方法四：</a><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label3http:/www.tuicool.com/articles/_blank">flex;align-items: center;justify-content: center</a></strong></p><p><strong><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label4http:/www.tuicool.com/articles/_blank">方法五：</a><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label4http:/www.tuicool.com/articles/_blank">display:flex;margin:auto</a></strong></p><p><strong><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label5http:/www.tuicool.com/articles/_blank">方法六：纯</a><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label5http:/www.tuicool.com/articles/_blank">position</a></strong></p><p><strong><a href="http://www.cnblogs.com/xianyulaodi/p/5863305.html_label6http:/www.tuicool.com/articles/_blank">方法七：兼容低版本浏览器，不固定宽高</a></strong></p></li><li><p><strong>讲一下你对盒模型的了解</strong>  </p></li><li><p><em>有padding、margin、border、content属性<br>box-sizing: content-box 是W3C盒子模型，元素的width和height属性只包含内容content部分，不包含内边距padding和边框border部分。<br>box-sizing: border-box 是IE盒子模型，元素的width和height属性同时包含内容content，内边距padding和边框border部分</em>*</p></li><li><p><strong>position定位</strong>  </p></li><li><p><em>Relitive: 相对于自身,会指引子元素相对于他自身进行定位<br>Absolute: 根据父元素的relitive进行定位<br>Fixed:现对于window窗口定位</em>*</p></li><li><p><strong>rem原理与em/ vw/vh 区别</strong>  </p></li><li><p>*Rem是基于根元素的字体大小发生改变,而em是基于body的字体大小发生改变  </p></li></ul><p>1.因为html5和css3引入视口的概念来代替显示器的物理尺寸。通过在meta标签上的设置，视口的长宽可以跟设备的物理分辨率相等，也可以不相等（以便手机上可以实现用两个手指来放大会缩小页面），可根据需要灵活掌握。在PC中，视口的长宽则是跟浏览器窗口的物理分辨率恒等的。<br>2. 1vw等于视口宽度（viewport width）的百分之一，也就是说100vw就是视口的宽度。同理，1vh等于视30px改成5vw，意思就是窗口宽度的5%，同理10vw。<br>3.不过由于vw和vh是css3才支持的长度单位，所以在不支持css3的浏览器中是无效的口高度（viewport height）的百分之一。**</p><ul><li><p><strong>Css3的动画</strong>  </p></li><li><p><em>@keyframes 规则用于创建动画。在 @keyframes 中规定某项 CSS 样式，就能创建由当前样式逐渐改为新样式的动画效果。</em>*</p></li><li><p><strong>Sass、LESS是什么，优点</strong>  </p></li><li><p><em>他们是CSS预处理器。他是CSS上的一种抽象层。他们是一种特殊的语法/语言编译成CSS。<br>例如Less是一种动态样式语言. 将CSS赋予了动态语言的特性，如变量，继承，运算， 函数. LESS 既可以在客户端上运行 (支持IE 6+, Webkit, Firefox)，也可一在服务端运行 (借助 Node.js)。<br>优点：<br>结构清晰，便于扩展。<br>可以方便地屏蔽浏览器私有语法差异。<br>封装对浏览器语法差异的重复处理，减少无意义的机械劳动。<br>可以轻松实现多重继承。<br>完全兼容 CSS 代码，可以方便地应用到老项目中。<br>LESS 只是在 CSS 语法上做了扩展，所以老的 CSS 代码也可以与 LESS 代码一同编译。</em>*</p></li><li><p><strong>display:none与visibility:hidden的区别是什么？</strong>  </p></li><li><p><em>display : 隐藏对应的元素但不挤占该元素原来的空间。<br>visibility: 隐藏对应的元素并且挤占该元素原来的空间。<br>即是，使用CSS display:none属性后，HTML元素（对象）的宽度、高度等各种属性值都将“丢失”;而使用visibility:hidden属性后，HTML元素（对象）仅仅是在视觉上看不见（完全透明），而它所占据的空间位置仍然存在。</em>*</p></li><li><p><strong>CSS中link和@import的区别<br>Link属于html标签，而@import是CSS中提供的<br>在页面加载的时候，link会同时被加载，而@import引用的CSS会在页面加载完成后才会加载引用的CSS<br>@import只有在ie5以上才可以被识别，而link是html标签，不存在浏览器兼容性问题 Link引入样式的权重大于@import的引用（@import是将引用的样式导入到当前的页面中）</strong></p></li><li><p><strong>BFC是什么</strong>  </p></li><li><p><em>BFC（块级格式化上下文），一个创建了新的BFC的盒子是独立布局的，盒子内元素的布局不会影响盒子外面的元素。在同一个BFC中的两个相邻的盒子在垂直方向发生margin重叠的问题 BFC是指浏览器中创建了一个独立的渲染区域，该区域内所有元素的布局不会影响到区域外元素的布局，这个渲染区域只对块级元素起作用</em>*</p></li><li><p><strong>html常见兼容性问题</strong>  </p></li><li><p>*1.双边距BUG float引起的 使用display  </p></li></ul><p>2.3像素问题 使用float引起的 使用dislpay:inline -3px<br>3.超链接hover 点击后失效 使用正确的书写顺序 link visited hover active<br>4.Ie z-index问题 给父级添加position:relative<br>5.Png 透明 使用js代码 改<br>6.Min-height 最小高度 ！Important 解决’<br>7.select 在ie6下遮盖 使用iframe嵌套<br>8.为什么没有办法定义1px左右的宽度容器（IE6默认的行高造成的，使用over:hidden,zoom:0.08 line-height:1px）<br>9.IE5-8不支持opacity，解决办法： .opacity { opacity: 0.4 filter: alpha(opacity=60); /* for IE5-7 */ -ms-filter: “progid:DXImageTransform.Microsoft.Alpha(Opacity=60)”; /* for IE 8*/ }<br>10. IE6不支持PNG透明背景，解决办法: IE6下使用gif图片**</p><ul><li><p><strong>行内元素有哪些?块级元素有哪些?空(void)元素有哪些？</strong>  </p></li><li><p><em>块级元素：address – 地址 blockquote – 块引用 center – 举中对齐块 dir – 目录列表 div – 常用块级容易，也是css layout的主要标签 dl – 定义列表 fieldset – form控制组 form – 交互表单 h1 – 大标题 h2 – 副标题 h3 – 3级标题 h4 – 4级标题 h5 – 5级标题 h6 – 6级标题 hr – 水平分隔线 isindex – input prompt menu – 菜单列表 noframes – frames可选内容，（对于不支持frame的浏览器显示此区块内容） noscript – ）可选脚本内容（对于不支持script的浏览器显示此内容） ol – 排序表单 p – 段落 pre – 格式化文本 table – 表格 ul – 非排序列表<br>行内元素:a – 锚点 abbr – 缩写 acronym – 首字 b – 粗体(不推荐) big – 大字体 br – 换行 em – 强调 font – 字体设定(不推荐) i – 斜体 img – 图片 input – 输入框 label – 表格标签 s – 中划线(不推荐) select – 项目选择 small – 小字体文本 span – 常用内联容器，定义文本内区块 strike – 中划线 strong – 粗体强调 sub – 下标 sup – 上标 textarea – 多行文本输入框 tt – 电传文本 u – 下划线 var – 定义变量<br>知名的空元素：<br><hr><img><input><link><meta>鲜为人知的是： <area><base><col><command> <embed><keygen><param><source><track><wbr></em>*</p></li><li><p><strong>前端页面有哪三层构成</strong>  </p></li><li><p><em>结构层 Html 表示层 CSS 行为层 js</em>*</p></li><li><p><strong>CSS哪些属性可以继承？</strong>  </p></li><li><p><em>可继承： font-size font-family color, UL LI DL DD DT;<br>不可继承 ：border padding margin width height ;</em>*</p></li><li><p><strong>CSS优先级算法（权重）</strong>  </p></li><li><p><em>优先级就近原则，样式定义最近者为准<br>载入样式以最后载入的定位为准<br>!important&gt; 内联 &gt; id &gt; class &gt; tag</em>*</p></li><li><p><strong>高度自适应，宽度是高度的一半，如何布局</strong>  </p></li><li><p><em>利用padding-top/bottom/left/right属性在设置为百分比时按照父元素的宽度来进行设置，可以通过设置padding-top/bottom：100%；padding-left/right:50%;将元素撑开，使用需注意设置父元素的宽度，特别是在父元素的宽度是继承的情况下，也可更具情况只设置父元素的宽度而不设置高度来隐藏父元素；</em>*</p></li><li><p><strong>类似圣杯布局的多种代码方式</strong>  </p></li><li><p><em>圣杯布局是一种很常见的css布局。<br>要求：<br>1、上部和下部各自占领屏幕所有宽度。<br>2、上下部之间的部分是一个三栏布局。<br>3、三栏布局两侧宽度不变，中间部分自动填充整个区域。<br>4、中间部分的高度是三栏中最高的区域的高度。</em>*</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><code class="hljs html">浮动实现<br>外层框架<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>这里是头部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>这里是底部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>.header,.footer&#123;<br>    height:200px;<br>    width:100%;<br>    background:red;<br>&#125;<br>.container&#123;<br>    padding-left:200px;<br>    padding-right:300px;<br>&#125;<br>填充三栏<br>这一步骤，首先给底部区域清除浮动，防止跟随上边的区域一起浮动。<br>另外：把中，左，右三个区域设置成度浮动。给左右两块区域固定的宽度，中间部分的宽度设置成100%。<br>这样实现下来，因为浮动的关系，[middle]会占据[container]的所有部分，而左右两块区域都会被挤到下面，但是，由于第一步设置了内边距的关系，[container]的左右各剩余了一块区域，且宽度与左右区域相同。<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>这里是头部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;middle&quot;</span>&gt;</span>中间部分<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>左边<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>右边<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>这里是底部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>.header,.footer&#123;<br>    height:40px;<br>    width:100%;<br>    background:red;<br>&#125;<br>.footer&#123;<br>    clear:both;<br>&#125;<br>.container&#123;<br>    padding-left:200px;<br>    padding-right:300px;<br>&#125;.container div&#123;<br>    float:left;<br>&#125;<br>.middle&#123;<br>    width:100%;<br>    background:yellow;<br>&#125;<br>.left&#123;<br>    width:200px;<br>    background:pink;<br>&#125;<br>.right&#123;<br>    width:300px;<br>    background:aqua;<br>&#125;<br>移动左侧区域<br>接下来要做的就是把左右两块区域挪到空出来的内边距空间里去。<br>先移动左边，新加一个样式 margin-left:-100%。这样一来，因为浮动关系，就把左边块上移到了[middle]左侧，与其交织在一起，而右侧栏就自动往左移动。然后再给左侧栏一个偏移量，偏移量恰好是其宽度，这一步要给[container]的position设成relative<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>这里是头部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;middle&quot;</span>&gt;</span>中间部分<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>左边<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>右边<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>这里是底部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>.header,.footer&#123;<br>    height:40px;<br>    width:100%;<br>    background:red;<br>&#125;<br>.footer&#123;<br>    clear:both;<br>&#125;<br>.container&#123;<br>    padding-left:200px;<br>    padding-right:300px;<br>&#125;<br>.container div&#123;<br>    postion:relative;<br>    float:left;<br>&#125;<br>.middle&#123;<br>    width:100%;<br>    background:yellow;<br>&#125;<br>.left&#123;<br>    width:200px;<br>    background:pink;<br>    margin-left:-100%;<br>    right:200px;<br>&#125;<br>.right&#123;<br>    width:300px;<br>    background:aqua;<br>&#125;<br>移动右边<br>同上一步的原理一样，把右侧区域也给弄上去，设置负外边距和本身宽度相同就行了。<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>这里是头部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;middle&quot;</span>&gt;</span>中间部分<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>左边<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>右边<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>这里是底部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>.header,.footer&#123;<br>    height:40px;<br>    width:100%;<br>    background:red;<br>&#125;<br>.footer&#123;<br>    clear:both;<br>&#125;<br>.container&#123;<br>    padding-left:200px;<br>    padding-right:300px;<br>&#125;<br>.container div&#123;<br>    postion:relative;<br>    float:left;<br>&#125;<br>.middle&#123;<br>    width:100%;<br>    background:yellow;<br>&#125;<br>.left&#123;<br>    width:200px;<br>    background:pink;<br>    margin-left:-100%;<br>    right:200px;<br>&#125;<br>.right&#123;<br>    width:300px;<br>    background:aqua;<br>    margin-right:-300px;<br>&#125;<br><br> <br><br><br>flexbox弹性盒子实现<br>弹性盒子用来实现圣杯布局特别简单。只需要把中间的部分用flex布局即可。<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>这里是头部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>左边<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;middle&quot;</span>&gt;</span>中间部分<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>右边<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>这里是底部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>.header,.footer&#123;<br>    height:40px;<br>    width:100%;<br>    background:red;<br>&#125;<br>.container&#123;<br>    display: flex;<br>&#125;<br>.middle&#123;<br>    flex: 1;<br>    background:yellow;<br>&#125;<br>.left&#123;<br>width:200px;<br>    background:pink;<br>&#125;<br>.right&#123;<br>    background: aqua;<br>    width:300px;<br>&#125;<br>很简单，在写html的时候，因为不再涉及到浮动，只需要按照左中右的顺序来写就可以了。左右两块区域的宽度写死，把中间的区域的flex属性设置成1就可以了。<br>css grid网格<br>grid是一种新的布局方式，截止2018年初，绝大多数浏览器都已经支持css grid。<br>其原理就是把页面的区域划分成一个一个的网格，就和围棋的棋盘一样。<br>用网格来解决圣杯问题，可以摆脱弹性盒子时需要格外加一个[container]的问题，也就是左中右三款区域不需要在他们外边包装一个额外的div。<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>header<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;middle&quot;</span>&gt;</span>middle<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>right<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>     <br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>footer<span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <br>body&#123;<br>    display: grid;<br>&#125;<br>#header&#123;<br>    background: red;<br>    grid-row:1;<br>    grid-column:1/5;<br>&#125;<br>#left&#123;<br>    grid-row:2;<br>    grid-column:1/2;<br>    background: orange;<br>&#125;<br>#right&#123;<br>    grid-row:2;<br>    grid-column:4/5;<br>    background: cadetblue;<br>&#125;<br>#middle&#123;<br>    grid-row:2;<br>    grid-column:2/4;<br>    background: rebeccapurple<br>&#125;<br>#footer&#123;<br>    background: gold;<br>    grid-row:3;<br>    grid-column:1/5;<br>&#125;<br>简单说一下代码的实现。回头会专门看一下css grid的细节。<br>首先给最外层的body设成display:grid。当然，是外层父级元素即可，不一定是body。<br>grid-row就是说由上到下，#header占据第1格，#left,#middle,#right占据第2格，#footer占据第3格。<br>而grid-column表示，在横向从左向右，分成了五格。其中#header和#footer占据全部。#left占据第1格，#middle占据第2到第4格，#right占据第5格。<br>不管是实现起来还是理解起来都很方便。<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>谷歌插件Infinity pro标签书签分享，附上本地pro版的书签的迁移方法</title>
    <link href="/2020/10/24/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6Infinity%20pro%E6%A0%87%E7%AD%BE%E4%B9%A6%E7%AD%BE%E5%88%86%E4%BA%AB%EF%BC%8C%E9%99%84%E4%B8%8A%E6%9C%AC%E5%9C%B0pro%E7%89%88%E7%9A%84%E4%B9%A6%E7%AD%BE%E7%9A%84%E8%BF%81%E7%A7%BB%E6%96%B9%E6%B3%95/"/>
    <url>/2020/10/24/%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6Infinity%20pro%E6%A0%87%E7%AD%BE%E4%B9%A6%E7%AD%BE%E5%88%86%E4%BA%AB%EF%BC%8C%E9%99%84%E4%B8%8A%E6%9C%AC%E5%9C%B0pro%E7%89%88%E7%9A%84%E4%B9%A6%E7%AD%BE%E7%9A%84%E8%BF%81%E7%A7%BB%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p><strong>这个书签涵盖很多程序员必备网站，不止有前端</strong></p><p><strong>方法一：直接在浏览器打开即可：m.infinitynewtab.com?6iyA0H</strong></p><p><strong><img src="https://img-blog.csdnimg.cn/20201021163112662.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201021163137551.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br>方法二：谷歌infinity插件下载：<a href="https://www.extfans.com/search/extensions/infinity/">https://www.extfans.com/search/extensions/infinity/</a>（推荐）</strong></p><p><strong>官网：<a href="http://cn.infinitynewtab.com/">http://cn.infinitynewtab.com/</a></strong></p><p><img src="https://img-blog.csdnimg.cn/20201021173046620.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong><img src="https://img-blog.csdnimg.cn/20201021163040823.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></strong></p><p><img src="https://img-blog.csdnimg.cn/20201021174039112.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>安装方法：<br>由于国内使用谷歌产品需要科学上网，这里分享一个谷歌插件代理网站<br>把下载的压缩包解压，提取出crx后缀文件，打开设置中的扩展程序如下图，打开开发者模式，将crx文件拖拽进窗口，如果失败，多试几次</strong></p><p><img src="https://img-blog.csdnimg.cn/20201021174204147.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20201021173915696.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20201021174828771.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>安装成功后可以用第三方账号登录，或者旧版infinity插件数据迁移</strong><br><img src="https://img-blog.csdnimg.cn/2020102117503358.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20201021175123878.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br><strong>然而新版的infinity pro标签不支持备份成本地infinity文件，只能通过云端进行云更新和备份，作为web前端开发者当然是要打开F12一探究竟，于是我发现，断网的状态下，刷新页面不会请求数据渲染，也就是所有的书签都存在本地缓存中，于是我试了试查看localstorage，果然查到了一个infinity-icons的键值对，这里就是infinity_pro的所有图标，如果需要复制别人的或者复制给别人，直接用此方法生成json文件或者直接用txt即可。</strong></p><p><strong>注意：粘贴了别人的书签后需要重启浏览器才有效</strong></p><p><img src="https://img-blog.csdnimg.cn/20201023174209868.gif"><img src="https://img-blog.csdnimg.cn/20201023175424457.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>最后，分享一下我的infinity pro的书签json文件以及插件，希望对大家有帮助。<br>地址：<a href="https://gitee.com/DieHunter/myCode/tree/master/infinity_pro">https://gitee.com/DieHunter/myCode/tree/master/infinity_pro</a></strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（十九）前端商城部分</title>
    <link href="/2020/10/17/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%B9%9D%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/"/>
    <url>/2020/10/17/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%B9%9D%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（十八）前端商城部分：</strong><br><a href="https://blog.csdn.net/time_____/article/details/108918489">https://blog.csdn.net/time_____/article/details/108918489</a><br><strong>项目源码（持续更新）：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopping">https://gitee.com/DieHunter/myCode/tree/master/shopping</a></strong></p><p><strong>上篇文章后，前端商城部分基本功能已实现，包括商品列表，商品分类，首页商品展示，商品详情，购物车，用户登录注册，剩余内容：用户信息修改，提交订单，订单展示等，这篇文章将对剩余功能部分完结。</strong></p><p><strong>用户信息修改的后端接口已经在管理平台实现，这里直接进行验证调用即可</strong></p><p><strong>之前的修改用户信息功能在测试中体现出来了一个bug，因为生成Token的字段是用户名，当修改用户信息时，如果修改了用户名，就会导致token验证失败，于是我们需要修复token生成方式，将之前的用户名生成改成_id生成,新版代码已经提交至码云</strong></p><p><strong>修复后效果：</strong></p><p><img src="https://img-blog.csdnimg.cn/20201016164711279.gif"></p><p><strong>下面介绍一下实现流程 ，这里我们把info用户信息界面和登录界面放在单页面中，通过v-if条件渲染，条件是checkToken是否通过</strong></p><p><strong>bussiness.js，验证token是否有效</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;<br><span class="hljs-keyword">const</span> &#123; ServerApi, StorageName &#125; = config;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserInfoBussiness</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Vue</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">_vueComponent</span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>();<br>    <span class="hljs-built_in">this</span>.vueComponent = _vueComponent;<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">checkToken</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//验证Token函数，若token正确，则直接登录成功，若未成功，则切换至登录界面</span><br>    <span class="hljs-keyword">let</span> token = <span class="hljs-built_in">this</span>.$storage.getStorage(StorageName.Token);<br>    <span class="hljs-keyword">if</span> (!token || !token.length) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-built_in">this</span>.$axios<br>      .get(ServerApi.token, &#123;<br>        <span class="hljs-attr">params</span>: &#123;<br>          token<br>        &#125;<br>      &#125;)<br>      .then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>          <span class="hljs-keyword">case</span> -<span class="hljs-number">999</span>:<span class="hljs-comment">//token请求抛发错误，token过期或错误</span><br>            <span class="hljs-built_in">this</span>.vueComponent.isLogin = <span class="hljs-literal">false</span>;<span class="hljs-comment">//显示登录页面</span><br>            <span class="hljs-built_in">this</span>.$storage.clearStorage(StorageName.Token);<span class="hljs-comment">//清除之前的token</span><br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<span class="hljs-comment">//验证token成功</span><br>            <span class="hljs-built_in">this</span>.vueComponent.userInfo = res.data;<br>            <span class="hljs-built_in">this</span>.vueComponent.isLogin = <span class="hljs-literal">true</span>;<span class="hljs-comment">//显示个人信息页面</span><br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            <span class="hljs-built_in">this</span>.vueComponent.isLogin = <span class="hljs-literal">false</span>;<br>            <span class="hljs-built_in">this</span>.$storage.clearStorage(StorageName.Token);<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;)<br>      .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;&#125;);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>info.vue组件</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Top</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;isLogin?&#x27;我的&#x27;:&#x27;登录&#x27;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Top</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">UserInfo</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;isLogin&quot;</span> <span class="hljs-attr">:userInfo</span>=<span class="hljs-string">&quot;userInfo&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">UserInfo</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">Login</span> <span class="hljs-attr">v-else</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Login</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TabBar</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">TabBar</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> UserInfoBussiness <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bussiness&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> TabBar <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/tabBar/tabBar&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> UserInfo <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/userInfo/userInfo&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Login <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/login/login&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Top <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/top/top&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; EventName &#125; = config;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">components</span>: &#123;</span><br><span class="javascript">    Top,</span><br><span class="javascript">    UserInfo,</span><br><span class="javascript">    Login,</span><br><span class="javascript">    TabBar</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">isLogin</span>: <span class="hljs-literal">false</span>,</span><br><span class="javascript">      <span class="hljs-attr">userInfoBussiness</span>: <span class="hljs-literal">null</span>,</span><br><span class="javascript">      <span class="hljs-attr">userInfo</span>: <span class="hljs-literal">null</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.userInfoBussiness = <span class="hljs-keyword">new</span> UserInfoBussiness(<span class="hljs-built_in">this</span>);</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.onEvent(EventName.IsLogin, <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.userInfoBussiness.checkToken();<span class="hljs-comment">//退出登录响应事件，重重页面</span></span><br><span class="javascript">    &#125;);</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.userInfoBussiness.checkToken();<span class="hljs-comment">//初始化先验证token</span></span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">destroyed</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.offEvent(EventName.IsLogin);</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>在用户登录成功后，我们需要一个组件显示用户信息，这个没有任何逻辑，纯渲染，所以暂不做介绍</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;userInfo&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/UpdateInfo&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;imgPath+userInfo.headPic&quot;</span> <span class="hljs-attr">alt</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;userInfo.username&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-fanhui&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;userInfo.phoneNum&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;userInfo.mailaddress+userInfo.mailurl&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;userInfo.alladdress.join(&#x27;-&#x27;)+&#x27;-&#x27;+userInfo.address&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-cell</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;userInfo.descript&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-cell</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; RequestPath, StorageName &#125; = Config;</span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; Cell &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;userinfotop&quot;</span>,</span><br><span class="javascript">  <span class="hljs-attr">props</span>: [<span class="hljs-string">&quot;userInfo&quot;</span>],<span class="hljs-comment">//父组件传递用户信息至当前组件，并渲染</span></span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">imgPath</span>: RequestPath</span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript"></span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$storage.saveStorage(StorageName.UserInfo, <span class="hljs-built_in">this</span>.userInfo);</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.userInfo</span> &#123;</span><br><span class="css">  <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) &#123;</span><br><span class="css">    <span class="hljs-selector-class">.h</span>(<span class="hljs-number">230</span>);</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">    <span class="hljs-selector-class">.mcolor</span>();</span><br><span class="css">    <span class="hljs-selector-class">.l_h</span>(<span class="hljs-number">230</span>);</span><br><span class="css">    <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">1px</span>;</span><br><span class="css">    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;</span><br><span class="css">    &gt; <span class="hljs-selector-tag">img</span>,</span><br><span class="css">    &gt; <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="css">      <span class="hljs-attribute">vertical-align</span>: middle;</span><br><span class="css">      <span class="hljs-attribute">margin-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">40</span> / @pxtorem, rem);</span><br><span class="css">    &#125;</span><br><span class="css">    &gt; <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">      <span class="hljs-selector-class">.w</span>(<span class="hljs-number">145</span>);</span><br><span class="css">      <span class="hljs-selector-class">.h</span>(<span class="hljs-number">145</span>);</span><br><span class="css">      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">    &#125;</span><br><span class="css">    &gt; <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="css">      <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">40</span>);</span><br><span class="css">    &#125;</span><br><span class="css">    &gt; <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">      <span class="hljs-attribute">float</span>: right;</span><br><span class="css">      <span class="hljs-attribute">padding-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">40</span> / @pxtorem, rem);</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">180deg</span>);</span><br><span class="css">    &#125;</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>通过点击头像框路由跳转至UpdateInfo，用户信息修改页，我们将头像上传单独写成组件</strong></p><p><img src="https://img-blog.csdnimg.cn/2020101617371416.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>这里有一个原生js上传文件的坑：<br>axios上传post文件头文件需模拟”multipart/form-data”请求，而这种请求格式与application/x-www-form-urlencoded有所不同，需要声明一个分隔符‘boundary’。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">headers: &#123;<br>          <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;multipart/form-data;boundary=ABC&quot;</span><span class="hljs-comment">//ABC内容自行填写</span><br>  &#125;,<br></code></pre></td></tr></table></figure><p><strong>那么这时，坑人的地方来了，直接以ABC这种简单的分隔符内容上传文件可能会导致服务端对文件不识别，无法找到文件起始位置，所以我们需要一个复杂的字符，比如使用newDate().getTime()生成随机字符，修改后就有以下配置</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">headers: &#123;<br>          <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;multipart/form-data;boundary=&quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime()<br>        &#125;,<br></code></pre></td></tr></table></figure><p><strong>上传头像组件中，我们要自己写一个控件替代官方的input元素，也就是点击图片使用JS执行input文件上传事件，并提交到服务端，服务端存好缓存后将图片文件地址发送到前端，前端读取文件并展示，以下是头像上传的所有过程<br>uploadPic.vue</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uploadPic&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;picPath&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;clickHandler&quot;</span> <span class="hljs-attr">alt</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;picFile&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;picFile&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;uploadPic&quot;</span> <span class="hljs-attr">accept</span>=<span class="hljs-string">&quot;image/*&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> UploadBussiness <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bussiness&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; StorageName, RequestPath, UploadKey &#125; = Config;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;uploadPic&quot;</span>,</span><br><span class="javascript">  <span class="hljs-attr">props</span>: [<span class="hljs-string">&quot;picFile&quot;</span>],</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">imgPath</span>: RequestPath,</span><br><span class="javascript">      <span class="hljs-attr">picPath</span>: <span class="hljs-string">&quot;&quot;</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.picPath = <span class="hljs-built_in">this</span>.imgPath + <span class="hljs-built_in">this</span>.picFile;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>._uploadBussiness = <span class="hljs-keyword">new</span> UploadBussiness(<span class="hljs-built_in">this</span>);</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//点击头像模拟至点击文件上传input-file标签</span></span><br><span class="javascript">      <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;#picFile&quot;</span>).click();</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">uploadPic</span>(<span class="hljs-params">e</span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-keyword">let</span> _picFile = <span class="hljs-keyword">new</span> FormData();<span class="hljs-comment">//新建FormData文件</span></span><br><span class="javascript">      _picFile.append(<span class="hljs-string">&quot;token&quot;</span>, <span class="hljs-built_in">this</span>.$storage.getStorage(StorageName.Token));<span class="hljs-comment">//将token添加至文件属性中</span></span><br><span class="javascript">      _picFile.append(UploadKey.headKey, e.target.files[<span class="hljs-number">0</span>]);<span class="hljs-comment">//文件校验字段</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>._uploadBussiness.uploadPic(_picFile);<span class="hljs-comment">//上传文件</span></span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.uploadPic</span> &#123;</span><br><span class="css">  <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.picFile</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">display</span>: none;</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>bussiness.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span><br><span class="hljs-keyword">import</span> &#123;<br>  Toast<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;<br><span class="hljs-keyword">const</span> &#123;<br>  UploadName,<br>  EventName,<br>  UploadKey<br>&#125; = config<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UploadBussiness</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Vue</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">_vueComponent</span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>()<br>    <span class="hljs-built_in">this</span>.vueComponent = _vueComponent<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">uploadPic</span>(<span class="hljs-params">data</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.$axios<br>      .post(UploadName.headPic, data, &#123;<br>        <span class="hljs-attr">headers</span>: &#123;<br>          <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;multipart/form-data;boundary=&quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime()<span class="hljs-comment">//axios上传post文件头文件需模拟&quot;multipart/form-data&quot;请求，而这种请求格式与application/x-www-form-urlencoded有所不同，需要声明一个分隔符‘boundary’。</span><br>        &#125;,<br>      &#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        Toast(res.msg);<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<span class="hljs-comment">//上传成功后显示图片</span><br>            <span class="hljs-keyword">let</span> fileRead = <span class="hljs-keyword">new</span> FileReader();<span class="hljs-comment">//新建文件读取实例</span><br>            fileRead.readAsDataURL(data.get(UploadKey.headKey));<span class="hljs-comment">//readAsDataURL读取本地图片信息</span><br>            fileRead.onload = <span class="hljs-function">() =&gt;</span> &#123;<br>              <span class="hljs-built_in">this</span>.vueComponent.picPath = fileRead.result<br>            &#125;<br>            <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.UploadPic, res.headPath)<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;)<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>说完了上传头像组件后，来实现一下修改用户信息，之前上传的头像地址会通过组件传参传递到父组件中，伴随着其他信息一起提交到服务端，服务端将收到的头像缓存地址解析成文件并保存，修改用户信息组件中可以复用一个省市县选择器组件，即之前在商品详情中使用的商品数量选择，其他的表单元素都是基本的文本类型</strong></p><p><strong>updataForm.vue</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;update&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- &lt;img :src=&quot;imgPath+userInfo.headPic&quot; alt /&gt; --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">UploadPic</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uploadPic&quot;</span> <span class="hljs-attr">:picFile</span>=<span class="hljs-string">&quot;userInfo.headPic&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">UploadPic</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span></span><br><span class="hljs-tag">      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入用户名&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;userInfo.username.length?&#x27;success&#x27;:&#x27;error&#x27;&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.username&quot;</span></span><br><span class="hljs-tag">    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span></span><br><span class="hljs-tag">      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入手机号&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;userInfo.phoneNum.length?&#x27;success&#x27;:&#x27;error&#x27;&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.phoneNum&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span></span><br><span class="hljs-tag">    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mt-radio</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.sex&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;sexOption&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-radio</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;selectAddress&quot;</span>&gt;</span>&#123;&#123;userInfo.alladdress.join(&#x27;-&#x27;)&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span></span><br><span class="hljs-tag">      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入详细地址&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;userInfo.address.length?&#x27;success&#x27;:&#x27;error&#x27;&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.address&quot;</span></span><br><span class="hljs-tag">    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span></span><br><span class="hljs-tag">      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入个性签名&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;userInfo.descript.length?&#x27;success&#x27;:&#x27;error&#x27;&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.descript&quot;</span></span><br><span class="hljs-tag">    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>修改信息<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;shopPicker&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-popup</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;popupVisible&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mt-picker</span></span><br><span class="hljs-tag">          <span class="hljs-attr">:slots</span>=<span class="hljs-string">&quot;myAddressSlots&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">value-key</span>=<span class="hljs-string">&quot;name&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">:visibleItemCount</span>=<span class="hljs-string">&quot;7&quot;</span></span><br><span class="hljs-tag">          @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;changeAddress&quot;</span></span><br><span class="hljs-tag">        &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-picker</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">mt-popup</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> UpdateBussiness <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bussiness&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; Field, Button, Picker, Popup, Radio &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> address <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/city&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> UploadPic <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../uploadPic/uploadPic&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; StorageName, RequestPath, EventName &#125; = Config;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;updateForm&quot;</span>,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">imgPath</span>: RequestPath,</span><br><span class="javascript">      <span class="hljs-attr">updateBussiness</span>: <span class="hljs-literal">null</span>,</span><br><span class="javascript">      <span class="hljs-attr">popupVisible</span>: <span class="hljs-literal">false</span>,<span class="hljs-comment">//控制picker显示</span></span><br><span class="javascript">      <span class="hljs-attr">selectArea</span>: <span class="hljs-literal">null</span>,</span><br><span class="javascript">      <span class="hljs-attr">sexOption</span>: [<span class="hljs-comment">//性别配置</span></span><br><span class="javascript">        &#123;</span><br><span class="javascript">          <span class="hljs-attr">label</span>: <span class="hljs-string">&quot;男&quot;</span>,</span><br><span class="javascript">          <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;man&quot;</span></span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        &#123;</span><br><span class="javascript">          <span class="hljs-attr">label</span>: <span class="hljs-string">&quot;女&quot;</span>,</span><br><span class="javascript">          <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;woman&quot;</span></span><br><span class="javascript">        &#125;</span><br><span class="javascript">      ],</span><br><span class="javascript">      <span class="hljs-attr">myAddressSlots</span>: [<span class="hljs-comment">//省市县联动配置</span></span><br><span class="javascript">        &#123;</span><br><span class="javascript">          <span class="hljs-attr">flex</span>: <span class="hljs-number">1</span>,</span><br><span class="javascript">          <span class="hljs-attr">defaultIndex</span>: <span class="hljs-number">0</span>,</span><br><span class="javascript">          <span class="hljs-attr">values</span>: [],</span><br><span class="javascript">          <span class="hljs-attr">className</span>: <span class="hljs-string">&quot;slot1&quot;</span>,</span><br><span class="javascript">          <span class="hljs-attr">textAlign</span>: <span class="hljs-string">&quot;center&quot;</span></span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        &#123;</span><br><span class="javascript">          <span class="hljs-attr">divider</span>: <span class="hljs-literal">true</span>,</span><br><span class="javascript">          <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;-&quot;</span>,</span><br><span class="javascript">          <span class="hljs-attr">className</span>: <span class="hljs-string">&quot;slot2&quot;</span></span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        &#123;</span><br><span class="javascript">          <span class="hljs-attr">flex</span>: <span class="hljs-number">1</span>,</span><br><span class="javascript">          <span class="hljs-attr">values</span>: [],</span><br><span class="javascript">          <span class="hljs-attr">className</span>: <span class="hljs-string">&quot;slot3&quot;</span>,</span><br><span class="javascript">          <span class="hljs-attr">textAlign</span>: <span class="hljs-string">&quot;center&quot;</span></span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        &#123;</span><br><span class="javascript">          <span class="hljs-attr">divider</span>: <span class="hljs-literal">true</span>,</span><br><span class="javascript">          <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;-&quot;</span>,</span><br><span class="javascript">          <span class="hljs-attr">className</span>: <span class="hljs-string">&quot;slot4&quot;</span></span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        &#123;</span><br><span class="javascript">          <span class="hljs-attr">flex</span>: <span class="hljs-number">1</span>,</span><br><span class="javascript">          <span class="hljs-attr">values</span>: [],</span><br><span class="javascript">          <span class="hljs-attr">className</span>: <span class="hljs-string">&quot;slot5&quot;</span>,</span><br><span class="javascript">          <span class="hljs-attr">textAlign</span>: <span class="hljs-string">&quot;center&quot;</span></span><br><span class="javascript">        &#125;</span><br><span class="javascript">      ],</span><br><span class="javascript">      <span class="hljs-attr">userInfo</span>: <span class="hljs-built_in">this</span>.$storage.getStorage(StorageName.UserInfo)<span class="hljs-comment">//获取缓存的用户信息，用于显示默认项</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">components</span>: &#123;</span><br><span class="javascript">    UploadPic</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.onEvent(EventName.UploadPic, <span class="hljs-function"><span class="hljs-params">headPic</span> =&gt;</span> &#123;<span class="hljs-comment">//上传头像后将新地址保存至当前组件</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.userInfo.headPic = headPic;</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.updateBussiness = <span class="hljs-keyword">new</span> UpdateBussiness(<span class="hljs-built_in">this</span>);</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">destroyed</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.offEvent(EventName.UploadPic);</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">selectAddress</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//显示picker</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.myAddressSlots[<span class="hljs-number">0</span>].values = address;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.popupVisible = <span class="hljs-literal">true</span>;</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">changeAddress</span>(<span class="hljs-params">picker, values</span>)</span> &#123;<span class="hljs-comment">//三级联动</span></span><br><span class="javascript">      <span class="hljs-keyword">if</span> (values[<span class="hljs-number">0</span>]) &#123;</span><br><span class="javascript">        <span class="hljs-built_in">this</span>.userInfo.alladdress = [values[<span class="hljs-number">0</span>].name];</span><br><span class="javascript">        picker.setSlotValues(<span class="hljs-number">1</span>, values[<span class="hljs-number">0</span>].children);</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (values[<span class="hljs-number">1</span>]) &#123;</span><br><span class="javascript">          <span class="hljs-built_in">this</span>.userInfo.alladdress.push(values[<span class="hljs-number">1</span>].name);</span><br><span class="javascript">          picker.setSlotValues(<span class="hljs-number">2</span>, values[<span class="hljs-number">1</span>].children);</span><br><span class="javascript">          <span class="hljs-keyword">if</span> (values[<span class="hljs-number">2</span>]) &#123;</span><br><span class="javascript">            <span class="hljs-built_in">this</span>.userInfo.alladdress.push(values[<span class="hljs-number">2</span>].name);</span><br><span class="javascript">          &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">submit</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.updateBussiness.submitData();<span class="hljs-comment">//提交信息</span></span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.update</span> &#123;</span><br><span class="css">  <span class="hljs-selector-class">.uploadPic</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="css">    <span class="hljs-selector-class">.w</span>(<span class="hljs-number">200</span>);</span><br><span class="css">    <span class="hljs-selector-class">.h</span>(<span class="hljs-number">200</span>);</span><br><span class="css">    <span class="hljs-selector-class">.mg</span>(unit(<span class="hljs-number">30</span> / <span class="hljs-keyword">@pxtorem</span>, rem) auto);</span><br><span class="css">    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.btn</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">    <span class="hljs-selector-class">.h</span>(<span class="hljs-number">100</span>);</span><br><span class="css">    <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.submit</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">margin-top</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">30</span> / @pxtorem, rem);</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">    // <span class="hljs-attribute">z-index</span>: <span class="hljs-number">100</span>;</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>bussiness.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span><br><span class="hljs-keyword">import</span> &#123;<br>  Toast<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;<br><span class="hljs-keyword">const</span> &#123;<br>  ServerApi,<br>  StorageName,<br>  EventName<br>&#125; = config<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UpdateBussiness</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Vue</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">_vueComponent</span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>()<br>    <span class="hljs-built_in">this</span>.vueComponent = _vueComponent<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">submitData</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> key <span class="hljs-keyword">in</span> <span class="hljs-built_in">this</span>.vueComponent.userInfo) &#123;<span class="hljs-comment">//表单非空判断</span><br>      <span class="hljs-keyword">let</span> value = <span class="hljs-built_in">this</span>.vueComponent.userInfo[key]<br>      <span class="hljs-keyword">if</span> (!value.length &amp;&amp; value != <span class="hljs-literal">true</span> &amp;&amp; value != <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-keyword">typeof</span> value == <span class="hljs-string">&#x27;string&#x27;</span>) &#123;<br>        Toast(<span class="hljs-string">&#x27;请填写完整的信息&#x27;</span>);<br>        <span class="hljs-keyword">return</span><br>      &#125;<br>    &#125;<br>    <span class="hljs-built_in">this</span>.$axios<br>      .post(ServerApi.user.updateUser, &#123;<br>        <span class="hljs-attr">crypto</span>: <span class="hljs-built_in">this</span>.$crypto.setCrypto(&#123;<br>          <span class="hljs-attr">token</span>: <span class="hljs-built_in">this</span>.$storage.getStorage(StorageName.Token),<br>          ...this.vueComponent.userInfo<br>        &#125;)<br>      &#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            Toast(res.msg);<br>            history.go(-<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;)<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>用户信息修改就介绍到这里，下一步将对项目的最后一步订单的前端部分进行分享</strong></p><p><strong>订单的后端逻辑与接口在管理系统中已经介绍完毕，前端部分就是很简单的数据渲染和状态修改</strong></p><p><img src="https://img-blog.csdnimg.cn/2020101621350963.gif"><img src="https://img-blog.csdnimg.cn/20201017113202183.gif"><br><strong>首先，订单是基于用户和商品绑定的，所以，我们在购物车中实现新增订单功能，添加成功后跳转至订单查询界面，除此之外，在用户信息界面，添加用户的所有订单列表可以查看和付款（由于只是一个项目案例，所以这里没有实现支付功能）</strong></p><p><strong>orderList.vue组件，几乎都是页面渲染，没有什么逻辑功能，就不做说明</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;orderTop&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fontcl&quot;</span>&gt;</span><br>            下单时间：<br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;new Date(orderList.orderTime).toLocaleString()&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fontcl&quot;</span>&gt;</span><br>            订单编号：<br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;orderList.orderId&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span></span><br><span class="hljs-tag">          <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;orderList.orderState==0?&#x27;noPay&#x27;:orderList.orderState==4?&#x27;isFinish&#x27;:&#x27;isPay&#x27;&quot;</span></span><br><span class="hljs-tag">        &gt;</span>&#123;&#123;orderState[orderList.orderState||0].name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-yonghuming iconfont&quot;</span>&gt;</span>&#123;&#123;orderList.username&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-shoujihao iconfont&quot;</span>&gt;</span>&#123;&#123;orderList.phoneNum&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fontcl&quot;</span>&gt;</span>&#123;&#123;orderList.address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;orderList&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item,index) in orderList.shopList&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;imgPath+item.shopPic&quot;</span> <span class="hljs-attr">alt</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>          &#123;&#123;item.shopName+item.shopScale&#125;&#125;<br>          <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>          ￥&#123;&#123;item.shopPrice&#125;&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>×&#123;&#123;item.shopCount&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;submitOrder&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>付款合计：￥&#123;&#123;orderList.orderPrice&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;submitOrder&quot;</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;orderList.orderState==0&quot;</span>&gt;</span>去付款<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> OrderBussiness <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bussiness&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> ShopType <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/shopType&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;orderList&quot;</span>,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">orderState</span>: ShopType.orderState,</span><br><span class="javascript">      <span class="hljs-attr">imgPath</span>: Config.RequestPath,</span><br><span class="javascript">      <span class="hljs-attr">orderList</span>: [],<span class="hljs-comment">//订单详情</span></span><br><span class="javascript">      <span class="hljs-attr">orderBussiness</span>: <span class="hljs-literal">null</span>,</span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.orderBussiness = <span class="hljs-keyword">new</span> OrderBussiness(<span class="hljs-built_in">this</span>);</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.orderBussiness.getOrderList();</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">submitOrder</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.orderBussiness.sendOrderPay(<span class="hljs-built_in">this</span>.orderList);<span class="hljs-comment">//支付</span></span><br><span class="javascript">    &#125;,</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.content</span> &#123;</span><br><span class="css">  <span class="hljs-attribute">font-size</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">32</span> / @pxtorem, rem);</span><br><span class="css">  <span class="hljs-selector-class">.fontcl</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.cl</span>(<span class="hljs-selector-id">#979797</span>);</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.orderTop</span> &#123;</span><br><span class="css">    &gt; <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">padding-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">35</span> / @pxtorem, rem);</span><br><span class="css">      <span class="hljs-attribute">padding-right</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">35</span> / @pxtorem, rem);</span><br><span class="css">    &#125;</span><br><span class="css">    &gt; <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) &#123;</span><br><span class="css">      <span class="hljs-selector-class">.h</span>(<span class="hljs-number">160</span>);</span><br><span class="css">      <span class="hljs-attribute">border-bottom</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">3</span> / @pxtorem, rem) solid <span class="hljs-number">#e8e8e8</span>;</span><br><span class="css">      &gt; <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">float</span>: left;</span><br><span class="css">        <span class="hljs-selector-tag">p</span> &#123;</span><br><span class="css">          <span class="hljs-selector-class">.l_h</span>(<span class="hljs-number">80</span>);</span><br><span class="css">          <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="css">            <span class="hljs-selector-class">.cl</span>(<span class="hljs-selector-id">#000</span>);</span><br><span class="css">          &#125;</span><br><span class="css">        &#125;</span><br><span class="css">      &#125;</span><br><span class="css">      &gt; <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">float</span>: right;</span><br><span class="css">        <span class="hljs-selector-class">.h</span>(<span class="hljs-number">160</span>);</span><br><span class="css">        <span class="hljs-selector-class">.l_h</span>(<span class="hljs-number">160</span>);</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-class">.isFinish</span> &#123;</span><br><span class="css">        <span class="hljs-selector-class">.cl</span>(<span class="hljs-keyword">@mainColor</span>);</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-class">.isPay</span> &#123;</span><br><span class="css">        <span class="hljs-selector-class">.cl</span>(<span class="hljs-selector-id">#000</span>);</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-class">.noPay</span> &#123;</span><br><span class="css">        <span class="hljs-selector-class">.cl</span>(<span class="hljs-selector-id">#A71A2D</span>);</span><br><span class="css">      &#125;</span><br><span class="css">    &#125;</span><br><span class="css">    &gt; <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">      <span class="hljs-selector-class">.h</span>(<span class="hljs-number">180</span>);</span><br><span class="css">      <span class="hljs-attribute">border-bottom</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">30</span> / @pxtorem, rem) solid <span class="hljs-number">#f3f3f3</span>;</span><br><span class="css">      &gt; <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="css">        <span class="hljs-selector-class">.l_h</span>(<span class="hljs-number">100</span>);</span><br><span class="css">        <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) &#123;</span><br><span class="css">          <span class="hljs-attribute">float</span>: left;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">          <span class="hljs-attribute">float</span>: right;</span><br><span class="css">        &#125;</span><br><span class="css">      &#125;</span><br><span class="css">      &gt; <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">      &#125;</span><br><span class="css">    &#125;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.orderList</span> &#123;</span><br><span class="css">    <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">      <span class="hljs-selector-class">.h</span>(<span class="hljs-number">250</span>);</span><br><span class="css">      <span class="hljs-attribute">padding-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">20</span> / @pxtorem, rem);</span><br><span class="css">      <span class="hljs-attribute">padding-right</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">35</span> / @pxtorem, rem);</span><br><span class="css">      &gt; <span class="hljs-selector-tag">div</span>,</span><br><span class="css">      &gt; <span class="hljs-selector-tag">span</span>,</span><br><span class="css">      <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="css">        <span class="hljs-attribute">vertical-align</span>: middle;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">        <span class="hljs-selector-class">.w</span>(<span class="hljs-number">220</span>);</span><br><span class="css">        <span class="hljs-selector-class">.h</span>(<span class="hljs-number">220</span>);</span><br><span class="css">        <span class="hljs-attribute">margin-right</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">30</span> / @pxtorem, rem);</span><br><span class="css">      &#125;</span><br><span class="css">      &gt; <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="css">        <span class="hljs-selector-class">.l_h</span>(<span class="hljs-number">60</span>);</span><br><span class="css">      &#125;</span><br><span class="css">      &gt; <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">vertical-align</span>: top;</span><br><span class="css">        <span class="hljs-attribute">margin-top</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">50</span> / @pxtorem, rem);</span><br><span class="css">        <span class="hljs-attribute">float</span>: right;</span><br><span class="css">      &#125;</span><br><span class="css">    &#125;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.submitOrder</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.h</span>(<span class="hljs-number">130</span>);</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">    <span class="hljs-attribute">position</span>: fixed;</span><br><span class="css">    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;</span><br><span class="css">    <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;</span><br><span class="css">    <span class="hljs-attribute">border-top</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">3</span> / @pxtorem, rem) solid <span class="hljs-number">#cdcdcd</span>;</span><br><span class="css">    <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) &#123;</span><br><span class="css">      <span class="hljs-attribute">float</span>: left;</span><br><span class="css">      <span class="hljs-selector-class">.pd</span>(unit(<span class="hljs-number">40</span> / <span class="hljs-keyword">@pxtorem</span>, rem));</span><br><span class="css">      <span class="hljs-selector-class">.cl</span>(<span class="hljs-selector-id">#852332</span>);</span><br><span class="css">    &#125;</span><br><span class="css">    <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">      <span class="hljs-selector-class">.mcolor</span>();</span><br><span class="css">      <span class="hljs-selector-class">.pd</span>(unit(<span class="hljs-number">45</span> / <span class="hljs-keyword">@pxtorem</span>, rem) unit(<span class="hljs-number">110</span> / @pxtorem, rem));</span><br><span class="css">      <span class="hljs-attribute">float</span>: right;</span><br><span class="css">      <span class="hljs-selector-class">.cl</span>(<span class="hljs-selector-id">#fff</span>);</span><br><span class="css">    &#125;</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>获取订单列表和提交订单支付状态的bussiness.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; MessageBox &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;<br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;<br><span class="hljs-keyword">import</span> Clone <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../utils/clone&quot;</span>;<br><span class="hljs-keyword">const</span> &#123; ServerApi, StorageName, EventName, DefaultPageConfig &#125; = config;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">OrderBussiness</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Vue</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">_vueComponent</span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>();<br>    <span class="hljs-built_in">this</span>.vueComponent = _vueComponent;<br>    <span class="hljs-built_in">this</span>._defaultPageConfig = Clone.shallowClone(DefaultPageConfig);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">getOrderList</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//获取个人订单信息列表</span><br>    <span class="hljs-built_in">this</span>._defaultPageConfig.token = <span class="hljs-built_in">this</span>.$storage.getStorage(StorageName.Token);<br>    <span class="hljs-built_in">this</span>._defaultPageConfig.orderId = <span class="hljs-built_in">this</span>.vueComponent.$route.query.orderId;<br>    <span class="hljs-built_in">this</span>.$axios<br>      .get(ServerApi.order.orderList, &#123;<br>        <span class="hljs-attr">params</span>: &#123;<br>          <span class="hljs-attr">crypto</span>: <span class="hljs-built_in">this</span>.$crypto.setCrypto(<span class="hljs-built_in">this</span>._defaultPageConfig)<br>        &#125;<br>      &#125;)<br>      .then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            <span class="hljs-built_in">this</span>.vueComponent.orderList = res.data.list[<span class="hljs-number">0</span>];<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">sendOrderPay</span>(<span class="hljs-params">data</span>)</span> &#123;<br>    MessageBox(<span class="hljs-string">&quot;提示&quot;</span>, <span class="hljs-string">&quot;本案例仅为参考，未开通支付功能&quot;</span>);<br>    data.orderState = <span class="hljs-number">1</span>;<span class="hljs-comment">//修改订单状态为已支付</span><br>    data.token = <span class="hljs-built_in">this</span>.$storage.getStorage(StorageName.Token);<br>    <span class="hljs-built_in">this</span>.$axios<br>      .post(ServerApi.order.updateOrder, &#123;<br>        <span class="hljs-attr">crypto</span>: <span class="hljs-built_in">this</span>.$crypto.setCrypto(data)<br>      &#125;)<br>      .then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>订单功能完成</strong></p><p><strong>项目整体打包</strong></p><p><strong>通过运行 npm run build 进行webpack打包</strong></p><p><strong>生产环境部署可以参照我<a href="https://blog.csdn.net/time_____/article/details/104439713">之前的一篇文章</a></strong></p><p><strong>如果需要配置https环境可以参照<a href="https://blog.csdn.net/time_____/article/details/108050452">这篇文章</a></strong></p><p><strong>文件夹的命名规则以及模块组件的分配在<a href="https://blog.csdn.net/time_____/article/details/104676690">这篇文章</a>有说到</strong></p><h3 id="希望这个系列的文章对你有帮助，如果你阅读完了整个系列或者某篇文章，非常感谢你的支持"><a href="#希望这个系列的文章对你有帮助，如果你阅读完了整个系列或者某篇文章，非常感谢你的支持" class="headerlink" title="希望这个系列的文章对你有帮助，如果你阅读完了整个系列或者某篇文章，非常感谢你的支持"></a><strong>希望这个系列的文章对你有帮助，如果你阅读完了整个系列或者某篇文章，非常感谢你的支持</strong></h3><p><strong>总结：到这篇博客为止，《从零开始，搭建一个简单的购物平台》系列的文章全部完结，以下是本人完成整个项目的一个小总结以及一些注意点：</strong></p><ul><li><strong>搭建环境及配置文件：对自己的技术栈以及优势需要深入了解，并且选择最适合自己或者是产品需求所需要的技术，完成项目目录的搭建，比如前端最好养成模块化，组件化开发的习惯，尽量将文件夹以及文件细分到每个基本组件。</strong></li><li><strong>以组件和框架的官方文档为核心，学会自己上网查找问题，自己动手解决问题非常有必要。</strong></li><li><strong>学会造轮子，虽然网上有大量的框架，组件，别人写好的js库，但是自己动手写函数，封装功能以及组件是非常有必要的，并不是节省时间或者其他方面的原因，自己写能提升自己编程思路和实际应用能力，而且当自己写出了一个比较成功的类或者组件，甚至方法时，会有很大的成就感</strong></li><li><strong>面向对象编程语言，减少代码耦合度，提高内聚性，使代码健壮性更加强大，这点我自己正在努力改善，这样写代码有利于把很多方法剥离，可以提升复用性，减少代码量，说白了，一个项目别人可能只需要3000行代码，而我可能需要5000行</strong></li><li><strong>这个项目我是全栈完成的，采用的是前后端分离，但是实际开发中，前后端可能是两个或者多个人开发，这时需要自测接口及功能，前端搭建mock.js或使用easymock来进行模拟请求，后端可以使用postman，SoapUI等工具进行接口访问</strong></li><li><strong>前端和后端需要防止多次重复请求，前端通过节流的方式，防止对后端重复请求，但是也要防止数据库的恶意攻击（这个项目中没有实现），通过参数附带时间戳，使一个ip或者一个用户只能在短时间内请求规定次数</strong></li><li><strong>巧用前后端缓存，前端使用cookie和localstorage，后端生成temp缓存文件</strong></li><li><strong>前后端加密处理，token，Crypto加密参数，Bcrypt加密密码</strong></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（十八）前端商城部分</title>
    <link href="/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E5%85%AB%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/"/>
    <url>/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E5%85%AB%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（十七）前端商城部分：</strong><br><a href="https://blog.csdn.net/time_____/article/details/108893925">https://blog.csdn.net/time_____/article/details/108893925</a><br><strong>项目源码（持续更新）：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopping">https://gitee.com/DieHunter/myCode/tree/master/shopping</a></strong></p><p><strong>上篇文章对购物车进行了简单的介绍，商城的所有基础功能已经全部实现，这篇文章开始将介绍一下用户信息和订单相关的功能实现，用户信息登录在后端管理中已经实现，我们需要实现一个注册功能，和邮箱验证功能，具体实现可参照<a href="https://blog.csdn.net/time_____/article/details/84774092">之前的一篇博客</a>或是<a href="https://blog.csdn.net/time_____/article/details/84714723">这篇文章</a></strong></p><p><strong>实现效果如下,分别是用户名密码登录，邮箱验证登录，注册功能</strong></p><p><img src="https://img-blog.csdnimg.cn/2020100417004540.gif"><img src="https://img-blog.csdnimg.cn/20201004171207952.gif"><img src="https://img-blog.csdnimg.cn/20201004171958223.gif"></p><p><strong>登录部分</strong></p><p><strong>账号密码登录与后台管理系统的登录一样，若用户输入用户名密码登录成功，则将用户部分信息加密成token传至前端并保存至本地，每次通过将token值发送后端进行继续操作</strong></p><p><strong>邮箱验证</strong></p><p><strong>在服务端的config文件中新建EmailTransporter静态变量，用来配置发送邮箱使用到的nodemailer模块</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">EmailTransporter: &#123;<br>    <span class="hljs-comment">// service: &quot;qq&quot;, // 运营商  qq邮箱 网易  若使用QQ邮箱，则只需配置service：qq</span><br>    <span class="hljs-attr">host</span>: <span class="hljs-string">&quot;smtp.163.com&quot;</span>,<span class="hljs-comment">// 若使用网易邮箱，则只需配置host：smtp.163.com</span><br>    <span class="hljs-attr">port</span>: <span class="hljs-number">465</span>, <span class="hljs-comment">//端口</span><br>    <span class="hljs-attr">auth</span>: &#123;<br>      <span class="hljs-attr">user</span>: <span class="hljs-string">&quot;132*****516@163.com&quot;</span>, <span class="hljs-comment">//发送方的邮箱</span><br>      <span class="hljs-attr">pass</span>: <span class="hljs-string">&quot;WAQM******WQEFKB&quot;</span>, <span class="hljs-comment">// pop3 授权码</span><br>    &#125;,<br>  &#125;,<br></code></pre></td></tr></table></figure><p><strong>然后新建邮箱验证码配置EmailConfig</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">EmailConfig: &#123;<br>  <span class="hljs-attr">time</span>: <span class="hljs-number">5</span>,<span class="hljs-comment">//验证码有效期，单位分钟</span><br>  <span class="hljs-attr">codeLength</span>: <span class="hljs-number">4</span>,<span class="hljs-comment">//验证码长度</span><br>  <span class="hljs-attr">sendTime</span>: <span class="hljs-number">1</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>,<span class="hljs-comment">//后端验证码允许再次发送时间间隔，单位毫秒</span><br>  <span class="hljs-attr">targetTime</span>: <span class="hljs-number">5</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>,<span class="hljs-comment">//验证码有效期，单位毫秒</span><br>  <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;零食商贩&quot;</span>,<span class="hljs-comment">//验证码标题</span><br>&#125;,<br></code></pre></td></tr></table></figure><p><strong>接着在Utils中写一个生成随机验证码函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 生成随机</span><br><span class="hljs-comment"> * @method    codeLength   函数名</span><br><span class="hljs-comment"> * @for    Utils     附属于哪个类</span><br><span class="hljs-comment"> * @param &#123;number/string&#125; len  随机数长度</span><br><span class="hljs-comment"> * @return &#123;string&#125;  _count   生成len个随机数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">codeLength</span>(<span class="hljs-params">len</span>)</span> &#123;<br>  <span class="hljs-keyword">let</span> _count = <span class="hljs-string">&quot;&quot;</span>;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>    _count += <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span>); <span class="hljs-comment">//生成len个随机数</span><br>  &#125;<br>  <span class="hljs-keyword">return</span> _count;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>在Utils生成时间戳函数，记录验证码及验证码发送时间和有效时间</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 生成时间戳</span><br><span class="hljs-comment">  * @method    randomCode</span><br><span class="hljs-comment">  * @for    Utils</span><br><span class="hljs-comment">  * @param</span><br><span class="hljs-comment">  * @return &#123;object&#125;  _count   生成len个随机数</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">randomCode</span>(<span class="hljs-params"></span>)</span> &#123;<br>   <span class="hljs-keyword">return</span> &#123;<br>     <span class="hljs-attr">code</span>: <span class="hljs-built_in">this</span>.codeLength(EmailConfig.codeLength), <span class="hljs-comment">//生成的随机数</span><br>     <span class="hljs-attr">sendTime</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime() + EmailConfig.sendTime, <span class="hljs-comment">//发送时间</span><br>     <span class="hljs-attr">targetTime</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime() + EmailConfig.targetTime, <span class="hljs-comment">//截止时间</span><br>   &#125;;<br> &#125;<br></code></pre></td></tr></table></figure><p><strong>在Utils文件夹下新建SendMail.js并新建发送邮件模块，在utils中调用</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> nodemailer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;nodemailer&quot;</span>);<br><span class="hljs-keyword">const</span> Config = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../config/config&quot;</span>);<br><span class="hljs-built_in">module</span>.exports = <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SendMail</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> transporter = nodemailer.createTransport(Config.EmailTransporter); <span class="hljs-comment">//邮箱配置项</span><br>  <span class="hljs-keyword">static</span> mailOptions = <span class="hljs-literal">null</span>; <span class="hljs-comment">//邮箱配置</span><br>  <span class="hljs-comment">/* 发送邮件模块</span><br><span class="hljs-comment">   * @method    sendEmail</span><br><span class="hljs-comment">   * @for       SendMail</span><br><span class="hljs-comment">   * @param   &#123;String&#125; mail  用户邮箱号</span><br><span class="hljs-comment">   * @param   &#123;String&#125; title  邮件标题</span><br><span class="hljs-comment">   * @param   &#123;String&#125; content  邮件内容</span><br><span class="hljs-comment">   * @return &#123;Boolean&#125;   是否发送成功</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">sendEmail</span>(<span class="hljs-params">mail, title, content</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.mailOptions = &#123;<br>      <span class="hljs-attr">from</span>: <span class="hljs-string">&#x27;&quot;邮箱验证&quot; &lt;&#x27;</span> + Config.EmailTransporter.auth.user + <span class="hljs-string">&quot;&gt;&quot;</span>,<br>      <span class="hljs-attr">to</span>: mail,<br>      <span class="hljs-attr">subject</span>: title,<br>      <span class="hljs-attr">text</span>: content,<br>    &#125;;<br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-keyword">let</span> result = <span class="hljs-keyword">await</span> <span class="hljs-built_in">this</span>.transporter.sendMail(<span class="hljs-built_in">this</span>.mailOptions);<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;发送成功&quot;</span>);<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>      <span class="hljs-built_in">console</span>.log(error);<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;发送失败&quot;</span>);<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p><strong>在utils中新建生成邮件内容的函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 生成邮件内容</span><br><span class="hljs-comment">   * @method    sendEmailCode</span><br><span class="hljs-comment">   * @for    Utils</span><br><span class="hljs-comment">   * @param   &#123;String&#125; code  验证码内容</span><br><span class="hljs-comment">   * @param   &#123;String&#125; email   用户邮箱</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">sendEmailCode</span>(<span class="hljs-params">code, email</span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> SendMail.sendEmail(<br>      email,<br>      EmailConfig.title,<br>      <span class="hljs-string">`您的验证码为:<span class="hljs-subst">$&#123;code&#125;</span>,<span class="hljs-subst">$&#123;EmailConfig.time&#125;</span>分钟内有效`</span><br>    );<br>  &#125;<br></code></pre></td></tr></table></figure><p><strong>最后在utils编写一个异步发送邮箱的函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 异步发送邮箱验证</span><br><span class="hljs-comment">   * @method    createEmailCode</span><br><span class="hljs-comment">   * @for    Utils</span><br><span class="hljs-comment">   * @param   &#123;Object&#125; codeList  邮箱验证码列表</span><br><span class="hljs-comment">   * @param   &#123;String&#125; email   用户邮箱</span><br><span class="hljs-comment">   * @param   &#123;Object&#125; findRes  数据库搜寻到的用户信息</span><br><span class="hljs-comment">   * @return &#123;Boolean&#125;  isSuccess   是否发送成功</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">createEmailCode</span>(<span class="hljs-params">codeList, email, findRes</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (!codeList[email] || <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime() &gt; codeList[email].sendTime) &#123;<br>      <span class="hljs-comment">//已过1分钟,防止多次请求邮箱</span><br>      codeList[email] = <span class="hljs-built_in">this</span>.randomCode();<br>      codeList[email].info = findRes;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-built_in">this</span>.sendEmailCode(codeList[email].code, email);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-comment">//未过1分钟</span><br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p><strong>一个发送邮件的完整模块就实现完成，下一步要做的是验证码的验证功能</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 核对验证码</span><br><span class="hljs-comment">  * @method    checkEmailCode</span><br><span class="hljs-comment">  * @for    Utils</span><br><span class="hljs-comment">  * @param   &#123;Object&#125; codeList  用户验证码列表</span><br><span class="hljs-comment">  * @param   &#123;String&#125; key   用户邮箱</span><br><span class="hljs-comment">  * @param   &#123;Object&#125; _data   用户提交的表单信息</span><br><span class="hljs-comment">  * @return   &#123;Object&#125; res   请求响应返回值</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">checkEmailCode</span>(<span class="hljs-params">codeList, key, _data</span>)</span> &#123;<br>   <span class="hljs-keyword">if</span> (!codeList[key]) &#123;<br>     <span class="hljs-comment">//未发送验证码</span><br>     <span class="hljs-keyword">return</span> &#123;<br>       <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>       <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;验证码错误&quot;</span>,<br>     &#125;;<br>   &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<br>     <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime() &lt; codeList[key].targetTime &amp;&amp;<br>     _data.mailcode == codeList[key].code<br>   ) &#123;<br>     <span class="hljs-comment">//验证码校对成功</span><br>     <span class="hljs-keyword">let</span> _obj = &#123;<br>       <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>       <span class="hljs-attr">token</span>: Utils.createToken(<br>         codeList[key].info.userType || <span class="hljs-string">&quot;&quot;</span>,<br>         codeList[key].info.username || <span class="hljs-string">&quot;&quot;</span>,<br>         _data.remember || <span class="hljs-string">&quot;&quot;</span><br>       ),<br>       <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;操作成功&quot;</span>,<br>     &#125;;<br>     codeList[key] = <span class="hljs-literal">null</span>;<br>     <span class="hljs-keyword">return</span> _obj;<br>   &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime() &gt; codeList[key].targetTime) &#123;<br>     <span class="hljs-comment">//验证码超时</span><br>     <span class="hljs-keyword">return</span> &#123;<br>       <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>       <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;验证码超时&quot;</span>,<br>     &#125;;<br>   &#125; <span class="hljs-keyword">else</span> &#123;<br>     <span class="hljs-keyword">return</span> &#123;<br>       <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>       <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;验证失败&quot;</span>,<br>     &#125;;<br>   &#125;<br> &#125;<br></code></pre></td></tr></table></figure><p><strong>到这一步，关于验证码的所有准备工作已全部实现，下一步将实现注册登录功能，其中登录有两个途径，注册时邮箱为必填值，所以可以使用邮箱验证的方式进行登录</strong></p><p><strong>服务端获取验证码接口，通过一个codeType区分用户登录获取验证码和注册获取验证码</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.get(Config.ServerApi.getMailCode, <span class="hljs-keyword">async</span> (_req, res) =&gt; &#123;<br>  <span class="hljs-comment">//用户邮箱验证</span><br>  <span class="hljs-keyword">let</span> _data = Util.getCrypto(Util.parseUrl(_req, res).crypto);<span class="hljs-comment">//解密参数</span><br>  <span class="hljs-comment">//查询用户是否存在，若未找到用户，则返回错误响应值，否则异步发送邮件验证码</span><br>  <span class="hljs-keyword">let</span> findRes = <span class="hljs-keyword">await</span> findData(Mod, &#123;<br>    <span class="hljs-attr">mailaddress</span>: _data.username.split(<span class="hljs-string">&#x27;@&#x27;</span>)[<span class="hljs-number">0</span>],<br>    <span class="hljs-attr">mailurl</span>: <span class="hljs-string">&#x27;@&#x27;</span> + _data.username.split(<span class="hljs-string">&#x27;@&#x27;</span>)[<span class="hljs-number">1</span>],<br>  &#125;);<br>  <span class="hljs-keyword">if</span> ((!findRes.length || !findRes) &amp;&amp; _data.codeType !== <span class="hljs-string">&#x27;reg&#x27;</span>) &#123;<span class="hljs-comment">//过滤区分用户注册登录</span><br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;用户未注册&quot;</span><br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  <span class="hljs-keyword">await</span> Util.createEmailCode(userCodeList, _data.username, findRes[<span class="hljs-number">0</span>] || &#123;&#125;) ? res.send(&#123;<br>    <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;发送成功&quot;</span>,<br>  &#125;) : res.send(&#123;<br>    <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;发送失败&quot;</span><br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>在实现注册部分之前，我们要写一个工具方法，用于验证码倒计时，在此期间用户无法再次点击发送请求</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../config/config&quot;</span>;<br><span class="hljs-keyword">const</span> &#123; GetCodeTime, CodeText &#125; = Config;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TimeTick</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> timer = GetCodeTime / <span class="hljs-number">1000</span>;<span class="hljs-comment">//倒计时时间</span><br>  <span class="hljs-keyword">static</span> _timeTick = <span class="hljs-literal">null</span>;<span class="hljs-comment">//定时器</span><br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">timeTick</span>(<span class="hljs-params">fn</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (!TimeTick._timeTick) &#123;<br>      TimeTick._timeTick = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (TimeTick.timer-- &lt;= <span class="hljs-number">1</span>) &#123;<br>          <span class="hljs-comment">// 重置倒计时和发送邮箱验证开关</span><br>          TimeTick.clearTick();<br>          fn(&#123; <span class="hljs-attr">content</span>: CodeText, <span class="hljs-attr">res</span>: <span class="hljs-number">1</span> &#125;);<span class="hljs-comment">//倒计时归零</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          fn(&#123; <span class="hljs-attr">content</span>: TimeTick.timer + <span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-attr">res</span>: <span class="hljs-number">0</span> &#125;);<span class="hljs-comment">//倒计时中，阻止用户重复点击</span><br>        &#125;<br>      &#125;, <span class="hljs-number">1000</span>);<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">clearTick</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-comment">//清除定时器</span><br>    <span class="hljs-built_in">clearInterval</span>(TimeTick._timeTick);<br>    TimeTick._timeTick = <span class="hljs-literal">null</span>;<br>  &#125;<br>&#125;<br>Vue.prototype.$timeTick = TimeTick;<br></code></pre></td></tr></table></figure><p><strong>用户注册界面</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;login&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span></span><br><span class="hljs-tag">        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入用户名&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;userInfo.username.length ? &#x27;success&#x27; : &#x27;error&#x27;&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.username&quot;</span></span><br><span class="hljs-tag">      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span></span><br><span class="hljs-tag">        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入密码&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;userInfo.password.length ? &#x27;success&#x27; : &#x27;error&#x27;&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.password&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span></span><br><span class="hljs-tag">      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span></span><br><span class="hljs-tag">        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请重复输入密码&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;</span></span><br><span class="hljs-string"><span class="hljs-tag">          userInfo.repassword.length &amp;&amp; userInfo.password == userInfo.repassword</span></span><br><span class="hljs-string"><span class="hljs-tag">            ? &#x27;success&#x27;</span></span><br><span class="hljs-string"><span class="hljs-tag">            : &#x27;error&#x27;</span></span><br><span class="hljs-string"><span class="hljs-tag">        &quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.repassword&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span></span><br><span class="hljs-tag">      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span></span><br><span class="hljs-tag">        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入邮箱&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.mailaddress&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;userInfo.mailaddress.length ? &#x27;success&#x27; : &#x27;error&#x27;&quot;</span></span><br><span class="hljs-tag">      &gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;selectMail&quot;</span>&gt;</span>&#123;&#123;<br>          userInfo.mailurl<br>        &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-field</span></span><br><span class="hljs-tag">        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入验证码&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;userInfo.mailcode.length == 4 ? &#x27;success&#x27; : &#x27;error&#x27;&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.mailcode&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span></span><br><span class="hljs-tag">      &gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;canGetCode&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;getCode&quot;</span>&gt;</span>&#123;&#123;<br>          codeTime<br>        &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">mt-field</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;shopPicker&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">ShopPicker</span> <span class="hljs-attr">:ShopMaxCount</span>=<span class="hljs-string">&quot;address&quot;</span> <span class="hljs-attr">pickerTitle</span>=<span class="hljs-string">&quot;邮箱类型&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ShopPicker</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Mail <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/mail&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> ShopPicker <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../shopPicker/shopPicker&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; Field, Button, Picker, Popup &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> RegBussiness <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bussiness&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; GetCodeTime, EventName, CodeText &#125; = Config;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; address &#125; = Mail;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">components</span>: &#123;</span><br><span class="javascript">    ShopPicker,</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">codeTime</span>: CodeText, <span class="hljs-comment">//获取验证码按钮显示值</span></span><br><span class="javascript">      address, <span class="hljs-comment">//邮箱默认地址</span></span><br><span class="javascript">      <span class="hljs-attr">canGetCode</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//防止重复点击开关</span></span><br><span class="javascript">      <span class="hljs-attr">userInfo</span>: &#123;</span><br><span class="javascript">        <span class="hljs-comment">//注册表单默认数据</span></span><br><span class="javascript">        <span class="hljs-attr">username</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="javascript">        <span class="hljs-attr">password</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="javascript">        <span class="hljs-attr">repassword</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="javascript">        <span class="hljs-attr">mailurl</span>: address[<span class="hljs-number">0</span>],</span><br><span class="javascript">        <span class="hljs-attr">mailaddress</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="javascript">        <span class="hljs-attr">mailcode</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="javascript">      &#125;,</span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.regBussiness = <span class="hljs-keyword">new</span> RegBussiness(<span class="hljs-built_in">this</span>);</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.onEvent(EventName.ChangeCount, <span class="hljs-function">(<span class="hljs-params">_count</span>) =&gt;</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.userInfo.mailurl = _count; <span class="hljs-comment">//切换邮箱地址</span></span><br><span class="javascript">    &#125;);</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">destroyed</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.offEvent(EventName.ChangeCount);</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">selectMail</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.ShowPicker);</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">getCode</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.canGetCode) &#123;</span><br><span class="javascript">        <span class="hljs-comment">//是否允许发送邮箱验证</span></span><br><span class="javascript">        <span class="hljs-keyword">return</span>;</span><br><span class="javascript">      &#125;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.regBussiness.sendCode().then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;</span><br><span class="javascript">        <span class="hljs-built_in">this</span>.canGetCode = <span class="hljs-literal">true</span>;<span class="hljs-comment">//关闭点击开关</span></span><br><span class="javascript">        <span class="hljs-built_in">this</span>.$timeTick.timeTick(<span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> &#123;</span><br><span class="javascript">          <span class="hljs-built_in">this</span>.codeTime = state.content;</span><br><span class="javascript">          <span class="hljs-keyword">switch</span> (state.res) &#123;</span><br><span class="javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:</span><br><span class="javascript">              <span class="hljs-built_in">this</span>.canGetCode = <span class="hljs-literal">false</span>;<span class="hljs-comment">//允许用户点击</span></span><br><span class="javascript">              <span class="hljs-keyword">break</span>;</span><br><span class="javascript">          &#125;</span><br><span class="javascript">        &#125;);</span><br><span class="javascript">      &#125;);</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">submit</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.regBussiness.submitData();</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"></span><br><span class="css"><span class="hljs-selector-class">.login</span> &#123;</span><br><span class="css">  <span class="hljs-selector-class">.btn</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">34</span>);</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">    <span class="hljs-selector-class">.h</span>(<span class="hljs-number">100</span>);</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>注册业务逻辑部分，bussiness.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> &#123;<br>  Toast<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;<br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span><br><span class="hljs-keyword">const</span> &#123;<br>  ServerApi,<br>  StorageName,<br>  EventName<br>&#125; = config<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoginBussiness</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Vue</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">_vueComponent</span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>()<br>    <span class="hljs-built_in">this</span>.vueComponent = _vueComponent<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">sendCode</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.vueComponent.userInfo.mailaddress.length) &#123;<span class="hljs-comment">//过滤邮箱长度为0</span><br>        Toast(<span class="hljs-string">&#x27;请填写正确的邮箱&#x27;</span>);<br>        <span class="hljs-keyword">return</span><br>      &#125;<br>      <span class="hljs-built_in">this</span>.$axios<br>        .get(ServerApi.user.getMailCode, &#123;<br>          <span class="hljs-attr">params</span>: &#123;<br>            <span class="hljs-attr">crypto</span>: <span class="hljs-built_in">this</span>.$crypto.setCrypto(&#123;<br>              <span class="hljs-attr">codeType</span>: <span class="hljs-string">&quot;reg&quot;</span>,<span class="hljs-comment">//区分注册登录类型</span><br>              <span class="hljs-attr">username</span>: <span class="hljs-built_in">this</span>.vueComponent.userInfo.mailaddress + <span class="hljs-built_in">this</span>.vueComponent.userInfo.mailurl<br>            &#125;)<br>          &#125;,<br>        &#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>          <span class="hljs-keyword">switch</span> (res.result) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>              Toast(res.msg);<br>              resolve(res)<br>              <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>              reject(res)<br>              <span class="hljs-keyword">break</span>;<br>          &#125;<br>        &#125;).catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>          reject(err)<br>        &#125;)<br>    &#125;)<br><br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">submitData</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> key <span class="hljs-keyword">in</span> <span class="hljs-built_in">this</span>.vueComponent.userInfo) &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.vueComponent.userInfo.hasOwnProperty(key) &amp;&amp; !<span class="hljs-built_in">this</span>.vueComponent.userInfo[key].length) &#123;<span class="hljs-comment">//过滤表单项长度为0</span><br>        Toast(<span class="hljs-string">&#x27;请填写完整的信息&#x27;</span>);<br>        <span class="hljs-keyword">return</span><br>      &#125;<br>    &#125;<br>    <span class="hljs-built_in">this</span>.$axios<br>      .post(ServerApi.user.userReg, &#123;<br>        <span class="hljs-attr">crypto</span>: <span class="hljs-built_in">this</span>.$crypto.setCrypto(&#123;<br>          ...this.vueComponent.userInfo<br>        &#125;)<br>      &#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-comment">//成功后重置用户信息</span><br>        <span class="hljs-built_in">this</span>.vueComponent.userInfo.password = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-built_in">this</span>.vueComponent.userInfo.repassword = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-built_in">this</span>.vueComponent.userInfo.mailcode = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            Toast(res.msg);<br>            history.go(-<span class="hljs-number">1</span>)<span class="hljs-comment">//返回登录页面</span><br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;)<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>注册部分完成，登录与注册功能类似，这里只介绍一下服务端token的生成</strong></p><p><strong>在服务端user.js中修改接口，和管理系统登录一样，新增邮箱验证登录，区分管理员和用户登录</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.post(Config.ServerApi.userLogin, <span class="hljs-keyword">async</span> (req, res) =&gt; &#123;<br>  <span class="hljs-keyword">let</span> _data = Util.getCrypto(Util.parseUrl(req, res).crypto); <span class="hljs-comment">//解密前端入参</span><br>  <span class="hljs-keyword">switch</span> (_data.loginType) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;code&quot;</span>:<span class="hljs-comment">//验证码登录，验证邮箱验证码</span><br>      res.send(Util.checkEmailCode(userCodeList, _data.username, _data));<br>      <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;psd&quot;</span>:<span class="hljs-comment">//密码登录</span><br>    <span class="hljs-keyword">default</span>:<br>      <span class="hljs-keyword">let</span> findRes = <span class="hljs-keyword">await</span> findData(Mod, &#123;<br>        <span class="hljs-attr">$or</span>: [<br>          &#123;<br>            <span class="hljs-attr">mailaddress</span>: _data.username.split(<span class="hljs-string">&quot;@&quot;</span>)[<span class="hljs-number">0</span>],<br>            <span class="hljs-attr">mailurl</span>: <span class="hljs-string">&quot;@&quot;</span> + _data.username.split(<span class="hljs-string">&quot;@&quot;</span>)[<span class="hljs-number">1</span>],<br>          &#125;,<br>          &#123;<br>            <span class="hljs-attr">username</span>: _data.username,<br>          &#125;,<br>          &#123;<br>            <span class="hljs-attr">phoneNum</span>: _data.username,<br>          &#125;,<br>        ],<br>      &#125;);<br>      <span class="hljs-keyword">if</span> (findRes &amp;&amp; findRes.length &gt; <span class="hljs-number">0</span>) &#123;<br>        Util.checkBcrypt(_data.password, findRes[<span class="hljs-number">0</span>].password)<br>          ? res.send(&#123;<br>              <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>              <span class="hljs-attr">token</span>: Util.createToken(<span class="hljs-comment">//生成前端token</span><br>                findRes[<span class="hljs-number">0</span>].userType,<br>                findRes[<span class="hljs-number">0</span>].username,<br>                _data.remember<br>              ),<br>              <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;登录成功&quot;</span>,<br>            &#125;)<br>          : res.send(&#123;<br>              <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;密码错误&quot;</span>,<br>            &#125;);<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>      res.send(&#123;<br>        <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;用户不存在&quot;</span>,<br>      &#125;);<br>      <span class="hljs-keyword">break</span>;<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>总结<br>本篇文章将用户的注册登录邮箱验证功能基本实现，主要功能参照之前的<a href="https://blog.csdn.net/time_____/article/details/84714723">邮箱验证登录注册的博客</a>，文章中的重点是邮箱验证功能模块，与注册登录配合使用，注册则新增用户，登录则更新token值。下一篇将介绍用户信息修改，及后续将实现订单的生成及查看功能</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（十七）前端商城部分</title>
    <link href="/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%B8%83%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/"/>
    <url>/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%B8%83%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（十六）前端商城部分：</strong><br><a href="https://blog.csdn.net/time_____/article/details/108769229">https://blog.csdn.net/time_____/article/details/108769229</a><br><strong>项目源码（持续更新）：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopping">https://gitee.com/DieHunter/myCode/tree/master/shopping</a></strong></p><p><strong>上篇文章讲到了商品详情页面实现，最后一个功能是加入购物车，也就是通过列表对比商品是否存在，若存在，则对现有商品数据进行修改，若不存在，则初始化商品，并添加至购物车列表中，这篇文章将介绍对购物车数据进行操作功能</strong></p><p><strong>购物车功能包括<br>修改商品数量 删除单个商品 全选/反选 批量删除</strong></p><p><img src="https://img-blog.csdnimg.cn/2020100217110615.gif"><img src="https://img-blog.csdnimg.cn/20201002171635715.gif"><img src="https://img-blog.csdnimg.cn/20201002171956566.gif"><img src="https://img-blog.csdnimg.cn/20201002172227950.gif"></p><p><strong>这个页面，将其分解成四个组件，分别是顶部的Title，菜单栏Tabbar，单件商品shopCarItem和下面的批量操作shopCarOrder</strong></p><p><strong>修改商品数量在<a href="https://blog.csdn.net/time_____/article/details/108769229">上篇文章</a>中已介绍，通过countShopItem方法进行修改</strong></p><p><strong>删除单个商品</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">delShopItem</span>(<span class="hljs-params">_id</span>)</span> &#123;<br>    <span class="hljs-keyword">let</span> _shopCar = <span class="hljs-built_in">this</span>.state<span class="hljs-comment">//获取现有购物车列表</span><br>    _shopCar.splice(_id, <span class="hljs-number">1</span>)<span class="hljs-comment">//数组删除第_id项</span><br>    <span class="hljs-built_in">this</span>.state = _shopCar<span class="hljs-comment">//刷新购物车列表</span><br>    <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.CountShop);<span class="hljs-comment">//刷新界面</span><br>  &#125;<br></code></pre></td></tr></table></figure><p><strong>全选/反选，这里有两个注意的地方，全选/反选的实现有两种状态，一是每个商品单选被全选或反选后全选按钮也会跟随状态，二是全选按钮全选或反选后所有单选按钮也会跟随状态</strong></p><p><strong>我们首先在store的action加一个方法，用于总计商品的全选状态，商品总数，及总价格。每当商品被选中，就触发这个方法，刷新数据</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">filterSelect</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//修改商品全选，单个商品驱动全选按钮，刷新数据</span><br>  <span class="hljs-keyword">let</span> shopConfig = &#123;<span class="hljs-comment">//所有商品总计初始值</span><br>    <span class="hljs-attr">_count</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//是否全选</span><br>    <span class="hljs-attr">_selCount</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//商品总数</span><br>    <span class="hljs-attr">_sum</span>: <span class="hljs-number">0</span><span class="hljs-comment">//商品总价</span><br>  &#125;<br>  <span class="hljs-built_in">this</span>.state.forEach(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>    shopConfig._selCount += item.isSelect ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span>;<br>    shopConfig._count *= item.isSelect;<span class="hljs-comment">//判断是否全选，初始值0，若全为false，相乘等于0，若全为true，相乘为1，即等于1是全选，等于0是未全选</span><br>    shopConfig._sum += item.isSelect ? item.sum : <span class="hljs-number">0</span><br>  &#125;);<br>  <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.SelectParent, shopConfig);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>此外，我们需要再写个方法，用于全选按钮修改各个商品的选中状态</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">selAllChild</span>(<span class="hljs-params">_sel</span>)</span> &#123;<span class="hljs-comment">//修改商品全选，全选按钮驱动单个商品，刷新数据</span><br>  <span class="hljs-built_in">this</span>.state = <span class="hljs-built_in">this</span>.state.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>    item.isSelect = _sel;<span class="hljs-comment">//当全选按钮选中，修改所有商品状态</span><br>    <span class="hljs-keyword">return</span> item;<br>  &#125;);<br>  <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.SelectAllChild);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>于是在单件商品shopCarItem组件中，我们进行调用action中的方法，修改全局state值</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;shopList.length&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;shopCar&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item,index) in shopList&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mint-checkbox&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;selectHandler(index)&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mint-checkbox-input&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">:checked</span>=<span class="hljs-string">&quot;item.isSelect&quot;</span> /&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mint-checkbox-core&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;imgPath+item.shopPic&quot;</span> <span class="hljs-attr">alt</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;shopInfo&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;item.shopName&#125;&#125; &#123;&#123;item.shopScale&#125;&#125;克<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>￥&#123;&#123;item.shopPrice&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;minus&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;default&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;minusShopHandler(item)&quot;</span>&gt;</span>-<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;item.shopCount&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;add&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;default&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addShopHandler(item)&quot;</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">mt-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;del&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;default&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;delShopHandler(index)&quot;</span>&gt;</span>×<span class="hljs-tag">&lt;/<span class="hljs-name">mt-button</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;noShop&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-jiarugouwuche iconfont&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>购物车为空<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; Toast &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; EventName &#125; = Config;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;shopCarItem&quot;</span>,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">shopCar</span>: <span class="hljs-literal">null</span>,<span class="hljs-comment">//初始化购物车</span></span><br><span class="javascript">      <span class="hljs-attr">shopList</span>: [],<span class="hljs-comment">//购物车列表state</span></span><br><span class="javascript">      <span class="hljs-attr">imgPath</span>: Config.RequestPath,<span class="hljs-comment">//静态文件根目录</span></span><br><span class="javascript">      <span class="hljs-attr">selectAll</span>: <span class="hljs-literal">false</span>,<span class="hljs-comment">//全选</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.shopCar = <span class="hljs-keyword">new</span> <span class="hljs-built_in">this</span>.$store.ShopCar();</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.shopList = <span class="hljs-built_in">this</span>.shopCar.state;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.onEvent(EventName.CountShop, <span class="hljs-built_in">this</span>.countHandler);<span class="hljs-comment">//商品数量监听</span></span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.onEvent(EventName.SelectAllChild, <span class="hljs-built_in">this</span>.selAllHandler);<span class="hljs-comment">//商品全选监听</span></span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">mounted</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.shopCar.filterSelect();<span class="hljs-comment">//初始化全选，商品数量，商品总价</span></span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">destroyed</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.offEvent(EventName.CountShop, <span class="hljs-built_in">this</span>.countHandler);</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.offEvent(EventName.SelectAllChild, <span class="hljs-built_in">this</span>.selAllHandler);</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">countHandler</span>(<span class="hljs-params">res</span>)</span> &#123;<span class="hljs-comment">//修改商品数量，刷新数据</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopList = <span class="hljs-built_in">this</span>.shopCar.state;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopCar.filterSelect();</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">selectHandler</span>(<span class="hljs-params">_id</span>)</span> &#123;<span class="hljs-comment">//修改商品全选，单个商品驱动全选按钮，刷新数据</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopList[_id].isSelect = !<span class="hljs-built_in">this</span>.shopList[_id].isSelect;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopCar.state = <span class="hljs-built_in">this</span>.shopList;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopCar.filterSelect();</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">selAllHandler</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//修改商品全选，全选按钮驱动单个商品，刷新数据</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopList = <span class="hljs-built_in">this</span>.shopCar.state;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopCar.filterSelect();</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">addShopHandler</span>(<span class="hljs-params">_data</span>)</span> &#123;<span class="hljs-comment">//添加商品，刷新数据</span></span><br><span class="javascript">      _data.shopCount = <span class="hljs-number">1</span>;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopCar.countShopItem(&#123;</span><br><span class="javascript">        ..._data,</span><br><span class="javascript">      &#125;);</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">minusShopHandler</span>(<span class="hljs-params">_data</span>)</span> &#123;<span class="hljs-comment">//减少商品，刷新数据</span></span><br><span class="javascript">      _data.shopCount = -<span class="hljs-number">1</span>;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopCar.countShopItem(&#123;</span><br><span class="javascript">        ..._data,</span><br><span class="javascript">      &#125;);</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">delShopHandler</span>(<span class="hljs-params">_id</span>)</span> &#123;<span class="hljs-comment">//删除单个商品，刷新数据</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopCar.delShopItem(_id);</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.noShop</span> &#123;</span><br><span class="css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">  <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">  <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">36</span>);</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.w</span>(<span class="hljs-number">200</span>);</span><br><span class="css">    <span class="hljs-selector-class">.h</span>(<span class="hljs-number">200</span>);</span><br><span class="css">    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">    <span class="hljs-attribute">background</span>: @mainColor;</span><br><span class="css">    <span class="hljs-selector-class">.titleFont</span>();</span><br><span class="css">    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> <span class="hljs-number">8px</span> <span class="hljs-number">#777</span>;</span><br><span class="css">    <span class="hljs-selector-class">.l_h</span>(<span class="hljs-number">200</span>);</span><br><span class="css">    <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">100px</span> auto <span class="hljs-number">20px</span>;</span><br><span class="css">    <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">100</span>);</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"><span class="hljs-selector-class">.shopCar</span> &#123;</span><br><span class="css">  <span class="hljs-selector-class">.padbottom</span>(<span class="hljs-number">130</span>);</span><br><span class="css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">  <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#d3d3d3</span>;</span><br><span class="css">    <span class="hljs-attribute">padding-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">35</span> / @pxtorem, rem);</span><br><span class="css">    <span class="hljs-selector-class">.h</span>(<span class="hljs-number">320</span>);</span><br><span class="css">    <span class="hljs-selector-class">.mint-checkbox</span> &#123;</span><br><span class="css">      <span class="hljs-selector-class">.h</span>(<span class="hljs-number">320</span>);</span><br><span class="css">      <span class="hljs-selector-class">.l_h</span>(<span class="hljs-number">320</span>);</span><br><span class="css">      <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="css">      <span class="hljs-attribute">vertical-align</span>: middle;</span><br><span class="css">    &#125;</span><br><span class="css">    <span class="hljs-selector-class">.mint-checkbox-input</span><span class="hljs-selector-pseudo">:checked</span> + <span class="hljs-selector-class">.mint-checkbox-core</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#ea3e3c</span>;</span><br><span class="css">      <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#ea3e3c</span>;</span><br><span class="css">    &#125;</span><br><span class="css">    <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">      <span class="hljs-selector-class">.h</span>(<span class="hljs-number">265</span>);</span><br><span class="css">      <span class="hljs-selector-class">.w</span>(<span class="hljs-number">265</span>);</span><br><span class="css">      <span class="hljs-attribute">margin-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">20</span> / @pxtorem, rem);</span><br><span class="css">      <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="css">      <span class="hljs-attribute">vertical-align</span>: middle;</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#f5f6f5</span>;</span><br><span class="css">    &#125;</span><br><span class="css">    <span class="hljs-selector-class">.shopInfo</span> &#123;</span><br><span class="css">      <span class="hljs-selector-class">.h</span>(<span class="hljs-number">235</span>);</span><br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;</span><br><span class="css">      <span class="hljs-selector-class">.padtop</span>(<span class="hljs-number">30</span>);</span><br><span class="css">      <span class="hljs-attribute">padding-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">10</span> / @pxtorem, rem);</span><br><span class="css">      <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="css">      <span class="hljs-attribute">vertical-align</span>: middle;</span><br><span class="css">      <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="css">        <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="css">          <span class="hljs-attribute">float</span>: left;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">          <span class="hljs-attribute">float</span>: right;</span><br><span class="css">        &#125;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">margin-top</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">85</span> / @pxtorem, rem);</span><br><span class="css">        <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="css">          <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="css">          <span class="hljs-attribute">vertical-align</span>: middle;</span><br><span class="css">          <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-built_in">unit</span>(<span class="hljs-number">50</span> / @pxtorem, rem);</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-class">.add</span>,</span><br><span class="css">        <span class="hljs-selector-class">.minus</span>,</span><br><span class="css">        <span class="hljs-selector-class">.del</span> &#123;</span><br><span class="css">          <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="css">          <span class="hljs-attribute">vertical-align</span>: middle;</span><br><span class="css">          <span class="hljs-attribute">background</span>: white;</span><br><span class="css">          <span class="hljs-attribute">box-shadow</span>: none;</span><br><span class="css">          <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">50</span>);</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-class">.del</span> &#123;</span><br><span class="css">          <span class="hljs-attribute">float</span>: right;</span><br><span class="css">        &#125;</span><br><span class="css">      &#125;</span><br><span class="css">    &#125;</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>在批量操作shopCarOrder组件中同理</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;shopOrder&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mint-checkbox&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;selectHandler&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mint-checkbox-input&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">:checked</span>=<span class="hljs-string">&quot;isSelAll&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mint-checkbox-core&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>全选(&#123;&#123;selCount&#125;&#125;)<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;delSelShop&quot;</span>&gt;</span>删除(&#123;&#123;selCount&#125;&#125;)<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>￥&#123;&#123;sum&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-qianjin iconfont&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;sendOrder&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> ShopCarOrderBussiness <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bussiness&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; Toast &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; EventName &#125; = Config;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;shopCarOrder&quot;</span>,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">shopCar</span>: <span class="hljs-literal">null</span>,</span><br><span class="javascript">      <span class="hljs-attr">isSelAll</span>: <span class="hljs-literal">false</span>,<span class="hljs-comment">//全选</span></span><br><span class="javascript">      <span class="hljs-attr">selCount</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//商品数量</span></span><br><span class="javascript">      <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//商品总价</span></span><br><span class="javascript">      <span class="hljs-attr">orderList</span>: <span class="hljs-literal">null</span>,<span class="hljs-comment">//提交订单请求参数</span></span><br><span class="javascript">      <span class="hljs-attr">shopCarOrderBussiness</span>: <span class="hljs-literal">null</span>,</span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.shopCar = <span class="hljs-keyword">new</span> <span class="hljs-built_in">this</span>.$store.ShopCar();</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.shopCarOrderBussiness = <span class="hljs-keyword">new</span> ShopCarOrderBussiness(<span class="hljs-built_in">this</span>);</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.onEvent(EventName.SelectParent, <span class="hljs-built_in">this</span>.selAllHandler);<span class="hljs-comment">//全选按钮监听，通过监听所有商品都选中或未全选，修改状态</span></span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">destroyed</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.offEvent(EventName.SelectParent, <span class="hljs-built_in">this</span>.selAllHandler);</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">selectHandler</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//驱动修改所有商品选中状态</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.isSelAll = !<span class="hljs-built_in">this</span>.isSelAll;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopCar.selAllChild(<span class="hljs-built_in">this</span>.isSelAll);</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">selAllHandler</span>(<span class="hljs-params">&#123; _count, _selCount, _sum &#125;</span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.isSelAll = _count;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.selCount = _selCount;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.sum = _sum;</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">delSelShop</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//删除选中商品</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopCar.delSelShop();</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">sendOrder</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//提交订单</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopCarOrderBussiness.sendOrderList();</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.shopOrder</span> &#123;</span><br><span class="css">  <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">34</span>);</span><br><span class="css">  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;</span><br><span class="css">  <span class="hljs-attribute">position</span>: fixed;</span><br><span class="css">  <span class="hljs-selector-class">.mcolor</span>();</span><br><span class="css">  <span class="hljs-attribute">bottom</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">130</span> / @pxtorem, rem);</span><br><span class="css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">  <span class="hljs-selector-class">.h</span>(<span class="hljs-number">130</span>);</span><br><span class="css">  <span class="hljs-selector-class">.l_h</span>(<span class="hljs-number">130</span>);</span><br><span class="css">  &gt; <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>),</span><br><span class="css">  &gt; <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">    <span class="hljs-attribute">padding-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">35</span> / @pxtorem, rem);</span><br><span class="css">  &#125;</span><br><span class="css">  &gt; <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">3</span>) &#123;</span><br><span class="css">    <span class="hljs-attribute">padding-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">200</span> / @pxtorem, rem);</span><br><span class="css">  &#125;</span><br><span class="css"></span><br><span class="css">  &gt; <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">4</span>) &#123;</span><br><span class="css">    <span class="hljs-attribute">float</span>: right;</span><br><span class="css">    <span class="hljs-attribute">margin-right</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">50</span> / @pxtorem, rem);</span><br><span class="css">    &gt; <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>) &#123;</span><br><span class="css">      <span class="hljs-attribute">padding-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">20</span> / @pxtorem, rem);</span><br><span class="css">      <span class="hljs-attribute">border-left</span>: <span class="hljs-number">1px</span> dashed <span class="hljs-number">#fff</span>;</span><br><span class="css">    &#125;</span><br><span class="css">    &gt; <span class="hljs-selector-tag">span</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">      <span class="hljs-attribute">padding-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">50</span> / @pxtorem, rem);</span><br><span class="css">    &#125;</span><br><span class="css">  &#125;</span><br><span class="css">  &gt; <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.mint-checkbox-input</span> + <span class="hljs-selector-class">.mint-checkbox-core</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">background</span>: transparent;</span><br><span class="css">    <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#fff</span>;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.mint-checkbox-input</span><span class="hljs-selector-pseudo">:checked</span> + <span class="hljs-selector-class">.mint-checkbox-core</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.mcolor</span>();</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>在action中，我们还需要写一个函数，用于删除选中商品</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">delSelShop</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//直接通过遍历商品选中状态值进行删除，并刷新数据</span><br>    <span class="hljs-keyword">let</span> _list = []<br>    <span class="hljs-built_in">this</span>.state.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (!item.isSelect) &#123;<br>        _list.push(item)<br>      &#125;<br>    &#125;);<br>    <span class="hljs-built_in">this</span>.state = _list<br>    <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.CountShop);<br>  &#125;<br></code></pre></td></tr></table></figure><p><strong>最后，在shopCar.vue界面中引入这四个组件，页面实现完成</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Top</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;购物车&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Top</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">ShopCarItem</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ShopCarItem</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">ShopCarOrder</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ShopCarOrder</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TabBar</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">TabBar</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> Top <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/top/top&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> ShopCarItem <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/shopCarItem/shopCarItem&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> ShopCarOrder <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/shopCarOrder/shopCarOrder&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> TabBar <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/tabBar/tabBar&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;shopCar&quot;</span>,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;&#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">components</span>: &#123;</span><br><span class="javascript">    Top,</span><br><span class="javascript">    ShopCarItem,</span><br><span class="javascript">    ShopCarOrder,</span><br><span class="javascript">    TabBar</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;&#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>本篇文章主要对商品购物车操作进行了介绍，其中运用了数据刷新视图的基本操作，将数据，逻辑，视图三者分开，结合vue的数据绑定渲染页面。下篇文章将实现用户的注册，登录功能（简单的用户名密码注册，登录，和邮箱验证模块）</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（十六）前端商城部分</title>
    <link href="/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E5%85%AD%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/"/>
    <url>/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E5%85%AD%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（十五）前端商城部分：<br><a href="https://blog.csdn.net/time_____/article/details/108680599">https://blog.csdn.net/time_____/article/details/108680599</a><br>项目源码（持续更新）：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopping">https://gitee.com/DieHunter/myCode/tree/master/shopping</a></strong></p><p><strong>在前几篇文章中，我们对首页，分类列表，公共组件，工具类进行了实现，这篇文章将实现商品详情页进行介绍，这里我们将商品详情页细化成多个组件，利用组件通信方式进行监听传递方式从而实现数据传递和效果逻辑<br>先来看看效果</strong><br><img src="https://img-blog.csdnimg.cn/20200924110347986.gif"></p><p><strong>这个界面我们可以把页面分解成几个组件，分别是顶部的Top，商品信息展示，商品选项框及加入购物车按钮，最后是下方的一个tab切换效果</strong></p><h3 id="商品选项框："><a href="#商品选项框：" class="headerlink" title="商品选项框："></a><strong>商品选项框：</strong></h3><p><strong>首先对mint-ui官方的Picker，Navbar进行简单的二次封装，然后在商品选项框及加入购物车按钮组件中触发picker组件，加入购物车中有一个添加的动画需要用到animate动画，并将全局购物车列表更新</strong></p><ul><li><p><strong>shopPicker.vue,封装官方组件，通过商品最大数量显示列表</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;shopPicker&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mt-popup</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;popupVisible&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-picker</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pickerItem&quot;</span> <span class="hljs-attr">:slots</span>=<span class="hljs-string">&quot;count&quot;</span> <span class="hljs-attr">:showToolbar</span>=<span class="hljs-string">&quot;true&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onValuesChange&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123;pickerTitle&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">mt-picker</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mt-popup</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; Picker, Popup &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; EventName &#125; = Config;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;shopPicker&quot;</span>,</span><br><span class="javascript">  <span class="hljs-attr">props</span>: [<span class="hljs-string">&quot;ShopMaxCount&quot;</span>,<span class="hljs-string">&quot;pickerTitle&quot;</span>],<span class="hljs-comment">//最大购买数，picker的标题</span></span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">popupVisible</span>: <span class="hljs-literal">false</span>,<span class="hljs-comment">//是否显示组件</span></span><br><span class="javascript">      <span class="hljs-attr">count</span>: [&#123; <span class="hljs-attr">flex</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">values</span>: [] &#125;]<span class="hljs-comment">//组件默认模板</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">mounted</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.createShopCount();<span class="hljs-comment">//初始化组件</span></span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.onEvent(EventName.ShowPicker, <span class="hljs-built_in">this</span>.showPicker);<span class="hljs-comment">//监听显示picker事件</span></span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">destroyed</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.offEvent(EventName.ShowPicker);<span class="hljs-comment">//注销显示picker事件</span></span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">onValuesChange</span>(<span class="hljs-params">comp, count</span>)</span> &#123;<span class="hljs-comment">//数据变化时触发counter中的显示商品数量</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.ChangeCount, count[<span class="hljs-number">0</span>]);</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">showPicker</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.popupVisible = <span class="hljs-literal">true</span>;</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">createShopCount</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//根据传进来的最大数量显示商品数量列表</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.count[<span class="hljs-number">0</span>].values = <span class="hljs-built_in">this</span>.ShopMaxCount;</span><br><span class="javascript">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.ShopMaxCount; i++) &#123;</span><br><span class="javascript">        <span class="hljs-built_in">this</span>.count[<span class="hljs-number">0</span>].values.push(i + <span class="hljs-number">1</span>);</span><br><span class="javascript">      &#125;</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"></span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>修改navbar样式并应用至自己组件中</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mt-navbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item,index) in navTitle&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">:id</span>=<span class="hljs-string">&quot;item.val&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-item</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mt-navbar</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;doc&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>名称：&#123;&#123;shopName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>类型：&#123;&#123;Type[shopType].name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>数量：&#123;&#123;shopNum&#125;&#125;个<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>￥&#123;&#123;shopPrice&#125;&#125;元<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;doc&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>净含量/克(g)：&#123;&#123;shopScale&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>口味：&#123;&#123;taste&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>产地：&#123;&#123;address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>保质期：&#123;&#123;expiryDate&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>上架时间：&#123;&#123;time&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-tab-container-item</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>7天包退<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>15天包换<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>一年保修<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container-item</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mt-tab-container</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; Navbar, TabItem &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> NavConfig <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/navConfig&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> ShopType <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/shopType&quot;</span>;</span><br><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;infoNav&quot;</span>,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">selected</span>: <span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-comment">//默认选中第一项</span></span><br><span class="javascript">      <span class="hljs-attr">navTitle</span>: NavConfig.NavTitle,</span><br><span class="javascript">      <span class="hljs-attr">Type</span>: ShopType.shopType,</span><br><span class="javascript">      ...this.$route.query<span class="hljs-comment">//路由传参，将商品信息传递到data中</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><br>@import &quot;../../style/init.less&quot;;<br>@fontcolor: #bababa;<br>.info &#123;<br>  .mg(20px auto);<br>  .navBar();<br>  h3 &#123;<br>    text-align: center;<br>    color: @mainColor;<br>  &#125;<br>  .doc div &#123;<br>    text-align: center;<br>    padding: 0.625rem 0;<br>  &#125;<br>&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>这里的一个难点是加入购物车的动画，想了很多种方法，<br>最后采用一个标签隐藏，另一个标签执行动画的方式让动画效果更好，<br>通过showAnimate变量进行控制执行动画的标签v-show</strong><br><img src="https://img-blog.csdnimg.cn/20200925202414436.gif"></p><p><strong>在动画标签里使用animate.css中的zoomOutUp 效果</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">enter-active-class</span>=<span class="hljs-string">&quot;animated zoomOutUp slow&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;showAnimate&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-jiarugouwuche iconfont addIcon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>当点击加入购物车时触发事件</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">addShopCar</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">this</span>.showAnimate = <span class="hljs-literal">true</span>;<span class="hljs-comment">//显示元素</span><br>      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<span class="hljs-comment">//延时的目的是等待动画完成</span><br>        <span class="hljs-built_in">this</span>.shopCar.countShopItem(&#123;<span class="hljs-comment">//缓存添加购物车数据</span><br>          ...this.$route.query,<br>          <span class="hljs-attr">shopCount</span>: <span class="hljs-built_in">this</span>.shopCount<br>        &#125;);<br>        <span class="hljs-built_in">this</span>.showAnimate = <span class="hljs-literal">false</span>;<span class="hljs-comment">//隐藏元素</span><br>      &#125;, <span class="hljs-number">1000</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p><strong>完整的counter组件</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;counter&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPicker&quot;</span>&gt;</span><br>      数量<br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;shopCount&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addShopCar&quot;</span>&gt;</span><br>      加入购物车<br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-jiarugouwuche iconfont&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">enter-active-class</span>=<span class="hljs-string">&quot;animated zoomOutUp slow&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;showAnimate&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-jiarugouwuche iconfont addIcon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; EventName &#125; = Config;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Counter&quot;</span>,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">shopCount</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//默认购买商品数量</span></span><br><span class="javascript">      <span class="hljs-attr">showAnimate</span>: <span class="hljs-literal">false</span><span class="hljs-comment">//动画标签隐藏</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.onEvent(EventName.ChangeCount, <span class="hljs-function"><span class="hljs-params">_count</span> =&gt;</span> &#123;<span class="hljs-comment">//添加事件监听，监听商品数量变化</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.shopCount = _count;</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.shopCar = <span class="hljs-keyword">new</span> <span class="hljs-built_in">this</span>.$store.ShopCar();</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">destroyed</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.offEvent(EventName.ChangeCount);</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">showPicker</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.ShowPicker);</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">addShopCar</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.showAnimate = <span class="hljs-literal">true</span>;<span class="hljs-comment">//显示元素</span></span><br><span class="javascript">      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<span class="hljs-comment">//延时的目的是等待动画完成</span></span><br><span class="javascript">        <span class="hljs-built_in">this</span>.shopCar.countShopItem(&#123;<span class="hljs-comment">//缓存添加购物车数据</span></span><br><span class="javascript">          ...this.$route.query,</span><br><span class="javascript">          <span class="hljs-attr">shopCount</span>: <span class="hljs-built_in">this</span>.shopCount</span><br><span class="javascript">        &#125;);</span><br><span class="javascript">        <span class="hljs-built_in">this</span>.showAnimate = <span class="hljs-literal">false</span>;<span class="hljs-comment">//隐藏元素</span></span><br><span class="javascript">      &#125;, <span class="hljs-number">1000</span>);</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.counter</span> &#123;</span><br><span class="css">  <span class="hljs-selector-class">.h</span>(<span class="hljs-number">120</span>);</span><br><span class="css">  <span class="hljs-selector-class">.w</span>(<span class="hljs-number">850</span>);</span><br><span class="css">  <span class="hljs-attribute">background</span>: @mainColor;</span><br><span class="css">  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4rem</span>;</span><br><span class="css">  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="css">  <span class="hljs-selector-class">.l_h</span>(<span class="hljs-number">120</span>);</span><br><span class="css">  <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">49%</span>;</span><br><span class="css">    <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="css">    <span class="hljs-selector-class">.h</span>(<span class="hljs-number">46</span>);</span><br><span class="css">    <span class="hljs-selector-class">.l_h</span>(<span class="hljs-number">46</span>);</span><br><span class="css">    <span class="hljs-selector-class">.titleFont</span>();</span><br><span class="css">    <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">32</span>);</span><br><span class="css">    <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">    <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">2px</span>;</span><br><span class="css">    <span class="hljs-attribute">border-left</span>: <span class="hljs-number">1px</span> dashed <span class="hljs-number">#dacda3</span>;</span><br><span class="css">    <span class="hljs-selector-class">.addIcon</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">position</span>: fixed;</span><br><span class="css">      <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">75</span>);</span><br><span class="css">      <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">1</span>;</span><br><span class="css">      <span class="hljs-attribute">color</span>: black;</span><br><span class="css">    &#125;</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>最后在全局<a href="https://blog.csdn.net/time_____/article/details/108514710">store</a>中添加购物车变量处理方法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">countShopItem</span>(<span class="hljs-params">_data</span>)</span> &#123;<br>   <span class="hljs-keyword">if</span> (!_data._id) &#123;<span class="hljs-comment">//阻塞商品id为空现象</span><br>     <span class="hljs-keyword">return</span><br>   &#125;<br>   <span class="hljs-keyword">let</span> _shopCar = <span class="hljs-built_in">this</span>.state<span class="hljs-comment">//获取原购物车列表</span><br>   <span class="hljs-keyword">let</span> list = _shopCar.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123;<br>     <span class="hljs-keyword">return</span> item._id === _data._id;<span class="hljs-comment">//通过id查找购物车中传递项</span><br>   &#125;);<br>   <span class="hljs-keyword">if</span> (list.length == <span class="hljs-number">0</span>) &#123;<span class="hljs-comment">//未找到时新建购物车商品</span><br>     _data.sum = _data.shopCount * _data.shopPrice;<span class="hljs-comment">//商品总价</span><br>     _data.isSelect = <span class="hljs-literal">false</span><span class="hljs-comment">//是否选中商品，购物车界面默认值</span><br>     _shopCar.push(_data);<br>   &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((_data.shopNum &gt; list[<span class="hljs-number">0</span>].shopCount + _data.shopCount) &amp;&amp; (list[<span class="hljs-number">0</span>].shopCount + _data.shopCount &lt;= <span class="hljs-number">9</span>) &amp;&amp; list[<span class="hljs-number">0</span>].shopCount + _data.shopCount &gt; <span class="hljs-number">0</span>) &#123;<span class="hljs-comment">//找到时更新商品</span><br>     list[<span class="hljs-number">0</span>].shopCount += _data.shopCount;<br>     list[<span class="hljs-number">0</span>].sum = list[<span class="hljs-number">0</span>].shopCount * list[<span class="hljs-number">0</span>].shopPrice;<br>   &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (list[<span class="hljs-number">0</span>].shopCount + _data.shopCount &lt;= <span class="hljs-number">0</span>) &#123;<span class="hljs-comment">//购物车允许最小值</span><br>     <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.CountShop, <span class="hljs-string">&#x27;min&#x27;</span>);<br>     <span class="hljs-keyword">return</span>;<br>   &#125; <span class="hljs-keyword">else</span> &#123;<span class="hljs-comment">//购物车允许最大值</span><br>     <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.CountShop, <span class="hljs-string">&#x27;max&#x27;</span>);<br>     <span class="hljs-keyword">return</span>;<br>   &#125;<br>   <span class="hljs-built_in">this</span>.state = _shopCar<br>   <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.CountShop);<br> &#125;<br></code></pre></td></tr></table></figure><p><strong>这样，一个简单的商品详情页面就完成了</strong></p></li></ul><h3 id="下一篇文章，将介绍购物车的其他功能实现，包括删除商品，全选，添加订单接口等"><a href="#下一篇文章，将介绍购物车的其他功能实现，包括删除商品，全选，添加订单接口等" class="headerlink" title="下一篇文章，将介绍购物车的其他功能实现，包括删除商品，全选，添加订单接口等"></a><strong>下一篇文章，将介绍购物车的其他功能实现，包括删除商品，全选，添加订单接口等</strong></h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（十五）前端商城部分</title>
    <link href="/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/"/>
    <url>/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（十四）前端商城部分：</strong><br><a href="https://blog.csdn.net/time_____/article/details/108545330">https://blog.csdn.net/time_____/article/details/108545330</a><br><strong>项目源码（持续更新）：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopping">https://gitee.com/DieHunter/myCode/tree/master/shopping</a></strong></p><p><strong>上篇文章对主页和部分公共组件进行了界面和功能实现，之前对项目用到的工具类，路由，全局状态进行了封装，这篇文章将对商品分类，商品主题界面进行介绍，实现过程同样是用到了组件内单独异步请求，减少数据堵塞</strong></p><h3 id="商品分类："><a href="#商品分类：" class="headerlink" title="商品分类："></a><strong>商品分类：</strong></h3><p><strong>界面样式及效果</strong></p><p><img src="https://img-blog.csdnimg.cn/20200919143346881.gif"></p><p><strong>注意：由于分类商品列表和主页的商品不会时常发生变化，我们可以使用Vue中的keep-alive组件，它的作用是在组件切换时将状态保留在内存中，防止重复渲染DOM，也就是保存组件不被销毁，防止每次加载页面都做不必要的请求，实现效果如下</strong></p><p><img src="https://img-blog.csdnimg.cn/20200919151037384.gif"></p><p><strong>在app.vue中添加keep-alive组件包裹路由组件</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span> <span class="hljs-attr">include</span>=<span class="hljs-string">&quot;Home,Kind&quot;</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;appView&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>这里我们将分类列表左右分别分成两个组件，组成一个tab切换栏，通过左边的分类菜单进行选择切换，从而重新渲染右边的商品列表</strong></p><ul><li><p><strong>左边切换组件leftMenu.vue</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span></span><br><span class="hljs-tag">      <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item,index) in list&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span></span><br><span class="hljs-tag">      @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;sel(item.val)&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;item.val==onesel?&#x27;selec&#x27;:&#x27;&#x27;&quot;</span></span><br><span class="hljs-tag">    &gt;</span>&#123;&#123;item.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> ShopType <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/shopType&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; EventName &#125; = Config;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">list</span>: ShopType.shopType,</span><br><span class="javascript">      <span class="hljs-attr">onesel</span>: <span class="hljs-string">&quot;0&quot;</span><span class="hljs-comment">//默认选中第一项</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">sel</span>(<span class="hljs-params">item</span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.onesel == item) <span class="hljs-keyword">return</span>;<span class="hljs-comment">//防止重复点击同一个选项</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.onesel = item;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.$events.emitEvent(EventName.SelectKind, item);<span class="hljs-comment">//触发选中商品类型事件</span></span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-id">#left</span> &#123;</span><br><span class="css">  <span class="hljs-selector-class">.w</span>(<span class="hljs-number">215</span>);</span><br><span class="css">  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">  <span class="hljs-attribute">position</span>: fixed;</span><br><span class="css">  <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">34</span>);</span><br><span class="css">  <span class="hljs-attribute">border-right</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">1</span> / @pxtorem, rem) solid <span class="hljs-number">#d6d6d6</span>;</span><br><span class="css">  <span class="hljs-attribute">margin-right</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">215</span> / @pxtorem, rem);</span><br><span class="css">  <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.h</span>(<span class="hljs-number">125</span>);</span><br><span class="css">    <span class="hljs-selector-class">.l_h</span>(<span class="hljs-number">125</span>);</span><br><span class="css">    <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.selec</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">border-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">8</span> / @pxtorem, rem) solid @mainColor;</span><br><span class="css">    <span class="hljs-attribute">text-indent</span>: <span class="hljs-built_in">unit</span>(-<span class="hljs-number">8</span> / @pxtorem, rem);</span><br><span class="css">    <span class="hljs-attribute">color</span>: @mainColor;</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>右边商品列表组件rightShop.vue</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;fade&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;rightShop&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;transitionSwitch&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;head&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;imgPath+themeList.shopPic&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;themeList.shopPic&quot;</span> <span class="hljs-attr">alt</span> /&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item,index) in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;clickHandler(item)&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;imgPath+item.shopPic&quot;</span> /&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;item.shopName&#125;&#125; &#123;&#123;item.shopScale&#125;&#125;克<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> RightShopBussiness <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bussiness&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">const</span> &#123; EventName &#125; = Config;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">themeList</span>: &#123;&#125;,</span><br><span class="javascript">      <span class="hljs-attr">list</span>: [],</span><br><span class="javascript">      <span class="hljs-attr">imgPath</span>: Config.RequestPath,</span><br><span class="javascript">      <span class="hljs-attr">rightShopBussiness</span>: <span class="hljs-literal">null</span>,</span><br><span class="javascript">      <span class="hljs-attr">transitionSwitch</span>: <span class="hljs-literal">true</span>,</span><br><span class="javascript">      <span class="hljs-attr">beforeIndex</span>: <span class="hljs-number">0</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.rightShopBussiness = <span class="hljs-keyword">new</span> RightShopBussiness(<span class="hljs-built_in">this</span>);</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.rightShopBussiness.initPageConfig(<span class="hljs-built_in">this</span>.beforeIndex);</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.onEvent(EventName.SelectKind, <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;<span class="hljs-comment">//监听选择种类事件</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.transitionSwitch = <span class="hljs-literal">false</span>;<span class="hljs-comment">//通过v-show实现fade动画效果</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.rightShopBussiness.initPageConfig(data);</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">destroyed</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.$events.offEvent(EventName.SelectKind);<span class="hljs-comment">//销毁事件监听</span></span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params">data</span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.$router.push(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;ShopInfo&quot;</span>, <span class="hljs-attr">query</span>: &#123; ...data &#125; &#125;);</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.rightShop</span> &#123;</span><br><span class="css">  <span class="hljs-attribute">padding-left</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">215</span> / @pxtorem, rem);</span><br><span class="css">  <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">90%</span>;</span><br><span class="css">    <span class="hljs-attribute">display</span>: block;</span><br><span class="css">    <span class="hljs-attribute">margin</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">40</span> / @pxtorem, rem) auto;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">margin-top</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">70</span> / @pxtorem, rem);</span><br><span class="css">    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">110</span> / @pxtorem, rem);</span><br><span class="css">    <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">33%</span>;</span><br><span class="css">      <span class="hljs-attribute">vertical-align</span>: top;</span><br><span class="css">      <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">      <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">70%</span>;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="css">        <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">28</span>);</span><br><span class="css">        <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">      &#125;</span><br><span class="css">    &#125;</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>将商品分类页面加入到router配置中，与主页和购物车界面同级page下新建kind页面，商品分类页面就已经完成</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Top</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;分类&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Top</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">leftMenu</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">leftMenu</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">rightShop</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">rightShop</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TabBar</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">TabBar</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> TabBar <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/tabBar/tabBar&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Top <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/top/top&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> leftMenu <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/leftMenu/leftMenu&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> rightShop <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/rightShop/rightShop&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Kind&quot;</span>,</span><br><span class="javascript">  <span class="hljs-attr">components</span>: &#123;</span><br><span class="javascript">    Top,</span><br><span class="javascript">    leftMenu,</span><br><span class="javascript">    rightShop,</span><br><span class="javascript">    TabBar</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="商品主题"><a href="#商品主题" class="headerlink" title="商品主题"></a><strong>商品主题</strong></h3><p><strong>商品主题页是用户通过点击首页的轮播图和主题模块进入到主题商品列表子页面，其中商品列表的单个商品可以通过主页的组件进行复用</strong></p><p><img src="https://img-blog.csdnimg.cn/20200919164618282.gif"></p><p><strong>其中themeList是广告标题图片，通过shopType区分首页的商品列表和主题页的商品列表，从而引入shopItem组件</strong></p><ul><li><p><strong>themeList.vue广告标题</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;themeContent&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;themeList.shopPic&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;imgPath+themeList.shopPic&quot;</span> <span class="hljs-attr">alt</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> ThemeListBussiness <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bussiness&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">themeList</span>: &#123;&#125;,</span><br><span class="javascript">      <span class="hljs-attr">imgPath</span>: Config.RequestPath,</span><br><span class="javascript">      <span class="hljs-attr">themeListBussiness</span>: <span class="hljs-literal">null</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.themeListBussiness = <span class="hljs-keyword">new</span> ThemeListBussiness(<span class="hljs-built_in">this</span>);</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.themeListBussiness.initPageConfig(<span class="hljs-built_in">this</span>.$route.query);</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;&#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.themeContent</span> &#123;</span><br><span class="css">  <span class="hljs-selector-tag">h2</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">    <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">    &#125;</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>最后新建shopTheme的page页面，引入之前两个组件</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Top</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">:isBack</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Top</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">ThemeList</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ThemeList</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">ShopItem</span> <span class="hljs-attr">:shopType</span>=<span class="hljs-string">&quot;shopType&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ShopItem</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> Top <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/top/top&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> ThemeList <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/themeList/themeList&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> ShopItem <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/shopItem/shopItem&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;ShopTheme&quot;</span>,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">shopType</span>: <span class="hljs-built_in">this</span>.$route.query._type,</span><br><span class="javascript">      <span class="hljs-attr">title</span>: <span class="hljs-built_in">this</span>.$route.query._shopName</span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">components</span>: &#123;</span><br><span class="javascript">    Top,</span><br><span class="javascript">    ThemeList,</span><br><span class="javascript">    ShopItem</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.content</span> &#123;</span><br><span class="css">  <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">0</span>;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>至此商品分类和主题列表页面就实现完成</strong></p></li></ul><p><strong>最后提供商品数据库数据下载（都是一个一个手动输入的），<a href="https://gitee.com/DieHunter/myCode/blob/master/shopping/shop.txt">远程仓库地址</a>，可以通过Robo3t进行导入</strong><br><strong>本篇文章结束，下一篇将介绍商品详情页的实现</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（十四）前端商城部分</title>
    <link href="/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/"/>
    <url>/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（十三）前端商城部分：</strong><br><a href="https://blog.csdn.net/time_____/article/details/108514710">https://blog.csdn.net/time_____/article/details/108514710</a><br><strong>项目源码（持续更新）：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopping">https://gitee.com/DieHunter/myCode/tree/master/shopping</a></strong></p><p><strong>本篇文章介绍实现部分组件和首页部分，首页组件如下，首页中的数据通过分批异步加载，也就是每个组件的数据单独请求，减少数据请求堵塞，下面介绍一下实现过程</strong><br><img src="https://img-blog.csdnimg.cn/20200912100130255.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200912100228766.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="pageTitle（页面标题）"><a href="#pageTitle（页面标题）" class="headerlink" title="pageTitle（页面标题）"></a>pageTitle（页面标题）</h3><ul><li><p><strong>首先要考虑到标题的返回功能，在methods里写个路由返回函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">methods: &#123;<br>   <span class="hljs-function"><span class="hljs-title">goBack</span>(<span class="hljs-params"></span>)</span> &#123;<br>     <span class="hljs-built_in">this</span>.$router.go(-<span class="hljs-number">1</span>);<br>   &#125;<br> &#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>接着通过组件属性传参数（标题内容，是否有返回按钮），通过props将组件属性放在当前data中</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">props: [<span class="hljs-string">&quot;title&quot;</span>, <span class="hljs-string">&quot;isBack&quot;</span>],<br></code></pre></td></tr></table></figure></li><li><p><strong>标签中根据isBack决定是否有返回按钮，并显示title值</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;top&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;isBack&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;back iconfont icon-fanhui&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;goBack&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="banner（主页轮播）"><a href="#banner（主页轮播）" class="headerlink" title="banner（主页轮播）"></a>banner（主页轮播）</h3><ul><li><p><strong>轮播图组件中的图片是单独请求的，所以用了model管理数据，bussiness进行请求，后面的组件有数据请求交互都是用这种写法</strong><br><img src="https://img-blog.csdnimg.cn/20200912111431120.png"></p></li><li><p><strong>model.js内容，保存banner列表，vue实例，页面配置信息</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BannerModel</span> </span>&#123;<span class="hljs-comment">//banner数据存取</span><br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>._bannerList = []<br>    <span class="hljs-built_in">this</span>._pageConfig = &#123;&#125;<br>  &#125;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">getInstance</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//单例写法</span><br>    <span class="hljs-keyword">if</span> (!BannerModel._instance) &#123;<br>      <span class="hljs-built_in">Object</span>.defineProperty(BannerModel, <span class="hljs-string">&quot;_instance&quot;</span>, &#123;<br>        <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> BannerModel()<br>      &#125;)<br>    &#125;<br>    <span class="hljs-keyword">return</span> BannerModel._instance;<br>  &#125;<br>  <span class="hljs-keyword">set</span> <span class="hljs-title">vueComponent</span>(<span class="hljs-params">val</span>) &#123;<br>    <span class="hljs-built_in">this</span>._vueComponent = val<br>  &#125;<br>  <span class="hljs-keyword">get</span> <span class="hljs-title">vueComponent</span>() &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._vueComponent<br>  &#125;<br>  <span class="hljs-keyword">set</span> <span class="hljs-title">pageConfig</span>(<span class="hljs-params">val</span>) &#123;<br>    <span class="hljs-built_in">this</span>._pageConfig = val<br>    <span class="hljs-built_in">this</span>._pageConfig.picType = <span class="hljs-number">1</span><br>  &#125;<br>  <span class="hljs-keyword">get</span> <span class="hljs-title">pageConfig</span>() &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._pageConfig<br>  &#125;<br>  <span class="hljs-keyword">set</span> <span class="hljs-title">bannerList</span>(<span class="hljs-params">val</span>) &#123;<br>    <span class="hljs-built_in">this</span>._bannerList = val<br>    <span class="hljs-built_in">this</span>._vueComponent.list = <span class="hljs-built_in">this</span>.bannerList<br>  &#125;<br>  <span class="hljs-keyword">get</span> <span class="hljs-title">bannerList</span>() &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._bannerList<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>bussiness.js 做请求和逻辑处理</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span><br><span class="hljs-keyword">import</span> BannerModel <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./model&quot;</span>;<br><span class="hljs-keyword">import</span> Clone <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../utils/clone&quot;</span><br><span class="hljs-keyword">const</span> &#123;<br>  DefaultPageConfig,<br>  ServerApi<br>&#125; = config<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BannerBussiness</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Vue</span> </span>&#123;<span class="hljs-comment">//业务处理</span><br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">_vueComponent</span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>()<br>    BannerModel.getInstance().vueComponent = _vueComponent<span class="hljs-comment">//取到显示层vue实例</span><br>    <span class="hljs-built_in">this</span>.initPageConfig()<br>    <span class="hljs-built_in">this</span>.getBanner()<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">initPageConfig</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//拷贝分页默认配置，并且不更改原常量</span><br>    BannerModel.getInstance().pageConfig = Clone.shallowClone(DefaultPageConfig)<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">getBanner</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//请求处理，this.$crypto.setCrypto加密</span><br>    <span class="hljs-built_in">this</span>.$axios<br>      .get(ServerApi.shop.shopList, &#123;<br>        <span class="hljs-attr">params</span>: &#123;<br>          <span class="hljs-attr">crypto</span>: <span class="hljs-built_in">this</span>.$crypto.setCrypto(BannerModel.getInstance().pageConfig)<br>        &#125;,<br>      &#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            BannerModel.getInstance().bannerList = res.data.list<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;)<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>banner.vue页面展示</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;swiper&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe</span> <span class="hljs-attr">:auto</span>=<span class="hljs-string">&quot;3000&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mt-swipe-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item,index) in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;imgs&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;imgPath+item.shopPic&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;clickHandler(item)&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe-item</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mt-swipe</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; Swipe, SwipeItem &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> BannerBussiness <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bussiness&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;banner&quot;</span>,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">list</span>: [],<span class="hljs-comment">//图片列表</span></span><br><span class="javascript">      <span class="hljs-attr">imgPath</span>: Config.RequestPath<span class="hljs-comment">//图片根路径</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-built_in">this</span>.init();</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-keyword">new</span> BannerBussiness(<span class="hljs-built_in">this</span>);<span class="hljs-comment">//初始化banner请求</span></span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params">_shop</span>)</span> &#123;<span class="hljs-comment">//banner点击跳转</span></span><br><span class="javascript">      <span class="hljs-built_in">this</span>.$router.push(&#123;</span><br><span class="javascript">        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;ShopTheme&quot;</span>,</span><br><span class="javascript">        <span class="hljs-attr">query</span>: &#123; <span class="hljs-attr">_type</span>: _shop.shopType, <span class="hljs-attr">_shopName</span>: _shop.shopName &#125;</span><br><span class="javascript">      &#125;);</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.imgs</span> &#123;</span><br><span class="css">  <span class="hljs-selector-class">.h</span>(<span class="hljs-number">500</span>);</span><br><span class="css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">&#125;</span><br><span class="css"><span class="hljs-selector-class">.swiper</span> &#123;</span><br><span class="css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">  <span class="hljs-selector-class">.h</span>(<span class="hljs-number">500</span>);</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="tableBar（导航栏）"><a href="#tableBar（导航栏）" class="headerlink" title="tableBar（导航栏）"></a>tableBar（导航栏）</h3><ul><li><p><strong>在iconfont下载相对应的图标字体资源，我这里直接下载在<a href="https://gitee.com/DieHunter/myCode/tree/master/shopping/client/shopclient/src/style">style目录</a>下，用类名的方式显示，在tabbar文件夹新建model.js用于取数据（其实这个可以放到config）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TableBarModel</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> MenuList = [&#123;<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;主页&quot;</span>,<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/Home&quot;</span>,<br>      <span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;icon-shouye li iconfont&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;分类&quot;</span>,<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/Kind&quot;</span>,<br>      <span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;icon-fenlei li iconfont&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;购物车&quot;</span>,<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/ShopCar&quot;</span>,<br>      <span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;icon-daohang-gouwuche li iconfont&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;我的&quot;</span>,<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/Info&quot;</span>,<br>      <span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;icon-wode li iconfont&quot;</span><br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>tabbar.vue ,通过列表</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;tab&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span></span><br><span class="hljs-tag">      <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item, index) in menuList&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">:to</span>=<span class="hljs-string">&quot;item.path&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">tag</span>=<span class="hljs-string">&quot;li&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;item.icon&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">active-class</span>=<span class="hljs-string">&quot;change&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">replace</span></span><br><span class="hljs-tag">    &gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>      &#123;&#123;item.name&#125;&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> tableBarModel <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./model&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;tabBar&quot;</span>,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">menuList</span>: tableBarModel.MenuList</span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&#x27;less&#x27;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-id">#tab</span> &#123;</span><br><span class="css">  <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">  </span><br><span class="css">  <span class="hljs-attribute">box-shadow</span>: -<span class="hljs-number">1px</span> <span class="hljs-number">0</span> <span class="hljs-number">8px</span> <span class="hljs-number">#999</span>;</span><br><span class="css">  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">100</span>;</span><br><span class="css">  <span class="hljs-attribute">justify-content</span>: space-around;</span><br><span class="css">  <span class="hljs-attribute">position</span>: fixed;</span><br><span class="css">  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;</span><br><span class="css">  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;</span><br><span class="css">  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;</span><br><span class="css">  <span class="hljs-selector-class">.h</span>(<span class="hljs-number">130</span>);</span><br><span class="css">  <span class="hljs-selector-class">.bcolor</span>();</span><br><span class="css">  <span class="hljs-selector-class">.li</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.h</span>(<span class="hljs-number">130</span>);</span><br><span class="css">    <span class="hljs-attribute">box-sizing</span>: border-box;</span><br><span class="css">    <span class="hljs-attribute">padding-top</span>: <span class="hljs-built_in">unit</span>(<span class="hljs-number">10</span> / @pxtorem, rem);</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">25%</span>;</span><br><span class="css">    <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">    <span class="hljs-selector-class">.fontColorOff</span>();</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.li</span><span class="hljs-selector-pseudo">::before</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">58</span>);</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.li</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.f_s</span>(<span class="hljs-number">26</span>);</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-class">.change</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.fontColorOn</span>();</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="title（标题）"><a href="#title（标题）" class="headerlink" title="title（标题）"></a>title（标题）</h3><ul><li><p><strong>title用h2简单做了个样式修改</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">props</span>: [<span class="hljs-string">&quot;title&quot;</span>]</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-tag">h2</span> &#123;</span><br><span class="css">  <span class="hljs-selector-class">.h2Font</span>();</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="shopItem（商品列表）"><a href="#shopItem（商品列表）" class="headerlink" title="shopItem（商品列表）"></a>shopItem（商品列表）</h3><ul><li><p><strong>新建model.js存放可读写商品列表，vue组件实例和默认分页配置</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ItemModel</span> </span>&#123;<span class="hljs-comment">//存放可读写商品列表，vue组件实例和默认分页配置</span><br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>._shopList = []<span class="hljs-comment">//商品列表</span><br>    <span class="hljs-built_in">this</span>._pageConfig = &#123;&#125;<span class="hljs-comment">//默认分页配置</span><br>  &#125;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">getInstance</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//单例写法</span><br>    <span class="hljs-keyword">if</span> (!ItemModel._instance) &#123;<br>      <span class="hljs-built_in">Object</span>.defineProperty(ItemModel, <span class="hljs-string">&quot;_instance&quot;</span>, &#123;<br>        <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> ItemModel()<br>      &#125;)<br>    &#125;<br>    <span class="hljs-keyword">return</span> ItemModel._instance;<br>  &#125;<br>  <span class="hljs-keyword">set</span> <span class="hljs-title">vueComponent</span>(<span class="hljs-params">val</span>) &#123;<br>    <span class="hljs-built_in">this</span>._vueComponent = val<br>  &#125;<br>  <span class="hljs-keyword">get</span> <span class="hljs-title">vueComponent</span>() &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._vueComponent<br>  &#125;<br>  <span class="hljs-keyword">set</span> <span class="hljs-title">pageConfig</span>(<span class="hljs-params">val</span>) &#123;<br>    <span class="hljs-built_in">this</span>._pageConfig = val<br>    <span class="hljs-built_in">this</span>._pageConfig.picType = <span class="hljs-number">0</span><span class="hljs-comment">//默认商品类型：单个商品</span><br>  &#125;<br>  <span class="hljs-keyword">get</span> <span class="hljs-title">pageConfig</span>() &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._pageConfig<br>  &#125;<br>  <span class="hljs-keyword">set</span> <span class="hljs-title">shopList</span>(<span class="hljs-params">val</span>) &#123;<br>    <span class="hljs-built_in">this</span>._shopList = val<br>    <span class="hljs-built_in">this</span>._vueComponent.list = <span class="hljs-built_in">this</span>._shopList<span class="hljs-comment">//获取到商品列表后重新渲染</span><br>  &#125;<br>  <span class="hljs-keyword">get</span> <span class="hljs-title">shopList</span>() &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._shopList<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>新建做业务处理的bussiness.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;<br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;<br><span class="hljs-keyword">import</span> ItemModel <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./model&quot;</span>;<br><span class="hljs-keyword">import</span> Clone <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../utils/clone&quot;</span>;<br><span class="hljs-keyword">const</span> &#123;<br>  DefaultPageConfig,<br>  ServerApi<br>&#125; = config<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ItemBussiness</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Vue</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">_vueComponent</span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>()<br>    ItemModel.getInstance().vueComponent = _vueComponent<span class="hljs-comment">//Vue组件实例</span><br>    <span class="hljs-built_in">this</span>.initPageConfig(_vueComponent.shopType)<br>    <span class="hljs-built_in">this</span>.getShopItem()<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">initPageConfig</span>(<span class="hljs-params">_shopType</span>)</span> &#123;<span class="hljs-comment">//获取默认分页配置</span><br>    ItemModel.getInstance().pageConfig = Clone.shallowClone(DefaultPageConfig)<br>    ItemModel.getInstance().pageConfig.shopType = _shopType<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">getShopItem</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//获取商品列表</span><br>    <span class="hljs-built_in">this</span>.$axios<br>      .get(ServerApi.shop.shopList, &#123;<br>        <span class="hljs-attr">params</span>: &#123;<br>          <span class="hljs-attr">crypto</span>: <span class="hljs-built_in">this</span>.$crypto.setCrypto(ItemModel.getInstance().pageConfig)<br>        &#125;,<br>      &#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            ItemModel.getInstance().shopList = res.data.list<span class="hljs-comment">//渲染页面</span><br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;)<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>在shopItem.vue中进行列表渲染，并添加点击事件，跳转至商品详情页</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;more&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item,index) in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;clickHandler(item)&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;imgPath+item.shopPic&quot;</span> <span class="hljs-attr">alt</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;&#x27;imgs&#x27;+index&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;item.shopName&#125;&#125; &#123;&#123;item.shopScale&#125;&#125;克<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>￥&#123;&#123;item.shopPrice&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> ShopBussiness <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bussiness&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;shopItem&quot;</span>,</span><br><span class="javascript">  <span class="hljs-attr">props</span>: [<span class="hljs-string">&quot;shopType&quot;</span>],</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">list</span>: [],</span><br><span class="javascript">      <span class="hljs-attr">imgPath</span>: Config.RequestPath</span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">mounted</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">new</span> ShopBussiness(<span class="hljs-built_in">this</span>);</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params">data</span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.$router.push(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;ShopInfo&quot;</span>, <span class="hljs-attr">query</span>: &#123; ...data &#125; &#125;);</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"><span class="hljs-selector-class">.more</span> &#123;</span><br><span class="css">  <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">    <span class="hljs-selector-class">.shopItem</span>();</span><br><span class="css">  &#125;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><p><strong>最后的商品主题组件和商品列表相似，添加点击事件跳转至主题详情页</strong></p><h3 id="home页面"><a href="#home页面" class="headerlink" title="home页面"></a>home页面</h3><p><strong>在page文件夹下新建home文件夹以及home.vue文件，将以上组件在home中引入并构成页面，效果如下</strong><img src="https://img-blog.csdnimg.cn/20200919115822724.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200919115844541.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>home.vue</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Top</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;零食商贩&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Top</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">Banner</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Banner</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">H2</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;精选主题&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">H2</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">Theme</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Theme</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">H2</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;最近新品&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">H2</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">ShopItem</span> <span class="hljs-attr">:shopType</span>=<span class="hljs-string">&quot;shopType&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ShopItem</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TabBar</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">TabBar</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">import</span> TabBar <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/tabBar/tabBar&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Top <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/top/top&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Banner <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/banner/banner&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> Theme <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/theme/theme&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> ShopItem <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/shopItem/shopItem&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">import</span> H2 <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/h2/h2&quot;</span>;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Home&quot;</span>,</span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">      <span class="hljs-attr">shopType</span>: <span class="hljs-string">&quot;&quot;</span></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">  &#125;,</span><br><span class="javascript">  <span class="hljs-attr">components</span>: &#123;</span><br><span class="javascript">    Top,</span><br><span class="javascript">    H2,</span><br><span class="javascript">    Banner,</span><br><span class="javascript">    Theme,</span><br><span class="javascript">    ShopItem,</span><br><span class="javascript">    TabBar</span><br><span class="javascript">  &#125;</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;../../style/init.less&quot;</span>;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>以上就是主页功能实现及部分公共组件的实现，下篇文章将对商品分类列表，商品主题界面及功能进行介绍</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（十三）前端商城部分</title>
    <link href="/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/"/>
    <url>/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（十二）前端商城部分****：</strong><br><a href="https://blog.csdn.net/time_____/article/details/108471436">https://blog.csdn.net/time_____/article/details/108471436</a><br><strong>项目源码（持续更新）：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopping">https://gitee.com/DieHunter/myCode/tree/master/shopping</a></strong></p><p><strong>这篇文章我们来实现一下前端商城的工具类，其他配置和全局状态</strong></p><h3 id="工具类："><a href="#工具类：" class="headerlink" title="工具类："></a><strong>工具类：</strong></h3><ul><li><p><strong>工具类我们统一放在utils文件夹下，并部署在Vue原型上（与Axios的一样）</strong></p></li><li><p><strong>首先我们要实现两个对象深复制的方法，<a href="https://blog.csdn.net/time_____/article/details/85392699">之前博客</a>也有介绍到，后续对全局静态变量做操作时，只能将其定义为只读，也就是不能改变他的值，所以深复制是很有必要的，对于简单的数据用json方式即可，遇上含有function，set，get等属性时需要用到递归版。</strong>  </p></li><li><p><em>JSON：</em>*</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Clone</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">shallowClone</span>(<span class="hljs-params">org</span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(org));<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p> <strong>递归：</strong></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Clone</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">deepClone</span>(<span class="hljs-params">org, tag</span>)</span> &#123;<br>    <span class="hljs-keyword">var</span> tag = tag || &#123;&#125;;<br>    <span class="hljs-keyword">var</span> name = <span class="hljs-built_in">Object</span>.getOwnPropertyNames(org);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; name.length; i++) &#123;<br>      <span class="hljs-keyword">var</span> desc = <span class="hljs-built_in">Object</span>.getOwnPropertyDescriptor(org, name[i]);<br>      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> desc.value === <span class="hljs-string">&quot;object&quot;</span> &amp;&amp; desc.value !== <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">var</span> obj = desc.value.toString() === <span class="hljs-string">&quot;[object Object]&quot;</span> ? &#123;&#125; : [];<br>        <span class="hljs-built_in">Object</span>.defineProperty(tag, name[i], &#123;<br>          <span class="hljs-attr">configurable</span>: desc.configurable,<br>          <span class="hljs-attr">enumerable</span>: desc.enumerable,<br>          <span class="hljs-attr">writable</span>: desc.writable,<br>          <span class="hljs-attr">value</span>: obj<br>        &#125;);<br>        Clone.deepClone(desc.value, obj);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">Object</span>.defineProperty(tag, name[i], desc);<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> tag;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>  <strong>本地缓存的封装</strong></p></li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Storage</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">saveStorage</span>(<span class="hljs-params">key, val</span>)</span> &#123;<br>    <span class="hljs-built_in">localStorage</span>.setItem(key, <span class="hljs-built_in">JSON</span>.stringify(val));<br>  &#125;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">getStorage</span>(<span class="hljs-params">key</span>)</span> &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">localStorage</span>.getItem(key)) || [];<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;&#125;<br>  &#125;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">clearStorage</span>(<span class="hljs-params">key</span>)</span> &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-built_in">localStorage</span>.removeItem(key);<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;&#125;<br>  &#125;<br>&#125;<br>Vue.prototype.$storage = Storage;<br></code></pre></td></tr></table></figure><h3 id="其他配置："><a href="#其他配置：" class="headerlink" title="其他配置："></a>其他配置：</h3><ul><li><p><strong>Events：对全局事件做一个封装，这里针对每一个组件和每一个自定义事件用了一个简单的工厂模式，****降低代码的耦合性，解决事件封闭，但是缺点是在每一个组件销毁时需要作事件取消监听（销毁），否则会导致之前的监听事件执行两次，虽然每个子工厂生产出来的都是独特的产品，但是会导致性能降低，所以要做事件销毁处理</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Events</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Vue</span> </span>&#123;<span class="hljs-comment">//继承Vue的自定义事件，使其直接调用</span><br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>();<br>  &#125;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">getInstance</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//返回当前实例的单例</span><br>    <span class="hljs-keyword">if</span> (!Events._instance) &#123;<br>      <span class="hljs-built_in">Object</span>.defineProperty(Events, <span class="hljs-string">&quot;_instance&quot;</span>, &#123;<br>        <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> Events()<br>      &#125;);<br>    &#125;<br>    <span class="hljs-keyword">return</span> Events._instance;<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">onEvent</span>(<span class="hljs-params">_event, _fn</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.$on(_event, _fn);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">onceEvent</span>(<span class="hljs-params">_event, _fn</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.$once(_event, _fn);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">emitEvent</span>(<span class="hljs-params">_event, _data</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.$emit(_event, _data);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">offEvent</span>(<span class="hljs-params">_event, _fn</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.$off(_event, _fn)<br>  &#125;<br>&#125;<br>Vue.prototype.$events = Events.getInstance()<br></code></pre></td></tr></table></figure></li><li><p><strong>全国省市县的JSON文件</strong><br><a href="https://gitee.com/DieHunter/myCode/blob/master/shopping/client/shopclient/src/config/city.js">https://gitee.com/DieHunter/myCode/blob/master/shopping/client/shopclient/src/config/city.js</a></p></li><li><p><strong>静态Config文件</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Config</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> Agreement = <span class="hljs-string">&quot;http://&quot;</span>; <span class="hljs-comment">//协议</span><br>  <span class="hljs-keyword">static</span> BaseUrl = <span class="hljs-string">&quot;127.0.0.1&quot;</span>; <span class="hljs-comment">//请求ip或域名</span><br>  <span class="hljs-keyword">static</span> ServerUrl = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">//多级路径名</span><br>  <span class="hljs-keyword">static</span> ServerPort = <span class="hljs-string">&quot;:1024&quot;</span>; <span class="hljs-comment">//端口</span><br>  <span class="hljs-keyword">static</span> Path = <span class="hljs-string">&quot;/&quot;</span>; <span class="hljs-comment">//静态文件目录</span><br>  <span class="hljs-keyword">static</span> CryptoKey = <span class="hljs-string">&quot;tokenkey&quot;</span>; <span class="hljs-comment">//加密信息关键字</span><br>  <span class="hljs-keyword">static</span> RequestPath =<br>    Config.Agreement + Config.BaseUrl + Config.ServerPort + Config.Path; <span class="hljs-comment">//服务端静态目录</span><br>  <span class="hljs-keyword">static</span> RequestTimeOut = <span class="hljs-number">10</span> * <span class="hljs-number">1000</span>; <span class="hljs-comment">//请求超时时间</span><br>  <span class="hljs-keyword">static</span> GetCodeTime = <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>; <span class="hljs-comment">//邮箱验证码重发时间</span><br>  <span class="hljs-keyword">static</span> ShopMaxCount = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>]; <span class="hljs-comment">//每件商品可购买数量（选择器配置）</span><br>  <span class="hljs-keyword">static</span> ServerApi = &#123;<br>    <span class="hljs-comment">//接口名</span><br>    <span class="hljs-attr">token</span>: <span class="hljs-string">&quot;user/checkToken&quot;</span>, <span class="hljs-comment">//验证token</span><br>    <span class="hljs-attr">user</span>: &#123;<br>      <span class="hljs-attr">userLogin</span>: <span class="hljs-string">&quot;user/userLogin&quot;</span>, <span class="hljs-comment">//用户登录</span><br>      <span class="hljs-attr">getMailCode</span>: <span class="hljs-string">&quot;user/getMailCode&quot;</span>, <span class="hljs-comment">//获取验证码</span><br>      <span class="hljs-attr">updateUser</span>: <span class="hljs-string">&quot;user/updateUser&quot;</span>, <span class="hljs-comment">//更新用户</span><br>      <span class="hljs-attr">userReg</span>: <span class="hljs-string">&quot;user/userReg&quot;</span> <span class="hljs-comment">//注册（移动端）</span><br>    &#125;,<br>    <span class="hljs-attr">shop</span>: &#123;<br>      <span class="hljs-attr">shopList</span>: <span class="hljs-string">&quot;shop/shopList&quot;</span> <span class="hljs-comment">//获取商品列表</span><br>    &#125;,<br>    <span class="hljs-attr">order</span>: &#123;<br>      <span class="hljs-attr">orderList</span>: <span class="hljs-string">&quot;order/orderList&quot;</span>, <span class="hljs-comment">//获取订单列表</span><br>      <span class="hljs-attr">addOrder</span>: <span class="hljs-string">&quot;order/addOrder&quot;</span>, <span class="hljs-comment">//新增订单</span><br>      <span class="hljs-attr">delOrder</span>: <span class="hljs-string">&quot;order/delOrder&quot;</span>, <span class="hljs-comment">//删除订单</span><br>      <span class="hljs-attr">updateOrder</span>: <span class="hljs-string">&quot;order/updateOrder&quot;</span> <span class="hljs-comment">//更新订单状态</span><br>    &#125;<br>  &#125;;<br>  <span class="hljs-keyword">static</span> UploadName = &#123;<br>    <span class="hljs-attr">headPic</span>: <span class="hljs-string">&quot;upload/headPic&quot;</span> <span class="hljs-comment">//图片路径</span><br>  &#125;;<br>  <span class="hljs-keyword">static</span> UploadKey = &#123;<br>    <span class="hljs-attr">headKey</span>: <span class="hljs-string">&quot;headPic&quot;</span> <span class="hljs-comment">//头像上传关键字</span><br>  &#125;;<br>  <span class="hljs-keyword">static</span> StorageName = &#123;<br>    <span class="hljs-comment">//本地缓存</span><br>    <span class="hljs-attr">Token</span>: <span class="hljs-string">&quot;token&quot;</span>,<br>    <span class="hljs-attr">ShopCar</span>: <span class="hljs-string">&quot;shopCar&quot;</span>, <span class="hljs-comment">//购物车列表</span><br>    <span class="hljs-attr">UserInfo</span>: <span class="hljs-string">&quot;userInfo&quot;</span> <span class="hljs-comment">//用户信息</span><br>  &#125;;<br>  <span class="hljs-keyword">static</span> EventName = &#123;<br>    <span class="hljs-comment">//自定义事件</span><br>    <span class="hljs-attr">SelectKind</span>: <span class="hljs-string">&quot;selectKind&quot;</span>, <span class="hljs-comment">//分类选择</span><br>    <span class="hljs-attr">ChangeCount</span>: <span class="hljs-string">&quot;changeCount&quot;</span>, <span class="hljs-comment">//修改商品数量</span><br>    <span class="hljs-attr">ShowPicker</span>: <span class="hljs-string">&quot;showPicker&quot;</span>, <span class="hljs-comment">//显示，隐藏Picker</span><br>    <span class="hljs-attr">CountShop</span>: <span class="hljs-string">&quot;countShop&quot;</span>, <span class="hljs-comment">//购物车商品总价</span><br>    <span class="hljs-attr">SelectAllChild</span>: <span class="hljs-string">&quot;selectAllChild&quot;</span>, <span class="hljs-comment">//全选子选项</span><br>    <span class="hljs-attr">SelectParent</span>: <span class="hljs-string">&quot;selectParent&quot;</span>, <span class="hljs-comment">//全选父选项</span><br>    <span class="hljs-attr">IsLogin</span>: <span class="hljs-string">&quot;isLogin&quot;</span>, <span class="hljs-comment">//登录成功</span><br>    <span class="hljs-attr">UploadPic</span>: <span class="hljs-string">&quot;uploadPic&quot;</span> <span class="hljs-comment">//上传图片</span><br>  &#125;;<br>  <span class="hljs-keyword">static</span> DefaultPageConfig = &#123;<br>    <span class="hljs-comment">//默认分页配置</span><br>    <span class="hljs-attr">shopType</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-attr">picType</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-attr">keyWord</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-attr">page</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">isactive</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">pageSize</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-attr">totalPage</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">orderId</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-attr">sort</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>    <span class="hljs-attr">orderState</span>: <span class="hljs-string">&quot;&quot;</span><br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>邮箱类型选择配置</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Mail</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> address = [<br>    <span class="hljs-string">&quot;@qq.com&quot;</span>,<br>    <span class="hljs-string">&quot;@gmail.com&quot;</span>,<br>    <span class="hljs-string">&quot;@yahoo.com&quot;</span>,<br>    <span class="hljs-string">&quot;@msn.com&quot;</span>,<br>    <span class="hljs-string">&quot;@hotmail.com&quot;</span>,<br>    <span class="hljs-string">&quot;@aol.com&quot;</span>,<br>    <span class="hljs-string">&quot;@ask.com&quot;</span>,<br>    <span class="hljs-string">&quot;@live.com&quot;</span>,<br>    <span class="hljs-string">&quot;@0355.net&quot;</span>,<br>    <span class="hljs-string">&quot;@163.com&quot;</span>,<br>    <span class="hljs-string">&quot;@163.net&quot;</span>,<br>    <span class="hljs-string">&quot;@263.net&quot;</span>,<br>    <span class="hljs-string">&quot;@3721.net&quot;</span>,<br>    <span class="hljs-string">&quot;@yeah.net&quot;</span>,<br>    <span class="hljs-string">&quot;@googlemail.com&quot;</span>,<br>    <span class="hljs-string">&quot;@mail.com&quot;</span><br>  ];<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>商品类型</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ShopType</span> </span>&#123;<br>  <span class="hljs-comment">//商品类型，图片类型，订单状态</span><br>  <span class="hljs-keyword">static</span> shopType = [<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;炒货&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;0&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;果味&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;1&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;蔬菜&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;2&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;点心&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;3&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;粗茶&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;4&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;淡饭&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;5&quot;</span> &#125;<br>    <span class="hljs-comment">// &#123; name: &quot;其他&quot;, val: &quot;6&quot; &#125;,</span><br>  ];<br>  <span class="hljs-keyword">static</span> picType = [<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;单个商品&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;0&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;轮播图&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;1&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;分类&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;2&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;主题&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;3&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;其他&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;4&quot;</span> &#125;<br>  ];<br>  <span class="hljs-keyword">static</span> orderState = [<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;未付款&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;0&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;已付款&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;1&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;未发货&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;2&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;已发货&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;3&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;已完成&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;4&quot;</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;已退款&quot;</span>, <span class="hljs-attr">val</span>: <span class="hljs-string">&quot;5&quot;</span> &#125;<br>  ];<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="全局Store"><a href="#全局Store" class="headerlink" title="全局Store"></a>全局Store</h3><ul><li><p><strong>全局store没有用Vuex,而是用本地缓存做了一个数据存储，在src下新建store文件夹，并新建store.js文件将所有的状态值汇总并暴露，这里我们简单搭建一下购物车，在shopCar中新建数据model层state和命令控制controller层action</strong><br><img src="https://img-blog.csdnimg.cn/20200911114237326.png"></p></li><li><p><strong>store.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> ShopCar <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./shopCar/action&quot;</span><br>Vue.prototype.$store = &#123;<br>  ShopCar<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>state.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span><br><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">State</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Vue</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>()<br>  &#125;<br>  <span class="hljs-keyword">set</span> <span class="hljs-title">shopCar</span>(<span class="hljs-params">val</span>) &#123;<span class="hljs-comment">//写数据</span><br>    <span class="hljs-built_in">this</span>.$storage.saveStorage(Config.StorageName.ShopCar, val)<br>  &#125;<br>  <span class="hljs-keyword">get</span> <span class="hljs-title">shopCar</span>() &#123;<span class="hljs-comment">//读数据</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.$storage.getStorage(Config.StorageName.ShopCar) || []<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>action.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> State <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./state&quot;</span><br><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span><br><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span><br><span class="hljs-keyword">const</span> &#123;<br>  EventName<br>&#125; = Config;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Action</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Vue</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>()<br>    <span class="hljs-built_in">this</span>._state = <span class="hljs-keyword">new</span> State()<br>  &#125;<br>  <span class="hljs-keyword">set</span> <span class="hljs-title">state</span>(<span class="hljs-params">val</span>) &#123;<br>    <span class="hljs-built_in">this</span>._state.shopCar = val<br>  &#125;<br>  <span class="hljs-keyword">get</span> <span class="hljs-title">state</span>() &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._state.shopCar<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">countShopItem</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//修改商品数量</span><br>    <br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">delShopItem</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//删除商品</span><br>    <br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">selAllChild</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//全选</span><br>    <br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">filterSelect</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//刷新商品列表</span><br>    <br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">delSelShop</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//删除选择商品</span><br>    <br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="引入所有包"><a href="#引入所有包" class="headerlink" title="引入所有包"></a>引入所有包</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App&#x27;</span><br><span class="hljs-keyword">import</span> router <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./router&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./style/main.less&quot;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;mint-ui/lib/style.css&#x27;</span><br><span class="hljs-keyword">import</span> MintUI <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;mint-ui&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./utils/axios&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./utils/cryptoTool&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./utils/storage&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./event/event&quot;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./store/store&quot;</span><br>Vue.use(MintUI);<br>Vue.config.productionTip = <span class="hljs-literal">false</span><br><br><span class="hljs-comment">/* eslint-disable no-new */</span><br><span class="hljs-keyword">new</span> Vue(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,<br>  router,<br>  <span class="hljs-attr">components</span>: &#123;<br>    App<br>  &#125;,<br>  <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;App/&gt;&#x27;</span><br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>到此为止，前端商城准备工作全部完成，下一篇文章正式开始进入开发</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（十二）前端商城部分</title>
    <link href="/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/"/>
    <url>/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89%E5%89%8D%E7%AB%AF%E5%95%86%E5%9F%8E%E9%83%A8%E5%88%86/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（十一）：</strong><br><strong><a href="https://blog.csdn.net/time_____/article/details/108447234">https://blog.csdn.net/time_____/article/details/108447234</a><br>项目源码（持续更新）：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopping">https://gitee.com/DieHunter/myCode/tree/master/shopping</a></strong></p><p><strong>从这篇文章开始对前端商城开发进行介绍，当然中间也会穿插着后端的新增模块一起介绍<br>效果图地址：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopping/pic">https://gitee.com/DieHunter/myCode/tree/master/shopping/pic</a><br>效果图也附上：<br>主页 分类 购物车 我的 商品详情 主题区 订单详情 修改信息</strong><br><img src="https://img-blog.csdnimg.cn/20200908163819434.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200908163935796.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200908164056168.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200908164210585.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200908164247803.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/2020090816433148.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200908164544345.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200908164732556.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>由于小程序和App或移动端有差别，所以个人信息页面另做修改<br>本篇文章主要介绍一下准备工作和项目的搭建，在<a href="https://blog.csdn.net/time_____/article/details/105191286">第一篇文章</a>中已经对webpack配置以及Vue脚手架工具配置，以及其他依赖的安装进行了一个简单叙述，这里开始对准备工作做一个详细介绍，以及项目中的一些临时调整做一个说明</strong></p><ul><li><p><strong>使用vue init webpack + 项目的名字（我这里是shopclient，名称不能有大写字母） 初始化项目（一般直接全回车继续，eslink和test可选择不装）</strong></p></li><li><p><strong>安装完成后，我们可以简单配置一下webpack，在自动生成的config文件夹下，index.js中的配置是我们使用webpack进行build和dev时用得上的配置，这里简单介绍几个常用的：<br>dev属性：<a href="https://www.webpackjs.com/configuration/dev-server/#devserver-proxy">proxyTable</a>，用于开发环境中的代理，解决跨域，以及使用自定义接口重定向</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">proxyTable: &#123;<br>        <span class="hljs-string">&#x27;/testApi&#x27;</span>:&#123;<span class="hljs-comment">//代理接口名，请求到/testApi会定向到http://127.0.0.1:1024/testApi下</span><br>            <span class="hljs-attr">target</span>:<span class="hljs-string">&#x27;http://127.0.0.1:1024&#x27;</span>,<span class="hljs-comment">//目标域名</span><br>            <span class="hljs-attr">changeOrigin</span>:<span class="hljs-literal">true</span>,<span class="hljs-comment">//是否允许跨域</span><br>            <span class="hljs-attr">pathRewrite</span>:&#123;<span class="hljs-string">&quot;^/testApi&quot;</span>:<span class="hljs-string">&#x27;&#x27;</span>&#125; <span class="hljs-comment">// 把testApi替换成空</span><br>        &#125;<br>    &#125;,<br></code></pre></td></tr></table></figure><p><strong>host:’127.0.0.1’：本地dev项目服务器地址，通过127.0.0.1加端口号访问项目主页<br>port:8080：本地dev项目端口，通过服务器地址加8080访问项目主页<br>autoOpenBrowser：开发环境下项目编译完成后是否在默认浏览器自动打开项目<br>assetsPublicPath：静态文件地址，如果写成/static则通过根目录（根据上面的配置是127.0.0.1:8080/static）+/static可访问静态文件<br>build属性：index，打包后的主页路径<br>assetsRoot：打包输出路径<br>productionGzipExtensions：代码压缩类型，一般是[‘js’,’css’]，打包后将会压缩成min.js和min.css</strong></p></li><li><p><strong>配置完成之后，开始下载其他依赖，用到的有，****devDependencies：less，less-loader，dependencies：vue-router，axios，crypto-js，mint-ui</strong></p></li><li><p><strong>新建以下文件夹</strong><br><img src="https://img-blog.csdnimg.cn/20200910102613577.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p></li><li><p><strong>配置****less常用的初始值，我这里是这样配置的，其中icon用的是<a href="https://www.iconfont.cn/">阿里的icon</a>，将字体和样式包下载至style，animate用的是<a href="https://animate.style/">Animate.css</a>，transition.less是自己写的一个导航切换时的过渡动画，后面通过全局路由守卫进行切换动画，init中主要对初始样式声明变量，reset.less是设置页面默认样式</strong><br><img src="https://img-blog.csdnimg.cn/20200910103016391.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p></li><li><p><strong>配置mint-ui，在main.js下引入mint-ui和css,以及按需引入组件，我这里项目中在每个组件中按需引入，建议在全局按需引入，减少重复代码</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;mint-ui/lib/style.css&#x27;</span><br><span class="hljs-keyword">import</span> MintUI <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;mint-ui&#x27;</span><br><br>Vue.use(MintUI);<br></code></pre></td></tr></table></figure></li><li><p><strong>配置axios请求方法拦截器，为了方便调用，我们将axios部署在Vue原型上，通过组件中的this.$axios进行调用，以下是拦截器配置，其中config是常量配置文件</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> Axios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;axios&quot;</span>;<br><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../config/config&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; Toast, Indicator &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mint-ui&quot;</span>;<br>Axios.defaults.baseURL = Config.RequestPath; <span class="hljs-comment">//默认请求地址</span><br>Axios.defaults.timeout = Config.RequestTimeOut; <span class="hljs-comment">//请求超时</span><br><span class="hljs-comment">// 添加请求拦截器</span><br>Axios.interceptors.request.use(<br>  <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">config</span>) </span>&#123;<br>    Indicator.open(<span class="hljs-string">&quot;加载中...&quot;</span>);<br>    <span class="hljs-comment">// 在发送请求之前做些什么</span><br>    <span class="hljs-keyword">return</span> config;<br>  &#125;,<br>  <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error</span>) </span>&#123;<br>    Indicator.close();<br>    <span class="hljs-comment">// 对请求错误做些什么</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Promise</span>.reject(error);<br>  &#125;<br>);<br><span class="hljs-comment">// 添加响应拦截器</span><br>Axios.interceptors.response.use(<br>  <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">response</span>) </span>&#123;<br>    Indicator.close();<br>    <span class="hljs-comment">// 对响应数据做点什么</span><br>    <span class="hljs-keyword">if</span> (response.data.result != <span class="hljs-number">1</span>) &#123;<br>      Toast(response.data.msg);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (response.data.result === -<span class="hljs-number">999</span>) &#123;<br>      <span class="hljs-comment">//token验证失败</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> response.data;<br>  &#125;,<br>  <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error</span>) </span>&#123;<br>    Indicator.close();<br>    Toast(<span class="hljs-string">&quot;加载失败&quot;</span>);<br>    <span class="hljs-comment">// 对响应错误做点什么</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Promise</span>.reject(error);<br>  &#125;<br>);<br><br>Vue.prototype.$axios = Axios;<br></code></pre></td></tr></table></figure></li><li><p><strong>配置vue-router，我们直接在config中添加vue-router的界面配置项，考虑到路由跳转的过渡动画，我们将router的每个界面进行了一个分级，形成这样的效果</strong></p><p><img src="https://img-blog.csdnimg.cn/20200910143036709.gif">  </p></li><li><p><em>在config文件夹中新建routeConfig，内容如下</em>*</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Home <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/home/home&quot;</span>;<span class="hljs-comment">//商品首页</span><br><span class="hljs-keyword">import</span> Kind <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/kind/kind&quot;</span>;<span class="hljs-comment">//分类界面</span><br><span class="hljs-keyword">import</span> ShopCar <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/shopCar/shopCar&quot;</span>;<span class="hljs-comment">//购物车</span><br><span class="hljs-keyword">import</span> Info <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/info/info&quot;</span>;<span class="hljs-comment">//个人主页</span><br><span class="hljs-keyword">import</span> Order <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/order/order&quot;</span>;<span class="hljs-comment">//订单管理界面</span><br><span class="hljs-keyword">import</span> ShopTheme <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/shopTheme/shopTheme&quot;</span>;<span class="hljs-comment">//主题界面</span><br><span class="hljs-keyword">import</span> ShopInfo <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/shopInfo/shopInfo&quot;</span>;<span class="hljs-comment">//商品详情</span><br><span class="hljs-keyword">import</span> Register <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/register/register&quot;</span>;<span class="hljs-comment">//注册界面</span><br><span class="hljs-keyword">import</span> UpdateInfo <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/updateInfo/updateInfo&quot;</span>;<span class="hljs-comment">//个人信息修改</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RouteConfig</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> routes = [<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/&quot;</span>,<br>      <span class="hljs-attr">redirect</span>: <span class="hljs-string">&quot;/Home&quot;</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/Home&quot;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Home&quot;</span>,<br>      <span class="hljs-attr">component</span>: Home,<br>      <span class="hljs-attr">meta</span>: &#123;<br>        <span class="hljs-attr">index</span>: <span class="hljs-number">0</span><br>      &#125;<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/Kind&quot;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Kind&quot;</span>,<br>      <span class="hljs-attr">component</span>: Kind,<br>      <span class="hljs-attr">meta</span>: &#123;<br>        <span class="hljs-attr">index</span>: <span class="hljs-number">0</span><br>      &#125;<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/ShopCar&quot;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;ShopCar&quot;</span>,<br>      <span class="hljs-attr">component</span>: ShopCar,<br>      <span class="hljs-attr">meta</span>: &#123;<br>        <span class="hljs-attr">index</span>: <span class="hljs-number">0</span><br>      &#125;<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/Info&quot;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Info&quot;</span>,<br>      <span class="hljs-attr">component</span>: Info,<br>      <span class="hljs-attr">meta</span>: &#123;<br>        <span class="hljs-attr">index</span>: <span class="hljs-number">0</span><br>      &#125;<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/ShopTheme&quot;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;ShopTheme&quot;</span>,<br>      <span class="hljs-attr">component</span>: ShopTheme,<br>      <span class="hljs-attr">meta</span>: &#123;<br>        <span class="hljs-attr">index</span>: <span class="hljs-number">1</span><br>      &#125;<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/ShopInfo&quot;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;ShopInfo&quot;</span>,<br>      <span class="hljs-attr">component</span>: ShopInfo,<br>      <span class="hljs-attr">meta</span>: &#123;<br>        <span class="hljs-attr">index</span>: <span class="hljs-number">2</span><br>      &#125;<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/Register&quot;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Register&quot;</span>,<br>      <span class="hljs-attr">component</span>: Register,<br>      <span class="hljs-attr">meta</span>: &#123;<br>        <span class="hljs-attr">index</span>: <span class="hljs-number">1</span><br>      &#125;<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/UpdateInfo&quot;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;UpdateInfo&quot;</span>,<br>      <span class="hljs-attr">component</span>: UpdateInfo,<br>      <span class="hljs-attr">meta</span>: &#123;<br>        <span class="hljs-attr">index</span>: <span class="hljs-number">1</span><br>      &#125;<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/Order&quot;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Order&quot;</span>,<br>      <span class="hljs-attr">component</span>: Order,<br>      <span class="hljs-attr">meta</span>: &#123;<br>        <span class="hljs-attr">index</span>: <span class="hljs-number">1</span><br>      &#125;<br>    &#125;<br>  ];<br>&#125;<br></code></pre></td></tr></table></figure><p> <strong>在router文件夹的index下引用该配置</strong></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> Router <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><br><span class="hljs-keyword">import</span> routeConfig <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../config/routeConfig&quot;</span><br><span class="hljs-keyword">const</span> &#123;<br>  routes<br>&#125; = routeConfig<br>Vue.use(Router)<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> Router(&#123;<br>  routes<br>&#125;)<br></code></pre></td></tr></table></figure></li></ul><p><strong>配置全局watch监听路由跳转，在App.vue中新增watch函数监听路由</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">watch: &#123;<br>    $route(to, <span class="hljs-keyword">from</span>) &#123;<br>      <span class="hljs-keyword">if</span> (to.meta.index &gt; <span class="hljs-keyword">from</span>.meta.index) &#123;<br>        <span class="hljs-built_in">this</span>.transitionName = <span class="hljs-string">&quot;slide-left&quot;</span>;<span class="hljs-comment">//下一层，进入子页面</span><br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (to.meta.index &lt; <span class="hljs-keyword">from</span>.meta.index) &#123;<br>        <span class="hljs-built_in">this</span>.transitionName = <span class="hljs-string">&quot;slide-right&quot;</span>;<span class="hljs-comment">//上一层，返回</span><br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">this</span>.transitionName = <span class="hljs-string">&quot;fade&quot;</span>;<span class="hljs-comment">//同级</span><br>      &#125;<br>    &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p><strong>到此为止，前端商城部分基本配置已完成，下一篇将介绍工具类和其他需要使用的配置，以及storage全局状态实现</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（十一）</title>
    <link href="/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/"/>
    <url>/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（十）：</strong><br><a href="https://blog.csdn.net/time_____/article/details/108442619">https://blog.csdn.net/time_____/article/details/108442619</a><br><strong>项目源码（持续更新）：</strong><strong><a href="https://gitee.com/DieHunter/myCode/tree/master/shopping">https://gitee.com/DieHunter/myCode/tree/master/shopping</a></strong><br><strong>这篇文章接着上篇的订单管理后端接口，对前端功能进行实现，主要功能有：新增订单，订单列表，订单删除，订单状态修改。</strong></p><h3 id="前端："><a href="#前端：" class="headerlink" title="前端："></a><strong>前端：</strong></h3><p><img src="https://img-blog.csdnimg.cn/20200907103806881.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200907103836504.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><ul><li><p><strong>首先先实现新增订单功能，照着之前的新增用户和商品的方法修改一些代码，提交的form表单也要修改一下，AntD表单中有一个****动态增减嵌套字段的功能，可以用于订单商品的增减</strong><br><img src="https://img-blog.csdnimg.cn/20200908104123690.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200908105429602.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70">  </p></li><li><p><em>使用Form.List提供一个渲染函数，其中有两个参数，分别是需要操作的数组和操作方式对象（add：新增，remove：删除，move：移动）</em>*</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">Form.List</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;shopList&quot;</span>&gt;</span><br>          &#123;(shopList, &#123; add, remove &#125;) =&gt; (<br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>              &#123;shopList.map((field) =&gt; (<br>                <span class="hljs-tag">&lt;<span class="hljs-name">Row</span> <span class="hljs-attr">gutter</span>=<span class="hljs-string">&#123;20&#125;</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;field.key&#125;</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;10&#125;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span><br><span class="hljs-tag">                      &#123;<span class="hljs-attr">...field</span>&#125;</span><br><span class="hljs-tag">                      <span class="hljs-attr">name</span>=<span class="hljs-string">&#123;[field.name,</span> &quot;<span class="hljs-attr">shopName</span>&quot;]&#125;</span><br><span class="hljs-tag">                      <span class="hljs-attr">fieldKey</span>=<span class="hljs-string">&#123;[field.fieldKey,</span> &quot;<span class="hljs-attr">shopName</span>&quot;]&#125;</span><br><span class="hljs-tag">                      <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &quot;请输入商品名称&quot; &#125;]&#125;</span><br><span class="hljs-tag">                    &gt;</span><br>                      <span class="hljs-tag">&lt;<span class="hljs-name">Input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入商品名称&quot;</span> <span class="hljs-attr">allowClear</span> /&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span><br>                  <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;8&#125;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span><br><span class="hljs-tag">                      &#123;<span class="hljs-attr">...field</span>&#125;</span><br><span class="hljs-tag">                      <span class="hljs-attr">name</span>=<span class="hljs-string">&#123;[field.name,</span> &quot;<span class="hljs-attr">shopCount</span>&quot;]&#125;</span><br><span class="hljs-tag">                      <span class="hljs-attr">fieldKey</span>=<span class="hljs-string">&#123;[field.fieldKey,</span> &quot;<span class="hljs-attr">shopCount</span>&quot;]&#125;</span><br><span class="hljs-tag">                      <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &quot;请输入购买数量&quot; &#125;]&#125;</span><br><span class="hljs-tag">                    &gt;</span><br>                      <span class="hljs-tag">&lt;<span class="hljs-name">InputNumber</span></span><br><span class="hljs-tag">                        <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">width:</span> &quot;<span class="hljs-attr">100</span>%&quot; &#125;&#125;</span><br><span class="hljs-tag">                        <span class="hljs-attr">min</span>=<span class="hljs-string">&#123;1&#125;</span></span><br><span class="hljs-tag">                        <span class="hljs-attr">max</span>=<span class="hljs-string">&#123;99&#125;</span></span><br><span class="hljs-tag">                        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;数量&quot;</span></span><br><span class="hljs-tag">                        <span class="hljs-attr">allowClear</span></span><br><span class="hljs-tag">                      /&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span><br>                  <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;2&#125;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">MinusCircleOutlined</span></span><br><span class="hljs-tag">                      <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> &#123;<br>                        remove(field.name);<br>                      &#125;&#125;<br>                    /&gt;<br>                  <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">Row</span>&gt;</span><br>              ))&#125;<br>              <span class="hljs-tag">&lt;<span class="hljs-name">Row</span> <span class="hljs-attr">gutter</span>=<span class="hljs-string">&#123;20&#125;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;20&#125;</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">                    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;dashed&quot;</span></span><br><span class="hljs-tag">                    <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> &#123;<br>                      add();<br>                    &#125;&#125;<br>                    style=&#123;&#123; width: &quot;100%&quot; &#125;&#125;<br>                  &gt;<br>                    <span class="hljs-tag">&lt;<span class="hljs-name">PlusOutlined</span> /&gt;</span> 添加商品<br>                  <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">Row</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>          )&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">Form.List</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p><em>实现效果</em>*<br><img src="https://img-blog.csdnimg.cn/20200908111750607.gif"></p></li><li><p><strong>实现提交功能并对接接口，提交函数与之前的新增用户和新增商品一致，只是参数不同，所以可以直接复用，提交的函数和shopList结构以及data结构如下</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">sendData</span>(<span class="hljs-params">val</span>)</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(val.shopList)<br>    <span class="hljs-keyword">if</span> (!val.shopList || !val.shopList.length) &#123;<br>      message.warning(<span class="hljs-string">&quot;请选择至少一件商品&quot;</span>);<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    val.token = <span class="hljs-built_in">this</span>.$utils.getStorage(StorageName.token);<br>    <span class="hljs-built_in">console</span>.log(val)<br>    Bussiness.sendInfo.bind(<span class="hljs-built_in">this</span>, ServerApi.order.addOrder, val)();<br>  &#125;<br></code></pre></td></tr></table></figure></li></ul><p><img src="https://img-blog.csdnimg.cn/202009081120513.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/2020090811213390.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200908112147922.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><ul><li><p><strong>新增功能完成后，下面实现订单列表的展示功能，与之前的表格展示相同，在table组件中传入不同的参数（即表单字段及配置）以实现不同表格显示的效果，这里有一个表格嵌套的问题，每一个订单对应着不同的多个商品，所以前端的效果应该是这样的</strong><br><img src="https://img-blog.csdnimg.cn/20200908113129781.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200908113149856.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70">  </p></li><li><p><em>这里涉及到的子表格可以用一个新的表格子组件来显示，在table组件下新建一个新的组件，命名expandTab.js，用于显示订单中购买的商品列表</em>*</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;<br><span class="hljs-keyword">import</span> ShopType <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/shopType&quot;</span>;<br><span class="hljs-keyword">const</span> &#123; shopType &#125; = ShopType;<br><span class="hljs-keyword">const</span> &#123; FilePath &#125; = config;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">expandTab</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">_this</span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> [<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;商品名&quot;</span>,<br>        <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;shopName&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;shopName&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">50</span>,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;商品类型&quot;</span>,<br>        <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;shopType&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;shopType&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">50</span>,<br>        <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">text</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;shopType[text].name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>        &#125;,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;商品图片&quot;</span>,<br>        <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;shopPic&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;shopPic&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">60</span>,<br>        <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">imgPath</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">return</span> (<br>            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">src</span>=<span class="hljs-string">&#123;FilePath</span> + <span class="hljs-attr">imgPath</span>&#125;</span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">width:</span> <span class="hljs-attr">60</span>, <span class="hljs-attr">margin:</span> &quot;<span class="hljs-attr">0</span> <span class="hljs-attr">auto</span>&quot; &#125;&#125;</span></span><br><span class="hljs-tag"><span class="xml">            /&gt;</span></span><br>          );<br>        &#125;,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;单价&quot;</span>,<br>        <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;shopPrice&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;shopPrice&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">30</span>,<br>        <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">price</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;price + &quot;元&quot;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>        &#125;,<br>      &#125;,&#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;购买数量&quot;</span>,<br>        <span class="hljs-attr">key</span>: <span class="hljs-string">&quot;shopCount&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;shopCount&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">30</span>,<br>      &#125;,<br>    ];<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><em>在Table组件中做一个适配，其中expandable属性是新增的属性，根据是否是order来判断订单列表显示状态，showOrderItem函数的作用是生成子表格</em>*</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">Table</span></span><br><span class="hljs-tag">  <span class="hljs-attr">scroll</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">x:</span> <span class="hljs-attr">1000</span> &#125;&#125;</span><br><span class="hljs-tag">  <span class="hljs-attr">rowKey</span>=<span class="hljs-string">&#123;(record)</span> =&gt;</span> record._id&#125;<br>  columns=&#123;this.state.columns&#125;<br>  dataSource=&#123;this.state.list&#125;<br>  expandable=&#123;<br>    this.state.tableType === &quot;order&quot;<br>      ? &#123;<br>          indentSize: 0,<br>          expandedRowRender: this.showOrderItem,<br>        &#125;<br>      : null<br>  &#125;<br>  pagination=&#123;false&#125;<br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">Table</span>&gt;</span><br></code></pre></td></tr></table></figure><p> <strong>showOrderItem函数（生成新的Table子组件）</strong></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">showOrderItem = <span class="hljs-function">(<span class="hljs-params">record</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Table</span></span></span><br><span class="hljs-tag"><span class="xml">      <span class="hljs-attr">rowKey</span>=<span class="hljs-string">&#123;(record)</span> =&gt;</span> record._id&#125;</span><br><span class="xml">      scroll=&#123;&#123; x: 1000 &#125;&#125;</span><br><span class="xml">      columns=&#123;new expandTab(this)&#125;</span><br><span class="xml">      dataSource=&#123;record.shopList&#125;</span><br><span class="xml">      pagination=&#123;false&#125;</span><br><span class="xml">    &gt;<span class="hljs-tag">&lt;/<span class="hljs-name">Table</span>&gt;</span></span><br>  );<br>&#125;;<br></code></pre></td></tr></table></figure></li><li><p><em>其余函数与功能和商品及用户管理相同</em>*</p></li><li><p><strong>修改订单状态和删除订单，删除订单可以直接在上述生成的表格中添加按钮，执行到主界面的删除事件，在table.js中之前写过一个clickHandler函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;操作&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">50</span>,<br>        <span class="hljs-attr">fixed</span>: <span class="hljs-string">&quot;right&quot;</span>,<br>        <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">record</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">return</span> (<br>            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Popconfirm</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;是否删除？&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">onConfirm</span>=<span class="hljs-string">&#123;_this.clickHandler.bind(_this,</span> <span class="hljs-attr">record</span>, &quot;<span class="hljs-attr">delete</span>&quot;)&#125;</span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">okText</span>=<span class="hljs-string">&quot;是&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">cancelText</span>=<span class="hljs-string">&quot;否&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">disabled</span>=<span class="hljs-string">&#123;record.userType</span> === <span class="hljs-string">&quot;admin&quot;</span> ? <span class="hljs-attr">true</span> <span class="hljs-attr">:</span> <span class="hljs-attr">false</span>&#125;</span></span><br><span class="hljs-tag"><span class="xml">              &gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">disabled</span>=<span class="hljs-string">&#123;record.userType</span> === <span class="hljs-string">&quot;admin&quot;</span> ? <span class="hljs-attr">true</span> <span class="hljs-attr">:</span> <span class="hljs-attr">false</span>&#125;</span></span><br><span class="hljs-tag"><span class="xml">                &gt;</span></span><br><span class="xml">                  删除</span><br><span class="xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Popconfirm</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>          );<br>        &#125;,<br>      &#125;,<br></code></pre></td></tr></table></figure></li><li><p><em>clickHandler函数（用于所有对表格数据操作的汇总，再分配到主页面中，触发对应事件）：</em>*</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params">record, type</span>)</span> &#123;<br>   <span class="hljs-keyword">switch</span> (type) &#123;<br>     <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;add&quot;</span>: <span class="hljs-comment">//添加</span><br>       <span class="hljs-built_in">this</span>.props.addInfo();<br>       <span class="hljs-keyword">break</span>;<br>     <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;change&quot;</span>: <span class="hljs-comment">//修改</span><br>       <span class="hljs-built_in">this</span>.props.changeInfo(record);<br>       <span class="hljs-keyword">break</span>;<br>     <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-comment">//删除</span><br>       <span class="hljs-built_in">this</span>.props.deleteInfo(record);<br>       <span class="hljs-keyword">break</span>;<br>     <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;allow&quot;</span>: <span class="hljs-comment">//冻结</span><br>       <span class="hljs-built_in">this</span>.props.freezeInfo(record);<br>       <span class="hljs-keyword">break</span>;<br>     <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-comment">//订单状态</span><br>       <span class="hljs-built_in">this</span>.props.orderState(...arguments);<br>       <span class="hljs-keyword">break</span>;<br>     <span class="hljs-keyword">default</span>:<br>       <span class="hljs-keyword">break</span>;<br>   &#125;<br> &#125;<br></code></pre></td></tr></table></figure></li><li><p><em>以下是订单管理主页面中的方法：</em>*</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">addOrder = <span class="hljs-function">() =&gt;</span> &#123;<span class="hljs-comment">//新增订单，触发bussiness中的新增接口</span><br>  Events.emit(EventName.ADD_ORDER, FormDefaultVal.shop);<br>  <span class="hljs-built_in">this</span>.drawerChild.showDrawer(<span class="hljs-string">&quot;addOrder&quot;</span>);<br>&#125;;<br>changePage = <span class="hljs-function">(<span class="hljs-params">pageConfig</span>) =&gt;</span> &#123;<span class="hljs-comment">//分页</span><br>  <span class="hljs-built_in">this</span>.setState(&#123; pageConfig &#125;);<br>  <span class="hljs-built_in">this</span>.getList();<br>&#125;;<br>orderState = <span class="hljs-function">(<span class="hljs-params">data, type, state</span>) =&gt;</span> &#123;<span class="hljs-comment">//修改订单状态，触发bussiness中的修改接口</span><br>  data.token = <span class="hljs-built_in">this</span>.$utils.getStorage(StorageName.token);<br>  data.orderState = state;<br>  Bussiness.orderState.bind(<span class="hljs-built_in">this</span>, ServerApi.order.updateOrder, data)();<br>&#125;;<br>getList = <span class="hljs-function">() =&gt;</span> &#123;<span class="hljs-comment">//获取订单列表，触发bussiness中的获取列表函数</span><br>  Bussiness.getInfo.bind(<span class="hljs-built_in">this</span>, ServerApi.order.orderList)();<br>&#125;;<br>deleteOrder = <span class="hljs-function">(<span class="hljs-params">record</span>) =&gt;</span> &#123;<span class="hljs-comment">//删除订单，触发bussiness中的删除接口</span><br>  Bussiness.delInfo.bind(<span class="hljs-built_in">this</span>, ServerApi.order.delOrder, record)();<br>&#125;;<br></code></pre></td></tr></table></figure></li><li><p><em>将这些方法绑定到父组件属性中作为子组件局部方法，以供子组件调用，修改订单与删除相同，达到以下效果，要在修改时添加下拉列表修改事件，同样执行clickHandler函数，并且将数据通过接口传到后端</em>*<br><img src="https://img-blog.csdnimg.cn/20200908115816463.gif"></p></li><li><p><strong>以上就是新增的订单管理前端部分所有内容</strong></p></li></ul><p><strong>下一期将开始商城的前端板块介绍，后期将结合App和uniapp打包及使用</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（十）</title>
    <link href="/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%EF%BC%89/"/>
    <url>/2020/10/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%8D%81%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（九）：</strong><br><a href="https://blog.csdn.net/time_____/article/details/105465499">https://blog.csdn.net/time_____/article/details/105465499</a><br><strong>项目源码（持续更新）：</strong><strong><a href="https://gitee.com/DieHunter/myCode/tree/master/shopping">https://gitee.com/DieHunter/myCode/tree/master/shopping</a><br>拖更时间较长，公司这几个月项目高峰期，请见谅</strong></p><p><strong>这篇文章主要讲述后端管理系统新增的订单模块的部分内容（前端在之前的计划下稍稍改动，引入了订单的功能，但不包含支付功能），由于与用户管理和商品管理稍有不同，所以单独拎出来介绍一下</strong></p><h3 id="前端效果："><a href="#前端效果：" class="headerlink" title="前端效果："></a>前端效果：</h3><p><img src="https://img-blog.csdnimg.cn/20200907103806881.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200907103836504.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200907104145800.gif"></p><p><strong>对于订单模块，主要功能有订单列表显示，订单状态修改（不涉及订单状态外其他数据修改），删除订单，新增订单（新增订单方面只做了简单的通过商品名索引来添加，考虑到管理系统的订单新增不是主要的功能，几乎用不上，所以没有细化功能），这篇文章主要介绍后端订单管理实现，接口对接。</strong></p><h3 id="服务端："><a href="#服务端：" class="headerlink" title="服务端："></a>服务端：</h3><ul><li><p><strong>首先我们需要在服务端配置一下数据库表结构，主要包含以下几个字段</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Order: &#123;<br>  <span class="hljs-attr">modelName</span>: <span class="hljs-string">&quot;orders&quot;</span>,<br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">orderId</span>: &#123;<br>      <span class="hljs-comment">// 订单号</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>      <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">username</span>: &#123;<br>      <span class="hljs-comment">//用户名</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>      <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">phoneNum</span>: &#123;<br>      <span class="hljs-comment">//手机号</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>      <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">address</span>: &#123;<br>      <span class="hljs-comment">//具体地址</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>      <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">orderState</span>: &#123;<br>      <span class="hljs-comment">//订单状态</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>      <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">orderPrice</span>: &#123;<br>      <span class="hljs-comment">// 订单总价</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>      <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">shopList</span>: &#123;<br>      <span class="hljs-comment">//商品列表</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-built_in">Array</span>,<br>      <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">orderTime</span>: &#123;<br>      <span class="hljs-comment">//订单创建时间</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>      <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>  &#125;,<br>&#125;,<br></code></pre></td></tr></table></figure></li><li><p><strong>使用npm start启动server</strong></p></li><li><p><strong>然后在src目录下controller目录中新建order文件夹，用于订单接口，逻辑的实现，mod文件和之前一样，新建order表</strong><br><img src="https://img-blog.csdnimg.cn/20200907105255723.png"><img src="https://img-blog.csdnimg.cn/20200907105318153.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p></li><li><p><strong>在order中引入依赖包，要注意的是，新增订单不仅仅是需要order一个表，还需要和user和shop表进行联动，因此我们需要调用其他接口逻辑中的方法，引入的包名如下</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> router = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>).Router();<span class="hljs-comment">//路由</span><br><span class="hljs-keyword">const</span> UserMod = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../user/mod&quot;</span>);<span class="hljs-comment">//user表联动</span><br><span class="hljs-keyword">const</span> ShopMod = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../shopList/mod&quot;</span>);<span class="hljs-comment">//shop表联动</span><br><span class="hljs-keyword">const</span> Mod = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./mod&quot;</span>);<span class="hljs-comment">//order表</span><br><span class="hljs-keyword">const</span> Util = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../../../utils/utils&quot;</span>);<span class="hljs-comment">//工具类</span><br><span class="hljs-keyword">const</span> Config = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../../../config/config&quot;</span>);<span class="hljs-comment">//配置文件</span><br><span class="hljs-keyword">const</span> Bussiness = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../../bussiness/bussiness&quot;</span>);<span class="hljs-comment">//接口逻辑</span><br><span class="hljs-keyword">const</span> &#123; addData, updateData, findData &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../../command/command&quot;</span>);<span class="hljs-comment">//数据库操作</span><br></code></pre></td></tr></table></figure></li><li><p><strong>首先是新增订单接口，这个接口也是需要注意的和坑最多的地方，以下是检测用户，用户地址，商品是否存在</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> userFindRes = <span class="hljs-keyword">await</span> Bussiness.hasUser(req, res, UserMod);<span class="hljs-comment">//检测用户及地址是否存在</span><br>  <span class="hljs-keyword">if</span> (!userFindRes) &#123;<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (!userFindRes[<span class="hljs-number">0</span>].alladdress || !userFindRes[<span class="hljs-number">0</span>].address) &#123;<br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: -<span class="hljs-number">1</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;添加失败，请完善收货地址&quot;</span>,<br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  <span class="hljs-keyword">let</span> shopFindRes = <span class="hljs-keyword">await</span> findData(ShopMod, &#123;<span class="hljs-comment">//检测商品是否存在</span><br>    <span class="hljs-attr">shopName</span>: &#123;<br>      <span class="hljs-attr">$in</span>: res._data.shopList.map(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> item.shopName;<br>      &#125;),<br>    &#125;,<br>  &#125;);<br>  <span class="hljs-keyword">if</span> (<br>    !shopFindRes ||<br>    !shopFindRes.length ||<br>    shopFindRes.length != res._data.shopList.length<br>  ) &#123;<br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: -<span class="hljs-number">2</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;有商品不存在&quot;</span>,<br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br></code></pre></td></tr></table></figure><p><strong>下一步，将取出数据库信息（注意：数据库信息是只读，只能用数据库命令修改，所以不能用常规的堆内存存取需要用一个简单的堆变量复制）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">deepCopy</span>(<span class="hljs-params">org</span>)</span> &#123;<br>    <span class="hljs-comment">//简单的对象复制</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(org));<br>  &#125;<br></code></pre></td></tr></table></figure><p><strong>使用拷贝函数，将数据库信息取出并进行后续修改</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> _shopFindRes = Util.deepCopy(shopFindRes); <span class="hljs-comment">//解决数据库对象只读属性</span><br></code></pre></td></tr></table></figure><p><strong>在返回前端之前，计算出总价和订单添加时间</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> _orderPrice;<span class="hljs-comment">//初始化商品总价</span><br>  <span class="hljs-keyword">let</span> _shopFindRes = Util.deepCopy(shopFindRes); <span class="hljs-comment">//解决数据库对象只读属性</span><br>  _shopFindRes.forEach(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> &#123;<span class="hljs-comment">//合计总费用</span><br>    <span class="hljs-keyword">if</span> (index == <span class="hljs-number">0</span>) &#123;<br>      _orderPrice = <span class="hljs-number">0</span>;<br>    &#125;<br>    _shopFindRes[index].shopCount = res._data.shopList[index].shopCount;<br>    _orderPrice +=<br>      _shopFindRes[index].shopCount * _shopFindRes[index].shopPrice;<br>  &#125;);<br><br>  res._data = &#123;<br>    ...res._data,<br>    <span class="hljs-attr">username</span>: userFindRes[<span class="hljs-number">0</span>].username,<br>    <span class="hljs-attr">phoneNum</span>: userFindRes[<span class="hljs-number">0</span>].phoneNum,<br>    <span class="hljs-attr">address</span>: userFindRes[<span class="hljs-number">0</span>].alladdress.join(<span class="hljs-string">&quot;&quot;</span>) + userFindRes[<span class="hljs-number">0</span>].address,<br>    <span class="hljs-attr">orderId</span>: Util.createOrderNo(),<br>    <span class="hljs-attr">orderTime</span>: Util.joinDate(),<br>    <span class="hljs-attr">shopList</span>: _shopFindRes,<br>    <span class="hljs-attr">orderPrice</span>: _orderPrice,<br>  &#125;;<br>  <span class="hljs-keyword">let</span> addRes = <span class="hljs-keyword">await</span> addData(Mod, res._data);<br>  <span class="hljs-keyword">if</span> (!addRes || !addRes.length) &#123;<br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;添加失败&quot;</span>,<br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  res.send(&#123;<br>    <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;添加成功&quot;</span>,<br>    <span class="hljs-attr">orderId</span>: res._data.orderId,<br>  &#125;);<br></code></pre></td></tr></table></figure></li><li><p><strong>与订单查询，删除，修改相比新增订单是个逻辑不同的功能，代码能复用的地方较少，其余三个功能均可仿照商品和用户接口写法实现</strong></p></li><li><p><strong>获取订单列表</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.get(Config.ServerApi.orderList, Util.checkToken, <span class="hljs-keyword">async</span> (req, res) =&gt; &#123;<br>  Bussiness.findInfo(<br>    req,<br>    res,<br>    Mod,<br>    &#123;<br>      <span class="hljs-attr">orderTime</span>: res._data.sort,<span class="hljs-comment">//时间排序</span><br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">orderId</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(res._data.orderId, <span class="hljs-string">&quot;i&quot;</span>),<span class="hljs-comment">//orderId（订单号）模糊过滤</span><br>      <span class="hljs-attr">username</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(res._data.keyWord, <span class="hljs-string">&quot;i&quot;</span>),<span class="hljs-comment">//订单用户名模糊过滤</span><br>      <span class="hljs-attr">orderState</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(res._data.orderState, <span class="hljs-string">&quot;i&quot;</span>),<span class="hljs-comment">//订单状态模糊过滤</span><br>    &#125;<br>  );<br>&#125;);<br></code></pre></td></tr></table></figure></li><li><p>  <strong>删除订单</strong></p></li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.get(Config.ServerApi.delOrder, Util.checkToken, <span class="hljs-keyword">async</span> (req, res) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (!Bussiness.isAdmin(res)) &#123;<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  Bussiness.delInfo(req, res, Mod);<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li>  <strong>修改订单状态</strong></li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.post(Config.ServerApi.updateOrder, Util.checkToken, <span class="hljs-keyword">async</span> (req, res) =&gt; &#123;<br>  <span class="hljs-keyword">let</span> updateRes = <span class="hljs-keyword">await</span> updateData(Mod, res._data._id, res._data);<br>  <span class="hljs-keyword">if</span> (updateRes) &#123;<br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;修改成功&quot;</span>,<br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  res.send(&#123;<br>    <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;修改失败&quot;</span>,<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><p>  <strong>以上就是订单管理服务端接口和逻辑部分</strong></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p><strong>编写面向对象代码与实现其功能时，尽量减少函数之间的耦合度（函数与函数之间的联系），使其复用性增强，大大节省开发效率</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>搭建一个线上版远程视频聊天</title>
    <link href="/2020/08/17/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%BA%BF%E4%B8%8A%E7%89%88%E8%BF%9C%E7%A8%8B%E8%A7%86%E9%A2%91%E8%81%8A%E5%A4%A9/"/>
    <url>/2020/08/17/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%BA%BF%E4%B8%8A%E7%89%88%E8%BF%9C%E7%A8%8B%E8%A7%86%E9%A2%91%E8%81%8A%E5%A4%A9/</url>
    
    <content type="html"><![CDATA[<p><strong>目录</strong></p><p><a href="#%E5%89%8D%E8%A8%80">前言</a></p><p><a href="#%E6%90%AD%E5%BB%BA%E5%89%8D%E7%AB%AFhttps%E8%AE%BF%E9%97%AE%EF%BC%9A">搭建前端https访问：</a></p><p><a href="#%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AFhttps%E8%AF%B7%E6%B1%82%EF%BC%9A">配置后端https请求：</a></p><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>在<a href="https://blog.csdn.net/time_____/article/details/104801205">另一篇博客</a>中已经实现了远程视频聊天，然而这种方式只能运行在本地或者https服务下，因为navigator.mediaDevices.getUserMedia需要运行在安全模式下，所以这篇文章将对视频聊天做一个改进，达到真正的远程聊天功能<br>之前的案例：<a href="https://blog.csdn.net/time_____/article/details/104801205">使用JS+socket.io+WebRTC+nodejs+express搭建一个简易版远程视频聊天</a></strong></p><h2 id="搭建前端https访问："><a href="#搭建前端https访问：" class="headerlink" title="搭建前端https访问："></a><strong>搭建前端https访问：</strong></h2><p>搭建https的第一步得有一个服务器，相关的配置说明在我另一篇文章有提到<br><strong><a href="https://blog.csdn.net/time_____/article/details/104439713">案例：本地项目上线流程</a></strong><br>然后，购买域名并备案，第一次要久一点，大概20天左右<br>在域名界面进行域名解析和ssl证书下载（后续配置https）<br><img src="https://img-blog.csdnimg.cn/20200817114950588.png"><br>将域名绑定服务器外网ip</p><p><img src="https://img-blog.csdnimg.cn/20200817115151901.png"><br>域名界面点进管理，购买免费证书并下载，这里用的是Nginx<br><img src="https://img-blog.csdnimg.cn/20200817115741565.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200817115604189.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200817115910986.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>把下载的key和pem放在Nginx根目录下，部署视频聊天前端文件夹Video至根目录，打开conf文件夹下的nginx.conf文件并编辑<br><img src="https://img-blog.csdnimg.cn/20200817152152668.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200817145531110.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br>在nginx.conf文件中添加代码，代理Video文件夹下的video.html文件至12345端口</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># Video</span><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">12345</span>;<br>        <span class="hljs-attribute">server_name</span>  localhost;<br>        <span class="hljs-attribute">location</span> / &#123;<br>            <span class="hljs-attribute">root</span>   Video;<br>            <span class="hljs-attribute">index</span>  video.html;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>在nginx.conf文件中添加以下代码配置https证书，将上面的代理网站部署https证书</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># HTTPS server</span><br>   <span class="hljs-comment">#</span><br>   <span class="hljs-section">server</span> &#123;<br>      <span class="hljs-attribute">listen</span>       <span class="hljs-number">443</span>  ssl;<br>      <span class="hljs-attribute">server_name</span>  localhost;<br><br>      <span class="hljs-attribute">ssl_certificate</span>      ../cert.pem;<br>      <span class="hljs-attribute">ssl_certificate_key</span>  ../cert.key;<br><br>      <span class="hljs-attribute">ssl_session_cache</span>    shared:SSL:<span class="hljs-number">1m</span>;<br>      <span class="hljs-attribute">ssl_session_timeout</span>  <span class="hljs-number">5m</span>;<br><br>       <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;<br>       <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>;<br>       <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br><br>       <span class="hljs-attribute">location</span>  /Video/&#123;<br>          <span class="hljs-attribute">proxy_pass</span>   http://127.0.0.1:12345/;<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure><p><strong>最后通过访问<a href="">https://域名/Video/</a>的方式打开前端页面</strong></p><h2 id="配置后端https请求："><a href="#配置后端https请求：" class="headerlink" title="配置后端https请求："></a><strong>配置后端https请求：</strong></h2><p>将之前下载的证书文件复制到server目录，或者其他目录，server能访问到即可</p><p><img src="https://img-blog.csdnimg.cn/20200817154313619.png"><br>打开server修改代码，之前我们的写法是</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>);<br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> server = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;http&quot;</span>).Server(app);<br><span class="hljs-keyword">const</span> io = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;socket.io&quot;</span>)(server);<br></code></pre></td></tr></table></figure><p>现在得做个小修改，其他代码不动</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>)<br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> options = &#123;<span class="hljs-comment">//读取证书文件</span><br>  <span class="hljs-attr">key</span>: fs.readFileSync(<span class="hljs-string">&#x27;cert.key&#x27;</span>),<br>  <span class="hljs-attr">cert</span>: fs.readFileSync(<span class="hljs-string">&#x27;cert.pem&#x27;</span>)<br>&#125;;<br><span class="hljs-keyword">const</span> server = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;https&#x27;</span>).createServer(options,app);<br><span class="hljs-keyword">const</span> io = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;socket.io&#x27;</span>)(server);<br></code></pre></td></tr></table></figure><p><strong>后端修改成https的目的</strong>是因为前端部分放在https服务器上，而后端用http请求方式，浏览器会报http的请求错误<br><img src="https://img-blog.csdnimg.cn/20200817160942504.png"><img src="https://img-blog.csdnimg.cn/20200817160220448.png"></p><p><strong>然后把请求地址改为https即可访问</strong></p><p><strong>最后我们看看效果<br>由于电脑上的摄像头无法被两个页面调用，所以我用手机和电脑进行远程视频<br>电脑端的录屏</strong><br><img src="https://img-blog.csdnimg.cn/20200817171142829.gif"><br><strong>手机端录屏</strong><br><img src="https://img-blog.csdnimg.cn/20200817171521268.gif"><br><strong>总结：由于视频聊天涉及隐私问题，自己试着研究一下还可以，所以就不放案例试用链接，<a href="https://gitee.com/DieHunter/myCode/tree/master/videoSteam">之前的视频聊天案例</a></strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（九）</title>
    <link href="/2020/04/14/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%B9%9D%EF%BC%89/"/>
    <url>/2020/04/14/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%B9%9D%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（八）：<a href="https://blog.csdn.net/time_____/article/details/105452765">https://blog.csdn.net/time_____/article/details/105452765</a></strong><br><strong>项目源码（持续更新）：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/shopping"><strong>https://gitee.com/DieHunter/myCode/tree/master/shopping</strong></a></p><p><strong>这篇文章将前后端管理功能完成，也就是将最后修改用户信息功能实现（由于商品管理与用户管理类似，所以不做描述），并讲述一下遇到的坑</strong></p><p><strong>修改用户数据后端其实就是根据用户id，将从前端传来的字段对应的值更新，如果头像有变化，则删除之前用户的头像，前端相对服务端反而更繁琐一些，当用户点击修改用户信息按钮后，将用户信息初始化到form表单中（头像同样需要加载），这里考虑到初始化用户信息的实现可以直接获取表格中的数据，可减少一次请求，但是有个小坑，当用户点击修改时，Drawer组件中的form表单初始化是异步的，需要两个解决操作：1.将Drawer中的子组件预加载（开启Drawer中的forceRender属性）。2.将form初始化操作放到form更新渲染完成之后（componentDidUpdate****），如果放在componentDidMount中，组件初始化只会进行第一次，下一步，直接开始整后端</strong></p><ul><li><strong>服务端在command中新增update方法</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 更新数据</span><br><span class="hljs-comment">  * @param &#123;object&#125; mod       数据库model</span><br><span class="hljs-comment">  * @param &#123;string&#125; _id       数据唯一标识</span><br><span class="hljs-comment">  * @param &#123;object&#125; data      更新字段及值</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">updateData</span>(<span class="hljs-params">mod, _id, data</span>)</span> &#123;<br>   <span class="hljs-comment">//改</span><br>   <span class="hljs-keyword">return</span> mod<br>     .updateOne(<br>       &#123;<br>         _id,<br>       &#125;,<br>       data<br>     )<br>     .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>       <span class="hljs-keyword">return</span> res;<br>     &#125;)<br>     .catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>       <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>     &#125;);<br> &#125;<br></code></pre></td></tr></table></figure><ul><li><strong>在user.js文件中添加接口用于更新用户信息</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.post(Config.ServerApi.updateUser, Util.checkToken, <span class="hljs-keyword">async</span> (req, res) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (!res._data.headPic.length) &#123;<span class="hljs-comment">//这里判断是否是修改头像，若是新增，则是上传相关的头像信息，是个object类型，length属性不存在</span><br>    <span class="hljs-keyword">let</span> findRes = <span class="hljs-keyword">await</span> findData(Mod, &#123;<br>      <span class="hljs-attr">_id</span>: res._data._id,<br>    &#125;);<br>    <span class="hljs-keyword">if</span> (findRes[<span class="hljs-number">0</span>].headPic != <span class="hljs-string">&quot;public/assets/img/default.gif&quot;</span>) &#123;<br>      Util.delPicFile(findRes[<span class="hljs-number">0</span>].headPic);<br>    &#125;<br>    res._data.headPic = Util.readPicFile(res._data.headPic || <span class="hljs-string">&quot;&quot;</span>) || <span class="hljs-string">&quot;&quot;</span>;<br>  &#125;<br>  res._data.password = Util.createBcrypt(res._data.password);<span class="hljs-comment">//密码盐加密</span><br>  <span class="hljs-keyword">let</span> updateRes = <span class="hljs-keyword">await</span> updateData(Mod, res._data._id, res._data);<br>  <span class="hljs-keyword">if</span> (updateRes) &#123;<br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;修改成功&quot;</span>,<br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  Util.delPicFile(res._data.headPic);<br>  res.send(&#123;<br>    <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;修改失败&quot;</span>,<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>之后我们看看前端功能实现</strong></p><p><strong>前端需要在之前实现的新增用户中做修改，达到相关目的</strong></p><ul><li>在upload.js组件中添加初始化显示图片功能，也就是渲染组件时给个src，并且把方法传递给父组件以供调用（放到componentDidMount中），在父组件通过组件属性为子组件设置this中的属性达到调用。当然也可以使用全局events传递参数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">this</span>.props.onUpdateRef(<span class="hljs-built_in">this</span>);<span class="hljs-comment">//放在子组件中，使父组件调用当前组件</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">onUpdateRef=&#123;<span class="hljs-function">(<span class="hljs-params">child</span>) =&gt;</span> &#123;<span class="hljs-comment">//放在父组件的子组件的属性里，通过this.updateChild调用子组件的this</span><br>    <span class="hljs-built_in">this</span>.updateChild = child;<br> &#125;&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200413094147831.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">updatePic</span>(<span class="hljs-params">url</span>)</span> &#123;<br>   <span class="hljs-keyword">if</span> (url &amp;&amp; url.length &gt; <span class="hljs-number">0</span>) &#123;<br>     <span class="hljs-built_in">this</span>.setState(&#123;<br>       <span class="hljs-attr">fileList</span>: [<br>         &#123;<br>           <span class="hljs-attr">uid</span>: <span class="hljs-string">&quot;-1&quot;</span>,<br>           <span class="hljs-attr">name</span>: url,<br>           <span class="hljs-attr">status</span>: <span class="hljs-string">&quot;done&quot;</span>,<br>           url,<br>         &#125;,<br>       ],<br>     &#125;);<br>   &#125;<br> &#125;<br></code></pre></td></tr></table></figure><ul><li>全部实现后，可以在自定义的drawer.js组件进行新增用户和修改用户的区分</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript">showDrawer = <span class="hljs-function">(<span class="hljs-params">record</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (record) &#123;<span class="hljs-comment">//传递了参数说明是更新信息，否则是新增用户</span><br>      <span class="hljs-built_in">this</span>.setState(&#123;<br>        <span class="hljs-attr">formType</span>: <span class="hljs-string">&quot;updata&quot;</span>,<br>        <span class="hljs-attr">visible</span>: <span class="hljs-literal">true</span>,<br>        record,<br>      &#125;);<br>      <span class="hljs-built_in">this</span>.updateChild.updatePic(FilePath + record.headPic);<span class="hljs-comment">//调用上传头像组件，显示图片</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-built_in">this</span>.setState(&#123;<br>        <span class="hljs-attr">formType</span>: <span class="hljs-string">&quot;add&quot;</span>,<br>        <span class="hljs-attr">visible</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">record</span>: &#123;<span class="hljs-comment">//新增用户的初始值</span><br>          <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;man&quot;</span>,<br>          <span class="hljs-attr">userType</span>: <span class="hljs-string">&quot;user&quot;</span>,<br>          <span class="hljs-attr">mailurl</span>: <span class="hljs-string">&quot;@qq.com&quot;</span>,<br>        &#125;,<br>      &#125;);<br>    &#125;<br>  &#125;;<br></code></pre></td></tr></table></figure><ul><li>在componentDidUpdata中添加更新form方法，将state中的record初始化至form中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">componentDidUpdate</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.formRef.current.setFieldsValue(<span class="hljs-built_in">this</span>.state.record);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>在Drawer隐藏方法中将表单初始化并清空state中的record</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">onClose = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">this</span>.formRef.current.resetFields();<br>    <span class="hljs-built_in">this</span>.setState(&#123;<br>      <span class="hljs-attr">visible</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-attr">record</span>: <span class="hljs-literal">null</span>,<br>    &#125;);<br> &#125;;<br></code></pre></td></tr></table></figure><p><strong>效果如下</strong></p><p><img src="https://img-blog.csdnimg.cn/20200413103310217.gif"></p><p>最后，我们试试将数据提交至后端</p><p><img src="https://img-blog.csdnimg.cn/20200413105151571.gif"></p><p><strong>总结：</strong></p><p><strong>到现在为止，项目中的用户管理前端+服务端功能已全部实现，商品管理的功能实现与用户同理，但是字段名不同，不做说明，下一篇文章直接开始搭建商城前端及后端功能</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（八）</title>
    <link href="/2020/04/13/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%85%AB%EF%BC%89/"/>
    <url>/2020/04/13/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%85%AB%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（七）：<a href="https://blog.csdn.net/time_____/article/details/105448383">https://blog.csdn.net/time_____/article/details/105448383</a></strong><br><strong>项目源码（持续更新）：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/shopping"><strong>https://gitee.com/DieHunter/myCode/tree/master/shopping</strong></a></p><p><strong>后端管理的界面与前端不同，在样式上可以没有前端精细，毕竟是给内部管理员看的，所以我们就不做的那么仔细了（其实还是因为我懒），这期主要讲讲前后端冻结，激活用户状态和删除用户功能</strong></p><ul><li><strong>首先在上篇已实现用户列表分页查找功能上，在表格配置的文件中添加两个按钮，冻结（激活）和删除用户</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;操作&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">230</span>,<br>        <span class="hljs-attr">fixed</span>: <span class="hljs-string">&quot;right&quot;</span>,<br>        <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">record</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">return</span> (<br>            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Popconfirm</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;是否删除？&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">onConfirm</span>=<span class="hljs-string">&#123;_this.clickHandler.bind(_this,</span> <span class="hljs-attr">record</span>, &quot;<span class="hljs-attr">delete</span>&quot;)&#125;</span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">okText</span>=<span class="hljs-string">&quot;是&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">cancelText</span>=<span class="hljs-string">&quot;否&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">disabled</span>=<span class="hljs-string">&#123;record.userType</span> == <span class="hljs-string">&quot;admin&quot;</span> ? <span class="hljs-attr">true</span> <span class="hljs-attr">:</span> <span class="hljs-attr">false</span>&#125;</span></span><br><span class="hljs-tag"><span class="xml">              &gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">disabled</span>=<span class="hljs-string">&#123;record.userType</span> == <span class="hljs-string">&quot;admin&quot;</span> ? <span class="hljs-attr">true</span> <span class="hljs-attr">:</span> <span class="hljs-attr">false</span>&#125;</span></span><br><span class="hljs-tag"><span class="xml">                &gt;</span></span><br><span class="xml">                  删除</span><br><span class="xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Popconfirm</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">disabled</span>=<span class="hljs-string">&#123;record.userType</span> == <span class="hljs-string">&quot;admin&quot;</span> ? <span class="hljs-attr">true</span> <span class="hljs-attr">:</span> <span class="hljs-attr">false</span>&#125;</span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">type</span>=<span class="hljs-string">&#123;record.isactive</span> ? &quot;<span class="hljs-attr">danger</span>&quot; <span class="hljs-attr">:</span> &quot;<span class="hljs-attr">primary</span>&quot;&#125;</span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;_this.clickHandler.bind(_this,</span> <span class="hljs-attr">record</span>, &quot;<span class="hljs-attr">allow</span>&quot;)&#125;</span></span><br><span class="hljs-tag"><span class="xml">              &gt;</span></span><br><span class="xml">                &#123;record.isactive ? &quot;禁止&quot; : &quot;允许&quot;&#125;</span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>          );<br>        &#125;,<br>      &#125;,<br></code></pre></td></tr></table></figure><ul><li>下一步，在ListTable组件上添加删除和冻结用户方法，由于删除是比较敏感操作，所以就不做批量删除了</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;ListTable<br>      tableType=<span class="hljs-string">&quot;user&quot;</span><br>      onTableRef=&#123;<span class="hljs-function">(<span class="hljs-params">child</span>) =&gt;</span> &#123;<br>        <span class="hljs-built_in">this</span>.tableChild = child;<br>      &#125;&#125;<br>      showDrawer=&#123;<span class="hljs-built_in">this</span>.showDrawer&#125;<br>      deleteUser=&#123;<span class="hljs-built_in">this</span>.deleteUser&#125;<br>      freezeUser=&#123;<span class="hljs-built_in">this</span>.freezeUser&#125;<br>      changeInfo=&#123;<span class="hljs-built_in">this</span>.changeInfo&#125;<br>      changePage=&#123;<span class="hljs-built_in">this</span>.changePage&#125;<br>&gt;&lt;/ListTable&gt;<br></code></pre></td></tr></table></figure><ul><li><strong>在table组件中添加clickHandler事件监听</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params">record, type</span>)</span> &#123;<br>    <span class="hljs-keyword">switch</span> (type) &#123;<br>      <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;change&quot;</span>: <span class="hljs-comment">//修改</span><br>        <span class="hljs-built_in">this</span>.props.changeInfo(record);<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-comment">//删除</span><br>        <span class="hljs-built_in">this</span>.props.deleteUser(record);<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;allow&quot;</span>: <span class="hljs-comment">//冻结</span><br>        <span class="hljs-built_in">this</span>.props.freezeUser(record);<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">default</span>:<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><ul><li><p><strong>在userList界面中进行两个功能的请求，通过用户_id查找用户并操作</strong>  </p></li><li><p><em>冻结，将用户状态设置为false（true）更新数据库并重新渲染：</em>*</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">freezeUser = <span class="hljs-function">(<span class="hljs-params">record</span>) =&gt;</span> &#123;<span class="hljs-comment">//record是用户在表格内的所有信息，主要获取数据库自动生成的_id就行</span><br>    <span class="hljs-keyword">let</span> data = &#123;<br>      <span class="hljs-attr">token</span>: <span class="hljs-built_in">this</span>.$utils.getStorage(StorageName.token),<br>      <span class="hljs-attr">_id</span>: record._id,<br>      <span class="hljs-attr">isactive</span>: !record.isactive,<br>    &#125;;<br>    <span class="hljs-built_in">this</span>.$axios<br>      .get(ServerApi.user.freezeUser, &#123;<br>        <span class="hljs-attr">params</span>: &#123; <span class="hljs-attr">crypto</span>: <span class="hljs-built_in">this</span>.$crypto.setCrypto(data) &#125;,<br>      &#125;)<br>      .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        message.success(res.msg);<br>        <span class="hljs-built_in">this</span>.getUserList();<span class="hljs-comment">//操作成功后刷新列表</span><br>      &#125;);<br>  &#125;;<br></code></pre></td></tr></table></figure></li><li><p><em>删除，将头像源文件删除，并删除用户信息，更新页面：</em>*</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript">deleteUser = <span class="hljs-function">(<span class="hljs-params">record</span>) =&gt;</span> &#123;<br>   <span class="hljs-keyword">let</span> data = &#123;<br>     <span class="hljs-attr">token</span>: <span class="hljs-built_in">this</span>.$utils.getStorage(StorageName.token),<br>     <span class="hljs-attr">_id</span>: record._id,<br>     <span class="hljs-attr">headPic</span>: record.headPic,<span class="hljs-comment">//上传用户头像地址减少服务端二次查找数据库</span><br>   &#125;;<br>   <span class="hljs-built_in">this</span>.$axios<br>     .get(ServerApi.user.delUser, &#123;<br>       <span class="hljs-attr">params</span>: &#123; <span class="hljs-attr">crypto</span>: <span class="hljs-built_in">this</span>.$crypto.setCrypto(data) &#125;,<br>     &#125;)<br>     .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>       message.success(res.msg);<br>       <span class="hljs-built_in">this</span>.getUserList();<br>     &#125;)<br>     .catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;&#125;);<br> &#125;;<br></code></pre></td></tr></table></figure></li></ul><p><strong>在服务端新增两个接口，分别做冻结用户和删除用户功能</strong></p><ul><li>冻结用户</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.get(Config.ServerApi.freezeUser, Util.checkToken, <span class="hljs-keyword">async</span> (req, res) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (res._data.userTokenType != <span class="hljs-string">&quot;admin&quot;</span>) &#123;<br>    <span class="hljs-comment">//非管理员</span><br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: -<span class="hljs-number">999</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;请用管理员账号登录&quot;</span>,<br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  <span class="hljs-keyword">let</span> freezeRes = <span class="hljs-keyword">await</span> updateData(Mod, res._data._id, &#123;<br>    <span class="hljs-attr">isactive</span>: res._data.isactive,<br>  &#125;);<br>  <span class="hljs-keyword">if</span> (freezeRes) &#123;<br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>      <span class="hljs-attr">msg</span>: res._data.isactive ? <span class="hljs-string">&quot;激活成功&quot;</span> : <span class="hljs-string">&quot;冻结成功&quot;</span>,<br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  res.send(&#123;<br>    <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">msg</span>: res._data.isactive ? <span class="hljs-string">&quot;激活失败&quot;</span> : <span class="hljs-string">&quot;冻结失败&quot;</span>,<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li>完成后，我们测试一下效果</li></ul><p><img src="https://img-blog.csdnimg.cn/20200411161724407.gif"></p><ul><li>删除用户</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.get(Config.ServerApi.delUser, Util.checkToken, <span class="hljs-keyword">async</span> (req, res) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (res._data.userTokenType != <span class="hljs-string">&quot;admin&quot;</span>) &#123;<br>    <span class="hljs-comment">//非管理员</span><br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: -<span class="hljs-number">999</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;请用管理员账号登录&quot;</span>,<br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (<br>    res._data.headPic &amp;&amp;<br>    res._data.headPic.length &gt; <span class="hljs-number">0</span> &amp;&amp;<br>    res._data.headPic != <span class="hljs-string">&quot;public/assets/img/default.gif&quot;</span><br>  ) &#123;<span class="hljs-comment">//判断是否有图片，或者使用了默认图片，默认图片不删</span><br>    Util.delPicFile(res._data.headPic);<br>  &#125;<br>  deleteRes = <span class="hljs-keyword">await</span> delData(Mod, res._data._id);<br>  <span class="hljs-keyword">if</span> (deleteRes) &#123;<br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;删除成功&quot;</span>,<br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  res.send(&#123;<br>    <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;删除失败&quot;</span>,<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li>最后，我们也试试删除功能</li></ul><p><img src="https://img-blog.csdnimg.cn/20200411162035977.gif"></p><p><strong>到此为止，项目的用户管理已经实现90%，剩余一个修改用户的实现留在下一篇，商品管理与用户管理功能实现类似，所以不做过多的说明</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（七）</title>
    <link href="/2020/04/13/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%B8%83%EF%BC%89/"/>
    <url>/2020/04/13/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%B8%83%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（六）：<a href="https://blog.csdn.net/time_____/article/details/105440818">https://blog.csdn.net/time_____/article/details/105440818</a></strong><br><strong>项目源码（持续更新）：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/shopping"><strong>https://gitee.com/DieHunter/myCode/tree/master/shopping</strong></a></p><p><strong>到现在为止，项目前后端功能已实现登录，token获取验证，上传头像，添加用户，这篇文章主要讲述实现前后端用户列表分页查找，模糊查询，用户列表渲染功能</strong></p><ul><li><strong>首先是分页查找，</strong>后端实现方式通过数据库查找表的长度，配合数据库函数<strong>skip(n)（跳过前n条数据），和limit(m)（向后查找m条数据），通过db.find().skip((page-1)*pageSize).limit(pageSize)（page代表第几页，从0开始，第一页则不需要跳过。pageSize表示分页后每页数据条数），</strong>所以我们在command.js中新建两个方法，用于查询表的长度和关键字查询并分页</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 查询分页</span><br><span class="hljs-comment">  * @param &#123;object&#125; mod       数据库model</span><br><span class="hljs-comment">  * @param &#123;number&#125; sort      排序顺序   负数倒序 正数顺序</span><br><span class="hljs-comment">  * @param &#123;number&#125; page      当前页数</span><br><span class="hljs-comment">  * @param &#123;number&#125; pageSize  分页大小</span><br><span class="hljs-comment">  * @param &#123;object&#125; pageSize  关键字模糊查询</span><br><span class="hljs-comment">  */</span><br> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">findByPage</span>(<span class="hljs-params">mod, sort, page, pageSize, keyWord</span>)</span> &#123;<br>   <span class="hljs-comment">//分页查</span><br>   <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> mod<br>     .find(keyWord)<br>     .sort(sort)<br>     .skip((page - <span class="hljs-number">1</span>) * pageSize)<br>     .limit(pageSize);<br> &#125;<br><span class="hljs-comment">/* 查询分页</span><br><span class="hljs-comment">  * @param &#123;object&#125; mod       数据库model</span><br><span class="hljs-comment">  * @param &#123;number&#125; pageSize  分页大小</span><br><span class="hljs-comment">  */</span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">getTotalPage</span>(<span class="hljs-params">mod, pageSize</span>)</span> &#123;<br>   <span class="hljs-keyword">let</span> allNum = <span class="hljs-keyword">await</span> mod.find().estimatedDocumentCount();<br>   <span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">totalPage</span>: <span class="hljs-built_in">parseInt</span>(allNum / pageSize) + <span class="hljs-number">1</span>, allNum &#125;;<br> &#125;<br></code></pre></td></tr></table></figure><ul><li><strong>在users.js中添加获取用户列表的接口，通过电子邮件或者用户名查找，分页</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.get(Config.ServerApi.userList, Util.checkToken, <span class="hljs-keyword">async</span> (req, res) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (res._data.userTokenType != <span class="hljs-string">&quot;admin&quot;</span>) &#123;<br>    <span class="hljs-comment">//非管理员</span><br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: -<span class="hljs-number">999</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;请用管理员账号登录&quot;</span>,<br>    &#125;);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  <span class="hljs-keyword">let</span> total = <span class="hljs-keyword">await</span> getTotalPage(Mod, res._data.pageSize);<br>  <span class="hljs-keyword">let</span> query = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(res._data.keyWord, <span class="hljs-string">&quot;i&quot;</span>); <span class="hljs-comment">//模糊查找正则条件</span><br>  res.send(&#123;<br>    <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">data</span>: &#123;<br>      <span class="hljs-attr">page</span>: res._data.page,<br>      <span class="hljs-attr">pageSize</span>: res._data.pageSize,<br>      <span class="hljs-attr">totalPage</span>: total.totalPage,<br>      <span class="hljs-attr">allNum</span>: total.allNum,<br>      <span class="hljs-attr">list</span>: <span class="hljs-keyword">await</span> findByPage(<br>        Mod,<br>        &#123;<br>          <span class="hljs-attr">time</span>: res._data.sort,<br>        &#125;,<br>        res._data.page,<br>        res._data.pageSize,<br>        res._data.keyWord.length<br>          ? &#123;<br>              <span class="hljs-attr">$or</span>: [<br>                &#123;<br>                  <span class="hljs-attr">mailaddress</span>: query,<br>                &#125;,<br>                &#123;<br>                  <span class="hljs-attr">username</span>: query,<br>                &#125;,<br>              ],<br>            &#125;<br>          : &#123;&#125;<br>      ),<br>    &#125;,<br>    <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;查找成功&quot;</span>,<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>后端部分实现完成后，开始编写前端，需要用到表格组件，分页组件和input查找组件，这里可以将表格组件单独写出来，写成我们自己的组件，以供后期商品列表重复使用</strong></p><ul><li>先配置一下用户表格字段，封装到一个class里</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;<br>  Button,<br>  Popconfirm,<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;antd&quot;</span>;<br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;<br><br><span class="hljs-keyword">const</span> &#123; FilePath &#125; = config;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserTable</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">_this</span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> [<br>      &#123; <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>, <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;用户名&quot;</span>, <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;username&quot;</span>, <span class="hljs-attr">width</span>: <span class="hljs-number">200</span> &#125;,<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;邮箱&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;mailaddress&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">200</span>,<br>        <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">text, data</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;text + data.mailurl&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>        &#125;,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;密码&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;password&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">300</span>,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;头像&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;headPic&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">150</span>,<br>        <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">imgPath</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">return</span> (<br>            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">src</span>=<span class="hljs-string">&#123;FilePath</span> + <span class="hljs-attr">imgPath</span>&#125;</span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">width:</span> <span class="hljs-attr">60</span>, <span class="hljs-attr">margin:</span> &quot;<span class="hljs-attr">0</span> <span class="hljs-attr">auto</span>&quot; &#125;&#125;</span></span><br><span class="hljs-tag"><span class="xml">            /&gt;</span></span><br>          );<br>        &#125;,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;性别&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;sex&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">200</span>,<br>        <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">sex</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;sex == &quot;man&quot; ? &quot;男&quot; : &quot;女&quot;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>        &#125;,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;收货地址&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;alladdress&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">200</span>,<br>        <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">text, data, index</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;text.join(&quot;-&quot;) + data.address&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>        &#125;,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;个性签名&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;descript&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">200</span>,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;用户类型&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;userType&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">200</span>,<br>        <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">type</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;type == &quot;admin&quot; ? &quot;管理员&quot; : &quot;用户&quot;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>        &#125;,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">align</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;注册时间&quot;</span>,<br>        <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&quot;time&quot;</span>,<br>        <span class="hljs-attr">width</span>: <span class="hljs-number">200</span>,<br>      &#125;,<br>    ];<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>在表格渲染前判断一下表格类型，是显示用户还是商品，达到组件复用功能，将分页组件与pageconfig绑定，达到切换页面的效果</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;<br>  Table,<br>  Button,<br>  Card,<br>  Pagination,<br>  Input,<br>  Col,<br>  Row,<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;antd&quot;</span>;<br><span class="hljs-keyword">import</span> userTab <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./userTab&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; PlusOutlined &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@ant-design/icons&quot;</span>;<br><span class="hljs-keyword">const</span> &#123; Search &#125; = Input;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ListTable</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>&#123;<br>  state = &#123;<br>    <span class="hljs-attr">tableType</span>: <span class="hljs-built_in">this</span>.props.tableType,<br>    <span class="hljs-attr">pageConfig</span>: &#123;<br>      <span class="hljs-attr">totalPage</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">page</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">pageSize</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">allNum</span>: <span class="hljs-number">0</span>,<br>    &#125;,<br>    <span class="hljs-attr">columns</span>: [],<br>    <span class="hljs-attr">list</span>: [],<br>  &#125;;<br>  <span class="hljs-function"><span class="hljs-title">componentDidMount</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.state.tableType == <span class="hljs-string">&quot;user&quot;</span>) &#123;<br>      <span class="hljs-built_in">this</span>.setState(&#123;<br>        <span class="hljs-attr">columns</span>: <span class="hljs-keyword">new</span> userTab(<span class="hljs-built_in">this</span>)<br>      &#125;);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <br>    &#125;<br>    <span class="hljs-built_in">this</span>.props.onTableRef(<span class="hljs-built_in">this</span>);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Card</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;用户列表&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Row</span> <span class="hljs-attr">gutter</span>=<span class="hljs-string">&#123;16&#125;</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;12&#125;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.props.showDrawer&#125;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">PlusOutlined</span> /&gt;</span></span><br><span class="xml">              新增用户</span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;12&#125;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Search</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">float:</span> &quot;<span class="hljs-attr">right</span>&quot; &#125;&#125;</span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;输入用户名/邮箱&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">enterButton</span>=<span class="hljs-string">&quot;查找&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">allowClear</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">onSearch</span>=<span class="hljs-string">&#123;(val)</span> =&gt;</span> &#123;</span><br><span class="xml">                let &#123; pageConfig &#125; = this.state;</span><br><span class="xml">                pageConfig.keyWord = val;</span><br><span class="xml">                this.setState(&#123;</span><br><span class="xml">                  pageConfig,</span><br><span class="xml">                &#125;);</span><br><span class="xml">                this.props.changePage(pageConfig);</span><br><span class="xml">              &#125;&#125;</span><br><span class="xml">            /&gt;</span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Row</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Table</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">scroll</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">x:</span> <span class="hljs-attr">2000</span> &#125;&#125;</span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">rowKey</span>=<span class="hljs-string">&#123;(record)</span> =&gt;</span> record._id&#125;</span><br><span class="xml">          columns=&#123;this.state.columns&#125;</span><br><span class="xml">          dataSource=&#123;this.state.list&#125;</span><br><span class="xml">          pagination=&#123;false&#125;</span><br><span class="xml">        &gt;<span class="hljs-tag">&lt;/<span class="hljs-name">Table</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Pagination</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">marginTop:</span> <span class="hljs-attr">50</span> &#125;&#125;</span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">hideOnSinglePage</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">total</span>=<span class="hljs-string">&#123;this.state.pageConfig.allNum&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">current</span>=<span class="hljs-string">&#123;this.state.pageConfig.page&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">pageSize</span>=<span class="hljs-string">&#123;this.state.pageConfig.pageSize&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">showSizeChanger</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">showQuickJumper</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">showTotal</span>=<span class="hljs-string">&#123;(total)</span> =&gt;</span> `共 $&#123;total&#125; 条`&#125;</span><br><span class="xml">          onChange=&#123;this.changePage&#125;</span><br><span class="xml">          onShowSizeChange=&#123;this.changePage&#125;</span><br><span class="xml">        /&gt;</span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Card</span>&gt;</span></span><br>    );<br>  &#125;<br>  changePage = <span class="hljs-function">(<span class="hljs-params">page, pageSize</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> pageConfig = <span class="hljs-built_in">this</span>.state.pageConfig;<br>    pageConfig.page = page;<br>    pageConfig.pageSize = pageSize;<br>    <span class="hljs-built_in">this</span>.setState(&#123;<br>      pageConfig,<br>    &#125;);<br>    <span class="hljs-built_in">this</span>.props.changePage(pageConfig);<br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>最后在userlist中调用，与表格中的page达到一个数据双向绑定效果</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> ListTable <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../../components/table/table&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;<br>  message,<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;antd&quot;</span>;<br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../../config/config&quot;</span>;<br><span class="hljs-keyword">const</span> &#123; ServerApi, StorageName &#125; = config;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserList</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>&#123;<br>  state = &#123;<br>    <span class="hljs-attr">userType</span>: <span class="hljs-string">&quot;adduser&quot;</span>,<br>    <span class="hljs-attr">pageConfig</span>: &#123;<br>      <span class="hljs-attr">token</span>: <span class="hljs-built_in">this</span>.$utils.getStorage(StorageName.token),<br>      <span class="hljs-attr">keyWord</span>: <span class="hljs-string">&quot;&quot;</span>,<br>      <span class="hljs-attr">page</span>: <span class="hljs-number">1</span>,<br>      <span class="hljs-attr">pageSize</span>: <span class="hljs-number">2</span>,<br>      <span class="hljs-attr">totalPage</span>: <span class="hljs-number">1</span>,<br>      <span class="hljs-attr">sort</span>: <span class="hljs-number">1</span>,<br>    &#125;,<br>  &#125;;<br>  <span class="hljs-function"><span class="hljs-title">componentDidMount</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.getUserList();<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">ListTable</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">tableType</span>=<span class="hljs-string">&quot;user&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">onTableRef</span>=<span class="hljs-string">&#123;(child)</span> =&gt;</span> &#123;</span><br><span class="xml">            this.tableChild = child;</span><br><span class="xml">          &#125;&#125;</span><br><span class="xml">          showDrawer=&#123;this.showDrawer&#125;</span><br><span class="xml">          changePage=&#123;this.changePage&#125;</span><br><span class="xml">        &gt;<span class="hljs-tag">&lt;/<span class="hljs-name">ListTable</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">ListDrower</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">getUserList</span>=<span class="hljs-string">&#123;this.getUserList&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">userType</span>=<span class="hljs-string">&#123;this.state.userType&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">onDrowerRef</span>=<span class="hljs-string">&#123;(child)</span> =&gt;</span> &#123;</span><br><span class="xml">            this.drawerChild = child;</span><br><span class="xml">          &#125;&#125;</span><br><span class="xml">        &gt;<span class="hljs-tag">&lt;/<span class="hljs-name">ListDrower</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    );<br>  &#125;<br>  showDrawer = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">this</span>.drawerChild.showDrawer();<br>  &#125;;<br>  changePage = <span class="hljs-function">(<span class="hljs-params">pageConfig</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">this</span>.setState(&#123; pageConfig &#125;);<br>    <span class="hljs-built_in">this</span>.getUserList();<br>  &#125;;<br><br>  getUserList = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> data = &#123; ...this.state.pageConfig &#125;;<br>    <span class="hljs-built_in">this</span>.$axios<br>      .get(ServerApi.user.userList, &#123;<br>        <span class="hljs-attr">params</span>: &#123; <span class="hljs-attr">crypto</span>: <span class="hljs-built_in">this</span>.$crypto.setCrypto(data) &#125;,<br>      &#125;)<br>      .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> &#123; list, totalPage, allNum &#125; = res.data;<br>        <span class="hljs-keyword">let</span> &#123; pageConfig &#125; = <span class="hljs-built_in">this</span>.state;<br>        pageConfig.allNum = allNum;<br>        pageConfig.totalPage = totalPage;<br>        <span class="hljs-built_in">this</span>.tableChild.setState(&#123; pageConfig, list &#125;);<br>      &#125;)<br>      .catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;&#125;);<br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>全部完成后，测试一下</strong></li></ul><p><img src="https://img-blog.csdnimg.cn/20200411144655868.gif"></p><p><strong>总结</strong></p><p>在组件化开发的前端代码中，组件复用可以使代码可维护性提升，通过修改state或者初始状态值对相对应的组件进行使用，大大提升代码效率</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（六）</title>
    <link href="/2020/04/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%85%AD%EF%BC%89/"/>
    <url>/2020/04/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%85%AD%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（五）：<a href="https://blog.csdn.net/time_____/article/details/105437534">https://blog.csdn.net/time_____/article/details/105437534</a></strong><br><strong>项目源码（持续更新）：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/shopping"><strong>https://gitee.com/DieHunter/myCode/tree/master/shopping</strong></a></p><p>在<a href="https://blog.csdn.net/time_____/article/details/105414410">第四篇文章</a>中实现了服务端的文件上传以及添加用户的后端功能，并进行了测试，这篇文章主要实现前端上传头像和添加用户的功能</p><p><strong>首先我们引入antd中的文件上传组件，并将其封装到我们的组件中</strong></p><ul><li>我们限制用户只能上传一张图片，<strong>其中上传组件中的action表示上传的路径，也就是我们在第四篇中的测试上传文件地址，name是文件标识名，data是传的参数，这里我们是用的token</strong></li></ul><p><img src="https://img-blog.csdnimg.cn/20200409204528165.gif"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; Upload,  message &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;antd&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; PlusOutlined &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@ant-design/icons&quot;</span>;<br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;<br><span class="hljs-keyword">let</span> &#123;<br>  UploadName,<br>  Agreement,<br>  BaseUrl,<br>  ServerPort,<br>  Path,<br>  UploadKey,<br>  StorageName,<br>&#125; = config;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UpdataPic</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>&#123;<br>  state = &#123;<br>    <span class="hljs-attr">fileList</span>: [],<br>  &#125;;<br>  <br>  <br>  handleChange = <span class="hljs-function">(<span class="hljs-params">&#123; fileList, file &#125;</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">this</span>.setState(&#123; fileList &#125;);<br>    <span class="hljs-keyword">if</span> (file[<span class="hljs-string">&quot;response&quot;</span>] &amp;&amp; file.status == <span class="hljs-string">&quot;done&quot;</span>) &#123;<br>      <span class="hljs-keyword">let</span> res = file[<span class="hljs-string">&quot;response&quot;</span>];<br>      message.success(res.msg);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (file[<span class="hljs-string">&quot;status&quot;</span>] == <span class="hljs-string">&quot;removed&quot;</span>) &#123;<br>      <br>    &#125;<br>  &#125;;<br>  <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">const</span> &#123; fileList &#125; = <span class="hljs-built_in">this</span>.state;<br>    <span class="hljs-keyword">const</span> uploadButton = (<br>      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">PlusOutlined</span> /&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;ant-upload-text&quot;</span>&gt;</span>上传头像<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    );<br>    <span class="hljs-keyword">return</span> (<br>      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;clearfix&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Upload</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">action</span>=<span class="hljs-string">&#123;Agreement</span> + <span class="hljs-attr">BaseUrl</span> + <span class="hljs-attr">ServerPort</span> + <span class="hljs-attr">Path</span> + <span class="hljs-attr">UploadName.headPic</span>&#125;</span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">name</span>=<span class="hljs-string">&#123;UploadKey.headKey&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">listType</span>=<span class="hljs-string">&quot;picture-card&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">fileList</span>=<span class="hljs-string">&#123;fileList&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">onChange</span>=<span class="hljs-string">&#123;this.handleChange&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">data</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">token:</span> <span class="hljs-attr">this.</span>$<span class="hljs-attr">utils.getStorage</span>(<span class="hljs-attr">StorageName.token</span>) &#125;&#125;</span></span><br><span class="hljs-tag"><span class="xml">        &gt;</span></span><br><span class="xml">          &#123;fileList.length &gt;= 1 ? null : uploadButton&#125;</span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Upload</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    );<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li><strong>然后我们在某个页面引入该组件试试效果</strong></li></ul><p><img src="https://img-blog.csdnimg.cn/20200410211212265.gif"></p><p><strong>上传功能实现后，我们就可以开始实现添加用户了</strong></p><ul><li>新增用户，我打算放到右边的抽屉组件中，也就是Drawer组件，将form表单嵌入至抽屉中（<strong>修改用户和新增用户有着类似之处，我们做修改用户信息直接在新增用户Drawer中赋予form初始值即可</strong>）</li></ul><p><img src="https://img-blog.csdnimg.cn/20200410211820298.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><ul><li><strong>有几个注意点</strong>，1.antd的form需要使用React.createRef()将组件加载。2.表单数据赋予初始值时，需要调表单的this.formRef.current.setFieldsValue（）方法，<strong>然而这里有个坑，</strong>当Drawer组件显示时，form组件还未载入，这时如果直接赋值，就会因异步导致赋值不成功，解决方法（官方给的处理方式是用redux全局管理，我这里是用生命周期函数解决的）：<strong>首先在Drawer组件中启用预加载功能（forceRender，预渲染 Drawer 内元素<strong><strong>），然后在生命周期（componentDidUpdate</strong></strong>）中获取state中的值，调用this.formRef.current.setFieldsValue（）即可（修改用户信息与此相同）</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> Mail <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/mail&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;<br>  Drawer,<br>  Form,<br>  Button,<br>  Col,<br>  Row,<br>  Input,<br>  Select,<br>  Radio,<br>  Cascader,<br>  message,<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;antd&quot;</span>;<br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;<br><span class="hljs-keyword">import</span> City <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/city&quot;</span>;<br><span class="hljs-keyword">import</span> UpdataPic <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../updata/updata&quot;</span>;<br><span class="hljs-keyword">const</span> &#123; ServerApi, StorageName, FilePath &#125; = config;<br><span class="hljs-keyword">const</span> &#123; Option &#125; = Select;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ListDrower</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>&#123;<br>  formRef = React.createRef();<br>  state = &#123;<br>    <span class="hljs-attr">visible</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-attr">record</span>: &#123;&#125;,<br>  &#125;;<br>  <span class="hljs-function"><span class="hljs-title">componentDidMount</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.props.onDrowerRef(<span class="hljs-built_in">this</span>);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">componentDidUpdate</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.formRef.current.setFieldsValue(<span class="hljs-built_in">this</span>.state.record);<br>  &#125;<br><br>  showDrawer = <span class="hljs-function">() =&gt;</span> &#123;<span class="hljs-comment">//显示Drawer</span><br>      <span class="hljs-built_in">this</span>.setState(&#123;<br>        <span class="hljs-attr">formType</span>: <span class="hljs-string">&quot;add&quot;</span>,<br>        <span class="hljs-attr">visible</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">record</span>: &#123;<br>          <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;man&quot;</span>,<br>          <span class="hljs-attr">userType</span>: <span class="hljs-string">&quot;user&quot;</span>,<br>          <span class="hljs-attr">mailurl</span>: <span class="hljs-string">&quot;@qq.com&quot;</span>,<br>        &#125;,<br>      &#125;);<br>    <span class="hljs-built_in">this</span>.setState(&#123;<br>      <span class="hljs-attr">visible</span>: <span class="hljs-literal">true</span>,<br>    &#125;);<br>  &#125;;<br>  onClose = <span class="hljs-function">() =&gt;</span> &#123;<span class="hljs-comment">//隐藏Drawer</span><br>    <span class="hljs-built_in">this</span>.formRef.current.resetFields();<br>    <span class="hljs-built_in">this</span>.setState(&#123;<br>      <span class="hljs-attr">visible</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-attr">record</span>: <span class="hljs-literal">null</span>,<br>    &#125;);<br>  &#125;;<br>  getPic = <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<span class="hljs-comment">//上传头像后刷新表单头像信息</span><br>    <span class="hljs-built_in">this</span>.formRef.current.setFieldsValue(&#123;<br>      <span class="hljs-attr">headPic</span>: data.headPath,<br>    &#125;);<br>  &#125;;<br>  delPic = <span class="hljs-function">() =&gt;</span> &#123;<span class="hljs-comment">//删除头像后同时删除表单图片信息</span><br>    <span class="hljs-built_in">this</span>.formRef.current.setFieldsValue(&#123;<br>      <span class="hljs-attr">headPic</span>: <span class="hljs-literal">null</span>,<br>    &#125;);<br>  &#125;;<br>  <span class="hljs-function"><span class="hljs-title">sendData</span>(<span class="hljs-params">val</span>)</span> &#123;<span class="hljs-comment">//提交用户信息</span><br>    val.token = <span class="hljs-built_in">this</span>.$utils.getStorage(StorageName.token);<br>    <span class="hljs-keyword">let</span> data = <span class="hljs-built_in">this</span>.$crypto.setCrypto(val);<br>    <span class="hljs-keyword">let</span> _t = <span class="hljs-built_in">this</span>;<br>    <span class="hljs-built_in">this</span>.$axios<br>      .post(ServerApi.user.addUser, &#123; <span class="hljs-attr">crypto</span>: data &#125;)<br>      .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            message.success(res.msg);<br>            _t.onClose();<br>            _t.props.getUserList();<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>            message.warning(res.msg);<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            <span class="hljs-comment">// message.warning(res.msg);</span><br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;)<br>      .catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        message.error(<span class="hljs-string">&quot;操作失败&quot;</span>);<br>      &#125;);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Drawer</span></span></span><br><span class="hljs-tag"><span class="xml">        <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;新增用户&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">        <span class="hljs-attr">width</span>=<span class="hljs-string">&#123;720&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">        <span class="hljs-attr">onClose</span>=<span class="hljs-string">&#123;this.onClose&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">        <span class="hljs-attr">visible</span>=<span class="hljs-string">&#123;this.state.visible&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">        <span class="hljs-attr">forceRender</span> //加上预加载，防止表单异步生成，导致<span class="hljs-attr">this.formRef.current</span>为空</span></span><br><span class="hljs-tag"><span class="xml">        <span class="hljs-attr">bodyStyle</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">paddingBottom:</span> <span class="hljs-attr">80</span> &#125;&#125;</span></span><br><span class="hljs-tag"><span class="xml">        <span class="hljs-attr">footer</span>=<span class="hljs-string">&#123;</span></span></span><br><span class="hljs-tag"><span class="xml">          &lt;<span class="hljs-attr">div</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">textAlign:</span> &quot;<span class="hljs-attr">right</span>&quot;,</span></span><br><span class="hljs-tag"><span class="xml">            &#125;&#125;</span></span><br><span class="hljs-tag"><span class="xml">          &gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.onClose&#125;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">marginRight:</span> <span class="hljs-attr">20</span> &#125;&#125;&gt;</span></span><br><span class="xml">              取消</span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">        &#125;</span><br><span class="xml">      &gt;</span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Form</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;vertical&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">hideRequiredMark</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">ref</span>=<span class="hljs-string">&#123;this.formRef&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">onFinish</span>=<span class="hljs-string">&#123;this.sendData.bind(this)&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">        &gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Row</span> <span class="hljs-attr">gutter</span>=<span class="hljs-string">&#123;16&#125;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;10&#125;</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;headPic&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;头像&quot;</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">UpdataPic</span></span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">onUpdateRef</span>=<span class="hljs-string">&#123;(child)</span> =&gt;</span> &#123;</span><br><span class="xml">                    this.updateChild = child;</span><br><span class="xml">                  &#125;&#125;</span><br><span class="xml">                  picTarget=&#123;this.getPic&#125;</span><br><span class="xml">                  picDelete=&#123;this.delPic&#125;</span><br><span class="xml">                &gt;<span class="hljs-tag">&lt;/<span class="hljs-name">UpdataPic</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;10&#125;</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;userType&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;用户类型&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &quot;请选择用户类型&quot; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="xml">              &gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Radio.Group</span> <span class="hljs-attr">buttonStyle</span>=<span class="hljs-string">&quot;solid&quot;</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;<span class="hljs-name">Radio.Button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;admin&quot;</span>&gt;</span>管理员<span class="hljs-tag">&lt;/<span class="hljs-name">Radio.Button</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;<span class="hljs-name">Radio.Button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;</span>用户<span class="hljs-tag">&lt;/<span class="hljs-name">Radio.Button</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">Radio.Group</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Row</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Row</span> <span class="hljs-attr">gutter</span>=<span class="hljs-string">&#123;16&#125;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;12&#125;</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;用户名&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &quot;请输入用户名&quot; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="xml">              &gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入用户名&quot;</span> <span class="hljs-attr">allowClear</span> /&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;12&#125;</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;密码&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &quot;请输入密码&quot; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="xml">              &gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Input.Password</span></span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入密码&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">allowClear</span></span></span><br><span class="hljs-tag"><span class="xml">                /&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Row</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Row</span> <span class="hljs-attr">gutter</span>=<span class="hljs-string">&#123;16&#125;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;5&#125;</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sex&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;性别&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &quot;请选择性别&quot; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="xml">              &gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Radio.Group</span> <span class="hljs-attr">buttonStyle</span>=<span class="hljs-string">&quot;solid&quot;</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;<span class="hljs-name">Radio.Button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;man&quot;</span>&gt;</span>男<span class="hljs-tag">&lt;/<span class="hljs-name">Radio.Button</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;<span class="hljs-name">Radio.Button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;woman&quot;</span>&gt;</span>女<span class="hljs-tag">&lt;/<span class="hljs-name">Radio.Button</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">Radio.Group</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;16&#125;</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;邮箱&quot;</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Input.Group</span> <span class="hljs-attr">compact</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="xml">                    <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mailaddress&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                    <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &quot;请输入正确邮箱&quot; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="xml">                  &gt;</span></span><br><span class="xml">                    <span class="hljs-tag">&lt;<span class="hljs-name">Input</span> <span class="hljs-attr">defaultValue</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">allowClear</span> /&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="xml">                    <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mailurl&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                    <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &quot;请选择邮箱类型&quot; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="xml">                  &gt;</span></span><br><span class="xml">                    <span class="hljs-tag">&lt;<span class="hljs-name">Select</span> <span class="hljs-attr">onChange</span>=<span class="hljs-string">&#123;this.changeMail&#125;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">width:</span> <span class="hljs-attr">150</span> &#125;&#125;&gt;</span></span><br><span class="xml">                      &#123;(() =&gt; &#123;</span><br><span class="xml">                        return Mail.address.map((item) =&gt; &#123;</span><br><span class="xml">                          return (</span><br><span class="xml">                            <span class="hljs-tag">&lt;<span class="hljs-name">Option</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;item.mail&#125;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#123;item.mail&#125;</span>&gt;</span></span><br><span class="xml">                              &#123;item.mail&#125;</span><br><span class="xml">                            <span class="hljs-tag">&lt;/<span class="hljs-name">Option</span>&gt;</span></span><br><span class="xml">                          );</span><br><span class="xml">                        &#125;);</span><br><span class="xml">                      &#125;)()&#125;</span><br><span class="xml">                    <span class="hljs-tag">&lt;/<span class="hljs-name">Select</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">Input.Group</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Row</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Row</span> <span class="hljs-attr">gutter</span>=<span class="hljs-string">&#123;20&#125;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;16&#125;</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;收货地址&quot;</span> <span class="hljs-attr">required</span>=<span class="hljs-string">&#123;false&#125;</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Input.Group</span> <span class="hljs-attr">compact</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="xml">                    <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;alladdress&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                    // <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &quot;请选择收货地址&quot; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="xml">                  &gt;</span></span><br><span class="xml">                    <span class="hljs-tag">&lt;<span class="hljs-name">Cascader</span> <span class="hljs-attr">options</span>=<span class="hljs-string">&#123;City&#125;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择收货地址&quot;</span> /&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="xml">                    <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;address&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                    // <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[&#123;</span> <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>, <span class="hljs-attr">message:</span> &quot;请填写收货地址&quot; &#125;]&#125;</span></span><br><span class="hljs-tag"><span class="xml">                  &gt;</span></span><br><span class="xml">                    <span class="hljs-tag">&lt;<span class="hljs-name">Input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入详细地址&quot;</span> <span class="hljs-attr">allowClear</span> /&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">Input.Group</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Row</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Row</span> <span class="hljs-attr">gutter</span>=<span class="hljs-string">&#123;16&#125;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&#123;24&#125;</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;descript&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;个性签名&quot;</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Input.TextArea</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&#123;4&#125;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;个性签名&quot;</span> /&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Col</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Row</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">htmlType</span>=<span class="hljs-string">&quot;submit&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;login-form-button&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">            &gt;</span></span><br><span class="xml">              提交</span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Form</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Drawer</span>&gt;</span></span><br>    );<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>最后，我们请求服务端试一试</strong></li></ul><p><img src="https://img-blog.csdnimg.cn/20200411103351463.gif"></p><p><strong>总结</strong></p><p>React是一个基于view显示层实现的dom优化框架，其对全局状态管理插件redux是将部分共享变量全局化，就相当于在原生window作用域中定义全局变量，虽然有一定的便捷，但是能不用的地方，最好是少用</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（五）</title>
    <link href="/2020/04/11/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <url>/2020/04/11/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%BA%94%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（四）：<a href="https://blog.csdn.net/time_____/article/details/105414410">https://blog.csdn.net/time_____/article/details/105414410</a></strong><br><strong>项目源码（持续更新）：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/shopping"><strong>https://gitee.com/DieHunter/myCode/tree/master/shopping</strong></a></p><p>前面几篇文章将项目配置以及部分功能实现，这篇主要把前端的路由跳转功能实现一下，话不多说，直接开始盘</p><p><strong>说到路由，菜单栏是必不可少的。</strong></p><ul><li>首先在心中构思一下数据管理的结构，管理系统一般是顶部菜单和侧边菜单，这里我们用侧边栏进行路由</li></ul><p><img src="https://img-blog.csdnimg.cn/20200410174350875.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><ul><li>来做基本的架子，在antd找到layout布局</li></ul><p><img src="https://img-blog.csdnimg.cn/20200410175423608.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><ul><li>将四个部分分别做成组件，放到component中，头和脚内容不多，直接跳过，开始实现侧边栏功能，直接复制一下官方的组件，在上头加个logo就好了，但是由于侧边栏需要实现路由功能，所以将其配置数据剥离出来，新建menuList.js文件，放在config文件夹中（当然，也可以添加图标，这里主要因为懒(◍´꒳`◍)，所以没加）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MenuList</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> leftMenu = [<br>    &#123;<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;商品管理&quot;</span>,<br>      <span class="hljs-attr">list</span>: [<br>        &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;查找商品&quot;</span>, <span class="hljs-attr">route</span>: <span class="hljs-string">&quot;/admin/findshop&quot;</span> &#125;,<br>        &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;新增商品&quot;</span>, <span class="hljs-attr">route</span>: <span class="hljs-string">&quot;/admin/addshop&quot;</span> &#125;,<br>        &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;修改商品&quot;</span>, <span class="hljs-attr">route</span>: <span class="hljs-string">&quot;/admin/updatashop&quot;</span> &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;用户管理&quot;</span>,<br>      <span class="hljs-attr">list</span>: [<br>        &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;用户列表&quot;</span>, <span class="hljs-attr">route</span>: <span class="hljs-string">&quot;/admin/userlist&quot;</span> &#125;,<br>      ]<br>    &#125;<br>  ];<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>在侧边栏组件中引入menuList并开始实现界面</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./left.less&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; Menu &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;antd&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; Link &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><span class="hljs-keyword">import</span> MenuData <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/menuList&quot;</span>;<br><br><span class="hljs-keyword">const</span> &#123; SubMenu &#125; = Menu;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Left</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">createMenu</span>(<span class="hljs-params">data</span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> data.map(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (item.list) &#123;<br>        <span class="hljs-comment">//递归生成子项</span><br>        <span class="hljs-keyword">return</span> (<br>          <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">SubMenu</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;item.name&#125;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#123;item.name&#125;</span>&gt;</span></span><br><span class="xml">            &#123;this.createMenu(item.list)&#125;</span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">SubMenu</span>&gt;</span></span><br>        );<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> (<br>          <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;item.name&#125;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#123;item.name&#125;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&#123;item.route&#125;</span>&gt;</span>&#123;item.name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">Link</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br>        );<br>      &#125;<br>    &#125;);<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;leftBox&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Menu</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">defaultSelectedKeys</span>=<span class="hljs-string">&#123;[</span>&quot;<span class="hljs-attr">1</span>&quot;]&#125;</span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">defaultOpenKeys</span>=<span class="hljs-string">&#123;[</span>&quot;<span class="hljs-attr">sub1</span>&quot;]&#125;</span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;inline&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">          <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;dark&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">        &gt;</span></span><br><span class="xml">          &#123;this.createMenu(MenuData.leftMenu)&#125;</span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Menu</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    );<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020041018065012.png"><img src="https://img-blog.csdnimg.cn/20200410180753422.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><ul><li>侧边栏实现后，我们需要配置一下路由，和侧边栏相似，新建routeList用于配置路由数据，将所有界面引入到routeList（需要新建所有的界面，在render中随便返回一个标识就好了）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> FindShop <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/shop/findItem/find&quot;</span>;<br><span class="hljs-keyword">import</span> AddShop <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/shop/addItem/add&quot;</span>;<br><span class="hljs-keyword">import</span> UpdataShop <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/shop/findItem/find&quot;</span>;<br><span class="hljs-keyword">import</span> UserList <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/user/userList/userList&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RouteList</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> leftMenu = [<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;查找商品&quot;</span>, <span class="hljs-attr">route</span>: <span class="hljs-string">&quot;/admin/findshop&quot;</span>, <span class="hljs-attr">comp</span>: FindShop &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;新增商品&quot;</span>, <span class="hljs-attr">route</span>: <span class="hljs-string">&quot;/admin/addshop&quot;</span>, <span class="hljs-attr">comp</span>: AddShop &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;修改商品&quot;</span>, <span class="hljs-attr">route</span>: <span class="hljs-string">&quot;/admin/updatashop&quot;</span>, <span class="hljs-attr">comp</span>: UpdataShop &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;用户列表&quot;</span>, <span class="hljs-attr">route</span>: <span class="hljs-string">&quot;/admin/userlist&quot;</span>, <span class="hljs-attr">comp</span>: UserList &#125;,<br>  ];<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>接着是构建路由</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;<br>  HashRouter <span class="hljs-keyword">as</span> Router,<br>  Route,<br>  Switch,<br>  Redirect<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><span class="hljs-keyword">import</span> RouteList <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../config/routeList&quot;</span>;<br><span class="hljs-keyword">import</span> Login <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/login/login&quot;</span>;<br><span class="hljs-keyword">import</span> Home <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/home/home&quot;</span>;<br><span class="hljs-keyword">import</span> NotFind <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../page/errpage/404&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RoutrModel</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Router</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Switch</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">exact</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/&quot;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Redirect</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;login&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Redirect</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Route</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/login&quot;</span> <span class="hljs-attr">component</span>=<span class="hljs-string">&#123;Login&#125;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Route</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">exact</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/admin&quot;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Redirect</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/admin/findshop&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Redirect</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Route</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Route</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/admin&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">render</span>=<span class="hljs-string">&#123;props</span> =&gt;</span> &#123;</span><br><span class="xml">              return (</span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Home</span> &#123;<span class="hljs-attr">...props</span>&#125;&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;<span class="hljs-name">Switch</span>&gt;</span></span><br><span class="xml">                    &#123;this.createRoute()&#125;</span><br><span class="xml">                    <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">component</span>=<span class="hljs-string">&#123;NotFind&#125;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Route</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;/<span class="hljs-name">Switch</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">Home</span>&gt;</span></span><br><span class="xml">              );</span><br><span class="xml">            &#125;&#125;</span><br><span class="xml">          &gt;<span class="hljs-tag">&lt;/<span class="hljs-name">Route</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">component</span>=<span class="hljs-string">&#123;NotFind&#125;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Route</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Switch</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Router</span>&gt;</span></span><br>    );<br>  &#125;<br>  createRoute = <span class="hljs-function"><span class="hljs-params">props</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> RouteList.leftMenu.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>      <span class="hljs-keyword">return</span> (<br>        <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&#123;item.route&#125;</span> <span class="hljs-attr">component</span>=<span class="hljs-string">&#123;item.comp&#125;</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;item.route&#125;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Route</span>&gt;</span></span><br>      );<br>    &#125;);<br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>在App.js中引入route组件，将之前固定的login界面替换成route组件，达到以下效果</li></ul><p><img src="https://img-blog.csdnimg.cn/20200410194431220.gif"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> Route <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./route/route&quot;</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">App</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;App&quot;</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Route</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Route</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> App;<br></code></pre></td></tr></table></figure><p><strong>总结</strong></p><p>组件化开发的核心是组件复用，同一个组件配置项和传递参数不同，其效果功能也不同</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（四）</title>
    <link href="/2020/04/11/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <url>/2020/04/11/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（三）：</strong><strong><a href="https://blog.csdn.net/time_____/article/details/105411636">https://blog.csdn.net/time_____/article/details/105411636</a></strong><br><strong>项目源码（持续更新）：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/shopping"><strong>https://gitee.com/DieHunter/myCode/tree/master/shopping</strong></a></p><p><strong>本篇文章延续上篇的登录界面搭建完成后，进行用户管理后端的编写，主要功能包括：</strong></p><p><strong>添加用户，上传头像</strong></p><p><strong>目录结构如下：</strong><br><img src="https://img-blog.csdnimg.cn/20200409170131809.png"></p><p><strong>首先实现上传头像功能</strong></p><p>上传文件流程：用户选择文件上传，服务端读取文件并生成唯一命名的缓存文件（二进制文件），将文件信息回传到前端，前端提交表单时将文件信息和用户信息一同上传至服务端，服务端读取对应文件，保存至public的img文件夹（此时生成的是图片文件），最后将图片路径存至数据库中</p><p><strong>具体实现</strong></p><ul><li><p>在controller文件夹下新建upload文件夹，在文件夹中新增upload.js用于上传头像，引入multer模块并进行文件暂存</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> router = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>).Router();<br><span class="hljs-keyword">const</span> Util = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../../../utils/utils&quot;</span>);<br><span class="hljs-keyword">var</span> multer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;multer&quot;</span>);<br><span class="hljs-keyword">var</span> upload = multer(&#123;<br>  <span class="hljs-attr">dest</span>: <span class="hljs-string">&quot;./public/temp&quot;</span>,<span class="hljs-comment">//缓存目录</span><br>&#125;);<br>router.post(<br>  <span class="hljs-string">&quot;/headPic&quot;</span>,<br>  upload.single(<span class="hljs-string">&quot;headPic&quot;</span>),<span class="hljs-comment">//单张图片，图片标识名</span><br>  Util.checkToken,<span class="hljs-comment">//验证token</span><br>  <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;上传成功&quot;</span>,<br>      <span class="hljs-attr">headPath</span>: req.file,<br>    &#125;);<br>  &#125;<br>);<br><br><span class="hljs-built_in">module</span>.exports = router;<br></code></pre></td></tr></table></figure></li><li><p>在router中添加upload.js的路由地址 app.use(“/upload”,upload);<br>运行项目，做个测试，在postman中输入相对应地址和参数后点上传，服务端返回缓存文件信息并保存到缓存目录<br><img src="https://img-blog.csdnimg.cn/20200409204528165.gif"></p></li><li><p>添加上传功能后，只是保证文件上传，还要把它转换成图片格式，<strong>所以在utils.js文件中新增几个方法（要引入fs模块）</strong>，分别是：  </p></li><li><p><em>读取文件</em>*</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">readPicFile</span>(<span class="hljs-params">_file</span>)</span> &#123;<br>   <span class="hljs-keyword">let</span> &#123; path, mimetype &#125; = _file;<span class="hljs-comment">//获取文件路径和文件类型</span><br>   <span class="hljs-keyword">let</span> file = fs.readFileSync(path);<span class="hljs-comment">//将文件转换成二进制</span><br>   <span class="hljs-keyword">let</span> fileName =<span class="hljs-comment">//用时间戳加随机数命名文件</span><br>     <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime() +<br>     <span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">1000000</span>) +<br>     <span class="hljs-string">&quot;.&quot;</span> +<br>     mimetype.split(<span class="hljs-string">&quot;/&quot;</span>)[<span class="hljs-number">1</span>];<br>   <span class="hljs-built_in">this</span>.delPicFile(path);<span class="hljs-comment">//删除之前的缓存文件</span><br>   <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.writePicFile(file, fileName);<span class="hljs-comment">//写文件</span><br> &#125;<br></code></pre></td></tr></table></figure></li><li><p><em>保存（写入）文件</em>*</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">writePicFile</span>(<span class="hljs-params">_file, _fileName</span>)</span> &#123;<br>  <span class="hljs-keyword">let</span> fileName = <span class="hljs-string">&quot;./public/assets/img/&quot;</span> + _fileName;<span class="hljs-comment">//文件路径</span><br>  fs.writeFileSync(fileName, _file);<br>  <span class="hljs-keyword">return</span> fileName.split(<span class="hljs-string">&quot;./&quot;</span>)[<span class="hljs-number">1</span>];<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><em>删除文件</em>*</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">delPicFile</span>(<span class="hljs-params">_path</span>)</span> &#123;<br>    fs.unlink(_path, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;删除失败&quot;</span>);<br>      &#125;<br>    &#125;);<br>  &#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>全部完成后，上传文件也已完成</strong></p></li></ul><p><strong>添加用户功能</strong></p><ul><li><p>在users.js界面中调取之前写的command（数据库增，删，改，查操作）</p></li><li><p>由于增加操作可能是移动端用户注册，所以暂时不加token验证，由于邮箱和用户名是唯一值，所以需要先进行查找用户</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> findRes = <span class="hljs-keyword">await</span> findData(Mod, &#123;<br>    <span class="hljs-attr">$or</span>: [<br>      &#123;<br>        <span class="hljs-attr">mailaddress</span>: res._data.mailaddress,<br>        <span class="hljs-attr">mailurl</span>: res._data.mailurl,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">username</span>: res._data.username,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">mailaddress</span>: res._data.username,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">username</span>: res._data.mailaddress + res._data.mailurl,<br>      &#125;,<br>    ],<br>  &#125;);<br>  <span class="hljs-keyword">if</span> (findRes &amp;&amp; findRes.length &gt; <span class="hljs-number">0</span>) &#123;<br>    res.send(&#123;<br>      <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;添加失败,用户已存在&quot;</span>,<br>    &#125;);<br>    Util.delPicFile(res._data.headPic);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br></code></pre></td></tr></table></figure></li><li><p>判断到无此用户时，将其添加到数据库中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (res._data.headPic) &#123;<br>  res._data.headPic = Util.readPicFile(res._data.headPic || <span class="hljs-string">&quot;&quot;</span>) || <span class="hljs-string">&quot;&quot;</span>;<span class="hljs-comment">//保存头像</span><br>&#125;<br>res._data.time = Util.joinDate();<span class="hljs-comment">//添加时间</span><br>res._data.password = Util.createBcrypt(res._data.password);<span class="hljs-comment">//盐加密</span><br>res._data.isactive = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">let</span> addRes = <span class="hljs-keyword">await</span> addData(Mod, res._data);<br><span class="hljs-keyword">if</span> (addRes) &#123;<br>  res.send(&#123;<br>    <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;添加成功&quot;</span>,<br>  &#125;);<br>  <span class="hljs-keyword">return</span>;<br>&#125;<br>Util.delPicFile(res._data.headPic);<br>res.send(&#123;<br>  <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;添加失败&quot;</span>,<br>&#125;);<br></code></pre></td></tr></table></figure></li><li><p>完成之后用postman测试一下，后端提示添加成功，数据库也成功添加该用户<br><img src="https://img-blog.csdnimg.cn/20200409213356560.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200409213437192.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p></li></ul><p><strong>文章到此，头像上传，用户添加就已经全部实现</strong></p><p><strong>总结</strong></p><p>前后端项目请求应进行节流处理（即限制用户多次快速单击提交按钮），前后端双重保险，即可提升用户体验，又减少服务端压力，由于此项目主要以功能为主，在细节方面没有十分注重，真实线上项目必须添加节流</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（三）</title>
    <link href="/2020/04/10/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <url>/2020/04/10/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（二）：</strong><a href="https://blog.csdn.net/time_____/article/details/105408640"><strong>https://blog.csdn.net/time_____/article/details/105408640</strong></a><br><strong>项目源码（持续更新）：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/shopping"><strong>https://gitee.com/DieHunter/myCode/tree/master/shopping</strong></a></p><p><strong>这篇文章在上次的服务端登录基础上增加前端界面</strong></p><p>在开始前我们可以简单用postman测试一下token和登录的功能，可以先在后端生成一段token从前端请求</p><p><strong>验证token（成功和失败）</strong></p><p><img src="https://img-blog.csdnimg.cn/20200409153223111.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200409153400506.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>紧接着验证一下用户登录（前提事先在数据库添加用户信息，添加过程及加密不做详细说明）</strong><br><img src="https://img-blog.csdnimg.cn/20200409153918430.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p><strong>测试成功后我们开始配置编写前端部分（只实现功能，对界面要求不高）</strong></p><p><strong>文件结构：</strong></p><p><img src="https://img-blog.csdnimg.cn/20200409160552259.png"></p><ul><li><p><strong>配置config.js文件夹，新建config.js文件用于存放配置常量（和服务端config.js一样）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Config</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> Agreement = <span class="hljs-string">&quot;http://&quot;</span>;<br>  <span class="hljs-keyword">static</span> BaseUrl = <span class="hljs-string">&quot;127.0.0.1&quot;</span>;<br>  <span class="hljs-keyword">static</span> ServerUrl = <span class="hljs-string">&quot;&quot;</span>;<br>  <span class="hljs-keyword">static</span> ServerPort = <span class="hljs-string">&quot;:1024&quot;</span>;<br>  <span class="hljs-keyword">static</span> Path = <span class="hljs-string">&quot;/&quot;</span>;<br>  <span class="hljs-keyword">static</span> CryptoKey = <span class="hljs-string">&quot;tokenkey&quot;</span>;<span class="hljs-comment">//加密信息关键字</span><br>  <span class="hljs-keyword">static</span> FilePath = <span class="hljs-built_in">this</span>.Agreement + <span class="hljs-built_in">this</span>.BaseUrl + <span class="hljs-built_in">this</span>.ServerPort + <span class="hljs-built_in">this</span>.Path;<br>  <span class="hljs-keyword">static</span> ServerApi = &#123;<span class="hljs-comment">//接口名</span><br>    <span class="hljs-attr">token</span>: <span class="hljs-string">&quot;checkToken&quot;</span>,<br>    <span class="hljs-attr">user</span>: &#123;<br>      <span class="hljs-attr">userLogin</span>: <span class="hljs-string">&quot;user/userLogin&quot;</span>,<br>    &#125;<br>  &#125;;<br>  <span class="hljs-keyword">static</span> StorageName = &#123;<span class="hljs-comment">//本地缓存localstorage名称</span><br>    <span class="hljs-attr">token</span>: <span class="hljs-string">&quot;token&quot;</span>,<br>    <span class="hljs-attr">userInfo</span>: <span class="hljs-string">&quot;userInfo&quot;</span><br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>在utils文件中新建方法</strong>，将其放在react.component的原型中，使继承组件可以直接调用  </p></li><li><p><em>storage：</em>*</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; Component &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Utils</span> </span>&#123;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">saveStorage</span>(<span class="hljs-params">key, val</span>)</span> &#123;<span class="hljs-comment">//添加缓存</span><br>    <span class="hljs-built_in">localStorage</span>.setItem(key, <span class="hljs-built_in">JSON</span>.stringify(val));<br>  &#125;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">getStorage</span>(<span class="hljs-params">key</span>)</span> &#123;<span class="hljs-comment">//获取缓存</span><br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">localStorage</span>.getItem(key));<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;&#125;<br>  &#125;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">clearStorage</span>(<span class="hljs-params">key</span>)</span> &#123;<span class="hljs-comment">//清除缓存</span><br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-built_in">localStorage</span>.removeItem(key);<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;&#125;<br>  &#125;<br>&#125;<br>Component.prototype.$utils = Utils;<br></code></pre></td></tr></table></figure><p> <strong>axios:</strong></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../config/config&quot;</span>;<br><span class="hljs-keyword">import</span> Axios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;axios&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; Component &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; message &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;antd&quot;</span>;<br>Axios.defaults.baseURL =<br>  Config.Agreement + Config.BaseUrl + Config.ServerPort + Config.Path;<br><span class="hljs-comment">// 添加请求拦截器</span><br>Axios.interceptors.request.use(<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">config</span>) </span>&#123;<br>    <span class="hljs-comment">// 在发送请求之前做些什么</span><br>    <span class="hljs-keyword">return</span> config;<br>  &#125;,<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;<br>    <span class="hljs-comment">// 对请求错误做些什么</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Promise</span>.reject(error);<br>  &#125;<br>);<br><span class="hljs-comment">// 添加响应拦截器</span><br>Axios.interceptors.response.use(<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) </span>&#123;<br>    <span class="hljs-comment">// 对响应数据做点什么</span><br>    <span class="hljs-keyword">if</span> (response.data.result === -<span class="hljs-number">999</span>) &#123;<br>      <span class="hljs-comment">//token验证失败</span><br>      <span class="hljs-keyword">return</span> message.error(response.data.msg);<br>    &#125;<br>    <span class="hljs-keyword">return</span> response.data;<br>  &#125;,<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(error)<br>    <span class="hljs-comment">// 对响应错误做点什么</span><br>    message.error(<span class="hljs-string">&quot;操作失败&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Promise</span>.reject(error);<br>  &#125;<br>);<br><br>Component.prototype.$axios = Axios;<br></code></pre></td></tr></table></figure><p> <strong>Crypto:</strong></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> CryptoJS <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;crypto-js&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; Component &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../config/config&quot;</span>;<br><span class="hljs-keyword">const</span> &#123; CryptoKey &#125; = config;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CryptoTool</span> </span>&#123;<br>  <span class="hljs-comment">/* Crypto加密方法</span><br><span class="hljs-comment">   * @param &#123;object&#125; _data       对用户请求后端的参数进行加密</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">setCrypto</span>(<span class="hljs-params">_data</span>)</span> &#123;<br>    <span class="hljs-keyword">let</span> key = CryptoJS.enc.Utf8.parse(CryptoKey);<br>    <span class="hljs-keyword">let</span> encrypted = CryptoJS.AES.encrypt(<span class="hljs-built_in">JSON</span>.stringify(_data), key, &#123;<br>      <span class="hljs-attr">mode</span>: CryptoJS.mode.ECB,<br>      <span class="hljs-attr">padding</span>: CryptoJS.pad.Pkcs7<br>    &#125;);<br>    <span class="hljs-keyword">return</span> encrypted.toString();<br>  &#125;<br>   <span class="hljs-comment">/* Crypto解密方法</span><br><span class="hljs-comment">   * @param &#123;string&#125; _token       将秘文解密成对象形式</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">getCrypto</span>(<span class="hljs-params">_token</span>)</span> &#123;<br>    <span class="hljs-keyword">let</span> key = CryptoJS.enc.Utf8.parse(CryptoKey);<br>    <span class="hljs-keyword">let</span> decrypt = CryptoJS.AES.decrypt(_token, key, &#123;<br>      <span class="hljs-attr">mode</span>: CryptoJS.mode.ECB,<br>      <span class="hljs-attr">padding</span>: CryptoJS.pad.Pkcs7<br>    &#125;);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.parse(CryptoJS.enc.Utf8.stringify(decrypt).toString());<br>  &#125;<br>&#125;<br>Component.prototype.$crypto = CryptoTool;<br></code></pre></td></tr></table></figure></li><li><p><strong>在index.js中添加这些函数</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-dom&quot;</span>;<br><span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./util/axios&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./util/utils&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./util/cryptoTool&quot;</span>;<br></code></pre></td></tr></table></figure></li><li><p><strong>随后在page/login中新增login.js，简单配置一下login页面后，在App.js中引入login页面</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> Login <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./page/login/login&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">App</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;App&quot;</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Login</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Login</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> App;<br></code></pre></td></tr></table></figure></li><li><p>在antd官网找到登录界面实例，直接把大部分复制到login界面，用less微调一下后实现以下界面<br><img src="https://img-blog.csdnimg.cn/2020040916101681.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200409161128913.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p></li><li><p><strong>login.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./login.less&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; Card, Form, Input, Button, Checkbox, message &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;antd&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; UserOutlined, LockOutlined &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@ant-design/icons&quot;</span>;<br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../config/config&quot;</span>;<br><span class="hljs-keyword">const</span> &#123; ServerApi, StorageName &#125; = config;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Login</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">props</span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>(props);<br>    <span class="hljs-built_in">this</span>.checkToken(); <span class="hljs-comment">//验证用户token是否过期</span><br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;cardBox&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Card</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;登录&quot;</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Form</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;normal_login&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;login-form&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">initialValues</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">remember:</span> <span class="hljs-attr">true</span> &#125;&#125;</span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">onFinish</span>=<span class="hljs-string">&#123;this.sendData&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          &gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[</span></span></span><br><span class="hljs-tag"><span class="xml">                &#123;</span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>,</span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">message:</span> &quot;请输入用户名/邮箱&quot;,</span></span><br><span class="hljs-tag"><span class="xml">                &#125;,</span></span><br><span class="hljs-tag"><span class="xml">              ]&#125;</span></span><br><span class="hljs-tag"><span class="xml">            &gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Input</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;infoInput&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">prefix</span>=<span class="hljs-string">&#123;</span>&lt;<span class="hljs-attr">UserOutlined</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;site-form-item-icon&quot;</span> /&gt;</span>&#125;</span><br><span class="xml">                placeholder=&quot;用户名/邮箱&quot;</span><br><span class="xml">              /&gt;</span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">              <span class="hljs-attr">rules</span>=<span class="hljs-string">&#123;[</span></span></span><br><span class="hljs-tag"><span class="xml">                &#123;</span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">required:</span> <span class="hljs-attr">true</span>,</span></span><br><span class="hljs-tag"><span class="xml">                  <span class="hljs-attr">message:</span> &quot;请输入密码&quot;,</span></span><br><span class="hljs-tag"><span class="xml">                &#125;,</span></span><br><span class="hljs-tag"><span class="xml">              ]&#125;</span></span><br><span class="hljs-tag"><span class="xml">            &gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Input</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;infoInput&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">prefix</span>=<span class="hljs-string">&#123;</span>&lt;<span class="hljs-attr">LockOutlined</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;site-form-item-icon&quot;</span> /&gt;</span>&#125;</span><br><span class="xml">                type=&quot;password&quot;</span><br><span class="xml">                placeholder=&quot;密码&quot;</span><br><span class="xml">              /&gt;</span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;remember&quot;</span> <span class="hljs-attr">valuePropName</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">noStyle</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Checkbox</span>&gt;</span>3天内免密<span class="hljs-tag">&lt;/<span class="hljs-name">Checkbox</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;login-form-forgot&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#aaa&quot;</span>&gt;</span></span><br><span class="xml">                忘记密码</span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">htmlType</span>=<span class="hljs-string">&quot;submit&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">                <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;login-form-button&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">              &gt;</span></span><br><span class="xml">                登录</span><br><span class="xml">              <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="xml">              或者<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#aaa&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Form.Item</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Form</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Card</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    );<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">checkToken</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">let</span> token = <span class="hljs-built_in">this</span>.$utils.getStorage(StorageName.token);<br>    <span class="hljs-keyword">if</span> (!token) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-built_in">this</span>.$axios<br>      .get(ServerApi.token, &#123;<br>        <span class="hljs-attr">params</span>: &#123; token &#125;,<br>      &#125;)<br>      .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            message.success(res.msg).then(<span class="hljs-function">() =&gt;</span> &#123;<br>              <span class="hljs-comment">// this.props.history.push(&#123;</span><br>              <span class="hljs-comment">//   pathname: &quot;/admin/findshop&quot;,</span><br>              <span class="hljs-comment">//   query: res,</span><br>              <span class="hljs-comment">// &#125;);</span><br>            &#125;);<br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            <span class="hljs-comment">// message.warning(res.msg);</span><br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;)<br>      .catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(err);<br>      &#125;);<br>  &#125;<br>  sendData = <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">this</span>.$axios<br>      .get(ServerApi.user.userLogin, &#123;<br>        <span class="hljs-attr">params</span>: &#123; <span class="hljs-attr">crypto</span>: <span class="hljs-built_in">this</span>.$crypto.setCrypto(data) &#125;,<br>      &#125;)<br>      .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            <span class="hljs-built_in">this</span>.$utils.saveStorage(StorageName.token, res.token);<br>            message.success(res.msg);<br>            <span class="hljs-comment">// this.props.history.push(&#123;</span><br>            <span class="hljs-comment">//   pathname: &quot;/admin/findshop&quot;,</span><br>            <span class="hljs-comment">//   query: res,</span><br>            <span class="hljs-comment">// &#125;);</span><br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            message.warning(res.msg);<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;)<br>      .catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(err);<br>      &#125;);<br>  &#125;;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>效果如下：<br><img src="https://img-blog.csdnimg.cn/2020040916165793.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200409161722624.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200409161759269.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p></li></ul><p><strong>用户token验证，登录功能前端+后端基本实现</strong></p><p><strong>总结</strong></p><p>前端与后端的项目搭建顺序可能有所不同，项目周期可能也不同，这时需要灵活使用前后端数据模拟和请求模拟工具，前端可以使用easymock和mockjs生成假数据，而后端最简单的直接放到浏览器url访问（仅限于get），或者使用postman，SoapUI等接口测试工具</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（二）</title>
    <link href="/2020/04/09/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2020/04/09/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>从零开始，搭建一个简单的购物平台（一）：<a href="https://blog.csdn.net/time_____/article/details/105191286">https://blog.csdn.net/time_____/article/details/105191286</a><br>项目源码（持续更新）：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/shopping"><strong>https://gitee.com/DieHunter/myCode/tree/master/shopping</strong></a>  </p><p>上一篇文章将项目主体以及插件模块搭建完成，这篇文章目的主要搭建服务端token验证及登录功能</p><p><strong>服务端：</strong></p><p><strong>文件目录结构</strong></p><p><img src="https://img-blog.csdnimg.cn/20200409144112360.png"></p><p>入口文件为<strong>server.js</strong>,简单配置一下，先让他能运行起来</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>);<br><span class="hljs-keyword">const</span> app = express();<br><br>app.listen(<span class="hljs-number">1024</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Server Start~&quot;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><p>使用终端cd到server.js目录，输入node server运行入口文件，显示Server Start~表示运行成功，之后引入一些模块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>);<br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> routes = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./routes/routes&quot;</span>);<br><span class="hljs-keyword">const</span> cors = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;cors&quot;</span>); <span class="hljs-comment">//引入cors模块（解决跨域问题）</span><br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>);<br>app.use(cors());<br>app.all(<span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res, next</span>) </span>&#123;<br>  <span class="hljs-comment">//设置允许跨域的域名，*代表允许任意域名跨域</span><br>  res.header(<span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>);<br>  res.header(<span class="hljs-string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="hljs-string">&quot;content-type&quot;</span>); <span class="hljs-comment">//允许的header类型</span><br>  res.header(<span class="hljs-string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="hljs-string">&quot;DELETE,PUT,POST,GET,OPTIONS&quot;</span>); <span class="hljs-comment">//跨域允许的请求方式</span><br>  next(); <span class="hljs-comment">//是否继续向下执行</span><br>&#125;);<br><span class="hljs-keyword">let</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;body-parser&quot;</span>); <span class="hljs-comment">//post传输数据类型</span><br>app.use(<br>  bodyParser.urlencoded(&#123;<br>    <span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span>,<br>  &#125;)<br>);<br><span class="hljs-keyword">new</span> routes(app);<span class="hljs-comment">//初始化路由</span><br>app.use(bodyParser.json());<br>app.use(<span class="hljs-string">&quot;/public&quot;</span>, express.static(path.join(__dirname, <span class="hljs-string">&quot;./public&quot;</span>)));<span class="hljs-comment">//静态目录</span><br><br>app.listen(<span class="hljs-number">1024</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Server Start~&quot;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>全部设置完之后进行下一步，配置路由与token验证</strong></p><p>在utils.js文件中新建一个静态类，并且引入jwt（jsonwebtoken），在config.js文件中新建config静态类用于存放配置变量（接口名，公钥秘钥，常量），此外还需用到crypto进行数据加解密，Bcrypt密码盐加密</p><p><strong>utils.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> jwt = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;jsonwebtoken&quot;</span>);<br><span class="hljs-keyword">const</span> config = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../config/config&quot;</span>);<br><span class="hljs-keyword">const</span> cryptoJS = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;crypto-js&quot;</span>);<span class="hljs-comment">//用来加密解密前端参数</span><br><span class="hljs-keyword">let</span> &#123; UserKey, AdminKey,CryptoKey&#125; = config;<span class="hljs-comment">//token加密关键字,秘钥</span><br><span class="hljs-keyword">let</span> key = cryptoJS.enc.Utf8.parse(CryptoKey);<span class="hljs-comment">//生成16进制秘钥</span><br><span class="hljs-built_in">module</span>.exports = <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Utils</span> </span>&#123;<br>   <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">parseUrl</span>(<span class="hljs-params">req, res</span>)</span> &#123;<span class="hljs-comment">//获取前端传递的参数</span><br>    <span class="hljs-keyword">return</span> req.method == <span class="hljs-string">&quot;POST&quot;</span> ? req.body : <span class="hljs-built_in">this</span>.urlSplit(req.url);<br>  &#125;<br>   <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">urlSplit</span>(<span class="hljs-params">url</span>)</span> &#123;<span class="hljs-comment">//get获取的参数解析</span><br>    <span class="hljs-keyword">let</span> list = url.split(<span class="hljs-string">&quot;?&quot;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&quot;&amp;&quot;</span>);<br>    <span class="hljs-keyword">let</span> leng = list.length;<br>    <span class="hljs-keyword">let</span> obj = &#123;&#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; leng; i++) &#123;<br>      <span class="hljs-keyword">let</span> key = list[i].split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">0</span>];<br>      <span class="hljs-keyword">let</span> val = list[i].split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>];<br>      obj[key] = val;<br>    &#125;<br>    <span class="hljs-keyword">return</span> obj;<br>  &#125;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">   * @param &#123;string&#125; type &#x27;user&#x27;||&#x27;admin&#x27;      用户类型</span><br><span class="hljs-comment">   * @param &#123;string&#125; user                      用户名  </span><br><span class="hljs-comment">   * @param &#123;bool&#125; rempsd                      是否记住密码</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">static</span> createToken = <span class="hljs-function">(<span class="hljs-params">type, user, rempsd</span>) =&gt;</span> &#123;<span class="hljs-comment">//生成token，用户登录时调用</span><br>    <span class="hljs-keyword">let</span> payload = &#123;<br>      <span class="hljs-attr">user</span>: user,<br>    &#125;;<br>    <span class="hljs-keyword">return</span> jwt.sign(payload, type == <span class="hljs-string">&quot;admin&quot;</span> ? AdminKey : UserKey, &#123;<br>      <span class="hljs-attr">expiresIn</span>: rempsd ? <span class="hljs-string">&quot;3d&quot;</span> : <span class="hljs-string">&quot;6h&quot;</span>,<br>    &#125;);<br>  &#125;;<br> <span class="hljs-comment">/*</span><br><span class="hljs-comment">   * @param &#123;object&#125; req       前端请求对象</span><br><span class="hljs-comment">   * @param &#123;object&#125; res       服务端接收对象</span><br><span class="hljs-comment">   * @param &#123;fn&#125; next          中间件响应方法</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">static</span> checkToken = <span class="hljs-function">(<span class="hljs-params">req, res, next</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> _data = <span class="hljs-built_in">this</span>.parseUrl(req, res); <span class="hljs-comment">//解析前端参数</span><br>    <span class="hljs-keyword">if</span> (_data.crypto) &#123;<br>      _data = <span class="hljs-built_in">this</span>.getCrypto(_data.crypto); <span class="hljs-comment">//对前端参数解密</span><br>    &#125;<br>    <span class="hljs-keyword">let</span> isUser = <span class="hljs-literal">true</span>; <span class="hljs-comment">//用户</span><br>    <span class="hljs-keyword">let</span> isAdmin = <span class="hljs-literal">true</span>; <span class="hljs-comment">//管理员</span><br>    <span class="hljs-keyword">let</span> _decoded = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">//加密的用户名</span><br>    jwt.verify(_data.token, UserKey, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, decoded</span>) </span>&#123;<br>      <span class="hljs-keyword">if</span> (err) &#123;<br>        isUser = <span class="hljs-literal">false</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        _decoded = decoded;<br>      &#125;<br>    &#125;);<br>    jwt.verify(_data.token, AdminKey, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, decoded</span>) </span>&#123;<br>      <span class="hljs-keyword">if</span> (err) &#123;<br>        isAdmin = <span class="hljs-literal">false</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        _decoded = decoded;<br>      &#125;<br>    &#125;);<br>    <span class="hljs-keyword">if</span> (isUser || isAdmin) &#123;<br>      _data.id = _decoded;<br>      _data.userTokenType = isAdmin ? <span class="hljs-string">&quot;admin&quot;</span> : <span class="hljs-string">&quot;user&quot;</span>;<br>      res._data = _data;<br>      next(); <span class="hljs-comment">//中间件响应</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      res.send(&#123;<br>        <span class="hljs-attr">result</span>: -<span class="hljs-number">999</span>,<br>        <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;登录超时,请重新登录&quot;</span>,<br>      &#125;);<br>    &#125;<br>  &#125;;<br><span class="hljs-comment">/* Crypto加密方法</span><br><span class="hljs-comment">   * @param &#123;object&#125; _data       对用户请求后端的参数进行加密</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">setCrypto</span>(<span class="hljs-params">_data</span>)</span> &#123;<br>    <span class="hljs-keyword">let</span> encrypted = cryptoJS.AES.encrypt(<span class="hljs-built_in">JSON</span>.stringify(_data), key, &#123;<br>      <span class="hljs-attr">mode</span>: cryptoJS.mode.ECB,<br>      <span class="hljs-attr">padding</span>: cryptoJS.pad.Pkcs7,<br>    &#125;);<br>    <span class="hljs-keyword">return</span> encrypted.toString();<br>  &#125;<br> <span class="hljs-comment">/* Crypto解密方法</span><br><span class="hljs-comment">   * @param &#123;string&#125; _token       将秘文解密成对象形式</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">getCrypto</span>(<span class="hljs-params">_token</span>)</span> &#123;<br>    _token = <span class="hljs-built_in">decodeURIComponent</span>(_token); <span class="hljs-comment">//前端传参有特殊字符（中文）时转义（替换百分号）</span><br>    <span class="hljs-keyword">let</span> decrypt = cryptoJS.AES.decrypt(_token, key, &#123;<br>      <span class="hljs-attr">mode</span>: cryptoJS.mode.ECB,<br>      <span class="hljs-attr">padding</span>: cryptoJS.pad.Pkcs7,<br>    &#125;);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.parse(cryptoJS.enc.Utf8.stringify(decrypt).toString());<br>  &#125;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">createBcrypt</span>(<span class="hljs-params">password</span>)</span> &#123;<span class="hljs-comment">//加密密码</span><br>    <span class="hljs-keyword">return</span> bcrypt.hashSync(password, bcrypt.genSaltSync(<span class="hljs-number">10</span>));<br>  &#125;<br>  <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">checkBcrypt</span>(<span class="hljs-params">_password, _hash</span>)</span> &#123;<span class="hljs-comment">//对比密码</span><br>    <span class="hljs-keyword">return</span> bcrypt.compareSync(_password, _hash);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>配置完成utils后进行路由配置，在routes文件夹下新建routes.js文件，并使用token验证用户是否正确</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Util = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../utils/utils&quot;</span>);<br><span class="hljs-keyword">const</span> Config = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../config/config&quot;</span>);<br><span class="hljs-built_in">module</span>.exports = <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Route</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">app</span>)</span> &#123;<br>    app.get(Config.ServerApi.checkToken, Util.checkToken, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>      res.send(&#123;<br>        <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;验证成功&quot;</span>,<br>        <span class="hljs-attr">data</span>: res._data<br>      &#125;);<br>    &#125;);<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p><strong>配置config.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">module</span>.exports = &#123;<br>  <span class="hljs-attr">Agreement</span>: <span class="hljs-string">&quot;http://&quot;</span>,<span class="hljs-comment">//协议</span><br>  <span class="hljs-attr">DataBaseUrl</span>: <span class="hljs-string">&quot;127.0.0.1&quot;</span>,<span class="hljs-comment">//ip或域名</span><br>  <span class="hljs-attr">DataBasePort</span>: <span class="hljs-string">&quot;:27017&quot;</span>,<span class="hljs-comment">//数据库端口</span><br>  <span class="hljs-attr">DataBaseName</span>: <span class="hljs-string">&quot;shopping&quot;</span>,<span class="hljs-comment">//数据库文档名称</span><br>  <span class="hljs-attr">ServerUrl</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-attr">ServerPort</span>: <span class="hljs-string">&quot;:1024&quot;</span>,<span class="hljs-comment">//服务端请求端口</span><br>  <span class="hljs-attr">Path</span>: <span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-comment">//路由名</span><br>  <span class="hljs-attr">UserKey</span>: <span class="hljs-string">&quot;user&quot;</span>,<span class="hljs-comment">//用户token加密标识</span><br>  <span class="hljs-attr">AdminKey</span>: <span class="hljs-string">&quot;admin&quot;</span>,<span class="hljs-comment">//管理员token加密标识</span><br>  <span class="hljs-attr">CryptoKey</span>: <span class="hljs-string">&quot;tokenkey&quot;</span>,<span class="hljs-comment">//Crypto加密关键字，用于生成16进制秘钥</span><br>  <span class="hljs-attr">ServerApi</span>: &#123;<span class="hljs-comment">//接口名称</span><br>    <span class="hljs-attr">checkToken</span>: <span class="hljs-string">&quot;/checkToken&quot;</span>,<span class="hljs-comment">//token验证</span><br>    <span class="hljs-attr">userLogin</span>: <span class="hljs-string">&quot;/userLogin&quot;</span>,<span class="hljs-comment">//用户登录</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>随后，新建用户管理路由接口</strong>，但是在此之前，我们需要配置一下数据库</p><ol><li>下载<a href="https://robomongo.org/">Robo3t</a>,并安装</li><li>新建数据库，这里我新建的数据库名称是Shopping</li><li>新建数据库表，这里我新建的是users表</li></ol><p><img src="https://img-blog.csdnimg.cn/20200409143642663.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200409143738691.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200409143827911.png"></p><p><strong>连接数据库</strong></p><ol><li><p><strong>在model.js中新建数据库连接</strong>（原理观察者模式，类似与socket监听自定义事件）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mongoose = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;mongoose&#x27;</span>);<br><span class="hljs-keyword">const</span> config = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../../config/config&#x27;</span>)<br><span class="hljs-built_in">module</span>.exports = <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Mongoose</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        mongoose.connect(<span class="hljs-string">`mongodb://<span class="hljs-subst">$&#123;config.DataBaseUrl+config.DataBasePort+config.Path+config.DataBaseName&#125;</span>`</span>, &#123;<br>            <span class="hljs-attr">useNewUrlParser</span>: <span class="hljs-literal">true</span><br>        &#125;);<br>        <span class="hljs-built_in">this</span>.db = mongoose.connection;<br>        <span class="hljs-built_in">this</span>.db.on(<span class="hljs-string">&quot;error&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Err:&quot;</span> + error);<br>        &#125;);<br><br>        <span class="hljs-built_in">this</span>.db.on(<span class="hljs-string">&quot;open&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Connet Success~&quot;</span>);<br>        &#125;);<br><br>        <span class="hljs-built_in">this</span>.db.on(<span class="hljs-string">&#x27;disconnected&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Connet Stop~&#x27;</span>);<br>        &#125;);<br>        <span class="hljs-keyword">return</span> mongoose<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>新建数据库Schema用于连接数据表</strong>，这里我们直接将配置项剥离到config.js文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> _mongoose = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./model&#x27;</span>);<br><span class="hljs-keyword">let</span> mongoose = <span class="hljs-keyword">new</span> _mongoose()<br><span class="hljs-keyword">const</span> _schema = mongoose.Schema;<br><span class="hljs-built_in">module</span>.exports = <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Schema</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">config</span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> schema = <span class="hljs-keyword">new</span> _schema(config.data);<br>        <span class="hljs-keyword">let</span> Model = mongoose.model(config.modelName, schema); <span class="hljs-comment">//新建数据库</span><br>        <span class="hljs-keyword">return</span> Model<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>config.js中新增用户表默认字段配置</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Collections: &#123;<br>    <span class="hljs-attr">Users</span>: &#123;<br>      <span class="hljs-attr">modelName</span>: <span class="hljs-string">&quot;users&quot;</span>,<br>      <span class="hljs-attr">data</span>: &#123;<br>        <span class="hljs-attr">headPic</span>: &#123;<span class="hljs-comment">//头像</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>          <span class="hljs-attr">required</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-attr">default</span>: <span class="hljs-string">&quot;public/assets/img/default.gif&quot;</span><br>        &#125;,<br>        <span class="hljs-attr">userType</span>: &#123;<span class="hljs-comment">//用户类型（管理员/用户）</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>          <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,<br>        &#125;,<br>        <span class="hljs-attr">username</span>: &#123;<span class="hljs-comment">//用户名</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>          <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>,<br>        &#125;,<br>        <span class="hljs-attr">password</span>: &#123;<span class="hljs-comment">//密码</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>          <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span><br>        &#125;,<br>        <span class="hljs-attr">sex</span>: &#123;<span class="hljs-comment">//性别</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>          <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span><br>        &#125;,<br>        <span class="hljs-attr">mailaddress</span>: &#123;<span class="hljs-comment">//邮箱地址</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>          <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span><br>        &#125;,<br>        <span class="hljs-attr">mailurl</span>: &#123;<span class="hljs-comment">//邮箱类型</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>          <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span><br>        &#125;,<br>        <span class="hljs-attr">alladdress</span>: &#123;<span class="hljs-comment">//省市县</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">Array</span>,<br>          <span class="hljs-attr">required</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-attr">default</span>: []<br>        &#125;,<br>        <span class="hljs-attr">address</span>: &#123;<span class="hljs-comment">//具体地址</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>          <span class="hljs-attr">required</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-attr">default</span>: <span class="hljs-string">&#x27;&#x27;</span><br>        &#125;,<br>        <span class="hljs-attr">descript</span>: &#123;<span class="hljs-comment">//个人说明</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>          <span class="hljs-attr">required</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-attr">default</span>: <span class="hljs-string">&#x27;&#x27;</span><br>        &#125;,<br>        <span class="hljs-attr">time</span>: &#123;<span class="hljs-comment">//注册时间</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>          <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span><br>        &#125;,<br>        <span class="hljs-attr">isactive</span>: &#123;<span class="hljs-comment">//是否冻结用户</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-built_in">Boolean</span>,<br>          <span class="hljs-attr">default</span>: <span class="hljs-literal">true</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;,<br></code></pre></td></tr></table></figure></li></ol><p><strong>以上是配置，token验证及登录的后端代码</strong></p><p><strong>总结</strong></p><p>将项目搭建成类似于mvc的设计思想很有必要，数据模型和控制层的剥离，可以使代码思路清晰，复用性以及可维护性提升</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零开始，搭建一个简单的购物平台（一）</title>
    <link href="/2020/04/09/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2020/04/09/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%AD%E7%89%A9%E5%B9%B3%E5%8F%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>这个项目是我利用空余的时间写的，商城App界面主要模仿<a href="http://www.wxapp-union.com/forum.php?modviewthread&tid5042">零食商贩</a>小程序写的，其余都是自己写的</p><p>项目源码（持续更新）：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopping">https://gitee.com/DieHunter/myCode/tree/master/shopping</a></p><h3 id="使用到的技术："><a href="#使用到的技术：" class="headerlink" title="使用到的技术："></a><strong>使用到的技术：</strong></h3><p><strong>后端</strong>：node+express+MongoDB</p><p><strong>管理界面</strong>：react+antd</p><p><strong>商城界面</strong>（移动端）：Vue+Mint UI</p><p><strong>开发工具：</strong>npm</p><p><strong>打包工具</strong>：webpack</p><p><strong>代码管理</strong>：git</p><p><strong>技术栈</strong>：</p><ul><li>后端（express，mongoose，cors，body-parser，multer，jsonwebtoken，crypto-js，bcryptjs，nodemailer）</li><li>管理界面（react，antd，axios，crypto-js，less，less-loader，react-router-dom，events，redux）</li><li>商城界面（vue，vue-router，vuex，axios，jquery，less，less-loader，mint-ui，swiper）</li></ul><h3 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h3><p><strong>工具配置</strong></p><ol><li><p><strong>node安装：<a href="https://github.com/coreybutler/nvm-windows">下载</a>并</strong>安装nvm或直接下载<a href="http://nodejs.cn/download/">nodejs</a>安装，若使用nvm，则使用</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nvm</span> install node@<span class="hljs-number">12</span>.<span class="hljs-number">16</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">nvm</span> use <span class="hljs-number">12</span>.<span class="hljs-number">16</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>安装好node之后，查看环境变量（右键我的电脑=&gt;属性=&gt;高级系统设置=&gt;环境变量）若没有，则将node目录添加至环境变量</p></li><li><p><strong>npm 配置：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm config set registry https:<span class="hljs-comment">//registry.npm.taobao.org    //将默认下载地址设置为淘宝镜像</span><br>npm config set prefix <span class="hljs-string">&quot;D:\soft\nodejs\module_global&quot;</span>     <span class="hljs-comment">//设置全局模块安装默认路径（后面直接将路径放到环境变量，可以直接使用）</span><br>npm config set cache <span class="hljs-string">&quot;D:\soft\nodejs\module_cache&quot;</span><span class="hljs-comment">//设置全局模块缓存路径</span><br></code></pre></td></tr></table></figure></li><li><p><strong>安装mongoDB：</strong>下载安装<a href="https://www.mongodb.com/download-center/community">MongoDB</a>，与node一样配置环境变量，在cmd中输入mongo，出现类似这样的，就说明安装配置成功<br><img src="https://img-blog.csdnimg.cn/20200409094151118.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p></li><li><p><strong>webpack：</strong>使用npm全局安装<strong>webpack-cli</strong>和<strong>webpack</strong></p><p>npm i webpack webpack-cli -g</p></li></ol><p><strong>后端搭建</strong></p><ol><li><strong>新建项目文件夹</strong>，我这里建立后端文件夹后直接建立server.js(入口文件)，这样在npm init时不需要输入项目名称</li><li><strong>使用npm init -y初始化后端项目</strong>，并创建文件结构（如下图）<br><img src="https://img-blog.csdnimg.cn/20200409101330111.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></li><li>安装express，mongoose，cors（处理前端跨域），body-parser（允许修改请求类型，简言之就是支持post请求），multer（使文件上传被支持），jsonwebtoken（后端生成单向token，传输至前端以供验证状态），crypto-js（请求数据传输加密），bcryptjs（密码加密），nodemailer（发送电子邮件，验证码）等模块</li></ol><p><strong>到此为止，一个基本的服务端已搭建好</strong></p><p><strong>服务端管理系统界面搭建</strong></p><ol><li>使用 npm install create-react-app -g 全局安装create-react-app脚手架工具，并新建项目目录</li><li>在项目目录中运行脚手架工具 create-react-app myapp(项目名称)</li><li><strong>配置webpack</strong>：这里需要用到less，react脚手架提供默认的预处理语言是sass，所以要将react项目的config暴露出来，<br>暴露之前我们项目下的package.json文件中有一项eject，运行 npm run eject（<strong>注意:此操作不可逆，</strong>如非必要，最好不要暴露，webpack打包原理就是将项目所需依赖生成静态资源，也就是说，如果没用到的包，不会有任何影响）</li><li>安装antd（ui），axios（数据请求），crypto-js（请求数据传输加密），react-router-dom（路由跳转），redux（全局状态）</li><li>下载less和less-loader,<br>npm install less-loader less –save</li><li><strong>配置less：</strong>运行完eject后package.json中的eject项会消失，此时项目中会多出一个config文件夹，其中就是webpack的配置文件，我们打开webpack.config.js文件，通过搜索找到默认配置的sass配置项，照葫芦画瓢，将less配置好，同理将less-loader配置好（如下图）<br><img src="https://img-blog.csdnimg.cn/20200409111154452.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200409111255389.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200409111401701.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></li><li>然后在src文件夹中构建项目结构<br><img src="https://img-blog.csdnimg.cn/20200409111933737.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></li></ol><p><strong>至此，一个基本的服务端管理前端项目搭建完成</strong></p><p><strong>商城界面搭建</strong></p><ol><li>使用 npm install -g vue-cli 全局安装vue-cli 脚手架工具</li><li>用vue init webpack + 项目的名字 初始化项目</li><li>构建项目目录<br><img src="https://img-blog.csdnimg.cn/20200409114241221.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></li><li>安装vue-router（路由），vuex（全局状态），axios（前端请求），jquery，less，less-loader，mint-ui（移动端ui组件），swiper（轮播插件）</li></ol><p><strong>商城界面搭建完成</strong></p><p><strong>总结：</strong></p><p>面向对象编程的实质其实是考验自己对抽象思想的理解与认知，有的事物你虽无法描述，但是他是的的确确存在的，考虑有什么，而不是是什么</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Echarts案例：整一个炫酷一点的仪表盘</title>
    <link href="/2020/03/23/Echarts%E6%A1%88%E4%BE%8B%20%E6%95%B4%E4%B8%80%E4%B8%AA%E7%82%AB%E9%85%B7%E4%B8%80%E7%82%B9%E7%9A%84%E4%BB%AA%E8%A1%A8%E7%9B%98/"/>
    <url>/2020/03/23/Echarts%E6%A1%88%E4%BE%8B%20%E6%95%B4%E4%B8%80%E4%B8%AA%E7%82%AB%E9%85%B7%E4%B8%80%E7%82%B9%E7%9A%84%E4%BB%AA%E8%A1%A8%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<p><strong>故事发生在几天前</strong></p><p>公司要求做个仪表盘，大致UI是这样的<br><img src="https://img-blog.csdnimg.cn/20200321215215727.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><br>这不是为难我胖虎嘛，于是找遍整个全网也没找到相似的，只能自己手写一个。</p><p>然而，最开始是准备用极坐标写的</p><p><img src="https://img-blog.csdnimg.cn/20200321215537496.png"></p><p>折腾了一上午发现极坐标做出的效果两头是360度的圆环，这使UI给的标注无法实现，于是我又开始研究仪表盘，官方给的实例倒是挺炫酷</p><p><img src="https://img-blog.csdnimg.cn/20200321215916833.png"><img src="https://img-blog.csdnimg.cn/20200321215930971.png"></p><p>当我感觉快找到希望时，却无法实现两端圆角</p><p><img src="https://img-blog.csdnimg.cn/20200321220419973.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>以及将刻度显示在数字外，在网上找资料发现也有同学遇到相同的问题，但是没找到解决方法</p><p><img src="https://img-blog.csdnimg.cn/20200321220632334.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>然而急中生智却被我想到了一个方法，将这二者合并一下</p><p>先简单画个仪表盘</p><p><img src="https://img-blog.csdnimg.cn/20200321222011866.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>设置一下他的属性，去掉指针，去掉表盘颜色，得到只有刻度和数字的表盘</p><p><img src="https://img-blog.csdnimg.cn/20200321222204510.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>之后将除了圆环以外的所有属性配置一下实现这样的效果</p><p><img src="https://img-blog.csdnimg.cn/2020032122250556.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>突然有内味了，这时我们加上极坐标环状图</p><p><img src="https://img-blog.csdnimg.cn/20200321222704919.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>然而二者最大角度不同，我们需要做一个换算，设计图中仪表盘的角度相当于极坐标的-30度到210度，二者偏移值是240度除360度</p><p>也就是极坐标得乘以2分之3（240分之360）才是真实仪表盘的值</p><p>经过换算后，实现以下效果</p><p><img src="https://img-blog.csdnimg.cn/20200321223133368.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200321223442868.gif"></p><p><strong>源码：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/Echart/PolarGauge">https://gitee.com/DieHunter/myCode/tree/master/Echart/PolarGauge</a></p><p>同样需要引入Echarts<br><strong>HTML：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">        * &#123;</span><br><span class="css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">        &#125;</span><br><span class="css"></span><br><span class="css">        <span class="hljs-selector-class">.PolarGauge</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">100px</span> auto;</span><br><span class="css">            <span class="hljs-attribute">background</span>: <span class="hljs-number">#000</span>;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;</span><br><span class="css">        &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./echarts.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./chart.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;PolarGauge&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;PolarGauge&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>chart.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> chart, option, data, timeTickId, timer, max;<br><span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">init</span>(<span class="hljs-params"></span>) </span>&#123;<br>    chart = echarts.init(PolarGauge); <span class="hljs-comment">//初始化chart容器</span><br>    data = &#123; <span class="hljs-comment">//显示的数据</span><br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&#x27;馆藏量&#x27;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">1000</span><br>    &#125;<br>    timer = <span class="hljs-number">1.5</span> <span class="hljs-comment">//刷新频率</span><br>    max = <span class="hljs-number">1000</span> <span class="hljs-comment">//最大馆藏量</span><br>    createPolarGauge() <span class="hljs-comment">//配置chart</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createPolarGauge</span>(<span class="hljs-params"></span>) </span>&#123;<br>    option = &#123;<br>        <span class="hljs-attr">angleAxis</span>: &#123;<br>            <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-attr">max</span>: max * <span class="hljs-number">3</span> / <span class="hljs-number">2</span>, <span class="hljs-comment">//这里将极坐标最大值转换成仪表盘的最大值，(360度除以240度)</span><br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;value&#x27;</span>,<br>            <span class="hljs-attr">startAngle</span>: <span class="hljs-number">210</span>, <span class="hljs-comment">//极坐标初始角度，从第一象限算起，大约在7-8点钟角度之间</span><br>            <span class="hljs-attr">splitLine</span>: &#123;<br>                <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span> <span class="hljs-comment">//隐藏坐标</span><br>            &#125;<br>        &#125;,<br>        <span class="hljs-attr">barMaxWidth</span>: <span class="hljs-number">18</span>, <span class="hljs-comment">//圆环宽度</span><br>        <span class="hljs-attr">radiusAxis</span>: &#123; <span class="hljs-comment">//隐藏坐标</span><br>            <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>,<br>        &#125;,<br>        <span class="hljs-attr">polar</span>: &#123; <span class="hljs-comment">//设置圆环位置和大小</span><br>            <span class="hljs-attr">center</span>: [<span class="hljs-string">&#x27;50%&#x27;</span>, <span class="hljs-string">&#x27;50%&#x27;</span>],<br>            <span class="hljs-attr">radius</span>: <span class="hljs-string">&#x27;296&#x27;</span><br>        &#125;,<br>        <span class="hljs-attr">series</span>: [&#123;<br>                <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,<br>                <span class="hljs-attr">data</span>: [&#123; <span class="hljs-comment">//上层圆环，用于显示真实数据</span><br>                    <span class="hljs-attr">value</span>: data.num,<br>                    <span class="hljs-attr">itemStyle</span>: &#123;<br>                        <span class="hljs-attr">color</span>: &#123; <span class="hljs-comment">//图形渐变颜色方法，四个数字分别代表，右，下，左，上，offset表示0%到100%</span><br>                            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;linear&#x27;</span>,<br>                            <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,<br>                            <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,<br>                            <span class="hljs-attr">x2</span>: <span class="hljs-number">1</span>, <span class="hljs-comment">//从左到右 0-1</span><br>                            <span class="hljs-attr">y2</span>: <span class="hljs-number">0</span>,<br>                            <span class="hljs-attr">colorStops</span>: [&#123;<br>                                <span class="hljs-attr">offset</span>: <span class="hljs-number">0</span>,<br>                                <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#CD48AE&#x27;</span> <span class="hljs-comment">// 0% 处的颜色</span><br>                            &#125;, &#123;<br>                                <span class="hljs-attr">offset</span>: <span class="hljs-number">1</span>,<br>                                <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#2CABFC&#x27;</span> <span class="hljs-comment">// 100% 处的颜色</span><br>                            &#125;],<br>                            <span class="hljs-attr">globalCoord</span>: <span class="hljs-literal">false</span> <span class="hljs-comment">// 缺省为 false</span><br>                        &#125;,<br>                        <span class="hljs-attr">shadowColor</span>: <span class="hljs-string">&#x27;rgba(255, 255, 255, 0.2)&#x27;</span>, <span class="hljs-comment">//加白色阴影产生高亮效果</span><br>                        <span class="hljs-attr">shadowBlur</span>: <span class="hljs-number">10</span><br>                    &#125;<br>                &#125;],<br>                <span class="hljs-attr">barGap</span>: <span class="hljs-string">&#x27;-100%&#x27;</span>, <span class="hljs-comment">//柱间距离,用来将上下两层圆环重合</span><br>                <span class="hljs-attr">coordinateSystem</span>: <span class="hljs-string">&#x27;polar&#x27;</span>, <span class="hljs-comment">//类型，极坐标</span><br>                <span class="hljs-attr">roundCap</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//顶端圆角</span><br>                <span class="hljs-attr">z</span>: <span class="hljs-number">2</span> <span class="hljs-comment">//圆环层级，和zindex相似</span><br>            &#125;, &#123; <span class="hljs-comment">//下层圆环，用于显示最大值</span><br>                <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,<br>                <span class="hljs-attr">data</span>: [&#123;<br>                    <span class="hljs-attr">value</span>: max,<br>                    <span class="hljs-attr">itemStyle</span>: &#123;<br>                        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#265195&#x27;</span>,<br>                        <span class="hljs-attr">shadowColor</span>: <span class="hljs-string">&#x27;rgba(0, 0, 0, 0.2)&#x27;</span>, <span class="hljs-comment">//加白色阴影产生高亮效果</span><br>                        <span class="hljs-attr">shadowBlur</span>: <span class="hljs-number">5</span>,<br>                        <span class="hljs-attr">shadowOffsetY</span>: <span class="hljs-number">2</span><br>                    &#125;<br>                &#125;],<br>                <span class="hljs-attr">barGap</span>: <span class="hljs-string">&#x27;-100%&#x27;</span>, <span class="hljs-comment">//柱间距离,用来将上下两层圆环重合</span><br>                <span class="hljs-attr">coordinateSystem</span>: <span class="hljs-string">&#x27;polar&#x27;</span>, <span class="hljs-comment">//类型，极坐标</span><br>                <span class="hljs-attr">roundCap</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//顶端圆角</span><br>                <span class="hljs-attr">z</span>: <span class="hljs-number">1</span> <span class="hljs-comment">//圆环层级，和zindex相似</span><br>            &#125;,<br>            &#123; <span class="hljs-comment">//仪表盘</span><br>                <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;gauge&#x27;</span>,<br>                <span class="hljs-attr">radius</span>: <span class="hljs-string">&#x27;95%&#x27;</span>,<br>                <span class="hljs-attr">startAngle</span>: <span class="hljs-number">210</span>, <span class="hljs-comment">//起始角度，同极坐标</span><br>                <span class="hljs-attr">endAngle</span>: -<span class="hljs-number">30</span>, <span class="hljs-comment">//终止角度，同极坐标</span><br>                <span class="hljs-attr">max</span>: max,<br>                <span class="hljs-attr">splitNumber</span>: <span class="hljs-number">5</span>, <span class="hljs-comment">//分割线个数（除原点外）</span><br>                <span class="hljs-attr">axisLine</span>: &#123; <span class="hljs-comment">// 坐标轴线</span><br>                    <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span><br>                &#125;,<br>                <span class="hljs-attr">pointer</span>: &#123;<br>                    <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span><br>                &#125;,<br>                <span class="hljs-attr">axisLabel</span>: &#123;<br>                    <span class="hljs-comment">// 坐标轴数字</span><br>                    <span class="hljs-attr">textStyle</span>: &#123;<br>                        <span class="hljs-attr">fontSize</span>: <span class="hljs-number">8</span>,<br>                        <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;#13B5FC&quot;</span><br>                    &#125;,<br><br>                &#125;,<br>                <span class="hljs-attr">axisTick</span>: &#123; <span class="hljs-comment">// 坐标轴标记</span><br>                    <span class="hljs-attr">length</span>: <span class="hljs-number">10</span>,<br>                    <span class="hljs-attr">lineStyle</span>: &#123;<br>                        <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;#13B5FC&quot;</span><br>                    &#125;<br>                &#125;,<br>                <span class="hljs-attr">splitLine</span>: &#123; <span class="hljs-comment">// 分隔线</span><br>                    <span class="hljs-attr">length</span>: <span class="hljs-number">5</span>,<br>                    <span class="hljs-attr">lineStyle</span>: &#123;<br>                        <span class="hljs-attr">width</span>: <span class="hljs-number">1</span>,<br>                    &#125;<br>                &#125;,<br>                <span class="hljs-attr">title</span>: &#123; <span class="hljs-comment">//标题，显示&#x27;馆藏量&#x27;</span><br>                    <span class="hljs-attr">textStyle</span>: &#123;<br>                        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#fff&#x27;</span>,<br>                        <span class="hljs-attr">shadowColor</span>: <span class="hljs-string">&#x27;#fff&#x27;</span>,<br>                        <span class="hljs-attr">fontSize</span>: <span class="hljs-number">30</span><br>                    &#125;,<br>                    <span class="hljs-attr">offsetCenter</span>: [<span class="hljs-string">&quot;0&quot;</span>, <span class="hljs-string">&#x27;-35%&#x27;</span>] <span class="hljs-comment">//位置偏移</span><br>                &#125;,<br>                <span class="hljs-attr">detail</span>: &#123; <span class="hljs-comment">//仪表盘数值</span><br>                    <span class="hljs-attr">formatter</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">params</span>) </span>&#123;<br>                        <span class="hljs-keyword">var</span> name = data.num.toString()<br>                        <span class="hljs-keyword">var</span> list = <span class="hljs-string">&#x27;&#x27;</span><br>                        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; name.length; i++) &#123;<br>                            list += <span class="hljs-string">&#x27;&#123;value|&#x27;</span> + name[i] + <span class="hljs-string">&#x27;&#125;&#x27;</span> <span class="hljs-comment">//每个数字用border隔开</span><br>                            <span class="hljs-keyword">if</span> (i !== name.length - <span class="hljs-number">1</span>) &#123;<br>                                list += <span class="hljs-string">&#x27;&#123;margin|&#125;&#x27;</span> <span class="hljs-comment">//添加margin值</span><br>                            &#125;<br>                        &#125;<br>                        <span class="hljs-keyword">return</span> [list]<br>                    &#125;,<br>                    <span class="hljs-attr">offsetCenter</span>: [<span class="hljs-string">&quot;0&quot;</span>, <span class="hljs-string">&#x27;5%&#x27;</span>],<br>                    <span class="hljs-attr">rich</span>: &#123; <span class="hljs-comment">//编辑富文本样式</span><br>                        <span class="hljs-attr">value</span>: &#123;<br>                            <span class="hljs-attr">width</span>: <span class="hljs-number">34</span>,<br>                            <span class="hljs-attr">height</span>: <span class="hljs-number">42</span>,<br>                            <span class="hljs-attr">borderColor</span>: <span class="hljs-string">&#x27;#02A0F0&#x27;</span>,<br>                            <span class="hljs-attr">borderWidth</span>: <span class="hljs-number">2</span>,<br>                            <span class="hljs-attr">borderRadius</span>: <span class="hljs-number">5</span>,<br>                            <span class="hljs-attr">lineHeight</span>: <span class="hljs-number">1000</span>,<br>                            <span class="hljs-attr">fontSize</span>: <span class="hljs-number">36</span>,<br>                            <span class="hljs-attr">padding</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>],<br>                            <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#fff&#x27;</span>,<br>                            <span class="hljs-attr">shadowColor</span>: <span class="hljs-string">&#x27;rgb(2,157,239)&#x27;</span>,<br>                            <span class="hljs-attr">shadowBlur</span>: <span class="hljs-number">5</span><br>                        &#125;,<br>                        <span class="hljs-attr">margin</span>: &#123;<br>                            <span class="hljs-attr">width</span>: <span class="hljs-number">8</span>,<br>                            <span class="hljs-attr">height</span>: <span class="hljs-number">42</span>,<br>                        &#125;<br>                    &#125;<br><br>                &#125;,<br>                <span class="hljs-attr">data</span>: [&#123;<br>                    <span class="hljs-attr">value</span>: data.num,<br>                    <span class="hljs-attr">name</span>: data.name<br>                &#125;]<br>            &#125;<br>        ]<br>    &#125;<br>    timeTick()<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setOption</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//更新数据</span><br>    data.num = <span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">Math</span>.random() * max)<br>    option.series[<span class="hljs-number">2</span>].data[<span class="hljs-number">0</span>].value = data.num<br>    option.series[<span class="hljs-number">0</span>].data[<span class="hljs-number">0</span>].value = data.num<br>    chart.setOption(option)<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">timeTick</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//定时器,最好用延时加递归，如果用setInterval，容易造成堵塞</span><br>    <span class="hljs-keyword">if</span> (timeTickId) &#123;<br>        <span class="hljs-built_in">clearTimeout</span>(timeTickId)<br>        timeTickId = <span class="hljs-number">0</span><br>    &#125;<br>    setOption()<br>    timeTickId = <span class="hljs-built_in">setTimeout</span>(timeTick, <span class="hljs-number">1000</span> * timer || <span class="hljs-number">5000</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>总结：</strong>编程即生活，有时候不能死磕到底，换个角度也许会更好</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Echarts案例：使用象形柱状图（PictorialBar）实现电池效果柱状图</title>
    <link href="/2020/03/21/Echarts%E6%A1%88%E4%BE%8B%20%E4%BD%BF%E7%94%A8%E8%B1%A1%E5%BD%A2%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88PictorialBar%EF%BC%89%E5%AE%9E%E7%8E%B0%E7%94%B5%E6%B1%A0%E6%95%88%E6%9E%9C%E6%9F%B1%E7%8A%B6%E5%9B%BE/"/>
    <url>/2020/03/21/Echarts%E6%A1%88%E4%BE%8B%20%E4%BD%BF%E7%94%A8%E8%B1%A1%E5%BD%A2%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88PictorialBar%EF%BC%89%E5%AE%9E%E7%8E%B0%E7%94%B5%E6%B1%A0%E6%95%88%E6%9E%9C%E6%9F%B1%E7%8A%B6%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<p>分享一个公司项目案例</p><p>UI小姐姐给的图是这样的：</p><p><img src="https://img-blog.csdnimg.cn/20200320215546388.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>最终实现效果：</p><p><img src="https://img-blog.csdnimg.cn/20200320220049870.gif"></p><p>以下是所有代码</p><p><strong>源码：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/Echart/PictorialBar">https://gitee.com/DieHunter/myCode/tree/master/Echart/PictorialBar</a></p><p>首先引入Echarts，cdn或npm都行</p><p><strong>HTML：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">        * &#123;</span><br><span class="css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">        &#125;</span><br><span class="css"></span><br><span class="css">        <span class="hljs-selector-class">.myChartBox</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">100px</span> auto;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">450px</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">240px</span>;</span><br><span class="css">            <span class="hljs-attribute">background</span>: <span class="hljs-number">#000</span>;</span><br><span class="css">        &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./data.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./echarts.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./myChart.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;myChartBox&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;myChartBox&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">let</span> _myChart, _option, timer = <span class="hljs-number">1.5</span>,</span><br><span class="javascript">            timeTickId, colorList, chartConfig; <span class="hljs-comment">//初始化变量，分别是初始化后的echart对象，echart配置信息，图表刷新频率，延时递归函数id，图表渐变颜色列表了，列表联动配置</span></span><br><span class="javascript">        <span class="hljs-keyword">let</span> &#123;</span><br><span class="javascript">            category,</span><br><span class="javascript">            lineData</span><br><span class="javascript">        &#125; = filterData(bookList) <span class="hljs-comment">//过滤后端数据，规范成x轴数组和y轴数组格式</span></span><br><span class="javascript">        <span class="hljs-keyword">let</span> init = <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">            _myChart = echarts.init(myChartBox); <span class="hljs-comment">//初始化chart</span></span><br><span class="javascript">            colorList = &#123;</span><br><span class="javascript">                <span class="hljs-attr">first</span>: [<span class="hljs-string">&quot;#F179C4&quot;</span>, <span class="hljs-string">&quot;#26AEFB&quot;</span>, <span class="hljs-string">&quot;#CDAD92&quot;</span>, <span class="hljs-string">&quot;#ED65BA&quot;</span>, <span class="hljs-string">&quot;#989FBB&quot;</span>, <span class="hljs-string">&quot;#E86A6A&quot;</span>, <span class="hljs-string">&quot;#6718CF&quot;</span>],</span><br><span class="javascript">                <span class="hljs-attr">second</span>: [<span class="hljs-string">&quot;#E33AA3&quot;</span>, <span class="hljs-string">&quot;#056FAB&quot;</span>, <span class="hljs-string">&quot;#FFAA62&quot;</span>, <span class="hljs-string">&quot;#E33AA3&quot;</span>, <span class="hljs-string">&quot;#28B1FF&quot;</span>, <span class="hljs-string">&quot;#FFAA62&quot;</span>, <span class="hljs-string">&quot;#F47384&quot;</span>]</span><br><span class="javascript">            &#125;</span><br><span class="javascript">            chartConfig = &#123; <span class="hljs-comment">//配置信息为，chart中横坐标第一项索引，最后一项索引，规定列表长度</span></span><br><span class="javascript">                <span class="hljs-attr">first</span>: <span class="hljs-number">0</span>,</span><br><span class="javascript">                <span class="hljs-attr">second</span>: <span class="hljs-number">7</span>,</span><br><span class="javascript">                <span class="hljs-attr">max</span>: <span class="hljs-number">20</span></span><br><span class="javascript">            &#125;</span><br><span class="javascript">            createChart()</span><br><span class="javascript">        &#125;;</span><br><span class="javascript">        (<span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">            init()</span><br><span class="javascript">        &#125;)()</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>data.js（暂存数据）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> bookList = [&#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;综合图书&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">28264</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;文学&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">14591</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;儿童文学&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">10186</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;文化教育&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">20477</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;语言文字&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">17344</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;哲学&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">16238</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;历史地理&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">15457</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;政治思想&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">5793</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;生物科学&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">4966</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;绘本&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">4521</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;艺术&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">4157</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;地球天文&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">2545</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;军事&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">2368</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;自然科学&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">2358</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;工业技术&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">1830</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;社会科学&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">1689</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;数理化&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">1394</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;政治法律&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">1303</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;少年百科&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">1201</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;经济&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">923</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;童话故事&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">840</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;环境安全&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">615</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;医药卫生&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">518</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;航空航天&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">457</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;农业科学&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">347</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;家庭教育&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">211</span><br>&#125;, &#123;<br>    <span class="hljs-string">&quot;typeName&quot;</span>: <span class="hljs-string">&quot;交通运输&quot;</span>,<br>    <span class="hljs-string">&quot;bnum&quot;</span>: <span class="hljs-number">188</span><br>&#125;]<br></code></pre></td></tr></table></figure><p><strong>myChart.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> createChart = <span class="hljs-function">() =&gt;</span> &#123;<br>    _option = &#123;<br>        <span class="hljs-attr">grid</span>: [&#123; <span class="hljs-comment">//设置边距</span><br>            <span class="hljs-attr">left</span>: <span class="hljs-number">55</span>,<br>            <span class="hljs-attr">bottom</span>: <span class="hljs-number">53</span>,<br>            <span class="hljs-attr">top</span>: <span class="hljs-number">20</span>,<br>            <span class="hljs-attr">right</span>: <span class="hljs-number">10</span><br>        &#125;],<br>        <span class="hljs-attr">yAxis</span>: &#123; <span class="hljs-comment">//Y轴配置</span><br>            <span class="hljs-attr">show</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">axisLine</span>: &#123;<br>                <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,<br>                <span class="hljs-attr">lineStyle</span>: &#123; <span class="hljs-comment">//隐藏Y轴</span><br>                    <span class="hljs-attr">opacity</span>: <span class="hljs-number">0</span><br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">axisTick</span>: &#123; <span class="hljs-comment">//隐藏刻度</span><br>                <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,<br>            &#125;,<br>            <span class="hljs-attr">splitLine</span>: &#123; <span class="hljs-comment">//隐藏刻度</span><br>                <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,<br>            &#125;,<br>            <span class="hljs-attr">axisLabel</span>: &#123; <span class="hljs-comment">//Y轴文字</span><br>                <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#fff&#x27;</span>,<br>                <span class="hljs-attr">fontSize</span>: <span class="hljs-number">12</span><br>            &#125;,<br>        &#125;,<br>        <span class="hljs-attr">xAxis</span>: &#123; <span class="hljs-comment">//X轴配置</span><br>            <span class="hljs-attr">data</span>: category, <span class="hljs-comment">//X轴数据</span><br>            <span class="hljs-attr">show</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">axisLabel</span>: &#123; <span class="hljs-comment">//X轴文字样式</span><br>                <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#a9aabc&#x27;</span>,<br>                <span class="hljs-attr">fontSize</span>: <span class="hljs-number">12</span>,<br>                <span class="hljs-attr">interval</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-attr">padding</span>: [<span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>]<br>            &#125;,<br>            <span class="hljs-attr">axisLine</span>: &#123;<br>                <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span><br>            &#125;,<br>            <span class="hljs-attr">axisTick</span>: &#123;<br>                <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,<br>            &#125;<br>        &#125;,<br>        <span class="hljs-attr">series</span>: [&#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;pictorialBar&#x27;</span>, <span class="hljs-comment">//设置类型为象形柱状图</span><br>            <span class="hljs-attr">symbol</span>: <span class="hljs-string">&#x27;roundRect&#x27;</span>, <span class="hljs-comment">//图形类型，带圆角的矩形</span><br>            <span class="hljs-attr">barWidth</span>: <span class="hljs-string">&#x27;11%&#x27;</span>, <span class="hljs-comment">//柱图宽度</span><br>            <span class="hljs-attr">barMaxWidth</span>: <span class="hljs-string">&#x27;20%&#x27;</span>, <span class="hljs-comment">//最大宽度</span><br>            <span class="hljs-attr">symbolMargin</span>: <span class="hljs-string">&#x27;3&#x27;</span>, <span class="hljs-comment">//图形垂直间隔</span><br>            <span class="hljs-attr">animationDelay</span>: <span class="hljs-function">(<span class="hljs-params">dataIndex, params</span>) =&gt;</span> &#123; <span class="hljs-comment">//每个图形动画持续时间</span><br>                <span class="hljs-keyword">return</span> params.index * <span class="hljs-number">50</span>;<br>            &#125;,<br>            <span class="hljs-attr">itemStyle</span>: &#123;<br>                <span class="hljs-attr">normal</span>: &#123;<br>                    <span class="hljs-attr">color</span>: <span class="hljs-function"><span class="hljs-params">params</span> =&gt;</span> &#123; <span class="hljs-comment">//图形渐变颜色方法，四个数字分别代表，右，下，左，上，offset表示0%到100%</span><br>                        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> echarts.graphic.LinearGradient(<br>                            <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, [&#123;<br>                                    <span class="hljs-attr">offset</span>: <span class="hljs-number">0</span>,<br>                                    <span class="hljs-attr">color</span>: colorList.first[params.dataIndex]<br>                                &#125;,<br>                                &#123;<br>                                    <span class="hljs-attr">offset</span>: <span class="hljs-number">1</span>,<br>                                    <span class="hljs-attr">color</span>: colorList.second[params.dataIndex]<br>                                &#125;<br>                            ])<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-attr">z</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-attr">symbolRepeat</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//图形是否重复</span><br>            <span class="hljs-attr">symbolSize</span>: [<span class="hljs-number">25</span>, <span class="hljs-number">6</span>], <span class="hljs-comment">//图形元素的尺寸</span><br>            <span class="hljs-attr">data</span>: lineData, <span class="hljs-comment">//Y轴数据</span><br>            <span class="hljs-attr">animationEasing</span>: <span class="hljs-string">&#x27;elasticOut&#x27;</span> <span class="hljs-comment">//动画效果</span><br>        &#125;]<br>    &#125;<br>    timeTick()<br>&#125;<br><span class="hljs-keyword">let</span> disposeChart = <span class="hljs-function">() =&gt;</span> &#123; <span class="hljs-comment">//销毁chart</span><br>    _myChart.dispose()<br>    _myChart = <span class="hljs-literal">null</span><br>&#125;<br><span class="hljs-keyword">let</span> setOption = <span class="hljs-function">() =&gt;</span> &#123; <span class="hljs-comment">//重置数据</span><br>    _option.xAxis.data = category.slice(chartConfig.first, chartConfig.second)<br>    _option.series[<span class="hljs-number">0</span>].data = lineData.slice(chartConfig.first, chartConfig.second)<br>    _myChart.setOption(_option, <span class="hljs-literal">true</span>)<br>&#125;<br><span class="hljs-keyword">let</span> timeTick = <span class="hljs-function">() =&gt;</span> &#123; <span class="hljs-comment">//定时器,最好用延时加递归，如果用setInterval，容易造成堵塞</span><br>    <span class="hljs-keyword">if</span> (timeTickId) &#123;<br>        <span class="hljs-built_in">clearTimeout</span>(timeTickId)<br>        timeTickId = <span class="hljs-number">0</span><br>    &#125;<br>    autoChangeData()<br>    timeTickId = <span class="hljs-built_in">setTimeout</span>(timeTick, <span class="hljs-number">1000</span> * timer || <span class="hljs-number">5000</span>)<br>&#125;<br><span class="hljs-keyword">let</span> autoChangeData = <span class="hljs-function">() =&gt;</span> &#123; <span class="hljs-comment">//偏移数组，切换数据</span><br>    <span class="hljs-keyword">if</span> (!chartConfig.max) &#123;<br>        <span class="hljs-keyword">return</span><br>    &#125;<br>    <span class="hljs-keyword">if</span> (chartConfig.second &gt;= chartConfig.max) &#123;<br>        chartConfig.second = chartConfig.second - chartConfig.first<br>        chartConfig.first = <span class="hljs-number">0</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        chartConfig.first++<br>        chartConfig.second++<br>    &#125;<br>    setOption()<br>&#125;<br><span class="hljs-keyword">let</span> filterData = <span class="hljs-function">(<span class="hljs-params">data, category = [], lineData = []</span>) =&gt;</span> &#123; <span class="hljs-comment">//过滤后端数据，分别变成X轴数组和Y轴数组</span><br>    data.forEach(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>        item.typeName = item.typeName.length &gt; <span class="hljs-number">2</span> ? item.typeName.substring(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>) : item.typeName<br>        category.push(item.typeName || <span class="hljs-string">&#x27;&#x27;</span>)<br>        lineData.push(item.bnum || <span class="hljs-number">0</span>)<br>    &#125;)<br>    <span class="hljs-keyword">return</span> &#123;<br>        category,<br>        lineData<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Echarts案例：使用极坐标加柱状图实现类似Apple Watch上的运动环形效果</title>
    <link href="/2020/03/21/Echarts%E6%A1%88%E4%BE%8B%20%E4%BD%BF%E7%94%A8%E6%9E%81%E5%9D%90%E6%A0%87%E5%8A%A0%E6%9F%B1%E7%8A%B6%E5%9B%BE%E5%AE%9E%E7%8E%B0%E7%B1%BB%E4%BC%BCApple%20Watch%E4%B8%8A%E7%9A%84%E8%BF%90%E5%8A%A8%E7%8E%AF%E5%BD%A2%E6%95%88%E6%9E%9C/"/>
    <url>/2020/03/21/Echarts%E6%A1%88%E4%BE%8B%20%E4%BD%BF%E7%94%A8%E6%9E%81%E5%9D%90%E6%A0%87%E5%8A%A0%E6%9F%B1%E7%8A%B6%E5%9B%BE%E5%AE%9E%E7%8E%B0%E7%B1%BB%E4%BC%BCApple%20Watch%E4%B8%8A%E7%9A%84%E8%BF%90%E5%8A%A8%E7%8E%AF%E5%BD%A2%E6%95%88%E6%9E%9C/</url>
    
    <content type="html"><![CDATA[<p>分享自己公司项目类似的一个案例，用Echarts中的Polar（极坐标或称为平面直角坐标系）和Bar（柱状图）实现的</p><p>大致效果是这样的</p><p><img src="https://img-blog.csdnimg.cn/20200320173636628.gif"></p><p>参照的是AntV中的<a href="https://antv-f2.gitee.io/zh/examples/gallery/fitness-ring">https://antv-f2.gitee.io/zh/examples/gallery/fitness-ring</a>的效果，只不过我是用Echarts实现的<br>首先需要引入Echarts.js,推荐用npm下载：npm install echarts<br>或直接用cdn托管：<a href="https://www.bootcdn.cn/echarts/">https://www.bootcdn.cn/echarts/</a><br><strong>源码：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/Echart/AppleWatch">https://gitee.com/DieHunter/myCode/tree/master/Echart/AppleWatch</a><br>以下是全部代码：</p><p><strong>HTML：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">        * &#123;</span><br><span class="css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">        &#125;</span><br><span class="css"></span><br><span class="css">        <span class="hljs-selector-class">.chart_box</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">300px</span>;</span><br><span class="css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">100px</span> auto <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">background</span>: <span class="hljs-number">#000</span>;</span><br><span class="css">        &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./echarts.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;chart_box&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;chart_box&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">import</span> MyChart <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./MyChart.js&#x27;</span></span><br><span class="javascript">        MyChart.getInstance(echarts,chart_box).createChart()<span class="hljs-comment">//初始化入口函数</span></span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>JS：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyChart</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">_echart, _ele</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.timeTickId = <span class="hljs-literal">null</span> <span class="hljs-comment">//定时器id</span><br>        <span class="hljs-built_in">this</span>.timer = <span class="hljs-number">1.5</span> <span class="hljs-comment">//更新数据频率</span><br>        <span class="hljs-built_in">this</span>.option = <span class="hljs-literal">null</span> <span class="hljs-comment">//当前echarts实例的属性</span><br>        <span class="hljs-built_in">this</span>._echart = _echart <span class="hljs-comment">//引入Echarts</span><br>        <span class="hljs-built_in">this</span>._ele = _ele <span class="hljs-comment">//案例的父元素</span><br>        <span class="hljs-built_in">this</span>.myChart = <span class="hljs-literal">null</span> <span class="hljs-comment">//当前echarts实例</span><br>        <span class="hljs-built_in">this</span>.colorList = [<span class="hljs-string">&#x27;#14A5AB&#x27;</span>, <span class="hljs-string">&#x27;#88D903&#x27;</span>, <span class="hljs-string">&#x27;#E90B3A&#x27;</span>] <span class="hljs-comment">//上层环背景</span><br>        <span class="hljs-built_in">this</span>.bgList = [<span class="hljs-string">&#x27;#183C3D&#x27;</span>, <span class="hljs-string">&#x27;#324214&#x27;</span>, <span class="hljs-string">&#x27;#40131D&#x27;</span>] <span class="hljs-comment">//下层环背景</span><br>        <span class="hljs-built_in">this</span>.maxCount = <span class="hljs-number">100</span> <span class="hljs-comment">//圆环最大值,即转一圈的值</span><br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">getInstance</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//单例模式</span><br>        <span class="hljs-keyword">if</span> (!MyChart._instance) &#123;<br>            <span class="hljs-built_in">Object</span>.defineProperty(MyChart, <span class="hljs-string">&quot;_instance&quot;</span>, &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> MyChart(...arguments)<br>            &#125;)<br>        &#125;<br>        <span class="hljs-keyword">return</span> MyChart._instance;<br>    &#125;<br>    createChart = <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-built_in">this</span>.disposeChart() <span class="hljs-comment">//创建前初始化chart实例，若有，则销毁</span><br>        <span class="hljs-built_in">this</span>.myChart = <span class="hljs-built_in">this</span>._echart.init(<span class="hljs-built_in">this</span>._ele)<br>        <span class="hljs-built_in">this</span>.option = &#123;<br>            <span class="hljs-attr">angleAxis</span>: &#123;<br>                <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//隐藏角度轴（圆心角）</span><br>                <span class="hljs-attr">max</span>: <span class="hljs-built_in">this</span>.maxCount,<br>                <span class="hljs-attr">startAngle</span>: <span class="hljs-number">90</span>, <span class="hljs-comment">//极坐标从第一象限开始，即平面直角坐标系,用时钟理解，0就是三点钟方向，这里我们从12点钟方向开始，也就是3点钟方向加90度</span><br>                <span class="hljs-attr">splitLine</span>: &#123;<br>                    <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span> <span class="hljs-comment">//隐藏分隔线</span><br>                &#125;,<br>            &#125;,<br>            <span class="hljs-attr">barMaxWidth</span>: <span class="hljs-number">50</span>, <span class="hljs-comment">//设置圆环最大宽度</span><br>            <span class="hljs-attr">radiusAxis</span>: &#123;<br>                <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//隐藏径向轴（半径）</span><br>                <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>,<br>                <span class="hljs-attr">data</span>: [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>] <span class="hljs-comment">//传入每条圆环的径向值</span><br>            &#125;,<br>            <span class="hljs-attr">polar</span>: &#123;<br>                <span class="hljs-attr">radius</span>: [<span class="hljs-number">30</span>, <span class="hljs-number">150</span>] <span class="hljs-comment">//总体的最小半径，最大半径</span><br>            &#125;,<br>            <span class="hljs-attr">series</span>: [&#123; <span class="hljs-comment">//上层的圆环</span><br>                    <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,<br>                    <span class="hljs-attr">data</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], <span class="hljs-comment">//初始值</span><br>                    <span class="hljs-attr">coordinateSystem</span>: <span class="hljs-string">&#x27;polar&#x27;</span>, <span class="hljs-comment">//设置类型为极坐标</span><br>                    <span class="hljs-attr">roundCap</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//柱状图末端呈现圆角</span><br>                    <span class="hljs-attr">itemStyle</span>: &#123; <span class="hljs-comment">//设置每一个圆环的颜色</span><br>                        <span class="hljs-attr">color</span>: <span class="hljs-function">(<span class="hljs-params">params</span>) =&gt;</span> &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.colorList[params.dataIndex]<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">animationEasing</span>: <span class="hljs-string">&#x27;bounceOut&#x27;</span>, <span class="hljs-comment">//初始动画</span><br>                    <span class="hljs-attr">barGap</span>: <span class="hljs-string">&#x27;-100%&#x27;</span>, <span class="hljs-comment">//柱间距离,用来将上下两种圆环重合</span><br>                    <span class="hljs-attr">z</span>: <span class="hljs-number">200</span>, <span class="hljs-comment">//圆环层级，和zindex相似</span><br>                &#125;,<br>                &#123; <span class="hljs-comment">//下层的圆环</span><br>                    <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,<br>                    <span class="hljs-attr">data</span>: [<span class="hljs-built_in">this</span>.maxCount, <span class="hljs-built_in">this</span>.maxCount, <span class="hljs-built_in">this</span>.maxCount],<br>                    <span class="hljs-attr">coordinateSystem</span>: <span class="hljs-string">&#x27;polar&#x27;</span>,<br>                    <span class="hljs-attr">roundCap</span>: <span class="hljs-literal">true</span>,<br>                    <span class="hljs-attr">itemStyle</span>: &#123; <span class="hljs-comment">//设置每一个圆环的颜色</span><br>                        <span class="hljs-attr">color</span>: <span class="hljs-function">(<span class="hljs-params">params</span>) =&gt;</span> &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.bgList[params.dataIndex]<br>                        &#125;<br>                    &#125;,<br>                    <span class="hljs-attr">z</span>: <span class="hljs-number">100</span>,<br>                    <span class="hljs-attr">barGap</span>: <span class="hljs-string">&#x27;-100%&#x27;</span>, <span class="hljs-comment">//柱间距离,用来将上下两种圆环重合</span><br>                &#125;<br>            ]<br>        &#125;;<br>        <span class="hljs-built_in">this</span>.timeTick() <span class="hljs-comment">//定时器入口</span><br>    &#125;<br>    setOption = <span class="hljs-function">() =&gt;</span> &#123; <span class="hljs-comment">//随机数刷新数据</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.option) &#123;<br>            <span class="hljs-built_in">this</span>.option.series[<span class="hljs-number">0</span>].data = <span class="hljs-built_in">this</span>.option.series[<span class="hljs-number">0</span>].data.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.random() * <span class="hljs-built_in">this</span>.maxCount<br>            &#125;)<br>        &#125;<br>        <span class="hljs-built_in">this</span>.myChart.setOption(<span class="hljs-built_in">this</span>.option, <span class="hljs-literal">true</span>)<br>    &#125;<br>    disposeChart = <span class="hljs-function">() =&gt;</span> &#123; <span class="hljs-comment">//初始化chart实例</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.myChart) &#123;<br>            <span class="hljs-built_in">this</span>.myChart.dispose()<br>            <span class="hljs-built_in">this</span>.myChart = <span class="hljs-literal">null</span><br>            <span class="hljs-built_in">this</span>.option = <span class="hljs-literal">null</span><br>        &#125;<br>    &#125;<br>    timeTick = <span class="hljs-function">() =&gt;</span> &#123; <span class="hljs-comment">//定时器,最好用延时加递归，如果用setInterval，容易造成堵塞</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.timeTickId) &#123;<br>            <span class="hljs-built_in">clearTimeout</span>(<span class="hljs-built_in">this</span>.timeTickId)<br>            <span class="hljs-built_in">this</span>.timeTickId = <span class="hljs-number">0</span><br>        &#125;<br>        <span class="hljs-built_in">this</span>.setOption()<br>        <span class="hljs-built_in">this</span>.timeTickId = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-built_in">this</span>.timeTick, <span class="hljs-number">1000</span> * <span class="hljs-built_in">this</span>.timer || <span class="hljs-number">5000</span>)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用JS+socket.io+WebRTC+nodejs+express搭建一个简易版远程视频聊天</title>
    <link href="/2020/03/12/%E4%BD%BF%E7%94%A8JS+socket.io+WebRTC+nodejs+express%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%89%88%E8%BF%9C%E7%A8%8B%E8%A7%86%E9%A2%91%E8%81%8A%E5%A4%A9/"/>
    <url>/2020/03/12/%E4%BD%BF%E7%94%A8JS+socket.io+WebRTC+nodejs+express%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%89%88%E8%BF%9C%E7%A8%8B%E8%A7%86%E9%A2%91%E8%81%8A%E5%A4%A9/</url>
    
    <content type="html"><![CDATA[<p><strong>目录</strong></p><p><a href="#WebRTC">WebRTC</a></p><p><a href="#%E4%BB%A3%E7%A0%81%E5%8E%9F%E7%90%86%E5%8F%8A%E6%B5%81%E7%A8%8B">代码原理及流程</a></p><p><a href="#%E6%BA%90%E7%A0%81%EF%BC%9Agit@gitee.com:DieHunter/myCode.git%E4%BB%93%E5%BA%93%EF%BC%9AmyCode/videoSteam">源码：git@gitee.com:DieHunter/myCode.git仓库：myCode/videoSteam</a></p><p><a href="#%E5%89%8D%E7%AB%AF">前端</a></p><p><a href="#%E5%85%88%E9%99%84%E4%B8%8AHTML%E5%92%8CCSS">先附上HTML和CSS</a></p><p><a href="#%E5%AE%8C%E6%95%B4%E7%9A%84socket.js">完整的socket.js</a></p><p><a href="#%E5%AE%8C%E6%95%B4%E7%9A%84userList.js%EF%BC%88%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E5%9C%A8%E7%BA%BF%E5%88%97%E8%A1%A8%EF%BC%8C%E6%B7%BB%E5%8A%A0%E9%82%80%E8%AF%B7%E4%BA%8B%E4%BB%B6%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E8%81%8A%E5%A4%A9%E5%AE%A4%EF%BC%89">完整的userList.js（创建用户在线列表，添加邀请事件，初始化聊天室）</a></p><p><a href="#%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98">遇到的问题</a></p><p><a href="#%E4%BC%98%E5%8C%96%E5%90%8E%E5%AE%8C%E6%95%B4%E7%9A%84video.js">优化后完整的video.js</a></p><p><a href="#%E6%9C%8D%E5%8A%A1%E7%AB%AF">服务端</a></p><p><a href="#%E5%AE%8C%E6%95%B4%E7%9A%84server.js">完整的server.js</a></p><p><a href="#%E5%AE%9E%E7%8E%B0%E6%95%88%E6%9E%9C">实现效果</a></p><p><a href="#%E6%B3%A8%E6%84%8F%EF%BC%9A">注意：</a></p><hr><h2 id="WebRTC"><a href="#WebRTC" class="headerlink" title="WebRTC"></a><strong>WebRTC</strong></h2><p><strong>网页即时通信，</strong>是<strong>Web Real-Time Communication</strong>的缩写，它支持<strong>peer-to-peer（浏览器与浏览器之间）</strong>进行视频，音频传输，并保证传输质量，将其发送至本地<strong>audio</strong>标签，<strong>video</strong>标签或发送到另一个浏览器中，本文使用到<strong>navigator.mediaDevices</strong>，<strong>RTCPeerConnection</strong>对象配合<strong>socket+node</strong>构建远程实时视频聊天功能，文章有一个不足之处，后面会讲到。</p><p><strong>相关文档：</strong><br><strong><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MediaDevices">MediaDevices</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API">WebRTC API</a></strong></p><p><strong>参考文章：</strong><br><a href="https://rtcdeveloper.com/t/topic/13777"><strong>https://rtcdeveloper.com/t/topic/13777</strong></a></p><h2 id="代码原理及流程"><a href="#代码原理及流程" class="headerlink" title="代码原理及流程"></a>代码原理及流程</h2><p><img src="https://img-blog.csdnimg.cn/20200311214302905.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="源码：https-gitee-com-DieHunter-myCode-tree-master-videoSteam"><a href="#源码：https-gitee-com-DieHunter-myCode-tree-master-videoSteam" class="headerlink" title="源码：https://gitee.com/DieHunter/myCode/tree/master/videoSteam"></a>源码：<a href="https://gitee.com/DieHunter/myCode/tree/master/videoSteam">https://gitee.com/DieHunter/myCode/tree/master/videoSteam</a></h3><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a><strong>前端</strong></h2><p>要实现点对点就需要用到socket长链接从服务端进行寻呼<br>这是我以前的一篇关于socket简单使用的小案例：**<a href="https://blog.csdn.net/time_____/article/details/86748679">https://blog.csdn.net/time_____/article/details/86748679</a>**<br>首先引入**<a href="https://cdn.bootcss.com/socket.io/2.3.0/socket.io.js">socket.io</a>**，这里我将前端js分成三部分，分别是socket.js（socket相关操作），userList.js（页面操作）,video.js（视频聊天）</p><p><img src="https://img-blog.csdnimg.cn/20200311200304249.png"></p><h3 id="先附上HTML和CSS"><a href="#先附上HTML和CSS" class="headerlink" title="先附上HTML和CSS"></a>先附上HTML和CSS</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./style/main.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/socket.io.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/socket.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/userList.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/video.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;login&quot;</span> <span class="hljs-attr">hidden</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;loginBox&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;userName&quot;</span> <span class="hljs-attr">autocomplete</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;userName&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入英文用户名&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>提交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;chatBox&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;chatBox&quot;</span> <span class="hljs-attr">hidden</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;myName&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;myName&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;userList&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;userList&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;videoChat&quot;</span> <span class="hljs-attr">hidden</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;videoChat&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;back&quot;</span> <span class="hljs-attr">hidden</span>&gt;</span>结束<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;myVideo&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;myVideo&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;otherVideo&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;otherVideo&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        checkToken()</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkToken</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//判断用户是否已有用户名</span></span><br><span class="javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">localStorage</span>.token) &#123;</span><br><span class="javascript">                login.hidden = <span class="hljs-literal">true</span></span><br><span class="javascript">                chatBox.hidden = <span class="hljs-literal">false</span></span><br><span class="javascript">                initSocket(<span class="hljs-built_in">localStorage</span>.token) <span class="hljs-comment">//初始化socket连接</span></span><br><span class="javascript">            &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">                login.hidden = <span class="hljs-literal">false</span></span><br><span class="javascript">                chatBox.hidden = <span class="hljs-literal">true</span></span><br><span class="javascript">                submit.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">                    initSocket(userName.value) <span class="hljs-comment">//初始化socket连接</span></span><br><span class="javascript">                &#125;)</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs css">* &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.loginBox</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.userName</span>,<br><span class="hljs-selector-class">.loginBox</span> <span class="hljs-selector-tag">button</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">outline</span>: none;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">26px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.userName</span> &#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightcoral;<br>    <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.loginBox</span> <span class="hljs-selector-tag">button</span> &#123;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">display</span>: block;<br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">::placeholder</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">26px</span>;<br>    <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.chatBox</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><br><span class="hljs-selector-class">.myName</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">40px</span>;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;<br>    <span class="hljs-attribute">background</span>: lightcoral;<br>&#125;<br><br><span class="hljs-selector-class">.userList</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">50px</span>;<br>    <span class="hljs-attribute">overflow-y</span>: scroll;<br>    <span class="hljs-attribute">list-style</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.userList</span>&gt;<span class="hljs-selector-tag">li</span> &#123;<br>    <span class="hljs-attribute">background</span>: lightblue;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;<br>    <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.videoChat</span> &#123;<br>    <span class="hljs-attribute">background</span>: lightgreen;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.videoChat</span> <span class="hljs-selector-tag">button</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">outline</span>: none;<br>    <span class="hljs-attribute">float</span>: left;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">26px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.myVideo</span>,<span class="hljs-selector-class">.otherVideo</span>&#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">250px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">250px</span>;<br>    <span class="hljs-attribute">float</span>: left;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>大致效果</strong></p><p><img src="https://img-blog.csdnimg.cn/20200311220142550.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200311220245995.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200311220259218.png"></p><p><strong>socket.js</strong><br>首先建立socket连接，添加连接和断开的事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> socket <span class="hljs-comment">//供其他页面调用</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initSocket</span>(<span class="hljs-params">token</span>) </span>&#123;<span class="hljs-comment">//获取到用户输入的id并传到服务端</span><br>    socket = io(<span class="hljs-string">&#x27;http://127.0.0.1:1024?token=&#x27;</span> + token, &#123;<br>        <span class="hljs-attr">autoConnect</span>: <span class="hljs-literal">false</span><br>    &#125;);<br>    socket.open();<br>    socket.on(<span class="hljs-string">&#x27;open&#x27;</span>, socketOpen); <span class="hljs-comment">//连接登录</span><br>    socket.on(<span class="hljs-string">&#x27;disconnect&#x27;</span>, socketClose); <span class="hljs-comment">//连接断开</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">socketClose</span>(<span class="hljs-params">reason</span>) </span>&#123; <span class="hljs-comment">//主动或被动关闭socket</span><br>    <span class="hljs-built_in">console</span>.log(reason)<br>    <span class="hljs-built_in">localStorage</span>.removeItem(<span class="hljs-string">&quot;token&quot;</span>)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">socketOpen</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//socket开启</span><br>    <span class="hljs-keyword">if</span> (!data.result) &#123; <span class="hljs-comment">//当服务端找到相同id时跳出连接</span><br>        <span class="hljs-built_in">console</span>.log(data.msg)<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>createChatList(data) <span class="hljs-comment">//创建用户列表</span><br>    <span class="hljs-built_in">localStorage</span>.setItem(<span class="hljs-string">&#x27;token&#x27;</span>, data.token)<br>    login.hidden = <span class="hljs-literal">true</span><br>    chatBox.hidden = <span class="hljs-literal">false</span><br>    videoChat.hidden = <span class="hljs-literal">true</span><br>    myName.textContent = <span class="hljs-built_in">localStorage</span>.token<br>&#125;<br></code></pre></td></tr></table></figure><p>之后在socket中添加几个事件监听</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">socket.on(<span class="hljs-string">&#x27;dataChange&#x27;</span>, createChatList); <span class="hljs-comment">//新增人员</span><br>socket.on(<span class="hljs-string">&#x27;inviteVideoHandler&#x27;</span>, inviteVideoHandler); <span class="hljs-comment">//被邀请视频</span><br>socket.on(<span class="hljs-string">&#x27;askVideoHandler&#x27;</span>, askVideoHandler); <span class="hljs-comment">//视频邀请结果</span><br>socket.on(<span class="hljs-string">&#x27;ice&#x27;</span>, getIce); <span class="hljs-comment">//从服务端接收ice</span><br>socket.on(<span class="hljs-string">&#x27;offer&#x27;</span>, getOffer); <span class="hljs-comment">//从服务端接收offer</span><br>socket.on(<span class="hljs-string">&#x27;answer&#x27;</span>, getAnswer); <span class="hljs-comment">//从服务端接收answer</span><br>socket.on(<span class="hljs-string">&#x27;break&#x27;</span>, stopVideoStream) <span class="hljs-comment">//挂断视频通话</span><br></code></pre></td></tr></table></figure><p>若用户接到对方邀请时，弹出确认框，并将结果返回给对方</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">inviteVideoHandler</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//当用户被邀请时执行</span><br>    <span class="hljs-keyword">let</span> allow = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span> (isCalling) &#123;<br>        allow = -<span class="hljs-number">1</span> <span class="hljs-comment">//正在通话</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">let</span> res = confirm(data.msg);<br>        <span class="hljs-keyword">if</span> (res) &#123;<br>            allow = <span class="hljs-number">1</span><br>            startVideoChat(data.token) <span class="hljs-comment">//用户点击同意后开始初始化视频聊天</span><br>            <span class="hljs-built_in">localStorage</span>.setItem(<span class="hljs-string">&#x27;roomNo&#x27;</span>, data.roomNo) <span class="hljs-comment">//将房间号保存</span><br>        &#125;<br>    &#125;<br>    socket.emit(<span class="hljs-string">&#x27;askVideo&#x27;</span>, &#123;<br>        <span class="hljs-attr">myId</span>: <span class="hljs-built_in">localStorage</span>.token,<br>        <span class="hljs-attr">otherId</span>: data.token,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;askVideo&#x27;</span>,<br>        allow<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>当收到返回邀请结果时，后端创建视频聊天房间后，开始初始化聊天室</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">askVideoHandler</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//获取被邀请用户的回复</span><br>    <span class="hljs-built_in">console</span>.log(data.msg)<br>    <span class="hljs-keyword">if</span> (data.allow == -<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> <span class="hljs-comment">//通话中</span><br>    <span class="hljs-keyword">if</span> (data.allow) &#123;<br>        <span class="hljs-built_in">localStorage</span>.setItem(<span class="hljs-string">&#x27;roomNo&#x27;</span>, data.roomNo) <span class="hljs-comment">//将房间号保存</span><br>        startVideoChat(data.token)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当用户挂断时</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">breakVideoConnect</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">localStorage</span>.getItem(<span class="hljs-string">&#x27;roomNo&#x27;</span>))<br>    socket.emit(<span class="hljs-string">&#x27;_break&#x27;</span>, &#123;<br>        <span class="hljs-attr">roomNo</span>: <span class="hljs-built_in">localStorage</span>.getItem(<span class="hljs-string">&#x27;roomNo&#x27;</span>)<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h3 id="完整的socket-js"><a href="#完整的socket-js" class="headerlink" title="完整的socket.js"></a>完整的socket.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> socket <span class="hljs-comment">//供其他页面调用</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initSocket</span>(<span class="hljs-params">token</span>) </span>&#123;<span class="hljs-comment">//获取到用户输入的id并传到服务端</span><br>    socket = io(<span class="hljs-string">&#x27;http://127.0.0.1:1024?token=&#x27;</span> + token, &#123;<br>        <span class="hljs-attr">autoConnect</span>: <span class="hljs-literal">false</span><br>    &#125;);<br>    socket.open();<br>    socket.on(<span class="hljs-string">&#x27;open&#x27;</span>, socketOpen); <span class="hljs-comment">//连接登录</span><br>    socket.on(<span class="hljs-string">&#x27;disconnect&#x27;</span>, socketClose); <span class="hljs-comment">//连接断开</span><br>    socket.on(<span class="hljs-string">&#x27;dataChange&#x27;</span>, createChatList); <span class="hljs-comment">//新增人员</span><br>    socket.on(<span class="hljs-string">&#x27;inviteVideoHandler&#x27;</span>, inviteVideoHandler); <span class="hljs-comment">//被邀请视频</span><br>    socket.on(<span class="hljs-string">&#x27;askVideoHandler&#x27;</span>, askVideoHandler); <span class="hljs-comment">//视频邀请结果</span><br>    socket.on(<span class="hljs-string">&#x27;ice&#x27;</span>, getIce); <span class="hljs-comment">//从服务端接收ice</span><br>    socket.on(<span class="hljs-string">&#x27;offer&#x27;</span>, getOffer); <span class="hljs-comment">//从服务端接收offer</span><br>    socket.on(<span class="hljs-string">&#x27;answer&#x27;</span>, getAnswer); <span class="hljs-comment">//从服务端接收answer</span><br>    socket.on(<span class="hljs-string">&#x27;break&#x27;</span>, stopVideoStream) <span class="hljs-comment">//挂断视频通话</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">socketClose</span>(<span class="hljs-params">reason</span>) </span>&#123; <span class="hljs-comment">//主动或被动关闭socket</span><br>    <span class="hljs-built_in">console</span>.log(reason)<br>    <span class="hljs-built_in">localStorage</span>.removeItem(<span class="hljs-string">&quot;token&quot;</span>)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">socketOpen</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//socket开启</span><br>    <span class="hljs-keyword">if</span> (!data.result) &#123; <span class="hljs-comment">//当服务端找到相同id时跳出连接</span><br>        <span class="hljs-built_in">console</span>.log(data.msg)<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    createChatList(data) <span class="hljs-comment">//创建用户列表</span><br>    <span class="hljs-built_in">localStorage</span>.setItem(<span class="hljs-string">&#x27;token&#x27;</span>, data.token)<br>    login.hidden = <span class="hljs-literal">true</span><br>    chatBox.hidden = <span class="hljs-literal">false</span><br>    videoChat.hidden = <span class="hljs-literal">true</span><br>    myName.textContent = <span class="hljs-built_in">localStorage</span>.token<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">inviteVideoHandler</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//当用户被邀请时执行</span><br>    <span class="hljs-keyword">let</span> allow = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span> (isCalling) &#123;<br>        allow = -<span class="hljs-number">1</span> <span class="hljs-comment">//正在通话</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">let</span> res = confirm(data.msg);<br>        <span class="hljs-keyword">if</span> (res) &#123;<br>            allow = <span class="hljs-number">1</span><br>            startVideoChat(data.token) <span class="hljs-comment">//用户点击同意后开始初始化视频聊天</span><br>            <span class="hljs-built_in">localStorage</span>.setItem(<span class="hljs-string">&#x27;roomNo&#x27;</span>, data.roomNo) <span class="hljs-comment">//将房间号保存</span><br>        &#125;<br>    &#125;<br>    socket.emit(<span class="hljs-string">&#x27;askVideo&#x27;</span>, &#123;<br>        <span class="hljs-attr">myId</span>: <span class="hljs-built_in">localStorage</span>.token,<br>        <span class="hljs-attr">otherId</span>: data.token,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;askVideo&#x27;</span>,<br>        allow<br>    &#125;);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">askVideoHandler</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//获取被邀请用户的回复</span><br>    <span class="hljs-built_in">console</span>.log(data.msg)<br>    <span class="hljs-keyword">if</span> (data.allow == -<span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> <span class="hljs-comment">//通话中</span><br>    <span class="hljs-keyword">if</span> (data.allow) &#123;<br>        <span class="hljs-built_in">localStorage</span>.setItem(<span class="hljs-string">&#x27;roomNo&#x27;</span>, data.roomNo) <span class="hljs-comment">//将房间号保存</span><br>        startVideoChat(data.token)<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">breakVideoConnect</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">localStorage</span>.getItem(<span class="hljs-string">&#x27;roomNo&#x27;</span>))<br>    socket.emit(<span class="hljs-string">&#x27;_break&#x27;</span>, &#123;<br>        <span class="hljs-attr">roomNo</span>: <span class="hljs-built_in">localStorage</span>.getItem(<span class="hljs-string">&#x27;roomNo&#x27;</span>)<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><h3 id="完整的userList-js（创建用户在线列表，添加邀请事件，初始化聊天室）"><a href="#完整的userList-js（创建用户在线列表，添加邀请事件，初始化聊天室）" class="headerlink" title="完整的userList.js（创建用户在线列表，添加邀请事件，初始化聊天室）"></a>完整的userList.js（创建用户在线列表，添加邀请事件，初始化聊天室）</h3></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createChatList</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//新建用户列表</span><br>    <span class="hljs-built_in">console</span>.log(data.msg)<br>    <span class="hljs-keyword">let</span> userData = data.userIds<br>    <span class="hljs-keyword">let</span> userList = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#userList&#x27;</span>)<br>    <span class="hljs-keyword">if</span> (userList) &#123;<br>        userList.remove()<br>        userList = <span class="hljs-literal">null</span><br>    &#125;<br>    userList = createEle(<span class="hljs-string">&#x27;ul&#x27;</span>, &#123;&#125;, &#123;<br>        <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;userList&#x27;</span>,<br>        <span class="hljs-attr">className</span>: <span class="hljs-string">&#x27;userList&#x27;</span><br>    &#125;)<br>    chatBox.appendChild(userList)<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> userData) &#123;<br>        <span class="hljs-keyword">if</span> (userData[key] != <span class="hljs-built_in">localStorage</span>.token) &#123;<br>            <span class="hljs-keyword">var</span> li = createEle(<span class="hljs-string">&#x27;li&#x27;</span>, &#123;&#125;, &#123;<br>                <span class="hljs-attr">textContent</span>: userData[key]<br>            &#125;)<br>            li.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, videoStart)<br>            userList.appendChild(li)<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createEle</span>(<span class="hljs-params">ele, style, attribute</span>) </span>&#123; <span class="hljs-comment">//新增标签，设置属性及样式</span><br>    <span class="hljs-keyword">let</span> element = <span class="hljs-built_in">document</span>.createElement(ele)<br>    <span class="hljs-keyword">if</span> (style) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> style) &#123;<br>            element.style[key] = style[key];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (attribute) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> attribute) &#123;<br>            element[key] = attribute[key];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> element<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">videoStart</span>(<span class="hljs-params">e</span>) </span>&#123; <span class="hljs-comment">//用户点击列表某个用户时发送邀请至服务端</span><br>    socket.emit(<span class="hljs-string">&#x27;inviteVideo&#x27;</span>, &#123;<br>        <span class="hljs-attr">myId</span>: <span class="hljs-built_in">localStorage</span>.token,<br>        <span class="hljs-attr">otherId</span>: <span class="hljs-built_in">this</span>.textContent,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;inviteVideo&#x27;</span><br>    &#125;);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">startVideoChat</span>(<span class="hljs-params">otherId</span>) </span>&#123; <span class="hljs-comment">//初始化视频聊天</span><br>    videoChat.hidden = <span class="hljs-literal">false</span><br>    login.hidden = <span class="hljs-literal">true</span><br>    chatBox.hidden = <span class="hljs-literal">true</span><br>    <span class="hljs-built_in">localStorage</span>.setItem(<span class="hljs-string">&#x27;otherId&#x27;</span>, otherId) <span class="hljs-comment">//将对方的id保存</span><br>    startVideoStream()<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>video.js</strong></p><p>初始化媒体对象，并将Stream存到全局，这里由于navigator.mediaDevices.getUserMedia是异步方法，需要同步执行，先获取stream，然后进行后续操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createMedia</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//同步创建本地媒体流</span><br>    <span class="hljs-keyword">if</span> (!stream) &#123;<br>        stream = <span class="hljs-keyword">await</span> navigator.mediaDevices.getUserMedia(&#123;<br>            <span class="hljs-attr">audio</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">video</span>: <span class="hljs-literal">true</span><br>        &#125;)<br>    &#125;<br>    <span class="hljs-built_in">console</span>.log(stream)<br>    <span class="hljs-keyword">let</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#myVideo&#x27;</span>);<br>    video.srcObject = stream; <span class="hljs-comment">//将媒体流输出到本地video以显示自己</span><br>    video.onloadedmetadata = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>        video.play();<br>    &#125;;<br>    createPeerConnection()<br>&#125;<br></code></pre></td></tr></table></figure><p>创建stream后，初始化RTCPeerConnection，用于建立视频连接，同样需要同步获取，并且在peer获取之后发送offer给对方</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createPeerConnection</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//同步初始化描述文件并添加事件</span><br>    <span class="hljs-keyword">if</span> (!peer) &#123;<br>        peer = <span class="hljs-keyword">new</span> RTCPeerConnection()<br>    &#125;<br>    <span class="hljs-keyword">await</span> stream.getTracks().forEach(<span class="hljs-keyword">async</span> track =&gt; &#123;<br>        <span class="hljs-keyword">await</span> peer.addTrack(track, stream); <span class="hljs-comment">//将本地流附属至peer中</span><br>    &#125;);<br>    <span class="hljs-comment">// await peer.addStream(stream); //旧方法（将本地流附属至peer中）</span><br>    peer.addEventListener(<span class="hljs-string">&#x27;addstream&#x27;</span>, setVideo) <span class="hljs-comment">//当peer收到其他流时显示另一个video以显示对方</span><br>    peer.addEventListener(<span class="hljs-string">&#x27;icecandidate&#x27;</span>, sendIce) <span class="hljs-comment">//获取到candidate时，将其发送至服务端，传至对方</span><br>    peer.addEventListener(<span class="hljs-string">&#x27;negotiationneeded&#x27;</span>, sendOffer) <span class="hljs-comment">//双方约定的协商被完成时才触发该方法</span><br>&#125;<br></code></pre></td></tr></table></figure><p>当收到对方发送过来的stream时，即触发addstream事件时，通过setVideo将对方的视频流放到本地video中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setVideo</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//播放对方的视频流</span><br>    <span class="hljs-built_in">console</span>.log(data.stream)<br>    <span class="hljs-keyword">let</span> back = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;back&#x27;</span>)<br>    back.hidden = <span class="hljs-literal">false</span> <span class="hljs-comment">//显示挂断按钮</span><br>    back.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, breakVideoConnect) <span class="hljs-comment">//挂断事件</span><br>    isCalling = <span class="hljs-literal">true</span> <span class="hljs-comment">//正在通话</span><br>    <span class="hljs-keyword">let</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#otherVideo&#x27;</span>);<br>    video.srcObject = data.stream;<br>    video.onloadedmetadata = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>        video.play();<br>    &#125;;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建offer，保存本地offer，并发送offer给对方</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendOffer</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//同步发送offer到服务端，发送给对方</span><br>    <span class="hljs-keyword">let</span> offer = <span class="hljs-keyword">await</span> peer.createOffer();<br>    <span class="hljs-keyword">await</span> peer.setLocalDescription(offer); <span class="hljs-comment">//peer本地附属offer</span><br>    socket.emit(<span class="hljs-string">&#x27;_offer&#x27;</span>, &#123;<br>        <span class="hljs-attr">streamData</span>: offer<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>收到对方的offer后，保存远程offer，但是这里有一个小问题，如果peer还没有创建好，也就是如果对方先创建，就会马上发offer过来，这时我们这边的peer可能还没有创建成功，如果直接调用setRemoteDescription的话会报错，所以可以用try catch来调用，或使用if(!peer) return的方式运行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getOffer</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//接收到offer后，返回answer给对方</span><br>    <span class="hljs-keyword">await</span> peer.setRemoteDescription(data.streamData); <span class="hljs-comment">//peer远程附属offer</span><br>    sendAnswer()<br>&#125;<br><br><br><span class="hljs-comment">//优化后</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getOffer</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//接收到offer后，返回answer给对方</span><br>    <span class="hljs-keyword">if</span> (!peer) <span class="hljs-keyword">return</span> <span class="hljs-comment">//等待对方响应，也可以用try catch</span><br>    <span class="hljs-keyword">await</span> peer.setRemoteDescription(data.streamData); <span class="hljs-comment">//peer远程附属offer</span><br>    sendAnswer()<br>&#125;<br></code></pre></td></tr></table></figure><p>创建answer，保存本地answer，发送answer给对方</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendAnswer</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> answer = <span class="hljs-keyword">await</span> peer.createAnswer();<br>    <span class="hljs-keyword">await</span> peer.setLocalDescription(answer); <span class="hljs-comment">//peer附属本地answer</span><br>    socket.emit(<span class="hljs-string">&#x27;_answer&#x27;</span>, &#123;<br>        <span class="hljs-attr">streamData</span>: answer<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>接收到answer时，保存本地answer</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getAnswer</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//接收到answer后，peer远程附属answer</span><br>    <span class="hljs-keyword">await</span> peer.setRemoteDescription(data.streamData);<br>&#125;<br></code></pre></td></tr></table></figure><p>peer触发icecandidate事件时，即本地触发过setLocalDescription时，也就是将本地offer和本地answer保存时，触发方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendIce</span>(<span class="hljs-params">e</span>) </span>&#123; <span class="hljs-comment">//setLocalDescription触发时，发送ICE给对方</span><br>    <span class="hljs-keyword">if</span> (e.candidate) &#123;<br>        socket.emit(<span class="hljs-string">&#x27;_ice&#x27;</span>, &#123;<br>            <span class="hljs-attr">streamData</span>: e.candidate<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>接收对方的ICE，但是这里有一个和上面一样的小问题如果在ICE事件中，peer还没有创建好，也就是如果对方先创建，就会马上发offer过来，这时我们这边的peer可能还没有创建成功，如果直接调用addIceCandidate的话会报错，所以可以用try catch来调用，或使用if(!peer) return的方式运行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getIce</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//获取对方的ICE</span><br>    <span class="hljs-keyword">var</span> candidate = <span class="hljs-keyword">new</span> RTCIceCandidate(data.streamData)<br>    <span class="hljs-keyword">await</span> peer.addIceCandidate(candidate)<br>&#125;<br><br><span class="hljs-comment">//优化后</span><br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getIce</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//获取对方的ICE</span><br>    <span class="hljs-keyword">if</span> (!peer) <span class="hljs-keyword">return</span> <span class="hljs-comment">//等待对方响应，也可以用try catch</span><br>    <span class="hljs-keyword">var</span> candidate = <span class="hljs-keyword">new</span> RTCIceCandidate(data.streamData)<br>    <span class="hljs-keyword">await</span> peer.addIceCandidate(candidate)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>最后是挂断的方法，这里有个小问题，<strong>当挂断时，原来的stream无法删除，导致摄像头虽然没有调用，但是导航栏仍然会有摄像头图标（没有真正关闭），下一次打开时会传输前面的流（叠加），网上没有解决方式，如果有知道的同学，希望能补充优化，感谢</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">stopVideoStream</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//停止传输视频流</span><br>    <span class="hljs-built_in">console</span>.log(data.msg)<br>    stream.getTracks().forEach(<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">track</span>) </span>&#123; <span class="hljs-comment">//这里得到视频或音频对象</span><br>        <span class="hljs-keyword">await</span> track.stop();<br>        <span class="hljs-keyword">await</span> stream.removeTrack(track)<br>        stream = <span class="hljs-literal">null</span><br>    &#125;)<br>    peer.close();<br>    peer = <span class="hljs-literal">null</span>;<br>    isCalling = <span class="hljs-literal">false</span><br>    videoChat.hidden = <span class="hljs-literal">true</span><br>    login.hidden = <span class="hljs-literal">true</span><br>    chatBox.hidden = <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li><h3 id="优化后完整的video-js"><a href="#优化后完整的video-js" class="headerlink" title="优化后完整的video.js"></a>优化后完整的video.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> stream, peer, isCalling = <span class="hljs-literal">false</span> <span class="hljs-comment">//初始化要发送的流,和描述文件,通话状态</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">startVideoStream</span>(<span class="hljs-params">e</span>) </span>&#123; <span class="hljs-comment">//开始传输视频流</span><br>    createMedia()<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">stopVideoStream</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//停止传输视频流</span><br>    <span class="hljs-built_in">console</span>.log(data.msg)<br>    stream.getTracks().forEach(<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">track</span>) </span>&#123; <span class="hljs-comment">//这里得到视频或音频对象</span><br>        <span class="hljs-keyword">await</span> track.stop();<br>        <span class="hljs-keyword">await</span> stream.removeTrack(track)<br>        stream = <span class="hljs-literal">null</span><br>    &#125;)<br>    peer.close();<br>    peer = <span class="hljs-literal">null</span>;<br>    isCalling = <span class="hljs-literal">false</span><br>    videoChat.hidden = <span class="hljs-literal">true</span><br>    login.hidden = <span class="hljs-literal">true</span><br>    chatBox.hidden = <span class="hljs-literal">false</span><br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createMedia</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//同步创建本地媒体流</span><br>    <span class="hljs-keyword">if</span> (!stream) &#123;<br>        stream = <span class="hljs-keyword">await</span> navigator.mediaDevices.getUserMedia(&#123;<br>            <span class="hljs-attr">audio</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">video</span>: <span class="hljs-literal">true</span><br>        &#125;)<br>    &#125;<br>    <span class="hljs-built_in">console</span>.log(stream)<br>    <span class="hljs-keyword">let</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#myVideo&#x27;</span>);<br>    video.srcObject = stream; <span class="hljs-comment">//将媒体流输出到本地video以显示自己</span><br>    video.onloadedmetadata = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>        video.play();<br>    &#125;;<br>    createPeerConnection()<br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createPeerConnection</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//同步初始化描述文件并添加事件</span><br>    <span class="hljs-keyword">if</span> (!peer) &#123;<br>        peer = <span class="hljs-keyword">new</span> RTCPeerConnection()<br>    &#125;<br>    <span class="hljs-keyword">await</span> stream.getTracks().forEach(<span class="hljs-keyword">async</span> track =&gt; &#123;<br>        <span class="hljs-keyword">await</span> peer.addTrack(track, stream); <span class="hljs-comment">//将本地流附属至peer中</span><br>    &#125;);<br>    <span class="hljs-comment">// await peer.addStream(stream); //旧方法（将本地流附属至peer中）</span><br>    peer.addEventListener(<span class="hljs-string">&#x27;addstream&#x27;</span>, setVideo) <span class="hljs-comment">//当peer收到其他流时显示另一个video以显示对方</span><br>    peer.addEventListener(<span class="hljs-string">&#x27;icecandidate&#x27;</span>, sendIce) <span class="hljs-comment">//获取到candidate时，将其发送至服务端，传至对方</span><br>    peer.addEventListener(<span class="hljs-string">&#x27;negotiationneeded&#x27;</span>, sendOffer) <span class="hljs-comment">//双方约定的协商被完成时才触发该方法</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setVideo</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//播放对方的视频流</span><br>    <span class="hljs-built_in">console</span>.log(data.stream)<br>    <span class="hljs-keyword">let</span> back = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;back&#x27;</span>)<br>    back.hidden = <span class="hljs-literal">false</span> <span class="hljs-comment">//显示挂断按钮</span><br>    back.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, breakVideoConnect) <span class="hljs-comment">//挂断事件</span><br>    isCalling = <span class="hljs-literal">true</span> <span class="hljs-comment">//正在通话</span><br>    <span class="hljs-keyword">let</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#otherVideo&#x27;</span>);<br>    video.srcObject = data.stream;<br>    video.onloadedmetadata = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>        video.play();<br>    &#125;;<br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendOffer</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//同步发送offer到服务端，发送给对方</span><br>    <span class="hljs-keyword">let</span> offer = <span class="hljs-keyword">await</span> peer.createOffer();<br>    <span class="hljs-keyword">await</span> peer.setLocalDescription(offer); <span class="hljs-comment">//peer本地附属offer</span><br>    socket.emit(<span class="hljs-string">&#x27;_offer&#x27;</span>, &#123;<br>        <span class="hljs-attr">streamData</span>: offer<br>    &#125;);<br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getOffer</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//接收到offer后，返回answer给对方</span><br>    <span class="hljs-keyword">if</span> (!peer) <span class="hljs-keyword">return</span> <span class="hljs-comment">//等待对方响应，也可以用try catch</span><br>    <span class="hljs-keyword">await</span> peer.setRemoteDescription(data.streamData); <span class="hljs-comment">//peer远程附属offer</span><br>    sendAnswer()<br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendAnswer</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> answer = <span class="hljs-keyword">await</span> peer.createAnswer();<br>    <span class="hljs-keyword">await</span> peer.setLocalDescription(answer); <span class="hljs-comment">//peer附属本地answer</span><br>    socket.emit(<span class="hljs-string">&#x27;_answer&#x27;</span>, &#123;<br>        <span class="hljs-attr">streamData</span>: answer<br>    &#125;);<br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getAnswer</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//接收到answer后，peer远程附属answer</span><br>    <span class="hljs-keyword">await</span> peer.setRemoteDescription(data.streamData);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendIce</span>(<span class="hljs-params">e</span>) </span>&#123; <span class="hljs-comment">//setLocalDescription触发时，发送ICE给对方</span><br>    <span class="hljs-keyword">if</span> (!e || !e.candidate) <span class="hljs-keyword">return</span><br>    socket.emit(<span class="hljs-string">&#x27;_ice&#x27;</span>, &#123;<br>        <span class="hljs-attr">streamData</span>: e.candidate<br>    &#125;);<br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getIce</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//获取对方的ICE</span><br>    <span class="hljs-keyword">if</span> (!peer) <span class="hljs-keyword">return</span> <span class="hljs-comment">//等待对方响应，也可以用try catch</span><br>    <span class="hljs-keyword">var</span> candidate = <span class="hljs-keyword">new</span> RTCIceCandidate(data.streamData)<br>    <span class="hljs-keyword">await</span> peer.addIceCandidate(candidate)<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a><strong>服务端</strong></h2><p>后端部分同样使用socketio进行通信<br>首先在npm初始化后下载express，socket.io</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs q">npm i express --<span class="hljs-built_in">save</span>-<span class="hljs-built_in">dev</span><br>npm i socket.io --<span class="hljs-built_in">save</span>-<span class="hljs-built_in">dev</span><br></code></pre></td></tr></table></figure><p>之后引入至server.js中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>)<br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> server = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>).Server(app);<br><span class="hljs-keyword">const</span> io = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;socket.io&#x27;</span>)(server);<br></code></pre></td></tr></table></figure><p>并监听1024端口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">server.listen(<span class="hljs-number">1024</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Socket Open&#x27;</span>)<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>配置socket</strong><br>给socket添加一些事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">io.on(<span class="hljs-string">&#x27;connect&#x27;</span>, <span class="hljs-function"><span class="hljs-params">socket</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> &#123;<br>        token<br>    &#125; = socket.handshake.query<br>    socket.on(<span class="hljs-string">&#x27;disconnect&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">exit</span>) =&gt;</span> &#123; <span class="hljs-comment">//socket断开</span><br>        delFormList(token) <span class="hljs-comment">//清除用户</span><br>        broadCast(socket, token, <span class="hljs-string">&#x27;leave&#x27;</span>) <span class="hljs-comment">//广播给其他用户</span><br>    &#125;)<br>&#125;);<br></code></pre></td></tr></table></figure><p>这样，我们最简单的一个socket就搭好了</p><h3 id="完整的server-js"><a href="#完整的server-js" class="headerlink" title="完整的server.js"></a>完整的server.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>)<br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> server = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>).Server(app);<br><span class="hljs-keyword">const</span> io = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;socket.io&#x27;</span>)(server);<br><span class="hljs-keyword">let</span> userList = &#123;&#125; <span class="hljs-comment">//用户列表，所有连接的用户</span><br><span class="hljs-keyword">let</span> userIds = &#123;&#125; <span class="hljs-comment">//用户id列表，显示到前端</span><br><span class="hljs-keyword">let</span> roomList = &#123;&#125; <span class="hljs-comment">//房间列表，视频聊天</span><br>io.on(<span class="hljs-string">&#x27;connect&#x27;</span>, <span class="hljs-function"><span class="hljs-params">socket</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> &#123;<br>        token<br>    &#125; = socket.handshake.query<br>    socket.on(<span class="hljs-string">&#x27;disconnect&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">exit</span>) =&gt;</span> &#123; <span class="hljs-comment">//socket断开</span><br>        delFormList(token) <span class="hljs-comment">//清除用户</span><br>        broadCast(socket, token, <span class="hljs-string">&#x27;leave&#x27;</span>) <span class="hljs-comment">//广播给其他用户</span><br>    &#125;)<br>    socket.on(<span class="hljs-string">&#x27;inviteVideo&#x27;</span>, inviteVideoHandler) <span class="hljs-comment">//邀请用户</span><br>    socket.on(<span class="hljs-string">&#x27;askVideo&#x27;</span>, inviteVideoHandler); <span class="hljs-comment">//回应用户是否邀请成功</span><br>    <span class="hljs-keyword">if</span> (userList[token]) &#123; <span class="hljs-comment">//找到相同用户名就跳出函数</span><br>        socket.emit(<span class="hljs-string">&#x27;open&#x27;</span>, &#123;<br>            <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-attr">msg</span>: token + <span class="hljs-string">&#x27;已存在&#x27;</span><br>        &#125;);<br>        socket.disconnect()<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    addToList(token, socket) <span class="hljs-comment">//用户连接时，添加到userList</span><br>    broadCast(socket, token, <span class="hljs-string">&#x27;enter&#x27;</span>) <span class="hljs-comment">//广告其他用户，有人加入</span><br>&#125;);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addToList</span>(<span class="hljs-params">key, item</span>) </span>&#123; <span class="hljs-comment">//添加到userList</span><br>    item.emit(<span class="hljs-string">&#x27;open&#x27;</span>, &#123;<br>        <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;你已加入聊天&#x27;</span>,<br>        userIds,<br>        <span class="hljs-attr">token</span>: key<br>    &#125;);<br>    userList[key] = item<br>    userIds[key] = key<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delFormList</span>(<span class="hljs-params">key</span>) </span>&#123; <span class="hljs-comment">//断开时，删除用户</span><br>    <span class="hljs-keyword">delete</span> userList[key];<br>    <span class="hljs-keyword">delete</span> userIds[key]<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">broadCast</span>(<span class="hljs-params">target, token, type</span>) </span>&#123; <span class="hljs-comment">//广播功能</span><br>    <span class="hljs-keyword">let</span> msg = <span class="hljs-string">&#x27;加入聊天&#x27;</span><br>    <span class="hljs-keyword">if</span> (type !== <span class="hljs-string">&#x27;enter&#x27;</span>) &#123;<br>        msg = <span class="hljs-string">&#x27;离开聊天&#x27;</span><br>    &#125;<br>    target.broadcast.emit(<span class="hljs-string">&#x27;dataChange&#x27;</span>, &#123;<br>        <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-attr">msg</span>: token + msg,<br>        userIds<br>    &#125;);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">inviteVideoHandler</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//邀请方法</span><br>    <span class="hljs-keyword">let</span> &#123;<br>        myId,<br>        otherId,<br>        type,<br>        allow<br>    &#125; = data, msg = <span class="hljs-string">&#x27;邀请你进入聊天室&#x27;</span>, event = <span class="hljs-string">&#x27;inviteVideoHandler&#x27;</span>, roomNo = otherId <span class="hljs-comment">//默认房间号为邀请方id</span><br>    <span class="hljs-keyword">if</span> (type == <span class="hljs-string">&#x27;askVideo&#x27;</span>) &#123;<br>        event = <span class="hljs-string">&#x27;askVideoHandler&#x27;</span><br>        <span class="hljs-keyword">if</span> (allow == <span class="hljs-number">1</span>) &#123;<br>            addRoom(myId, otherId)<br>            roomNo = myId <span class="hljs-comment">//保存房间号</span><br>            msg = <span class="hljs-string">&#x27;接受了你的邀请&#x27;</span><br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (allow == -<span class="hljs-number">1</span>) &#123;<br>            msg = <span class="hljs-string">&#x27;正在通话&#x27;</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            msg = <span class="hljs-string">&#x27;拒绝了你的邀请&#x27;</span><br>        &#125;<br>    &#125;<br>    userList[otherId].emit(event, &#123;<br>        <span class="hljs-attr">msg</span>: myId + msg,<br>        <span class="hljs-attr">token</span>: myId,<br>        allow,<br>        roomNo<br>    &#125;);<br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addRoom</span>(<span class="hljs-params">myId, otherId</span>) </span>&#123; <span class="hljs-comment">//用户同意后添加到视频聊天室，只做1对1聊天功能</span><br>    roomList[myId] = [userList[myId], userList[otherId]]<br>    startVideoChat(roomList[myId])<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">startVideoChat</span>(<span class="hljs-params">roomItem</span>) </span>&#123; <span class="hljs-comment">//视频聊天初始化</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; roomItem.length; i++) &#123;<br>        roomItem[i].room = roomItem<br>        roomItem[i].id = i<br>        roomItem[i].on(<span class="hljs-string">&#x27;_ice&#x27;</span>, _iceHandler)<br>        roomItem[i].on(<span class="hljs-string">&#x27;_offer&#x27;</span>, _offerHandler)<br>        roomItem[i].on(<span class="hljs-string">&#x27;_answer&#x27;</span>, _answerHandler)<br>        roomItem[i].on(<span class="hljs-string">&#x27;_break&#x27;</span>, _breakRoom)<br><br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_iceHandler</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//用户发送ice到服务端，服务端转发给另一个用户</span><br>    <span class="hljs-keyword">let</span> id = <span class="hljs-built_in">this</span>.id == <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span> <span class="hljs-comment">//判断用户二者其一</span><br>    <span class="hljs-built_in">this</span>.room[id].emit(<span class="hljs-string">&#x27;ice&#x27;</span>, data);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_offerHandler</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//用户发送offer到服务端，服务端转发给另一个用户</span><br>    <span class="hljs-keyword">let</span> id = <span class="hljs-built_in">this</span>.id == <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span><br>    <span class="hljs-built_in">this</span>.room[id].emit(<span class="hljs-string">&#x27;offer&#x27;</span>, data);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_answerHandler</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//用户发送answer到服务端，服务端转发给另一个用户</span><br>    <span class="hljs-keyword">let</span> id = <span class="hljs-built_in">this</span>.id == <span class="hljs-number">0</span> ? <span class="hljs-number">1</span> : <span class="hljs-number">0</span><br>    <span class="hljs-built_in">this</span>.room[id].emit(<span class="hljs-string">&#x27;answer&#x27;</span>, data);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_breakRoom</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//挂断聊天</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; roomList[data.roomNo].length || <span class="hljs-number">0</span>; i++) &#123;<br>        roomList[data.roomNo][i].emit(<span class="hljs-string">&#x27;break&#x27;</span>, &#123;<br>            <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;聊天挂断&#x27;</span><br>        &#125;);<br>    &#125;<br>&#125;<br>server.listen(<span class="hljs-number">1024</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Socket Open&#x27;</span>)<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><p>分别在我方发送stream之前打印stream，收到对方stream后打印stream，我们会发现，双方的stream互换了位置，也就是说整个媒体对象进行了交换</p><p><img src="https://img-blog.csdnimg.cn/20200312095925878.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200312095925915.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>和同事在两台电脑上测试效果</p><p><img src="https://img-blog.csdnimg.cn/2020031210313496.gif"></p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>前端项目必须运行在本地或者https服务下，因为navigator.mediaDevices.getUserMedia需要运行在安全模式下，用户第一次使用需要授权摄像头或音频权限，所以双方电脑需要有相关功能</p><p>看到这里，希望留下你宝贵的建议</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>分享些自己收藏的书签，基础占多，大牛勿入</title>
    <link href="/2020/03/08/%E5%88%86%E4%BA%AB%E4%BA%9B%E8%87%AA%E5%B7%B1%E6%94%B6%E8%97%8F%E7%9A%84%E4%B9%A6%E7%AD%BE%EF%BC%8C%E5%9F%BA%E7%A1%80%E5%8D%A0%E5%A4%9A%EF%BC%8C%E5%A4%A7%E7%89%9B%E5%8B%BF%E5%85%A5/"/>
    <url>/2020/03/08/%E5%88%86%E4%BA%AB%E4%BA%9B%E8%87%AA%E5%B7%B1%E6%94%B6%E8%97%8F%E7%9A%84%E4%B9%A6%E7%AD%BE%EF%BC%8C%E5%9F%BA%E7%A1%80%E5%8D%A0%E5%A4%9A%EF%BC%8C%E5%A4%A7%E7%89%9B%E5%8B%BF%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<p>入坑前端3年，收藏了一些用得到或者可能会用到的书签</p><p><strong>目录</strong></p><p><a href="#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%B1%BB">基础知识类</a></p><p><a href="#%E8%A7%86%E9%A2%91%E6%95%99%E5%AD%A6%E7%B1%BB">视频教学类</a></p><p><a href="#%E6%A1%86%E6%9E%B6%E6%96%87%E6%A1%A3%E7%B1%BB">框架文档类</a></p><p><a href="#UI%E7%BB%84%E4%BB%B6%E7%B1%BB">UI组件类</a></p><p><a href="#%E6%B1%82%E8%81%8C%E9%9D%A2%E8%AF%95%E7%B1%BB">求职面试类</a></p><p><a href="#%E6%A1%88%E4%BE%8B%E5%AE%9E%E8%B7%B5%E7%B1%BB">案例实践类</a></p><p><a href="#%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E7%B1%BB">博客文章类</a></p><p><a href="#%E5%B7%A5%E5%85%B7%E6%8F%92%E4%BB%B6%E7%B1%BB">工具插件类</a></p><hr><h3 id="基础知识类"><a href="#基础知识类" class="headerlink" title="基础知识类"></a>基础知识类</h3><p><a href="http://www.runoob.com/">菜鸟教程 - 学的不仅是技术，更是梦想！</a>（教学齐全，陪伴三年之余，几乎啥都有）<br><a href="http://www.runoob.com/">http://www.runoob.com/</a></p><p><a href="http://www.w3school.com.cn/index.html">w3school 在线教程</a>（前端官方文档，不解释）<br><a href="http://www.w3school.com.cn/index.html">http://www.w3school.com.cn/index.html</a></p><p><a href="https://www.bookstack.cn/">书栈网 · BookStack_程序员IT互联网开源编程书籍免费阅读与下载，取之于猿用之于猿！</a>（非常不错的书籍分享网站，集结了很多编程必备书籍）<br><a href="https://www.bookstack.cn/">https://www.bookstack.cn/</a></p><p><a href="https://www.w3cschool.cn/">w3cschool - 学编程，从w3cschool开始</a>（w3c官方推荐的教学网站）<br><a href="https://www.w3cschool.cn/">https://www.w3cschool.cn/</a></p><h3 id="视频教学类"><a href="#视频教学类" class="headerlink" title="视频教学类"></a>视频教学类</h3><p><a href="http://www.fenby.com/">Fenby | 专业面向初学者的在线互动编程学习的平台</a>（用过几次，也是网上在线书籍观看）</p><p><a href="http://www.fenby.com/">http://www.fenby.com/</a></p><p><a href="https://www.shiyanlou.com/">实验楼 - 在线做实验，高效学编程</a>（推荐！！可以在页面上写代码，运行）<br><a href="https://www.shiyanlou.com/">https://www.shiyanlou.com/</a></p><p><a href="https://mooc.guokr.com/">MOOC学院（慕课）| 发现全球在线好课</a>（在线视频教学）<br><a href="https://mooc.guokr.com/">https://mooc.guokr.com/</a></p><p><a href="https://study.163.com/">网易云课堂 - 我的职业课堂</a>（同上）<br><a href="https://study.163.com/">https://study.163.com/</a></p><p><a href="https://devopen.club/">DevOpen.Club | 高质量的软件开发视频教程</a>（听同事说挺好用的，也是在线教学）<br><a href="https://devopen.club/">https://devopen.club/</a></p><p><a href="https://www.jikexueyuan.com/">极客学院IT在线教育平台-中国专业的IT职业在线教育平台</a><br><a href="https://www.jikexueyuan.com/">https://www.jikexueyuan.com/</a></p><h3 id="框架文档类"><a href="#框架文档类" class="headerlink" title="框架文档类"></a>框架文档类</h3><p><a href="https://www.html.cn/nav/">前端文档工具收藏夹 - 前端开发资源导航，前端工程师专用的导航站</a>（几乎涵盖了下面大部分文档）<br><a href="https://www.html.cn/nav/">https://www.html.cn/nav/</a></p><p><a href="http://huziketang.mangojuice.top/books/react/">React.js 小书</a>（react进阶教程）</p><p><a href="http://huziketang.mangojuice.top/books/react/">http://huziketang.mangojuice.top/books/react/</a></p><p><a href="https://cn.vuejs.org/v2/api/#optionMergeStrategies">API — Vue.js</a>（vue官方文档）<br><a href="https://cn.vuejs.org/v2/api/#optionMergeStrategies">https://cn.vuejs.org/v2/api/#optionMergeStrategies</a></p><p><a href="http://jquery.cuishifeng.cn/index.html">jQuery API 中文文档 | jQuery API 中文在线手册 | jquery api 下载 | jquery api chm</a>（Jq官方文档）<br><a href="http://jquery.cuishifeng.cn/index.html">http://jquery.cuishifeng.cn/index.html</a></p><p><a href="http://nodejs.cn/api/">API 文档 | Node.js 中文网</a>（nodejs官方）<br><a href="http://nodejs.cn/api/">http://nodejs.cn/api/</a></p><p><a href="https://www.redux.org.cn/">自述 · Redux</a>（react脚手架，搭建react项目）<br><a href="https://www.redux.org.cn/">https://www.redux.org.cn/</a></p><p><a href="https://vuex.vuejs.org/zh/guide/">开始 | Vuex</a>（vue脚手架）<br><a href="https://vuex.vuejs.org/zh/guide/">https://vuex.vuejs.org/zh/guide/</a></p><p><a href="https://router.vuejs.org/zh/">介绍 | Vue Router</a>（vue路由文档）<br><a href="https://router.vuejs.org/zh/">https://router.vuejs.org/zh/</a></p><p><a href="http://www.bootcss.com/">Bootstrap中文网</a>（官方文档）<br><a href="http://www.bootcss.com/">http://www.bootcss.com/</a></p><p><a href="https://developer.android.com/reference/classes">Class Index | Android 开发者 | Android Developers</a>（安卓原生文档）<br><a href="https://developer.android.com/reference/classes">https://developer.android.com/reference/classes</a></p><p><a href="https://eggjs.org/">egg - Born to build better enterprise frameworks and apps</a>（基于nodejs的一个框架）<br><a href="https://eggjs.org/">https://eggjs.org/</a></p><p><a href="https://koa.bootcss.com/#">Koa (koajs) – 基于 Node.js 平台的下一代 web 开发框架 | Koajs 中文文档</a>（如标题）<br><a href="https://koa.bootcss.com/#">https://koa.bootcss.com/#</a></p><p><a href="https://nestjs.com/">NestJS - A progressive Node.js framework</a>（nodejs框架，有时候会有点卡）<br><a href="https://nestjs.com/">https://nestjs.com/</a></p><p><a href="https://electronjs.org/">Electron | 使用 JavaScript, HTML 和 CSS 构建跨平台的桌面应用。</a>（这个挺有意思的，用前端编写桌面级应用，国内可能会访问不了）<br><a href="https://electronjs.org/">https://electronjs.org/</a></p><p><a href="http://ask.dcloud.net.cn/docs/">文档 - DCloud问答</a>（dcloud官方文档，h5+，uni-app等等）<br><a href="http://ask.dcloud.net.cn/docs/">http://ask.dcloud.net.cn/docs/</a></p><p><a href="http://docs.jiguang.cn/jpush/guideline/intro/">极光推送 - JPush 产品简介 - 极光文档</a>（使用此产品搭建内网穿透，外部访问本地服务器）<br><a href="http://docs.jiguang.cn/jpush/guideline/intro/">http://docs.jiguang.cn/jpush/guideline/intro/</a></p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/index.html?t19010816">简易教程 · 小程序</a>（小程序官方文档）<br><a href="https://developers.weixin.qq.com/miniprogram/dev/index.html?t=19010816">https://developers.weixin.qq.com/miniprogram/dev/index.html?t=19010816</a></p><p><a href="https://react-bootstrap.github.io/">https://react-bootstrap.github.io</a>（一个基于react和bootstrap的插件，国内访问不了）<br><a href="https://react-bootstrap.github.io/">https://react-bootstrap.github.io/</a></p><p><a href="http://www.expressjs.com.cn/">Express - 基于 Node.js 平台的 web 应用开发框架 | Express 中文文档</a>（nodejs框架）<br><a href="http://www.expressjs.com.cn/">http://www.expressjs.com.cn/</a></p><p><a href="https://www.mongodb.com/download-center/community">MongoDB下载中心| MongoDB</a>（MongoDB数据库官方文档）<br><a href="https://www.mongodb.com/download-center/community">https://www.mongodb.com/download-center/community</a></p><p><a href="https://mongoosejs.com/">Mongoose ODM v5.3.14</a>（mongoDB框架官方文档）<br><a href="https://mongoosejs.com/">https://mongoosejs.com/</a></p><p><a href="https://www.sass.hk/guide/">Sass基础教程 Sass快速入门 Sass中文手册 | Sass中文网</a>（预处理语言）<br><a href="https://www.sass.hk/guide/">https://www.sass.hk/guide/</a></p><p><a href="https://angularjs.org/">AngularJS — Superheroic JavaScript MVW Framework</a>（AngluarJS官网文档）<br><a href="https://angularjs.org/">https://angularjs.org/</a></p><p><a href="https://www.readwithu.com/">知识点补漏 · 草根学Python</a>（Python）<br><a href="https://www.readwithu.com/">https://www.readwithu.com/</a></p><p><a href="https://www.bootcss.com/p/lesscss/">LESS « 一种动态样式语言</a>（预处理语言less）</p><h3 id="UI组件类"><a href="#UI组件类" class="headerlink" title="UI组件类"></a>UI组件类</h3><p><a href="http://element-cn.eleme.io/#/zh-CN/guide/design">指南 | Element</a></p><p><a href="http://element-cn.eleme.io/#/zh-CN/guide/design">http://element-cn.eleme.io/#/zh-CN/guide/design</a></p><p><a href="http://mint-ui.github.io/#!/zh-cn">Mint UI</a>（国内可能会慢）<br><a href="http://mint-ui.github.io/#!/zh-cn">http://mint-ui.github.io/#!/zh-cn</a></p><p><a href="https://www.layui.com/">layui - 经典模块化前端UI框架</a><br><a href="https://www.layui.com/">https://www.layui.com/</a></p><p><a href="https://fly.layui.com/extend/">layui 第三方组件平台</a><br><a href="https://fly.layui.com/extend/">https://fly.layui.com/extend/</a></p><p><a href="http://www.h-ui.net/index.shtml">H-ui前端框架官方网站 - 专注前端解决方案</a><br><a href="http://www.h-ui.net/index.shtml">http://www.h-ui.net/index.shtml</a></p><p><a href="https://youzan.github.io/vant-weapp/#/icon">Vant Weapp - 轻量、可靠的小程序 UI 组件库</a>（小程序和vue效果不错）<br><a href="https://youzan.github.io/vant-weapp/#/icon">https://youzan.github.io/vant-weapp/#/icon</a></p><p><a href="http://dev.dcloud.net.cn/mui/">MUI-最接近原生APP体验的高性能前端框架</a>（h5+打包app，或混合开发）<br><a href="http://dev.dcloud.net.cn/mui/">http://dev.dcloud.net.cn/mui/</a></p><p><a href="https://ant.design/index-cn">Ant Design - 一个 UI 设计语言</a>（蚂蚁金服的UI，适合react）<br><a href="https://ant.design/index-cn">https://ant.design/index-cn</a></p><p><a href="http://amazeui.org/react/">Amaze UI React - Amaze UI components build with React</a>（妹子UI，官网好像进不去了）<br><a href="http://amazeui.org/react/">http://amazeui.org/react/</a></p><p><a href="https://www.iviewui.com/overview/">概览 - iView</a><br><a href="https://www.iviewui.com/overview/">https://www.iviewui.com/overview/</a></p><p><a href="https://vux.li/">VUX - Vue 移动端 UI 组件库</a><br><a href="https://vux.li/">https://vux.li/</a></p><p><a href="https://vuetifyjs.com/zh-Hans/">Vue.js Material Component Framework — Vuetify.js</a><br><a href="https://vuetifyjs.com/zh-Hans/">https://vuetifyjs.com/zh-Hans/</a></p><p><a href="http://cn.inspinia.cn/">bootstrap后端模板_bootstrap模板 inspinia中文 | 主页| inspinia admin中文_inspinia admin 下载_inspinia admin_inspinia admin 最新版_inspinia admin v2.7_inspinia admin 2.8_inspinia admin theme_inspinia bootstrap</a>（适合做管理界面）<br><a href="http://cn.inspinia.cn/">http://cn.inspinia.cn/</a></p><p><a href="https://youzan.github.io/zanui-weapp/#/zanui/base/icon">ZanUI 小程序</a><br><a href="https://youzan.github.io/zanui-weapp/#/zanui/base/icon">https://youzan.github.io/zanui-weapp/#/zanui/base/icon</a></p><p><a href="https://flutterchina.club/">Flutter中文网</a><br><a href="https://flutterchina.club/">https://flutterchina.club/</a></p><h3 id="求职面试类"><a href="#求职面试类" class="headerlink" title="求职面试类"></a>求职面试类</h3><p><a href="https://www.nowcoder.com/">牛客网- 互联网求职神器和备考学习平台</a>（刷题必备）</p><p><a href="https://leetcode-cn.com/">https://leetcode-cn.com/</a></p><p><a href="https://leetcode-cn.com/">力扣 (LeetCode) - 极客挚爱的在线技术平台</a>（刷题必备）<br><a href="https://www.nowcoder.com/">https://www.nowcoder.com/</a></p><h3 id="案例实践类"><a href="#案例实践类" class="headerlink" title="案例实践类"></a>案例实践类</h3><p><a href="http://www.youzhan.org/">Bootstrap 优站精选</a></p><p><a href="http://www.youzhan.org/">http://www.youzhan.org/</a></p><p><a href="http://www.fgm.cc/learn/">实例索引</a><br><a href="http://www.fgm.cc/learn/">http://www.fgm.cc/learn/</a></p><p><a href="https://www.html5tricks.com/">HTML5资源教程 | 分享HTML5开发资源和开发教程</a><br><a href="https://www.html5tricks.com/">https://www.html5tricks.com/</a></p><p><a href="http://www.dcloud.io/case/#group-1">案例</a>（h5app案例）<br><a href="http://www.dcloud.io/case/#group-1">http://www.dcloud.io/case/#group-1</a></p><p><a href="https://www.ui.cn/">UI中国用户体验设计平台</a>（各种UI效果）<br><a href="https://www.ui.cn/">https://www.ui.cn/</a></p><p><a href="http://www.17sucai.com/pins/tag/3886.html">canvas特效代码_canvas效果代码_canvas网页代码</a>（用过一次，有些要积分）<br><a href="http://www.17sucai.com/pins/tag/3886.html">http://www.17sucai.com/pins/tag/3886.html</a></p><h3 id="博客文章类"><a href="#博客文章类" class="headerlink" title="博客文章类"></a>博客文章类</h3><p><a href="https://www.v2ex.com/">V2EX</a>（不错的论坛）</p><p><a href="https://www.v2ex.com/">https://www.v2ex.com/</a></p><p><a href="https://www.csdn.net/">CSDN-专业IT技术社区</a>（最好的论坛（狗头保命））<br><a href="https://www.csdn.net/">https://www.csdn.net/</a></p><p><a href="https://segmentfault.com/channel/frontend">前端 - SegmentFault 思否</a><br><a href="https://segmentfault.com/channel/frontend">https://segmentfault.com/channel/frontend</a></p><p><a href="https://www.oschina.net/question/tag/github">GitHub - 开源中国社区</a><br><a href="https://www.oschina.net/question/tag/github">https://www.oschina.net/question/tag/github</a></p><p><a href="https://www.zhihu.com/">首页 - 知乎</a><br><a href="https://www.zhihu.com/">https://www.zhihu.com/</a></p><p><a href="https://juejin.im/timeline">掘金</a><br><a href="https://juejin.im/timeline">https://juejin.im/timeline</a></p><p><a href="https://www.cnblogs.com/">博客园 - 代码改变世界</a><br><a href="https://www.cnblogs.com/">https://www.cnblogs.com/</a></p><p><a href="https://www.jianshu.com/">简书 - 创作你的创作</a><br><a href="https://www.jianshu.com/">https://www.jianshu.com/</a></p><p><a href="https://gitee.com/">码云 Gitee — 开源中国 Git 代码托管平台</a>（项目开源必备，中国的GitHub）<br><a href="https://gitee.com/">https://gitee.com/</a></p><p><a href="https://github.com/">GitHub</a><br><a href="https://github.com/">https://github.com/</a></p><p><a href="http://www.see-source.com/">看源社区 - 移动开发社区</a><br><a href="http://www.see-source.com/">http://www.see-source.com/</a></p><p><a href="http://react-china.org/">React 中文</a><br><a href="http://react-china.org/">http://react-china.org/</a></p><h3 id="工具插件类"><a href="#工具插件类" class="headerlink" title="工具插件类"></a>工具插件类</h3><p><a href="https://www.echartsjs.com/zh/index.html">Apache ECharts (incubating)</a>（制作图表，效果图利器）</p><p><a href="https://www.echartsjs.com/zh/index.html">https://www.echartsjs.com/zh/index.html</a></p><p><a href="https://www.highcharts.com.cn/">兼容 IE6+、完美支持移动端、图表类型丰富的 HTML5 交互图表 | Highcharts</a>（同上）<br><a href="https://www.highcharts.com.cn/">https://www.highcharts.com.cn/</a></p><p><a href="https://chartjs.bootcss.com/">Chart.js | 开源的 HTML5 图表工具</a><br><a href="https://chartjs.bootcss.com/">https://chartjs.bootcss.com/</a></p><p><a href="https://www.yuque.com/antv">AntV · 语雀</a>（Antv官方论坛）</p><p><a href="https://www.yuque.com/antv">https://www.yuque.com/antv</a></p><p><a href="https://antv-f2.gitee.io/zh">蚂蚁数据可视化 | F2</a>（挺好用的，画面相对前几者更简约）<br><a href="https://antv-f2.gitee.io/zh">https://antv-f2.gitee.io/zh</a></p><p><a href="http://www.animate.net.cn/">Animate中文网 – Animate安装、Animate使用、Animate下载</a>（css动画插件）<br><a href="http://www.animate.net.cn/">http://www.animate.net.cn/</a></p><p><a href="http://www.iconfont.cn/collections/index?spma313x.7781069.1998910419.4&type1">Iconfont-阿里巴巴矢量图标库</a><br><a href="http://www.iconfont.cn/collections/index?spm=a313x.7781069.1998910419.4&amp;type=1">http://www.iconfont.cn/collections/index?spm=a313x.7781069.1998910419.4&amp;type=1</a></p><p><a href="http://koala-app.com/index-zh.html">Koala - LESS/Sass/Compass/CoffeeScript编译工具</a><br><a href="http://koala-app.com/index-zh.html">http://koala-app.com/index-zh.html</a></p><p><a href="https://www.swiper.com.cn/">Swiper中文网</a>（轮播图）<br><a href="https://www.swiper.com.cn/">https://www.swiper.com.cn/</a></p><p><a href="http://www.jq22.com/">jQuery插件库-收集最全最新最好的jQuery插件</a>（强列推荐）<br><a href="http://www.jq22.com/">http://www.jq22.com/</a></p><p><a href="http://www.gif5.net/">GIF5官网-gif在线制作_gif制作软件_搞笑gif动态图片制作</a>（将录屏转换为gif）<br><a href="http://www.gif5.net/">http://www.gif5.net/</a></p><p><a href="https://npm.taobao.org/mirrors/git-for-windows/">git-for-windows Mirror</a>（国内版git下载，官网太慢了）<br><a href="https://npm.taobao.org/mirrors/git-for-windows/">https://npm.taobao.org/mirrors/git-for-windows/</a></p><p><a href="https://gitee.com/zha2/easy-window">easy-window: HTML5桌面应用程序开发通用工具</a><br><a href="https://gitee.com/zha2/easy-window">https://gitee.com/zha2/easy-window</a></p><p><a href="http://www.jeasyui.net/plugins/180.html">Easyui Window 窗口_EasyUI 插件</a>（据说还不错）<br><a href="http://www.jeasyui.net/plugins/180.html">http://www.jeasyui.net/plugins/180.html</a></p><p><a href="http://www.jqueryfuns.com/resource/1749">Jalendar2 - jQuery日历日期插件包</a>（项目需要，所以收藏了）<br><a href="http://www.jqueryfuns.com/resource/1749">http://www.jqueryfuns.com/resource/1749</a></p><p><a href="http://www.bootstrapmb.com/tag/rili">js日历_jQuery日历插件</a>（同上）<br><a href="http://www.bootstrapmb.com/tag/rili">http://www.bootstrapmb.com/tag/rili</a></p><p><a href="http://weappsocket.matong.io/">weapp.socket.io</a>（微信小程序sock插件，不是官方的websocket）<br><a href="http://weappsocket.matong.io/">http://weappsocket.matong.io/</a></p><p><a href="http://www.jq22.com/jquery-info16236">前端人脸识别框架Tracking.js</a>（项目需要，所以收藏了）<br><a href="http://www.jq22.com/jquery-info16236">http://www.jq22.com/jquery-info16236</a></p><p><a href="https://xposed.appkg.com/">Xposed框架中文站 - 超多Xposed框架模块介绍与下载</a>（玩xp的应该知道）<br><a href="https://xposed.appkg.com/">https://xposed.appkg.com/</a></p><p><a href="http://www.jq22.com/jquery-info7503">jquery人脸识别插件jquery.facedetection</a><br><a href="http://www.jq22.com/jquery-info7503">http://www.jq22.com/jquery-info7503</a></p><p><a href="http://www.fontawesome.com.cn/faicons/">图标库 – Font Awesome 中文网</a>（类似于阿里矢量图）<br><a href="http://www.fontawesome.com.cn/faicons/">http://www.fontawesome.com.cn/faicons/</a></p><p><a href="https://webkul.github.io/coolhue/">Gradient Colors Collection Palette - CoolHue 2.0</a>（生成好看的渐变色，国内可能打不开）<br><a href="https://webkul.github.io/coolhue/">https://webkul.github.io/coolhue/</a></p><p><a href="https://www.json.cn/">JSON在线解析及格式化验证 - JSON.cn</a><br><a href="https://www.json.cn/">https://www.json.cn/</a></p><p><a href="https://free.modao.cc/">墨刀 - 强大易用的原型设计与协同工具</a>（如题，确实强大帮助传统设计师省了很多事）<br><a href="https://free.modao.cc/">https://free.modao.cc/</a></p><p><a href="https://cli.im/">草料二维码生成器</a><br><a href="https://cli.im/">https://cli.im/</a></p><p><a href="https://www.apicloud.com/">APICloud 手机APP开发、APP制作技术专家 - 中国领先移动云服务平台</a><br><a href="https://www.apicloud.com/">https://www.apicloud.com/</a></p><p><a href="https://natapp.cn/">NATAPP基于ngrok的国内高速内网穿透服务</a><br><a href="https://natapp.cn/">https://natapp.cn/</a></p><p><a href="https://www.easy-mock.com/login">简单的模拟</a>（挺好用的，以前经常用，可惜现在好像停了）<br><a href="https://www.easy-mock.com/login">https://www.easy-mock.com/login</a></p><p><a href="http://tool.oschina.net/regex/">在线正则表达式测试</a><br><a href="http://tool.oschina.net/regex/">http://tool.oschina.net/regex/</a></p><p><a href="http://www.bejson.com/othertools/regex_create/">正则表达式代码生成工具-BeJSON.com</a><br><a href="http://www.bejson.com/othertools/regex/_create/">http://www.bejson.com/othertools/regex\_create/</a></p><p><a href="http://npm.taobao.org/">淘宝 NPM 镜像</a>（快速的npm）<br><a href="http://npm.taobao.org/">http://npm.taobao.org/</a></p><p><a href="https://tinypng.com/">TinyPNG – Compress PNG images while preserving transparency</a>（强烈推荐，图片压缩工具，节省资源，优化性能）<br><a href="https://tinypng.com/">https://tinypng.com/</a></p><p><a href="https://www.awesomes.cn/">Awesomes-Web前端开发资源库</a>（很多插件案例）<br><a href="https://www.awesomes.cn/">https://www.awesomes.cn/</a></p><p><a href="https://www.tweenmax.com.cn/">TweenMax中文网</a>（元素运动框架/插件）<br><a href="https://www.tweenmax.com.cn/">https://www.tweenmax.com.cn/</a></p><p><a href="https://www.gruntjs.net/">Grunt: JavaScript 世界的构建工具 | Grunt 中文网</a>（构建前端项目）<br><a href="https://www.gruntjs.net/">https://www.gruntjs.net/</a></p><p><a href="https://www.gulpjs.com.cn/">gulp.js - 基于流(stream)的自动化构建工具 | gulp.js 中文网</a>（如题）<br><a href="https://www.gulpjs.com.cn/">https://www.gulpjs.com.cn/</a></p><p><a href="https://www.babeljs.cn/">Babel 中文网 · Babel - 下一代 JavaScript 语法的编译器</a>（es6转es5）<br><a href="https://www.babeljs.cn/">https://www.babeljs.cn/</a></p><p><a href="https://yarnpkg.com/">Home | Yarn - Package Manager</a>（类似npm，下载工具）<br><a href="https://yarnpkg.com/">https://yarnpkg.com/</a></p><p><a href="http://mockjs.com/">Mock.js</a>（模拟服务端数据）<br><a href="http://mockjs.com/">http://mockjs.com/</a></p><p><a href="https://lodash.com/">Lodash</a>（提供模块化，性能和附加功能）<br><a href="https://lodash.com/">https://lodash.com/</a></p><p><a href="https://www.bootcdn.cn/">BootCDN - Bootstrap 中文网开源项目免费 CDN 加速服务</a>（cdn托管，远程组件，库集群）<br><a href="https://www.bootcdn.cn/">https://www.bootcdn.cn/</a></p><p><a href="https://tower.im/users/sign_in">登录 - Tower</a>（开发协作工具）<br><a href="https://tower.im/users/sign/_in">https://tower.im/users/sign\_in</a></p><p><a href="https://www.postman.com/">Postman | The Collaboration Platform for API Development</a>（模拟请求数据，获取请求结果）<br><a href="https://www.postman.com/">https://www.postman.com/</a></p><p><a href="https://daneden.github.io/animate.css/">Animate.css</a>（css动画插件）<br><a href="https://daneden.github.io/animate.css/">https://daneden.github.io/animate.css/</a></p><p><a href="https://uigradients.com/#Cherryblossoms">uiGradients - Beautiful colored gradients</a>（好看的渐变色下载）<br><a href="https://uigradients.com/#Cherryblossoms">https://uigradients.com/#Cherryblossoms</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：用购物车理解前端MVC架构</title>
    <link href="/2020/03/05/JS%E6%A1%88%E4%BE%8B%20%E7%94%A8%E8%B4%AD%E7%89%A9%E8%BD%A6%E7%90%86%E8%A7%A3%E5%89%8D%E7%AB%AFMVC%E6%9E%B6%E6%9E%84/"/>
    <url>/2020/03/05/JS%E6%A1%88%E4%BE%8B%20%E7%94%A8%E8%B4%AD%E7%89%A9%E8%BD%A6%E7%90%86%E8%A7%A3%E5%89%8D%E7%AB%AFMVC%E6%9E%B6%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<p><strong>目录</strong></p><p><a href="#%E4%BB%80%E4%B9%88%E6%98%AFMVC%EF%BC%9A">什么是MVC：</a></p><p><a href="#MVC%E7%9A%84%E4%BD%9C%E7%94%A8%EF%BC%9A">MVC的作用：</a></p><p><a href="#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8MVC%E6%9E%B6%E6%9E%84%EF%BC%9A">如何使用MVC架构：</a></p><p><a href="#%E6%95%88%E6%9E%9C%EF%BC%9A">效果：</a></p><p><a href="#%E4%BB%A5%E4%B8%8B%E6%98%AF%E6%89%80%E6%9C%89%E4%BB%A3%E7%A0%81%EF%BC%9A">以下是所有代码：</a></p><p><a href="#%E6%BA%90%E7%A0%81%E5%9C%B0%E5%9D%80%EF%BC%9Ahttps://gitee.com/DieHunter/myCode/tree/master/shopCarMVC">源码地址：https://gitee.com/DieHunter/myCode/tree/master/shopCarMVC</a></p><p><a href="#%E5%90%8E%E7%AB%AF%EF%BC%88nodejs%EF%BC%89%EF%BC%9A">后端（nodejs）：</a></p><p><a href="#server.js">server.js</a></p><p><a href="#data.js(%E5%AD%98%E6%94%BE%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8)">data.js(存放商品列表)</a></p><p><a href="#%E5%89%8D%E7%AB%AF">前端</a></p><p><a href="#shopCar.html%EF%BC%88%E5%85%A5%E5%8F%A3%E9%A1%B5%E9%9D%A2%EF%BC%89">shopCar.html（入口页面）</a></p><p><a href="#shop.css">shop.css</a></p><p><a href="#JS%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%9A">JS文件夹：</a></p><p><a href="#bussiness">bussiness</a></p><p><a href="#command">command</a></p><p><a href="#components">components</a></p><p><a href="#config">config</a></p><p><a href="#controller">controller</a></p><p><a href="#event">event</a></p><p><a href="#model">model</a></p><p><a href="#utils">utils</a></p><p><a href="#view">view</a></p><p><a href="#%E6%80%BB%E7%BB%93">总结</a></p><hr><hr><h3 id="什么是MVC："><a href="#什么是MVC：" class="headerlink" title="什么是MVC："></a>什么是MVC：</h3><p>Model View Controller即：模型-视图-控制器<br>通俗来讲，在编程语言中，Model就是数据，可以理解为数据库，View就是显示数据的外观，Controller是用来连接前两者的行为，常见的Vue采用的是M-V-VM架构，与MVC类似，但是基于MVC</p><h3 id="MVC的作用："><a href="#MVC的作用：" class="headerlink" title="MVC的作用："></a>MVC的作用：</h3><p>说到作用，就不得不提面向对象与面向过程的区别了</p><p>面向过程就是，将解决问题的思路流程一步一步进行，紧扣在一起，最终达到结果</p><p>面向对象，是将某个问题的解决方式剥离开，其目的不是为了完成某个步骤，而是将某个事物（对象）的角色（属性）和行为（方法）作为核心</p><p>说了这些，到底MVC有什么好处呢？</p><p>举个栗子：A是某公司的一位前端程序员，平时用面向过程进行编程，这天，好不容易完成了手头上的活，准备回家，这时，产品经理走过来，让他改个小地方，这下就完了，面向过程的思维使他的代码环环相扣，代码耦合性强，内聚性高，密不可分，改一个地方就要几乎全改</p><p>A的哥哥也是一个前端程序员，平时用面向对象编程，产品经理让他改一个效果，由于用的面向对象，他的代码没有层次感，通用的方法全部提取出来，使得代码耦合性低，想改哪直接改相关的类或者方法就好了</p><p>当然，在小型项目中无法体现它的优点，甚至会小题大做，大材小用，而在大型项目中，其耦合性低，代码复用性高，搭建相对较快</p><h3 id="如何使用MVC架构："><a href="#如何使用MVC架构：" class="headerlink" title="如何使用MVC架构："></a>如何使用MVC架构：</h3><p>又是这个购物车，业余时间用MVC做了一个简单的购物车：</p><p>目录结构大致是这样</p><p><img src="https://img-blog.csdnimg.cn/2020030516395041.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>购物车整体流程：</p><p>目录结构将modelviewcontroller剥离开</p><p>Modedl层：存储数据，显示数据</p><p>View：根据Model数据渲染页面</p><p>Controller：传递数据</p><p>Command:操作数据，获取数据</p><p>Event：事件总线，注册事件</p><p>商品列表：</p><p>初始化View层，建立Ajax获取数据，之后由controller触发事件至事件总线，然后再由注册的事件将ajax数据传至Model中完成商品列表初始化</p><p>当model获取到商品列表数据时，通过代理set()触发新建商品列表事件，通过command操作view达到新建列表目的</p><p>购物车表格：</p><p>当用户对view进行操作时，触发注册的事件，通过command修改Model中的数据（购物车列表）从而再由command驱动view中的刷新表格进行渲染</p><h3 id="效果："><a href="#效果：" class="headerlink" title="效果："></a>效果：</h3><p><img src="https://img-blog.csdnimg.cn/20200305170021983.gif"></p><h3 id="以下是所有代码："><a href="#以下是所有代码：" class="headerlink" title="以下是所有代码："></a>以下是所有代码：</h3><h3 id="源码地址：https-gitee-com-DieHunter-myCode-tree-master-shopCarMVC"><a href="#源码地址：https-gitee-com-DieHunter-myCode-tree-master-shopCarMVC" class="headerlink" title="源码地址：https://gitee.com/DieHunter/myCode/tree/master/shopCarMVC"></a>源码地址：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopCarMVC">https://gitee.com/DieHunter/myCode/tree/master/shopCarMVC</a></h3><h1 id="后端（nodejs）："><a href="#后端（nodejs）：" class="headerlink" title="后端（nodejs）："></a>后端（nodejs）：</h1><h2 id="server-js"><a href="#server-js" class="headerlink" title="server.js"></a>server.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> *后端采用node+express搭建一个简单的接口，通过本地数据，将商品列表传至前端</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> shopData = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./data/shopData.js&#x27;</span>)<br><span class="hljs-keyword">let</span> serverToken = <span class="hljs-string">&#x27;hello&#x27;</span><br>app.all(<span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res, next</span>) </span>&#123; <span class="hljs-comment">//跨域</span><br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>);<br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="hljs-string">&quot;content-type&quot;</span>);<br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="hljs-string">&quot;DELETE,PUT,POST,GET,OPTIONS&quot;</span>);<br>    next();<br>&#125;);<br>app.use(<span class="hljs-string">&#x27;/getShopList&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> data = req.query<br>    <span class="hljs-keyword">if</span> (!checkToken(data.token)) &#123; <span class="hljs-comment">//简单获取前端token，校验</span><br>        res.send(&#123;<br>            <span class="hljs-attr">result</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;token fail&#x27;</span><br>        &#125;)<br>        <span class="hljs-keyword">return</span><br>    &#125;<br>    res.send(&#123;<br>        <span class="hljs-attr">result</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;success&#x27;</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;getShopList&#x27;</span>,<br>        shopData<br>    &#125;)<br>&#125;)<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkToken</span>(<span class="hljs-params">teken</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> teken == serverToken<br>&#125;<br>app.use(<span class="hljs-string">&#x27;/img&#x27;</span>, express.static(path.join(__dirname, <span class="hljs-string">&#x27;./img&#x27;</span>))); <span class="hljs-comment">//后端目录静态化，用url+img访问文件夹</span><br>app.use(<span class="hljs-string">&#x27;/client&#x27;</span>, express.static(path.join(__dirname, <span class="hljs-string">&#x27;../client&#x27;</span>)));<br>app.listen(<span class="hljs-number">1024</span>, <span class="hljs-string">&quot;127.0.0.1&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;服务开启，开始侦听&quot;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="data-js-存放商品列表"><a href="#data-js-存放商品列表" class="headerlink" title="data.js(存放商品列表)"></a>data.js(存放商品列表)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">module</span>.exports = [&#123;<br>        <span class="hljs-string">&quot;select&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1001</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/1.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮0&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">10</span>,<br>        <span class="hljs-string">&quot;sum&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;select&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1002</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/2.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮1&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">20</span>,<br>        <span class="hljs-string">&quot;sum&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;select&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1003</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/3.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮2&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">30</span>,<br>        <span class="hljs-string">&quot;sum&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;select&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1004</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/4.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮3&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">40</span>,<br>        <span class="hljs-string">&quot;sum&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;select&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1005</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/5.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮4&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">50</span>,<br>        <span class="hljs-string">&quot;sum&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;select&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1006</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/6.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮5&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">60</span>,<br>        <span class="hljs-string">&quot;sum&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;select&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1007</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/7.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮6&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">70</span>,<br>        <span class="hljs-string">&quot;sum&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;select&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1008</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/8.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮7&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">80</span>,<br>        <span class="hljs-string">&quot;sum&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;select&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1009</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/9.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮8&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">90</span>,<br>        <span class="hljs-string">&quot;sum&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;select&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1010</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/10.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮9&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">100</span>,<br>        <span class="hljs-string">&quot;sum&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;delete&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;<br>]<br></code></pre></td></tr></table></figure><h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h3 id="shopCar-html（入口页面）"><a href="#shopCar-html（入口页面）" class="headerlink" title="shopCar.html（入口页面）"></a>shopCar.html（入口页面）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>shopCar<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./src/style/shop.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-comment">/*</span></span><br><span class="hljs-comment"><span class="javascript">购物车整体流程：</span></span><br><span class="hljs-comment"><span class="javascript">目录结构将model view controller剥离开</span></span><br><span class="hljs-comment"><span class="javascript">Modedl层：存储数据，显示数据</span></span><br><span class="hljs-comment"><span class="javascript">View：根据Model数据渲染页面</span></span><br><span class="hljs-comment"><span class="javascript">Controller：传递数据</span></span><br><span class="hljs-comment"><span class="javascript">Command:操作数据，获取数据</span></span><br><span class="hljs-comment"><span class="javascript">Event：事件总线，注册事件</span></span><br><span class="hljs-comment"><span class="javascript">商品列表：</span></span><br><span class="hljs-comment"><span class="javascript"> 初始化View层，建立Ajax获取数据，之后由controller触发事件至事件总线，然后再由注册的事件将ajax数据传至Model中完成商品列表初始化</span></span><br><span class="hljs-comment"><span class="javascript"> 当model获取到商品列表数据时，通过代理set()  触发新建商品列表事件，通过command操作view达到新建列表目的</span></span><br><span class="hljs-comment"><span class="javascript">购物车表格：</span></span><br><span class="hljs-comment"><span class="javascript"> 当用户对view进行操作时，触发注册的事件，通过command修改Model中的数据（购物车列表）从而再由command驱动view中的刷新表格进行渲染</span></span><br><span class="hljs-comment"><span class="javascript">*/</span></span><br><span class="javascript"><span class="hljs-keyword">import</span> ShopView <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./src/js/view/ShopView.js&#x27;</span></span><br><span class="javascript"><span class="hljs-comment">// 实例化View层入口函数</span></span><br><span class="javascript"><span class="hljs-keyword">new</span> ShopView()</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="shop-css"><a href="#shop-css" class="headerlink" title="shop.css"></a>shop.css</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs css">* &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.shopBox</span> &#123;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">1000px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.liItem</span> &#123;<br>    <span class="hljs-attribute">float</span>: left;<br>    <span class="hljs-attribute">list-style</span>: none;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightcoral;<br>&#125;<br><br><span class="hljs-selector-class">.liItem</span> <span class="hljs-selector-tag">img</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.leftBtn</span>,<br><span class="hljs-selector-class">.rightBtn</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">background</span>: white;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">25px</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">30px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.text</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">26px</span>;<br>    <span class="hljs-attribute">display</span>: inline-block;<br>    <span class="hljs-attribute">vertical-align</span>: bottom;<br>    <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br><br><span class="hljs-selector-tag">table</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightcoral;<br>    <span class="hljs-attribute">border-collapse</span>: collapse;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;<br>&#125;<br><br><span class="hljs-selector-class">.checkbox</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">td</span> &#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightcoral;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br><br><span class="hljs-selector-tag">td</span> <span class="hljs-selector-tag">button</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.numBox</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">margin</span>: auto;<br>    <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><br><span class="hljs-selector-class">.numBox</span>&gt;<span class="hljs-selector-tag">button</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">40px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">42px</span>;<br>    <span class="hljs-attribute">background-color</span>: white;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000000</span>;<br>&#125;<br><br><span class="hljs-selector-class">.numBox</span>&gt;<span class="hljs-selector-tag">input</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">70px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000000</span>;<br>    <span class="hljs-attribute">border-left</span>: none;<br>    <span class="hljs-attribute">border-right</span>: none;<br>    <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS文件夹："><a href="#JS文件夹：" class="headerlink" title="JS文件夹："></a>JS文件夹：</h2><h3 id="bussiness"><a href="#bussiness" class="headerlink" title="bussiness"></a>bussiness</h3><ul><li>Ajax.js<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> ShopEvent <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../event/ShopEvent.js&#x27;</span><br><span class="hljs-keyword">import</span> Utils <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../utils/Utils.js&#x27;</span><br><span class="hljs-keyword">import</span> Api <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../config/Api.js&#x27;</span><br><span class="hljs-keyword">import</span> ShopController <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../controller/ShopController.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Ajax</span> </span>&#123;<span class="hljs-comment">//Ajax类，用于请求后端或本地数据</span><br>    <span class="hljs-comment">// Ajax请求函数</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">AjaxTool</span>(<span class="hljs-params">method = Api.GET, url, data</span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> xhr;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.ActiveXObject) &#123; <span class="hljs-comment">//ie浏览器</span><br>            xhr = <span class="hljs-keyword">new</span> ActiveXObject(<span class="hljs-string">&quot;Microsoft.XMLHTTP&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.XMLHttpRequest) &#123; <span class="hljs-comment">//其他浏览器</span><br>            xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();<br>        &#125;<br>        url = Api.URL + Api.PORT + Api.PATH + url<br>        <span class="hljs-keyword">if</span> (method !== Api.POST) &#123;<br>            method = Api.GET<br>            url = Utils.urlJoin(url, data)<br>            data = <span class="hljs-literal">null</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            method = Api.POST<br>        &#125;<br>        xhr.open(method, url);<br>        xhr.send(data ? <span class="hljs-built_in">JSON</span>.stringify(data) : <span class="hljs-string">&#x27;&#x27;</span>)<br>        xhr.addEventListener(<span class="hljs-string">&#x27;load&#x27;</span>, Ajax.loadHandler) <span class="hljs-comment">//Ajax类是静态类，无法使用this</span><br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">loadHandler</span>(<span class="hljs-params">e</span>)</span> &#123;<br>        <span class="hljs-comment">//this指向xhr</span><br>        <span class="hljs-keyword">let</span> xhr = e.currentTarget;<br>        <span class="hljs-keyword">if</span> (xhr.readyState === <span class="hljs-number">4</span> &amp;&amp; xhr.status === <span class="hljs-number">200</span>) &#123;<br>            Ajax.data = xhr.response<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            Ajax.data = <span class="hljs-string">&#x27;error&#x27;</span><br>        &#125;<br><br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">set</span> <span class="hljs-title">data</span>(<span class="hljs-params">value</span>) &#123; <span class="hljs-comment">//使用set对象代理模式替代请求数据回调函数（只写set表示data只可写入，不可读取）</span><br>        <span class="hljs-keyword">let</span> res = <span class="hljs-built_in">JSON</span>.parse(value)<br>        <span class="hljs-keyword">switch</span> (res.result) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                <span class="hljs-built_in">console</span>.log(res.msg)<br>                ShopController.dispatch(ShopEvent.GET_DATA, res)<span class="hljs-comment">//获取到数据后不做其他操作，将数据通过事件抛出至Event总线中</span><br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;加载失败&#x27;</span>)<br>                <span class="hljs-built_in">console</span>.log(res.msg)<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="command"><a href="#command" class="headerlink" title="command"></a>command</h3><ul><li><p>MainCommand（command汇总）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> GetDataCommand <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../command/GetDataCommand.js&#x27;</span><br><span class="hljs-keyword">import</span> CreateListCommand <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../command/CreateListCommand.js&#x27;</span><br><span class="hljs-keyword">import</span> CreateTableCommand <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../command/CreateTableCommand.js&#x27;</span><br><span class="hljs-keyword">import</span> AddItemCommand <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../command/AddItemCommand.js&#x27;</span><br><span class="hljs-keyword">import</span> DelItemCommand <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../command/DelItemCommand.js&#x27;</span><br><span class="hljs-keyword">import</span> ReduceItemCommand <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../command/ReduceItemCommand.js&#x27;</span><br><span class="hljs-keyword">import</span> ChangeItemCommand <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../command/ChangeItemCommand.js&#x27;</span><br><span class="hljs-keyword">import</span> SelectItemCommand <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../command/SelectItemCommand.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>    GetDataCommand,<br>    CreateListCommand,<br>    CreateTableCommand,<br>    AddItemCommand,<br>    DelItemCommand,<br>    ReduceItemCommand,<br>    ChangeItemCommand,<br>    SelectItemCommand<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>GetDataCommand（获取商品列表）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> ShopModel <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../model/ShopModel.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GetDataCommand</span> </span>&#123; <span class="hljs-comment">//行为类，用于执行ctrl层通过事件的方式发来的指令</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">eventHandler</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//使用动态方法，而不是static静态方法，因为该方法将被使用多次，使用new AddShopCommand实例化后调用</span><br>        <span class="hljs-keyword">let</span> &#123;<br>            data<br>        &#125; = e<br>        ShopModel.getInstance().shopList = data.shopData<span class="hljs-comment">//将ajax获取的数据发送到Model</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>CreateListCommand（创建商品列表）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> CreateList <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../view/CreateList.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CreateListCommand</span> </span>&#123; <span class="hljs-comment">//行为类，用于执行ctrl层通过事件的方式发来的指令</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//创建商品列表</span><br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">eventHandler</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//使用动态方法，而不是static静态方法，因为该方法将被使用多次，使用new AddShopCommand实例化后调用</span><br>        <span class="hljs-keyword">let</span> &#123;<br>            data<br>        &#125; = e<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; data.length; i++) &#123;<br>            <span class="hljs-keyword">let</span> createList = <span class="hljs-keyword">new</span> CreateList(<span class="hljs-built_in">document</span>.body)<br>            createList.shopList = data[i]<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>CreateTableCommand（创建购物车表格）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> CreateTable <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../view/CreateTable.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ShopCommand</span> </span>&#123; <span class="hljs-comment">//行为类，用于执行ctrl层通过事件的方式发来的指令</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//刷新购物车表格</span><br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">eventHandler</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//使用动态方法，而不是static静态方法，因为该方法将被使用多次，使用new AddShopCommand实例化后调用</span><br>        <span class="hljs-keyword">let</span> &#123;<br>            data<br>        &#125; = e<br>        <span class="hljs-keyword">let</span> createTable = <span class="hljs-keyword">new</span> CreateTable(<span class="hljs-built_in">document</span>.body)<br>        createTable.shoppingList = data<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>AddItemCommand（增加商品）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> ShopModel <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../model/ShopModel.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AddItemCommand</span> </span>&#123; <span class="hljs-comment">//行为类，用于执行ctrl层通过事件的方式发来的指令</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//新增商品</span><br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">eventHandler</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//使用动态方法，而不是static静态方法，因为该方法将被使用多次，使用new AddShopCommand实例化后调用</span><br>        <span class="hljs-keyword">let</span> &#123;<br>            data<br>        &#125; = e<br>        AddItemCommand.addItem(ShopModel.getInstance().shoppingList, data)<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">addItem</span>(<span class="hljs-params">list, data</span>)</span> &#123; <span class="hljs-comment">//遍历查询某项商品增加或减少</span><br>        <span class="hljs-keyword">let</span> arr = list.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123;<br>            <span class="hljs-keyword">return</span> item.id === data.id;<br>        &#125;); <span class="hljs-comment">//若有返回值则对某项商品操作（在1-99区间，若为0则直接删除）</span><br>        <span class="hljs-keyword">if</span> (arr.length == <span class="hljs-number">0</span>) &#123;<br>            data.num++;<br>            data.sum = data.num * data.price;<br>            list.push(data);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (arr[<span class="hljs-number">0</span>].num &lt; <span class="hljs-number">99</span>) &#123;<br>            arr[<span class="hljs-number">0</span>].num++;<br>            arr[<span class="hljs-number">0</span>].sum = arr[<span class="hljs-number">0</span>].num * arr[<span class="hljs-number">0</span>].price;<br>        &#125;<br>        ShopModel.getInstance().shoppingList = list<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>ReduceItemCommand（减少商品）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> ShopModel <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../model/ShopModel.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ReduceItemCommand</span> </span>&#123; <span class="hljs-comment">//行为类，用于执行ctrl层通过事件的方式发来的指令</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//减少商品</span><br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">eventHandler</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//使用动态方法，而不是static静态方法，因为该方法将被使用多次，使用new AddShopCommand实例化后调用</span><br>        <span class="hljs-keyword">let</span> &#123;<br>            data<br>        &#125; = e<br>        ReduceItemCommand.reduceItem(ShopModel.getInstance().shoppingList, data)<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">reduceItem</span>(<span class="hljs-params">list, data</span>)</span> &#123; <span class="hljs-comment">//遍历查询某项商品增加或减少</span><br>        <span class="hljs-keyword">let</span> arr = list.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123;<br>            <span class="hljs-keyword">return</span> item.id === data.id;<br>        &#125;); <span class="hljs-comment">//若有返回值则对某项商品操作（在1-99区间，若为0则直接删除）</span><br>        <span class="hljs-keyword">if</span> (arr[<span class="hljs-number">0</span>].num &gt; <span class="hljs-number">1</span>) &#123;<br>            arr[<span class="hljs-number">0</span>].num--;<br>            arr[<span class="hljs-number">0</span>].sum = arr[<span class="hljs-number">0</span>].num * arr[<span class="hljs-number">0</span>].price;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            data.num = <span class="hljs-number">0</span>; <span class="hljs-comment">//此处初始化model中的shopList，否则会假删除（删除栈中的数量）</span><br>            list = list.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123;<br>                <span class="hljs-keyword">return</span> item.id !== data.id;<br>            &#125;);<br>        &#125;<br>        ShopModel.getInstance().shoppingList = list<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>ChangeItemCommand（修改商品数量）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> ShopModel <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../model/ShopModel.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ChangeItemCommand</span> </span>&#123; <span class="hljs-comment">//行为类，用于执行ctrl层通过事件的方式发来的指令</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//修改商品数量</span><br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">eventHandler</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//使用动态方法，而不是static静态方法，因为该方法将被使用多次，使用new AddShopCommand实例化后调用</span><br>        <span class="hljs-keyword">let</span> &#123;<br>            data<br>        &#125; = e<br>        ChangeItemCommand.changeItem(ShopModel.getInstance().shoppingList, data)<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">changeItem</span>(<span class="hljs-params">list, data</span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> arr = list.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123;<br>            <span class="hljs-keyword">return</span> item.id === data.id;<br>        &#125;);<br>        arr[<span class="hljs-number">0</span>].sum = arr[<span class="hljs-number">0</span>].num * arr[<span class="hljs-number">0</span>].price;<br>        ShopModel.getInstance().shoppingList = list<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>DelItemCommand（删除商品）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> ShopModel <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../model/ShopModel.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DelItemCommand</span> </span>&#123; <span class="hljs-comment">//行为类，用于执行ctrl层通过事件的方式发来的指令</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//删除商品</span><br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">eventHandler</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//使用动态方法，而不是static静态方法，因为该方法将被使用多次，使用new AddShopCommand实例化后调用</span><br>        <span class="hljs-keyword">let</span> &#123;<br>            data<br>        &#125; = e<br>        DelItemCommand.delItem(ShopModel.getInstance().shoppingList, data)<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">delItem</span>(<span class="hljs-params">list, data</span>)</span> &#123; <span class="hljs-comment">//遍历查询某项商品增加或减少</span><br>        data.num = <span class="hljs-number">0</span>; <span class="hljs-comment">//此处初始化model中的shopList，否则会假删除（删除栈中的数量）</span><br>        data.select = <span class="hljs-literal">false</span>; <span class="hljs-comment">//此处初始化model中的shopList，否则会假删除（删除栈中的数量）</span><br>        ShopModel.getInstance().shoppingList = list.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123; <span class="hljs-comment">//数组过滤函数，返回id属性不等于当前id的数组，即删除当前选中的对象，并重新赋值</span><br>            <span class="hljs-keyword">return</span> item.id !== data.id;<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>SelectItemCommand（选中商品）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> ShopModel <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../model/ShopModel.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SelectItemCommand</span> </span>&#123; <span class="hljs-comment">//行为类，用于执行ctrl层通过事件的方式发来的指令</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">eventHandler</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//使用动态方法，而不是static静态方法，因为该方法将被使用多次，使用new AddShopCommand实例化后调用</span><br>        <span class="hljs-keyword">let</span> &#123;<br>            data<br>        &#125; = e<br>        SelectItemCommand.selItem(ShopModel.getInstance().shoppingList, data)<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">selItem</span>(<span class="hljs-params">list, data</span>)</span> &#123; <span class="hljs-comment">//遍历查询某项商品增加或减少</span><br>        <span class="hljs-keyword">if</span> (!data) &#123; <span class="hljs-comment">//全选框</span><br>            list.checkedAll = !list.checkedAll<br>            list.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123;<br>                item.select = list.checkedAll; <span class="hljs-comment">//其他选项框与全选框状态一致</span><br>            &#125;)<br>        &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">//单选框</span><br>            list.checkedAll = <span class="hljs-number">1</span> <span class="hljs-comment">//计数器，用来查询是否为全选状态</span><br>            list.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123; <span class="hljs-comment">//单选，选中某一个（在表格初始化时执行checkAll判断是否全选）</span><br>                <span class="hljs-keyword">if</span> (item.id === data.id) &#123;<br>                    item.select = !item.select<br>                &#125;<br>                list.checkedAll *= item.select<br>            &#125;)<br>        &#125;<br>        ShopModel.getInstance().shoppingList = list<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="components"><a href="#components" class="headerlink" title="components"></a>components</h3><ul><li>Counter（计数器组件）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> ShopEvent <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../event/ShopEvent.js&#x27;</span><br><span class="hljs-keyword">import</span> ShopController <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../controller/ShopController.js&#x27;</span><br><span class="hljs-keyword">import</span> Utils <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../utils/Utils.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Counter</span> </span>&#123; <span class="hljs-comment">//计数器组件</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">_data, _parentEle</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.data = _data<br>        <span class="hljs-built_in">this</span>.parentEle = _parentEle<br>        <span class="hljs-built_in">this</span>.ele = <span class="hljs-built_in">this</span>.createCounter()<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">createCounter</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//创建数量计数器</span><br>        <span class="hljs-keyword">let</span> div = Utils.createEle(<span class="hljs-string">&#x27;div&#x27;</span>, &#123;&#125;, &#123;<br>            <span class="hljs-attr">className</span>: <span class="hljs-string">&#x27;numBox&#x27;</span><br>        &#125;)<br>        <span class="hljs-built_in">this</span>.parentEle.appendChild(div);<br>        <span class="hljs-keyword">let</span> leftBtn = <span class="hljs-built_in">this</span>.createMark(div, <span class="hljs-string">&#x27;reduce&#x27;</span>) <span class="hljs-comment">//减少商品按钮</span><br>        <span class="hljs-keyword">let</span> input = Utils.createEle(<span class="hljs-string">&#x27;input&#x27;</span>, &#123;&#125;, &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;text&#x27;</span>,<br>            <span class="hljs-attr">value</span>: <span class="hljs-built_in">this</span>.data.num<br>        &#125;)<br>        div.appendChild(input);<br>        <span class="hljs-keyword">let</span> rightBtn = <span class="hljs-built_in">this</span>.createMark(div, <span class="hljs-string">&#x27;add&#x27;</span>) <span class="hljs-comment">//新增商品按钮</span><br>        leftBtn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-built_in">this</span>.reduceItemEvent);<br>        rightBtn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-built_in">this</span>.addItemEvent);<br>        input.addEventListener(<span class="hljs-string">&quot;input&quot;</span>, Utils.throttle(<span class="hljs-built_in">this</span>.changeItemEvent, <span class="hljs-number">500</span>)); <span class="hljs-comment">// 节流</span><br>        <span class="hljs-keyword">return</span> div;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">createMark</span>(<span class="hljs-params">parentEle, type</span>)</span> &#123; <span class="hljs-comment">//判断增加或减少键</span><br>        <span class="hljs-keyword">let</span> markBtn = Utils.createEle(<span class="hljs-string">&#x27;button&#x27;</span>, &#123;&#125;, &#123;<br>            <span class="hljs-attr">textContent</span>: type == <span class="hljs-string">&quot;add&quot;</span> ? <span class="hljs-string">&#x27;+&#x27;</span> : <span class="hljs-string">&#x27;-&#x27;</span><br>        &#125;)<br>        parentEle.appendChild(markBtn);<br>        <span class="hljs-keyword">return</span> markBtn<br>    &#125;<br>    addItemEvent = <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123; <span class="hljs-comment">//新增商品时，抛发事件至command控制model修改数据，刷新表格</span><br>        ShopController.dispatch(ShopEvent.ADD_SHOPIING_ITEM, <span class="hljs-built_in">this</span>.data)<br>    &#125;<br>    reduceItemEvent = <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123; <span class="hljs-comment">//减少商品</span><br>        ShopController.dispatch(ShopEvent.REDUCE_SHOPIING_ITEM, <span class="hljs-built_in">this</span>.data)<br>    &#125;<br>    changeItemEvent = <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123; <span class="hljs-comment">//修改商品</span><br>        e.target.value = <span class="hljs-built_in">this</span>.data.num = <span class="hljs-built_in">this</span>.checkNumber(e.target.value)<br>        ShopController.dispatch(ShopEvent.CHANGE_SHOPIING_ITEM, <span class="hljs-built_in">this</span>.data)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">checkNumber</span>(<span class="hljs-params">value</span>)</span> &#123; <span class="hljs-comment">//过滤数据</span><br>        value = value.replace(<span class="hljs-regexp">/[^0-9]/g</span>, <span class="hljs-string">&quot;&quot;</span>); <span class="hljs-comment">//只允许输入数字</span><br>        <span class="hljs-keyword">if</span> (value === <span class="hljs-string">&quot;0&quot;</span>) &#123; <span class="hljs-comment">// 如果=0，就设为1</span><br>            value = <span class="hljs-string">&quot;1&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (value.length &gt; <span class="hljs-number">2</span>) &#123; <span class="hljs-comment">// 如果输入的内容大于2位，让这个值为99（最大99个）</span><br>            value = <span class="hljs-string">&quot;99&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (value.length === <span class="hljs-number">0</span>) &#123; <span class="hljs-comment">//  如果什么都没有输入，也设为1</span><br>            value = <span class="hljs-string">&quot;1&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> value<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><ul><li>Api<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Api</span> </span>&#123;<span class="hljs-comment">//接口配置类</span><br>    <span class="hljs-keyword">static</span> URL = <span class="hljs-string">&quot;http://127.0.0.1&quot;</span>;<br>    <span class="hljs-keyword">static</span> PORT = <span class="hljs-string">&quot;:1024&quot;</span>;<br>    <span class="hljs-keyword">static</span> PATH = <span class="hljs-string">&#x27;/&#x27;</span><br>    <span class="hljs-keyword">static</span> GET = <span class="hljs-string">&quot;get&quot;</span>;<br>    <span class="hljs-keyword">static</span> POST = <span class="hljs-string">&quot;post&quot;</span>;<br>    <span class="hljs-keyword">static</span> IMGPATH = Api.URL + Api.PORT + Api.PATH;<br>    <span class="hljs-keyword">static</span> ServerApi = &#123;<br>        <span class="hljs-attr">getShopList</span>: <span class="hljs-string">&#x27;getShopList&#x27;</span> <span class="hljs-comment">//获取商品列表</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h3><ul><li>ShopController（控制层，做事件传导，数据传输）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ShopController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">EventTarget</span> </span>&#123; <span class="hljs-comment">//控制层，处理用户交互，路由，输入，将model view controller剥离开，通过controller中的事件监听抛发进行路由传输数据</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//继承事件对象，用于抛发自定义事件</span><br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">get</span> <span class="hljs-title">instance</span>() &#123;  <span class="hljs-comment">//单例写法与java中getinstance相似，new会生成一个新对象，分配内存，而这么写可以把一个已存在的引用给你使用，节省效能,若只使用get + 属性名而不用set产生只读属性，只允许调用，无法修改</span><br>        <span class="hljs-keyword">if</span> (!ShopController._instance) &#123;<br>            <span class="hljs-built_in">Object</span>.defineProperty(ShopController, <span class="hljs-string">&quot;_instance&quot;</span>, &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> ShopController()<br>            &#125;)<br>        &#125;<br>        <span class="hljs-keyword">return</span> ShopController._instance;<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">dispatch</span>(<span class="hljs-params">type, data</span>)</span> &#123; <span class="hljs-comment">//抛发自定义事件，传递数据</span><br>        <span class="hljs-keyword">let</span> event = <span class="hljs-keyword">new</span> Event(type)<br>        event.data = data<br>        ShopController.instance.dispatchEvent(event)<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">runCommand</span>(<span class="hljs-params">type, Command</span>)</span> &#123; <span class="hljs-comment">//观察者模式，当自定义事件触发时调用其他类中的方法，与dispatch对应,类似于addEventlistener，只不过将回调函数换成类中的动态方法</span><br>        <span class="hljs-keyword">var</span> command = <span class="hljs-keyword">new</span> Command()<br>        ShopController.instance.addEventListener(type, command.eventHandler)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="event"><a href="#event" class="headerlink" title="event"></a>event</h3><ul><li><p>ShopEvent</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ShopEvent</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br><br>    &#125;<br>    <span class="hljs-comment">// 所有自定义事件名称</span><br>    <span class="hljs-keyword">static</span> GET_DATA = <span class="hljs-string">&#x27;get_data&#x27;</span><br>    <span class="hljs-keyword">static</span> GET_SHOP_LIST = <span class="hljs-string">&#x27;get_shop_list&#x27;</span><br>    <span class="hljs-keyword">static</span> GET_SHOPIING_LIST = <span class="hljs-string">&#x27;get_shopping_list&#x27;</span><br>    <span class="hljs-keyword">static</span> ADD_SHOPIING_ITEM = <span class="hljs-string">&#x27;add_shopping_item&#x27;</span><br>    <span class="hljs-keyword">static</span> DEL_SHOPIING_ITEM = <span class="hljs-string">&#x27;del_shopping_item&#x27;</span><br>    <span class="hljs-keyword">static</span> REDUCE_SHOPIING_ITEM = <span class="hljs-string">&#x27;reduce_shopping_item&#x27;</span><br>    <span class="hljs-keyword">static</span> CHANGE_SHOPIING_ITEM = <span class="hljs-string">&#x27;change_shopping_item&#x27;</span><br>    <span class="hljs-keyword">static</span> SELECT_SHOPIING_ITEM = <span class="hljs-string">&#x27;select_shopping_item&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>EventGroup（事件总线）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> ShopEvent <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./ShopEvent.js&#x27;</span><br><span class="hljs-keyword">import</span> ShopController <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../controller/ShopController.js&#x27;</span><br><span class="hljs-keyword">import</span> MainCommand <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../command/MainCommand.js&#x27;</span><br><span class="hljs-keyword">let</span> &#123;<br>    GetDataCommand,<br>    CreateListCommand,<br>    CreateTableCommand,<br>    AddItemCommand,<br>    DelItemCommand,<br>    ReduceItemCommand,<br>    ChangeItemCommand,<br>    SelectItemCommand<br>&#125; = MainCommand<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">EventGroup</span> </span>&#123; <span class="hljs-comment">//事件总线，注册所有model层与其它层的业务逻辑,全程通过controller层中的事件机制进行通信</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">        1.Ajax获取到数据后，触发GetDataCommand中的方法，用于传递数据至Model层中，然后通过Model层调用CreateListCommand创造商品列表</span><br><span class="hljs-comment">        2.当用户对商品做任何操作时，都会修改Model从而触发CreateTableCommand，以下操作会触发CreateTableCommand</span><br><span class="hljs-comment">        3.点击商品列表或点击商品加号按钮时触发AddItemCommand，通过AddItemCommand修改model中的数据，从而驱动CreateTableCommand</span><br><span class="hljs-comment">        4.点击商品减号按钮时触发ReduceItemCommand，修改model中的数据，从而驱动CreateTableCommand</span><br><span class="hljs-comment">        5.点击商品删除按钮时触发DelItemCommand，删除model中的数据，从而驱动CreateTableCommand</span><br><span class="hljs-comment">        6.修改商品数量时触发ChangeItemCommand，更新model中的数据，从而驱动CreateTableCommand</span><br><span class="hljs-comment">        7.选中商品时触发SelectItemCommand，更新model中的数据，从而驱动CreateTableCommand</span><br><span class="hljs-comment">         */</span><br>        ShopController.runCommand(ShopEvent.GET_DATA, GetDataCommand)<span class="hljs-comment">//获取商品列表数据</span><br>        ShopController.runCommand(ShopEvent.GET_SHOP_LIST, CreateListCommand)<span class="hljs-comment">//新建商品列表</span><br>        ShopController.runCommand(ShopEvent.GET_SHOPIING_LIST, CreateTableCommand)<span class="hljs-comment">//刷新购物车表格</span><br>        ShopController.runCommand(ShopEvent.ADD_SHOPIING_ITEM, AddItemCommand)<span class="hljs-comment">//商品新增或数量加一</span><br>        ShopController.runCommand(ShopEvent.DEL_SHOPIING_ITEM, DelItemCommand)<span class="hljs-comment">//商品删除</span><br>        ShopController.runCommand(ShopEvent.REDUCE_SHOPIING_ITEM, ReduceItemCommand)<span class="hljs-comment">//商品数量减一</span><br>        ShopController.runCommand(ShopEvent.CHANGE_SHOPIING_ITEM, ChangeItemCommand)<span class="hljs-comment">//修改商品数量</span><br>        ShopController.runCommand(ShopEvent.SELECT_SHOPIING_ITEM, SelectItemCommand)<span class="hljs-comment">//选择商品</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="model"><a href="#model" class="headerlink" title="model"></a>model</h3><ul><li>ShopModel（模型层，用于数据存放及数据逻辑）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> ShopEvent <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../event/ShopEvent.js&#x27;</span><br><span class="hljs-keyword">import</span> ShopController <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../controller/ShopController.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ShopModel</span> </span>&#123; <span class="hljs-comment">//模型层，用于数据存放及数据逻辑，通过事件处理机制（controller）传递数据，再由command进行对数据操作</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._shopList = <span class="hljs-literal">null</span><br>        <span class="hljs-built_in">this</span>._shoppingList = []<br>    &#125;<br><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">getInstance</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//单例写法与java中getinstance相似，new会生成一个新对象，分配内存，而这么写可以把一个已存在的引用给你使用，节省效能,若只使用get + 属性名而不用set产生只读属性，只允许调用，无法修改</span><br>        <span class="hljs-keyword">if</span> (!ShopModel._instance) &#123;<br>            <span class="hljs-built_in">Object</span>.defineProperty(ShopModel, <span class="hljs-string">&quot;_instance&quot;</span>, &#123;<br>                <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> ShopModel()<br>            &#125;)<br>        &#125;<br>        <span class="hljs-keyword">return</span> ShopModel._instance;<br>    &#125;<br>    <span class="hljs-keyword">set</span> <span class="hljs-title">shopList</span>(<span class="hljs-params">value</span>) &#123;<span class="hljs-comment">//设置商品列表</span><br>        <span class="hljs-built_in">this</span>._shopList = value;<br>        ShopController.dispatch(ShopEvent.GET_SHOP_LIST, value)<br>    &#125;<br>    <span class="hljs-keyword">get</span> <span class="hljs-title">shopList</span>() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._shopList<br>    &#125;<br>    <span class="hljs-keyword">set</span> <span class="hljs-title">shoppingList</span>(<span class="hljs-params">value</span>) &#123;<span class="hljs-comment">//数据修改时，驱动view进行表格刷新</span><br>        <span class="hljs-built_in">this</span>._shoppingList = value;<br>        ShopController.dispatch(ShopEvent.GET_SHOPIING_LIST, value)<br>    &#125;<br>    <span class="hljs-keyword">get</span> <span class="hljs-title">shoppingList</span>() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._shoppingList<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="utils"><a href="#utils" class="headerlink" title="utils"></a>utils</h3><ul><li>Utils（工具类）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Utils</span> </span>&#123; <span class="hljs-comment">//工具类</span><br><span class="hljs-comment">//将对象拼接到url中</span><br><span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">urlJoin</span>(<span class="hljs-params">url, obj</span>)</span> &#123;<br><span class="hljs-keyword">var</span> list = []<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> key <span class="hljs-keyword">in</span> obj) &#123;<br><span class="hljs-keyword">if</span> (obj.hasOwnProperty(key)) &#123;<br>list.push(<span class="hljs-string">`<span class="hljs-subst">$&#123;key&#125;</span>=<span class="hljs-subst">$&#123;obj[key]&#125;</span>`</span>)<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;url&#125;</span>?<span class="hljs-subst">$&#123;list.join(<span class="hljs-string">&#x27;&amp;&#x27;</span>)&#125;</span>`</span><br>&#125;<br><span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">createEle</span>(<span class="hljs-params">ele, style, attribute</span>)</span> &#123; <span class="hljs-comment">//新增标签，设置属性及样式</span><br><span class="hljs-keyword">let</span> element = <span class="hljs-built_in">document</span>.createElement(ele)<br><span class="hljs-keyword">if</span> (style) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> style) &#123;<br>element.style[key] = style[key];<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (attribute) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> attribute) &#123;<br>element[key] = attribute[key];<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> element<br>&#125;<br><span class="hljs-comment">// 函数节流</span><br><span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">throttle</span>(<span class="hljs-params">fn, time</span>)</span> &#123;<br><span class="hljs-keyword">let</span> _timer = <span class="hljs-literal">null</span><br><span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">if</span> (_timer) &#123;<br><span class="hljs-built_in">clearTimeout</span>(_timer)<br>_timer = <span class="hljs-literal">null</span><br>&#125;<br>_timer = <span class="hljs-built_in">setTimeout</span>(fn.bind(<span class="hljs-built_in">this</span>, ...arguments), time)<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="view"><a href="#view" class="headerlink" title="view"></a>view</h3><ul><li><p>ShopView（视图层，用于元素渲染，显示数据）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Api <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../config/Api.js&#x27;</span><br><span class="hljs-keyword">import</span> AJAX <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../bussiness/Ajax.js&#x27;</span><br><span class="hljs-keyword">import</span> EventGroup <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../event/EventGroup.js&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ShopView</span> </span>&#123; <span class="hljs-comment">//视图层，用于元素渲染，显示数据，依据（model）模型数据创建</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">new</span> EventGroup() <span class="hljs-comment">//注册所有自定义事件，用于数据传输</span><br>        AJAX.AjaxTool(Api.GET, Api.ServerApi.getShopList, &#123; <span class="hljs-comment">//请求服务端购物车列表</span><br>            <span class="hljs-attr">token</span>: <span class="hljs-string">&#x27;hello&#x27;</span><span class="hljs-comment">//发送从后端获取的token用于验证，此处未做获取，直接用一个字符代替</span><br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>CreateList（列表视图）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Api <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../config/Api.js&#x27;</span><br><span class="hljs-keyword">import</span> Utils <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../utils/Utils.js&#x27;</span><br><span class="hljs-keyword">import</span> ShopEvent <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../event/ShopEvent.js&#x27;</span><br><span class="hljs-keyword">import</span> ShopController <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../controller/ShopController.js&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CreateList</span> </span>&#123; <span class="hljs-comment">//视图层，用于元素渲染，显示数据，依据（model）模型数据创建</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">parentEle</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.parentEle = parentEle<br>        <span class="hljs-built_in">this</span>._shopList = <span class="hljs-literal">null</span><br>    &#125;<br>    <span class="hljs-keyword">set</span> <span class="hljs-title">shopList</span>(<span class="hljs-params">value</span>) &#123; <span class="hljs-comment">//使用对象代理，每当数据发生更改时渲染商品列表</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._shopList) &#123;<br>            <span class="hljs-built_in">this</span>.createListEle(<span class="hljs-built_in">this</span>._shopList, <span class="hljs-built_in">this</span>.parentEle)<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-built_in">this</span>._shopList = value<br>        <span class="hljs-built_in">this</span>.createListEle(value, <span class="hljs-built_in">this</span>.parentEle)<br>    &#125;<br>    <span class="hljs-keyword">get</span> <span class="hljs-title">shopList</span>() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._shopList<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">createListEle</span>(<span class="hljs-params">data, parentEle</span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> li = Utils.createEle(<span class="hljs-string">&#x27;li&#x27;</span>, &#123;&#125;, &#123;<br>            <span class="hljs-string">&#x27;className&#x27;</span>: <span class="hljs-string">&#x27;liItem&#x27;</span><br>        &#125;)<br>        <span class="hljs-keyword">let</span> img = Utils.createEle(<span class="hljs-string">&#x27;img&#x27;</span>, &#123;&#125;, &#123;<br>            <span class="hljs-string">&#x27;src&#x27;</span>: Api.IMGPATH + data.icon<br>        &#125;)<br>        <span class="hljs-keyword">let</span> title = Utils.createEle(<span class="hljs-string">&#x27;div&#x27;</span>, &#123;&#125;, &#123;<br>            <span class="hljs-string">&#x27;textContent&#x27;</span>: data.name<br>        &#125;)<br>        <span class="hljs-keyword">let</span> price = Utils.createEle(<span class="hljs-string">&#x27;span&#x27;</span>, &#123;&#125;, &#123;<br>            <span class="hljs-string">&#x27;textContent&#x27;</span>: data.price + <span class="hljs-string">&quot;元&quot;</span><br>        &#125;)<br>        li.appendChild(img);<br>        li.appendChild(title);<br>        li.appendChild(price);<br>        li.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-built_in">this</span>.addItemEvent)<br>        parentEle.appendChild(li);<br>    &#125;<br>    addItemEvent = <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123; <span class="hljs-comment">//当用户点击添加商品时，将数据通过controller层发送至事件总线，再驱动model层并修改数据,后续由Model提供数据刷新表格</span><br>        ShopController.dispatch(ShopEvent.ADD_SHOPIING_ITEM, <span class="hljs-built_in">this</span>.shopList)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总的来说，MVC架构思想是许多语言在大型项目上常常运用的设计理念，其提升代码复用，降低耦合性，使其在大型项目上焕发光彩，其实不难发现，生活中的事物和MVC有着相似的共同点，代码源于生活，代码也能创造生活</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：如何用300行原生js代码写出高大上的购物车</title>
    <link href="/2020/02/24/JS%E6%A1%88%E4%BE%8B%20%E5%A6%82%E4%BD%95%E7%94%A8300%E8%A1%8C%E5%8E%9F%E7%94%9Fjs%E4%BB%A3%E7%A0%81%E5%86%99%E5%87%BA%E9%AB%98%E5%A4%A7%E4%B8%8A%E7%9A%84%E8%B4%AD%E7%89%A9%E8%BD%A6/"/>
    <url>/2020/02/24/JS%E6%A1%88%E4%BE%8B%20%E5%A6%82%E4%BD%95%E7%94%A8300%E8%A1%8C%E5%8E%9F%E7%94%9Fjs%E4%BB%A3%E7%A0%81%E5%86%99%E5%87%BA%E9%AB%98%E5%A4%A7%E4%B8%8A%E7%9A%84%E8%B4%AD%E7%89%A9%E8%BD%A6/</url>
    
    <content type="html"><![CDATA[<p><strong>目录</strong></p><p><a href="#%E6%B3%A8%E9%87%8A%E5%86%99%E7%9A%84%E5%BE%88%E8%AF%A6%E7%BB%86">注释写的很详细</a></p><p><a href="#%E6%BA%90%E7%A0%81%EF%BC%9Ahttps://gitee.com/DieHunter/myCode/tree/master/shopCar">源码：https://gitee.com/DieHunter/myCode/tree/master/shopCar</a></p><p><a href="#HTML:">HTML:</a></p><p><a href="#CSS%EF%BC%9A%EF%BC%88%E4%B8%8D%E5%81%9A%E8%BF%87%E5%A4%9A%E6%B3%A8%E9%87%8A%EF%BC%89">CSS：（不做过多注释）</a></p><p><a href="#JSON%EF%BC%88%E7%94%A8%E4%BA%8E%E5%AD%98%E6%94%BE%E5%95%86%E5%93%81%E4%BF%A1%E6%81%AF%EF%BC%89%EF%BC%9A">JSON（用于存放商品信息）：</a></p><p><a href="#JS%E6%96%87%E4%BB%B6%EF%BC%88%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%98%AF%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%B9%E6%B3%95%E9%9B%86%E5%90%88%EF%BC%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E6%98%AF%E8%B4%AD%E7%89%A9%E8%BD%A6%E7%9A%84%E5%85%A8%E9%83%A8%E9%80%BB%E8%BE%91%EF%BC%89">JS文件（第一个是自定义方法集合，第二个是购物车的全部逻辑）</a></p><p><a href="#methods.js:">methods.js:</a></p><p><a href="#shop.js">shop.js</a></p><hr><p>购物车可谓是js中十分经典的案例，很多电商平台都会用到，是一个十分考验综合性的案例</p><p>今天分享一个自己编写的购物车，采用的是原生面向对象实现，数据的传导通过事件代理进行，以下是源码文件夹</p><p><img src="https://img-blog.csdnimg.cn/20200224083656701.png"><img src="https://img-blog.csdnimg.cn/20200224083902968.png"></p><h3 id="注释写的很详细"><a href="#注释写的很详细" class="headerlink" title="注释写的很详细"></a>注释写的很详细</h3><h3 id="源码：https-gitee-com-DieHunter-myCode-tree-master-shopCar"><a href="#源码：https-gitee-com-DieHunter-myCode-tree-master-shopCar" class="headerlink" title="源码：https://gitee.com/DieHunter/myCode/tree/master/shopCar"></a>源码：<a href="https://gitee.com/DieHunter/myCode/tree/master/shopCar">https://gitee.com/DieHunter/myCode/tree/master/shopCar</a></h3><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML:"></a>HTML:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;cn&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./style/shop.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/methods.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/shop.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;shopBox&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;shopBox&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">var</span> shopCar</span><br><span class="javascript">        Methods.AjaxTool(<span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-string">&#x27;./json/shop.json&#x27;</span>, &#123;&#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;<span class="hljs-comment">//Methods封装的AjaxTool是用于本地请求数据的ajax方法</span></span><br><span class="javascript">            <span class="hljs-comment">// var a = singleCar()</span></span><br><span class="javascript">            <span class="hljs-comment">// var b = singleCar()</span></span><br><span class="javascript">            <span class="hljs-comment">// console.log(a === b) //单例模式下，若执行两次，其两次结果为true</span></span><br><span class="javascript">            singleCar().init(<span class="hljs-built_in">JSON</span>.parse(res), shopBox); <span class="hljs-comment">//入口函数</span></span><br><span class="javascript">        &#125;)</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">singleCar</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-comment">//单例模式，只产生一个实例</span></span><br><span class="javascript">            <span class="hljs-keyword">if</span> (!shopCar) &#123;</span><br><span class="javascript">                shopCar = <span class="hljs-keyword">new</span> ShopCar()</span><br><span class="javascript">            &#125;</span><br><span class="javascript">            <span class="hljs-keyword">return</span> shopCar</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="CSS：（不做过多注释）"><a href="#CSS：（不做过多注释）" class="headerlink" title="CSS：（不做过多注释）"></a>CSS：（不做过多注释）</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs css">* &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.shopBox</span> &#123;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">1000px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.liItem</span> &#123;<br>    <span class="hljs-attribute">float</span>: left;<br>    <span class="hljs-attribute">list-style</span>: none;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightcoral;<br>&#125;<br><br><span class="hljs-selector-class">.liItem</span> <span class="hljs-selector-tag">img</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.leftBtn</span>,<br><span class="hljs-selector-class">.rightBtn</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">background</span>: white;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">25px</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">30px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.text</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">26px</span>;<br>    <span class="hljs-attribute">display</span>: inline-block;<br>    <span class="hljs-attribute">vertical-align</span>: bottom;<br>    <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br><br><span class="hljs-selector-tag">table</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightcoral;<br>    <span class="hljs-attribute">border-collapse</span>: collapse;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;<br>&#125;<br><br><span class="hljs-selector-class">.checkbox</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">td</span> &#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightcoral;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br><br><span class="hljs-selector-tag">td</span> <span class="hljs-selector-tag">button</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.numBox</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">margin</span>: auto;<br>    <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><br><span class="hljs-selector-class">.numBox</span>&gt;<span class="hljs-selector-tag">button</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">40px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">42px</span>;<br>    <span class="hljs-attribute">background-color</span>: white;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000000</span>;<br>&#125;<br><br><span class="hljs-selector-class">.numBox</span>&gt;<span class="hljs-selector-tag">input</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">70px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000000</span>;<br>    <span class="hljs-attribute">border-left</span>: none;<br>    <span class="hljs-attribute">border-right</span>: none;<br>    <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="JSON（用于存放商品信息）："><a href="#JSON（用于存放商品信息）：" class="headerlink" title="JSON（用于存放商品信息）："></a>JSON（用于存放商品信息）：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs javascript">[&#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1001</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/1.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮0&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">10</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1002</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/2.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮1&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">20</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1003</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/3.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮2&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">30</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1004</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/4.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮3&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">40</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1005</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/5.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮4&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">50</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1006</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/6.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮5&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">60</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1007</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/7.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮6&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">70</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1008</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/8.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮7&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">80</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1009</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/9.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮8&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">90</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1010</span>,<br>        <span class="hljs-string">&quot;icon&quot;</span>: <span class="hljs-string">&quot;img/10.png&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;餐饮9&quot;</span>,<br>        <span class="hljs-string">&quot;num&quot;</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">100</span><br>    &#125;<br>]<br></code></pre></td></tr></table></figure><h3 id="JS文件（第一个是自定义方法集合，第二个是购物车的全部逻辑）"><a href="#JS文件（第一个是自定义方法集合，第二个是购物车的全部逻辑）" class="headerlink" title="JS文件（第一个是自定义方法集合，第二个是购物车的全部逻辑）"></a>JS文件（第一个是自定义方法集合，第二个是购物车的全部逻辑）</h3><h3 id="methods-js"><a href="#methods-js" class="headerlink" title="methods.js:"></a>methods.js:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> Methods = (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<span class="hljs-comment">//通过立即执行函数return对象的方式产生闭包，用于存放私有变量</span><br>    <span class="hljs-comment">// 可添加私有变量</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-comment">// ajax请求方法</span><br>        <span class="hljs-function"><span class="hljs-title">AjaxTool</span>(<span class="hljs-params">method, url, data, fn</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> xhr;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.ActiveXObject) &#123; <span class="hljs-comment">//ie浏览器</span><br>                xhr = <span class="hljs-keyword">new</span> ActiveXObject(<span class="hljs-string">&quot;Microsoft.XMLHTTP&quot;</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.XMLHttpRequest) &#123; <span class="hljs-comment">//其他浏览器</span><br>                xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();<br>            &#125;<br>            <span class="hljs-keyword">if</span> (method == <span class="hljs-string">&#x27;get&#x27;</span>) &#123;<br>                url = <span class="hljs-built_in">this</span>.urlJoin(url, data)<br>                data = <span class="hljs-literal">null</span><br>            &#125;<br>            xhr.open(method, url);<br>            xhr.send(data ? <span class="hljs-built_in">JSON</span>.stringify(data) : <span class="hljs-string">&#x27;&#x27;</span>)<br>            xhr.addEventListener(<span class="hljs-string">&#x27;load&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (xhr.readyState === <span class="hljs-number">4</span> &amp;&amp; xhr.status === <span class="hljs-number">200</span>) &#123;<br>                    fn(<span class="hljs-built_in">this</span>.response)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    fn(<span class="hljs-string">&#x27;err&#x27;</span>)<br>                &#125;<br><br>            &#125;)<br>        &#125;,<br>        <span class="hljs-comment">//将对象拼接到url中</span><br>        <span class="hljs-function"><span class="hljs-title">urlJoin</span>(<span class="hljs-params">url, obj</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> list = []<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> key <span class="hljs-keyword">in</span> obj) &#123;<br>                <span class="hljs-keyword">if</span> (obj.hasOwnProperty(key)) &#123;<br>                    list.push(<span class="hljs-string">`<span class="hljs-subst">$&#123;key&#125;</span>=<span class="hljs-subst">$&#123;obj[key]&#125;</span>`</span>)<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;url&#125;</span>?<span class="hljs-subst">$&#123;list.join(<span class="hljs-string">&#x27;&amp;&#x27;</span>)&#125;</span>`</span><br>        &#125;<br>    &#125;<br>&#125;())<br></code></pre></td></tr></table></figure><h3 id="shop-js"><a href="#shop-js" class="headerlink" title="shop.js"></a>shop.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ShopCar</span>(<span class="hljs-params"></span>) </span>&#123;<br><br>&#125;<br>ShopCar.prototype = (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">//闭包存放私有变量</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">shopList</span>: <span class="hljs-literal">null</span>, <span class="hljs-comment">//商品详情列表</span><br>        <span class="hljs-attr">shoppingList</span>: <span class="hljs-literal">null</span>, <span class="hljs-comment">//购物车中的商品</span><br>        <span class="hljs-attr">table</span>: <span class="hljs-literal">null</span>, <span class="hljs-comment">//购物车列表容器</span><br>        <span class="hljs-attr">ADD_ITEM_EVENT</span>: <span class="hljs-string">&quot;add_item_event&quot;</span>, <span class="hljs-comment">//添加单个商品自定义事件</span><br>        <span class="hljs-attr">REDUCE_ITEM_EVENT</span>: <span class="hljs-string">&quot;reduce_item_event&quot;</span>, <span class="hljs-comment">//减少单个商品自定义事件</span><br>        <span class="hljs-attr">DDELETE_ITEM_EVENT</span>: <span class="hljs-string">&quot;delete_item_event&quot;</span>, <span class="hljs-comment">//删除单个商品自定义事件</span><br>        <span class="hljs-attr">INPUT_ITEM_EVENT</span>: <span class="hljs-string">&quot;input_item_event&quot;</span>, <span class="hljs-comment">//修改商品数量自定义事件</span><br>        <span class="hljs-attr">CHECK_ITEM_EVENT</span>: <span class="hljs-string">&quot;check_item_event&quot;</span>, <span class="hljs-comment">//全选自定义事件</span><br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         *    初始化函数</span><br><span class="hljs-comment">         *    1、获取存储中的商品列表数据</span><br><span class="hljs-comment">         *    2、如果商品购物车列表在存储器中存在，那么就将这个数据获取赋值给购物车列表</span><br><span class="hljs-comment">         *      如果不存在，创建一个空数组</span><br><span class="hljs-comment">         *    3、侦听添加商品事件，侦听删除商品事件，侦听修改商品数量事件，侦听选中商品事件</span><br><span class="hljs-comment">         *    4、循环商品列表，创建所有的商品标签</span><br><span class="hljs-comment">         *    5、根据购物车列表创建表格</span><br><span class="hljs-comment">         * */</span><br>        <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params">shopList, parentEle</span>)</span> &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">localStorage</span>.shoppingList) &#123; <span class="hljs-comment">//获取本地缓存中已加入购物车的数据</span><br>                <span class="hljs-built_in">this</span>.shoppingList = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">localStorage</span>.shoppingList);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-built_in">this</span>.shoppingList = [];<br>            &#125;<br>            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.shopList) &#123;<br>                <span class="hljs-built_in">this</span>.shopList = shopList<br>                <span class="hljs-built_in">this</span>.createShopList(parentEle)<br>            &#125;<br>            <span class="hljs-comment">// 以下均为操作时的事件监听，采取自定义事件接收document的事件抛发，分别是：加入购物车(增加某一个商品)，减少一个商品，删除某商品，输入商品数量，全选/取消全选</span><br>            <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-built_in">this</span>.ADD_ITEM_EVENT, <span class="hljs-built_in">this</span>.addItemEventHandler)<br>            <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-built_in">this</span>.REDUCE_ITEM_EVENT, <span class="hljs-built_in">this</span>.reduceItemEventHandler)<br>            <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-built_in">this</span>.DDELETE_ITEM_EVENT, <span class="hljs-built_in">this</span>.deleteItemEventHandler)<br>            <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-built_in">this</span>.INPUT_ITEM_EVENT, <span class="hljs-built_in">this</span>.inputItemEventHandler)<br>            <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-built_in">this</span>.CHECK_ITEM_EVENT, <span class="hljs-built_in">this</span>.checkItemEventHandler)<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">createShopList</span>(<span class="hljs-params">parentEle</span>)</span> &#123; <span class="hljs-comment">//创建商品详情列表</span><br>            <span class="hljs-keyword">var</span> data = <span class="hljs-built_in">this</span>.shopList<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; data.length; i++) &#123;<br>                <span class="hljs-keyword">var</span> li = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;li&quot;</span>);<br>                li.className = <span class="hljs-string">&quot;liItem&quot;</span>;<br>                <span class="hljs-keyword">var</span> img = <span class="hljs-keyword">new</span> Image();<br>                img.src = data[i].icon;<br>                li.appendChild(img);<br>                <span class="hljs-keyword">var</span> title = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>);<br>                title.textContent = data[i].name;<br>                li.appendChild(title);<br>                <span class="hljs-keyword">var</span> price = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;span&quot;</span>);<br>                price.textContent = data[i].price + <span class="hljs-string">&quot;元&quot;</span>;<br>                li.appendChild(price);<br>                li.that = <span class="hljs-built_in">this</span> <span class="hljs-comment">//将全局this存至元素中，方便后续调用</span><br>                li.data = data[i]; <span class="hljs-comment">//与上句同理，方便后续调用</span><br>                li.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-built_in">this</span>.addItemEvent);<br>                parentEle.appendChild(li);<br>            &#125;<br>            <span class="hljs-built_in">this</span>.createTable()<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">createTable</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//当数据发生变化时重新渲染购物车列表初始化购物车</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.table) &#123; <span class="hljs-comment">//初始化购物车</span><br>                <span class="hljs-built_in">this</span>.table.remove()<br>                <span class="hljs-built_in">this</span>.table = <span class="hljs-literal">null</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.shoppingList.length === <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span>;<br>            <span class="hljs-built_in">this</span>.table = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;table&quot;</span>);<br>            <span class="hljs-built_in">document</span>.body.appendChild(<span class="hljs-built_in">this</span>.table);<br>            <span class="hljs-keyword">var</span> thr = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;tr&quot;</span>);<br>            <span class="hljs-built_in">this</span>.table.appendChild(thr);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> prop <span class="hljs-keyword">in</span> <span class="hljs-built_in">this</span>.shoppingList[<span class="hljs-number">0</span>]) &#123; <span class="hljs-comment">//创建表头，如果属性名是select，就创建全选按钮</span><br>                <span class="hljs-keyword">var</span> th = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;th&quot;</span>);<br>                <span class="hljs-keyword">if</span> (prop === <span class="hljs-string">&quot;select&quot;</span>) &#123;<br>                    <span class="hljs-keyword">var</span> input = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;input&quot;</span>);<br>                    input.type = <span class="hljs-string">&quot;checkbox&quot;</span>;<br>                    input.className = <span class="hljs-string">&#x27;checkbox&#x27;</span><br>                    input.checked = <span class="hljs-built_in">this</span>.checkAll(); <span class="hljs-comment">//由于当数据修改时绑定了createTable方法，每次数据改变就会刷新全选状态</span><br>                    input.that = <span class="hljs-built_in">this</span> <span class="hljs-comment">//将全局this存至元素中，方便后续调用</span><br>                    input.addEventListener(<span class="hljs-string">&quot;change&quot;</span>, <span class="hljs-built_in">this</span>.checkEvent);<br>                    th.appendChild(input);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    th.textContent = prop;<br>                &#125;<br>                thr.appendChild(th)<br>            &#125;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.shoppingList.length; i++) &#123;<br>                <span class="hljs-keyword">var</span> tr = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;tr&quot;</span>);<br>                <span class="hljs-built_in">this</span>.table.appendChild(tr);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> str <span class="hljs-keyword">in</span> <span class="hljs-built_in">this</span>.shoppingList[i]) &#123;<br>                    <span class="hljs-keyword">var</span> td = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;td&quot;</span>);<br>                    td.data = <span class="hljs-built_in">this</span>.shoppingList[i]; <span class="hljs-comment">//将每一行数据存至td元素中，方便后续调用</span><br>                    <span class="hljs-built_in">this</span>.selectTdType(td, <span class="hljs-built_in">this</span>.shoppingList[i], str);<br>                    tr.appendChild(td);<br>                &#125;<br>            &#125;<br>            <span class="hljs-built_in">localStorage</span>.shoppingList = <span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-built_in">this</span>.shoppingList) <span class="hljs-comment">//当表格渲染完毕就将数据存至本地缓存，浏览器关闭或刷新不会清除数据</span><br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">selectTdType</span>(<span class="hljs-params">td, data, type</span>)</span> &#123; <span class="hljs-comment">//将表格中的元素通过属性分类</span><br>            <span class="hljs-keyword">switch</span> (type) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;select&#x27;</span>:<br>                    <span class="hljs-keyword">var</span> input = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;input&quot;</span>);<br>                    input.type = <span class="hljs-string">&quot;checkbox&quot;</span>;<br>                    input.checked = data.select;<br>                    input.className = <span class="hljs-string">&#x27;checkbox&#x27;</span><br>                    input.that = <span class="hljs-built_in">this</span><br>                    input.addEventListener(<span class="hljs-string">&quot;change&quot;</span>, <span class="hljs-built_in">this</span>.checkEvent);<br>                    td.appendChild(input);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;icon&#x27;</span>:<br>                    <span class="hljs-keyword">var</span> img = <span class="hljs-keyword">new</span> Image();<br>                    img.src = data.icon;<br>                    td.appendChild(img);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;num&#x27;</span>:<br>                    <span class="hljs-keyword">var</span> countNum = <span class="hljs-built_in">this</span>.createCountNum(td, data);<br>                    countNum.input.value = data.num;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;deleted&#x27;</span>:<br>                    <span class="hljs-keyword">var</span> btn = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;button&quot;</span>);<br>                    btn.textContent = <span class="hljs-string">&quot;删除&quot;</span>;<br>                    td.appendChild(btn);<br>                    btn.that = <span class="hljs-built_in">this</span><br>                    btn.data = data;<br>                    btn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-built_in">this</span>.deleteItemEvent);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">default</span>:<br>                    td.textContent = data[type];<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">createCountNum</span>(<span class="hljs-params">ele, data</span>)</span> &#123; <span class="hljs-comment">//创建数量计数器</span><br>            <span class="hljs-keyword">var</span> div = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>); <span class="hljs-comment">//这个父元素用于储存单个商品信息</span><br>            ele.appendChild(div);<br>            div.className = <span class="hljs-string">&quot;numBox&quot;</span>;<br>            <span class="hljs-keyword">var</span> leftBtn = <span class="hljs-built_in">this</span>.createMark(div, <span class="hljs-string">&#x27;reduce&#x27;</span>) <span class="hljs-comment">//减少商品按钮</span><br>            <span class="hljs-keyword">var</span> input = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;input&quot;</span>);<br>            input.type = <span class="hljs-string">&quot;text&quot;</span>;<br>            input.value = <span class="hljs-string">&quot;1&quot;</span>; <span class="hljs-comment">//商品初始数量</span><br>            div.appendChild(input);<br>            <span class="hljs-keyword">var</span> rightBtn = <span class="hljs-built_in">this</span>.createMark(div, <span class="hljs-string">&#x27;add&#x27;</span>) <span class="hljs-comment">//新增商品按钮</span><br>            div.input = input;<br>            div.data = data;<br>            div.that = <span class="hljs-built_in">this</span><br>            rightBtn.that = <span class="hljs-built_in">this</span><br>            rightBtn.data = data;<br>            leftBtn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-built_in">this</span>.reduceItemEvent);<br>            rightBtn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-built_in">this</span>.addItemEvent);<br>            input.addEventListener(<span class="hljs-string">&quot;input&quot;</span>, <span class="hljs-built_in">this</span>.inputItemEvent);<br>            input.addEventListener(<span class="hljs-string">&quot;blur&quot;</span>, <span class="hljs-built_in">this</span>.inputItemEvent);<br>            <span class="hljs-keyword">return</span> div;<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">createMark</span>(<span class="hljs-params">parentEle, type</span>)</span> &#123; <span class="hljs-comment">//判断增加或减少键</span><br>            <span class="hljs-keyword">var</span> markBtn = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;button&quot;</span>);<br>            markBtn.textContent = type == <span class="hljs-string">&quot;add&quot;</span> ? <span class="hljs-string">&#x27;+&#x27;</span> : <span class="hljs-string">&#x27;-&#x27;</span>;<br>            parentEle.appendChild(markBtn);<br>            <span class="hljs-keyword">return</span> markBtn<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">addItemEvent</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//第一个事件抛发（当用户点击列表商品或点击增加键时，抛发事件给document触发addItemEventHandler方法，用于参数传递，参数通过event对象进行传递）</span><br>            <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span>.that<br>            <span class="hljs-keyword">var</span> event = <span class="hljs-keyword">new</span> Event(_this.ADD_ITEM_EVENT);<br>            event.data = <span class="hljs-built_in">this</span>.data;<br>            event._this = _this;<br>            <span class="hljs-built_in">document</span>.dispatchEvent(event);<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">addItemEventHandler</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//当用户点击列表商品或点击增加键时执行函数</span><br>            <span class="hljs-keyword">var</span> _this = e._this<br>            <span class="hljs-keyword">var</span> obj = &#123; <span class="hljs-comment">//这里遵循对象顺序，先定义的属性排在前面，所以将选择框放在最前定义，总价和删除键放在最后</span><br>                <span class="hljs-attr">select</span>: <span class="hljs-literal">false</span><br>            &#125;;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> str <span class="hljs-keyword">in</span> e.data) &#123;<br>                obj[str] = e.data[str];<br>            &#125;<br>            obj.sum = obj.num * obj.price;<br>            obj.deleted = <span class="hljs-literal">false</span>;<br>            _this.searchItemById(obj.id, _this.shoppingList, obj, <span class="hljs-string">&#x27;add&#x27;</span>)<br>            _this.createTable() <span class="hljs-comment">//当数据发生变化时重新渲染购物车列表初始化购物车</span><br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">reduceItemEvent</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//第二个事件抛发（当用户点击减少键时，抛发事件给document触发reduceItemEventHandler方法，用于参数传递，参数通过event对象进行传递）</span><br>            <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span>.parentElement.that<br>            <span class="hljs-keyword">var</span> event = <span class="hljs-keyword">new</span> Event(_this.REDUCE_ITEM_EVENT);<br>            event.data = <span class="hljs-built_in">this</span>.parentElement.data;<br>            event._this = _this;<br>            <span class="hljs-built_in">document</span>.dispatchEvent(event);<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">reduceItemEventHandler</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//与增加同理</span><br>            <span class="hljs-keyword">var</span> _this = e._this<br>            e.data.sum = e.data.num * e.data.price;<br>            _this.searchItemById(e.data.id, _this.shoppingList, e.data, <span class="hljs-string">&#x27;reduce&#x27;</span>)<br>            _this.createTable() <span class="hljs-comment">//当数据发生变化时重新渲染购物车列表初始化购物车</span><br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">deleteItemEvent</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//第三个事件抛发（当用户点击删除键时，抛发事件给document触发deleteItemEventHandler方法，用于参数传递，参数通过event对象进行传递）</span><br>            <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span>.that<br>            <span class="hljs-keyword">var</span> event = <span class="hljs-keyword">new</span> Event(_this.DDELETE_ITEM_EVENT);<br>            event.data = <span class="hljs-built_in">this</span>.data;<br>            event._this = _this;<br>            <span class="hljs-built_in">document</span>.dispatchEvent(event);<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">deleteItemEventHandler</span>(<span class="hljs-params">e</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> _this = e._this<br>            _this.shoppingList = _this.shoppingList.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123; <span class="hljs-comment">//数组过滤函数，返回id属性不等于当前id的数组，即删除当前选中的对象，并重新赋值</span><br>                <span class="hljs-keyword">return</span> item.id !== e.data.id;<br>            &#125;);<br>            _this.createTable() <span class="hljs-comment">//当数据发生变化时重新渲染购物车列表初始化购物车</span><br>            <span class="hljs-built_in">localStorage</span>.shoppingList = <span class="hljs-built_in">JSON</span>.stringify(_this.shoppingList) <span class="hljs-comment">//这里为了考虑，若删除到0条时，无法重新初始化表格（shoppingList.length==0,无法进入createTable函数）</span><br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">inputItemEvent</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//第四个事件抛发（当用户输入数值或处于失焦时，过滤数据，并抛发事件给document触发inputItemEventHandler方法，用于参数传递，参数通过event对象进行传递）</span><br>            <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span>.parentElement.that<br>            <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&quot;input&quot;</span>) &#123;<br>                <span class="hljs-built_in">this</span>.value = <span class="hljs-built_in">this</span>.value.replace(<span class="hljs-regexp">/[^0-9]/g</span>, <span class="hljs-string">&quot;&quot;</span>); <span class="hljs-comment">//只允许输入数字</span><br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.value === <span class="hljs-string">&quot;0&quot;</span>) &#123; <span class="hljs-comment">// 如果=0，就设为1</span><br>                    <span class="hljs-built_in">this</span>.value = <span class="hljs-string">&quot;1&quot;</span>;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.value.length &gt; <span class="hljs-number">2</span>) &#123; <span class="hljs-comment">// 如果输入的内容大于2位，让这个值为99（最大99个）</span><br>                    <span class="hljs-built_in">this</span>.value = <span class="hljs-string">&quot;99&quot;</span>;<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&quot;blur&quot;</span>) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.value.length === <span class="hljs-number">0</span>) &#123; <span class="hljs-comment">//  失焦时，如果什么都没有输入，也设为1</span><br>                    <span class="hljs-built_in">this</span>.value = <span class="hljs-string">&quot;1&quot;</span>;<br>                &#125;<br>                <span class="hljs-comment">// 当失焦时才将事件抛发到document</span><br>                <span class="hljs-keyword">var</span> event = <span class="hljs-keyword">new</span> Event(_this.INPUT_ITEM_EVENT);<br>                event.num = <span class="hljs-built_in">this</span>.value<br>                event.data = <span class="hljs-built_in">this</span>.parentElement.data;<br>                event._this = _this;<br>                <span class="hljs-built_in">document</span>.dispatchEvent(event);<br>            &#125;<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">inputItemEventHandler</span>(<span class="hljs-params">e</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> _this = e._this<br>            _this.shoppingList.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123; <span class="hljs-comment">//遍历查询被修改的对象</span><br>                <span class="hljs-keyword">if</span> (item.id === e.data.id) &#123;<br>                    item.num = e.num;<br>                    item.sum = item.price * item.num;<br>                &#125;<br>            &#125;);<br>            _this.createTable() <span class="hljs-comment">//当数据发生变化时重新渲染购物车列表初始化购物车</span><br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">checkAll</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//初始化表格时执行，查找所有选项是否都选中（全选框随其他选项框状态修改而修改）</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.shoppingList.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123;<br>                <span class="hljs-keyword">return</span> !item.select;<br>            &#125;).length === <span class="hljs-number">0</span>; <span class="hljs-comment">//返回true或false</span><br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">checkEvent</span>(<span class="hljs-params"></span>)</span> &#123; <span class="hljs-comment">//第五个事件抛发（当用户选中或取消任意选项框时，抛发事件给document触发checkItemEventHandler方法，用于参数传递，参数通过event对象进行传递）</span><br>            <span class="hljs-keyword">var</span> _this = <span class="hljs-built_in">this</span>.that<br>            <span class="hljs-keyword">var</span> data = <span class="hljs-built_in">this</span>.parentElement.data;<br>            <span class="hljs-keyword">var</span> event = <span class="hljs-keyword">new</span> Event(_this.CHECK_ITEM_EVENT);<br>            event.all = !data; <span class="hljs-comment">//若没有data，说明是全选框</span><br>            event.select = <span class="hljs-built_in">this</span>.checked; <span class="hljs-comment">//赋值给select属性</span><br>            event._this = _this;<br>            event.data = data;<br>            <span class="hljs-built_in">document</span>.dispatchEvent(event);<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">checkItemEventHandler</span>(<span class="hljs-params">e</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> _this = e._this<br>            <span class="hljs-keyword">if</span> (e.all) &#123; <span class="hljs-comment">//若e.all为true说明该选项框是全选框</span><br>                _this.shoppingList.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123;<br>                    item.select = e.select; <span class="hljs-comment">//其他选项框与全选框状态一致</span><br>                &#125;)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                _this.shoppingList.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123; <span class="hljs-comment">//单选，选中某一个（在表格初始化时执行checkAll判断是否全选）</span><br>                    <span class="hljs-keyword">if</span> (item.id === e.data.id) &#123;<br>                        item.select = e.select;<br>                    &#125;<br>                &#125;)<br>            &#125;<br>            _this.createTable() <span class="hljs-comment">//当数据发生变化时重新渲染购物车列表初始化购物车</span><br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">searchItemById</span>(<span class="hljs-params">id, list, data, type</span>)</span> &#123; <span class="hljs-comment">//遍历查询某项商品增加或减少</span><br>            <span class="hljs-keyword">var</span> arr = list.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123;<br>                <span class="hljs-keyword">return</span> item.id === id;<br>            &#125;); <span class="hljs-comment">//若有返回值则对某项商品操作（在1-99区间，若为0则直接删除）</span><br>            <span class="hljs-keyword">switch</span> (type) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;add&quot;</span>:<br>                    <span class="hljs-keyword">if</span> (arr.length == <span class="hljs-number">0</span>) &#123;<br>                        list.push(data);<br>                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (arr[<span class="hljs-number">0</span>].num &lt; <span class="hljs-number">99</span>) &#123;<br>                        arr[<span class="hljs-number">0</span>].num++;<br>                        arr[<span class="hljs-number">0</span>].sum = arr[<span class="hljs-number">0</span>].num * arr[<span class="hljs-number">0</span>].price;<br>                    &#125;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;reduce&quot;</span>:<br>                    <span class="hljs-keyword">if</span> (arr[<span class="hljs-number">0</span>].num &gt; <span class="hljs-number">1</span>) &#123;<br>                        arr[<span class="hljs-number">0</span>].num--;<br>                        arr[<span class="hljs-number">0</span>].sum = arr[<span class="hljs-number">0</span>].num * arr[<span class="hljs-number">0</span>].price;<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-built_in">this</span>.shoppingList = list.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>&#123;<br>                            <span class="hljs-keyword">return</span> item.id !== id;<br>                        &#125;);<br>                        <span class="hljs-built_in">this</span>.createTable() <span class="hljs-comment">//当数据发生变化时重新渲染购物车列表初始化购物车</span><br>                        <span class="hljs-built_in">localStorage</span>.shoppingList = <span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-built_in">this</span>.shoppingList)<br>                    &#125;<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;())<br>ShopCar.prototype.constructor = ShopCar;<br></code></pre></td></tr></table></figure><p>附上运行效果：</p><p><img src="https://img-blog.csdnimg.cn/20200224090631854.gif"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：拖拽音量调节效果</title>
    <link href="/2020/02/22/JS%E6%A1%88%E4%BE%8B%20%E6%8B%96%E6%8B%BD%E9%9F%B3%E9%87%8F%E8%B0%83%E8%8A%82%E6%95%88%E6%9E%9C/"/>
    <url>/2020/02/22/JS%E6%A1%88%E4%BE%8B%20%E6%8B%96%E6%8B%BD%E9%9F%B3%E9%87%8F%E8%B0%83%E8%8A%82%E6%95%88%E6%9E%9C/</url>
    
    <content type="html"><![CDATA[<p>用原生js做了一个拖拽调节音量</p><p>效果是这样的：（拖动时音量随两个圆形交集面积增大而增大）</p><p><img src="https://img-blog.csdnimg.cn/20200222153956378.gif"></p><p><strong>源码：</strong><a href="https://gitee.com/DieHunter/myCode/tree/master/music">https://gitee.com/DieHunter/myCode/tree/master/music</a></p><p>html部分：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;index.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;audio&quot;</span> <span class="hljs-attr">autoplay</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./1.mp3&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;audio/mpeg&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;vol left&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;leftBox&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;vol right&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;rightBox&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;index.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>css部分：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs css">* &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">body</span> &#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">28</span>, <span class="hljs-number">160</span>, <span class="hljs-number">210</span>);<br>&#125;<br><br><span class="hljs-selector-class">.vol</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">100px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.left</span> &#123;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">500px</span>;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">250</span>, <span class="hljs-number">242</span>, <span class="hljs-number">107</span>);<br>&#125;<br><br><span class="hljs-selector-class">.right</span> &#123;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">800px</span>;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">250</span>, <span class="hljs-number">242</span>, <span class="hljs-number">107</span>, <span class="hljs-number">100</span>);<br>    <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>js部分：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> audio;<br>init()<span class="hljs-comment">//入口函数</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">init</span>(<span class="hljs-params"></span>) </span>&#123;<br>    audio = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;audio&quot;</span>);<span class="hljs-comment">//初始化播放器控件</span><br>    audio.volume = <span class="hljs-number">0</span>;<span class="hljs-comment">//将控件音量初始值设置0</span><br>    mouseMove(rightBox, <span class="hljs-built_in">document</span>)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mouseMove</span>(<span class="hljs-params">ele, parent</span>) </span>&#123;<br>    ele.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, moveHandler);<span class="hljs-comment">//鼠标右击时触发moveHandler方法</span><br>    ele.style.position = <span class="hljs-string">&#x27;absolute&#x27;</span>;<br>    ele.parent = parent;<span class="hljs-comment">//传递父元素（可省略）</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">moveHandler</span>(<span class="hljs-params">e</span>) </span>&#123;<span class="hljs-comment">//moveHandler是个回调函数，鼠标按下，移动，松开都会触发，根据event的type判断事件类型</span><br>    <span class="hljs-keyword">if</span> (e.preventDefault) &#123;<span class="hljs-comment">//取消系统默认事件</span><br>        e.preventDefault();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        e.returnValue = <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&#x27;mousedown&#x27;</span>) &#123;<br>        audio.play()<span class="hljs-comment">//按下时开始播放音乐</span><br>        <span class="hljs-comment">// 下面将被点击的元素及元素在X方向的偏移通过父元素传递（放入内存中）</span><br>        <span class="hljs-built_in">this</span>.parent.ele = <span class="hljs-built_in">this</span>;<br>        <span class="hljs-built_in">this</span>.parent.point = &#123;<br>            <span class="hljs-attr">x</span>: e.offsetX<br>        &#125;<br>        <span class="hljs-comment">// 为元素添加鼠标移动和松开事件</span><br>        <span class="hljs-built_in">this</span>.parent.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, moveHandler);<br>        <span class="hljs-built_in">this</span>.addEventListener(<span class="hljs-string">&#x27;mouseup&#x27;</span>, moveHandler);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&#x27;mousemove&#x27;</span>) &#123;<br>        <span class="hljs-keyword">if</span> (rightBox.offsetLeft - leftBox.offsetLeft &gt;= <span class="hljs-number">200</span> || rightBox.offsetLeft - leftBox.offsetLeft &lt;= -<span class="hljs-number">200</span>) &#123;<span class="hljs-comment">//当被移动元素与另一个元素无交集时，改变样式，使音量为0</span><br>            audio.volume = <span class="hljs-number">0</span>;<br>            <span class="hljs-built_in">document</span>.body.style.background = <span class="hljs-string">&#x27;rgb(28,160,210)&#x27;</span><br>            rightBox.style.background = <span class="hljs-string">&#x27;rgba(250, 242, 107, 100)&#x27;</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<span class="hljs-comment">//当被移动元素与另一个元素有交集时，改变样式为渐变，使音量为相交面积的百分比（这里是两圆心之间的距离）</span><br>            <span class="hljs-keyword">var</span> count = <span class="hljs-number">1</span> - <span class="hljs-built_in">Math</span>.abs(rightBox.offsetLeft - leftBox.offsetLeft) / <span class="hljs-number">200</span>;<br>            audio.volume = count<br>            <span class="hljs-built_in">document</span>.body.style.background = <span class="hljs-string">`rgb(<span class="hljs-subst">$&#123;<span class="hljs-number">28</span>+<span class="hljs-number">50</span>*count&#125;</span>,<span class="hljs-subst">$&#123;<span class="hljs-number">160</span>-<span class="hljs-number">136</span>*count&#125;</span>,<span class="hljs-subst">$&#123;<span class="hljs-number">210</span>-<span class="hljs-number">133</span>*count&#125;</span>)`</span><br>            rightBox.style.background = <span class="hljs-string">`rgb(<span class="hljs-subst">$&#123;<span class="hljs-number">28</span>+<span class="hljs-number">50</span>*count&#125;</span>,<span class="hljs-subst">$&#123;<span class="hljs-number">160</span>-<span class="hljs-number">136</span>*count&#125;</span>,<span class="hljs-subst">$&#123;<span class="hljs-number">210</span>-<span class="hljs-number">133</span>*count&#125;</span>)`</span>;<br>        &#125;<br>        <span class="hljs-built_in">this</span>.ele.style.left = e.x - <span class="hljs-built_in">this</span>.point.x + <span class="hljs-string">&quot;px&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&#x27;mouseup&#x27;</span>) &#123;<br>        <span class="hljs-comment">// 鼠标松开时释放内存及事件监听</span><br>        <span class="hljs-built_in">this</span>.parent.removeEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>, moveHandler);<br>        <span class="hljs-built_in">this</span>.parent.ele = <span class="hljs-literal">null</span>;<br>        <span class="hljs-built_in">this</span>.parent.point = <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>本地项目上线流程</title>
    <link href="/2020/02/22/%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF%E6%B5%81%E7%A8%8B/"/>
    <url>/2020/02/22/%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>以下是自己一个项目的本地上传至线上的总结</p><h3 id="新建服务器实例"><a href="#新建服务器实例" class="headerlink" title="新建服务器实例"></a>新建服务器实例</h3><p>首先，你需要在各大云服务器平台选购一台合适的服务器</p><p>这里我选用的是阿里云（window2008 server版）</p><p><img src="https://img-blog.csdnimg.cn/20200222102725702.png"></p><p>为什么系统选2008而不是2012版？</p><p>因为2008相对于2012占用的资源较少，当然如果你服务器配置高的话，就不用担心了</p><p>关闭服务器实例后，在服务器选项更多中选择更换系统</p><p><img src="https://img-blog.csdnimg.cn/20200222104511667.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>配置服务器账号密码并等待安装系统</p><h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><p>点击启动实例</p><p><img src="https://img-blog.csdnimg.cn/20200222105936270.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>服务器控制台提供了远程连接实例功能，但是是介于网页版，部分功能及操作还不够全面，所以我们移步到自己电脑自带的远程桌面连接，并记住公网ip地址，用户名及开机密码</p><p><img src="https://img-blog.csdnimg.cn/20200222104834645.png"><img src="https://img-blog.csdnimg.cn/20200222105744415.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>输入ip，用户名，密码点击连接</p><p><img src="https://img-blog.csdnimg.cn/20200222111128474.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="配置服务器"><a href="#配置服务器" class="headerlink" title="配置服务器"></a>配置服务器</h3><p>开机后，就可以直接开始配置node，Java，Nginx之类的了</p><p>简述一下Nginx（node在<a href="https://blog.csdn.net/time_____/article/details/84565042">https://blog.csdn.net/time_____/article/details/84565042</a>有介绍）</p><p>下载安装Nginx最新版</p><p>在目录nginx-1.15.8\conf\下找到nginx.conf文件，用编辑器打开，为自己的项目添加代理（这里我用的是Vue，端口号2048，root是Nginx主目录下一级文件名，index是vue文件夹下的入口页面）</p><p><img src="https://img-blog.csdnimg.cn/20200222112735376.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="本地项目打包上线"><a href="#本地项目打包上线" class="headerlink" title="本地项目打包上线"></a>本地项目打包上线</h3><p>其实这个过程就是把本地请求的url改成服务器私有ip地址</p><p><img src="https://img-blog.csdnimg.cn/20200222114007547.png"></p><p>这里有一个服务器需要配置安全组，目的是为了开放接口以供调用，否则刚才配置的2048端口号无法访问</p><p><img src="https://img-blog.csdnimg.cn/20200222114728961.png"><img src="https://img-blog.csdnimg.cn/20200222114647396.png"><img src="https://img-blog.csdnimg.cn/2020022211484235.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>之后将本地项目baseurl修改为服务器私有ip地址</p><p><img src="https://img-blog.csdnimg.cn/20200222115239866.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>之后使用npm run build将项目打包在build文件夹中生成了打包后文件</p><p><img src="https://img-blog.csdnimg.cn/2020022211592867.png"></p><p>复制文件夹到Nginx主目录下命名为vue</p><h3 id="后端上线"><a href="#后端上线" class="headerlink" title="后端上线"></a>后端上线</h3><p>与前端同理</p><p><img src="https://img-blog.csdnimg.cn/20200222123423361.png"></p><p>将项目上传至服务器后运行（这里我是nodejs，所以切换到项目目录下运行node server）</p><p><img src="https://img-blog.csdnimg.cn/20200222124131385.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>在Nginx主目录下打开cmd运行start nginx，即可打开Nginx服务器</p><p><img src="https://img-blog.csdnimg.cn/20200222123905731.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="线上访问"><a href="#线上访问" class="headerlink" title="线上访问"></a>线上访问</h3><p>最后在我们浏览器中访问服务器的ip加地址</p><p><img src="https://img-blog.csdnimg.cn/20200222124319914.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>最后，我们的项目就上传完毕</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：常用工具</title>
    <link href="/2019/03/30/JS%E6%A1%88%E4%BE%8B%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <url>/2019/03/30/JS%E6%A1%88%E4%BE%8B%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h3 id="对以前用过的方法做个整合"><a href="#对以前用过的方法做个整合" class="headerlink" title="对以前用过的方法做个整合"></a>对以前用过的方法做个整合</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> Methods = (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-comment">// 随机颜色</span><br>        <span class="hljs-attr">randomColor</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            <span class="hljs-keyword">var</span> color = <span class="hljs-string">&#x27;#&#x27;</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; i++) &#123;<br>                <span class="hljs-keyword">var</span> num = <span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">Math</span>.random().toFixed(<span class="hljs-number">2</span>) * <span class="hljs-number">16</span>);<br>                color += num.toString(<span class="hljs-number">16</span>);<br>            &#125;<br>            <span class="hljs-keyword">return</span> color<br>        &#125;,<br>        <span class="hljs-comment">//产生区间随机数</span><br>        <span class="hljs-function"><span class="hljs-title">randomNum</span>(<span class="hljs-params">min, max, bool</span>)</span> &#123; <span class="hljs-comment">//bool是表示是否可等于最大值</span><br>            <span class="hljs-keyword">return</span> (<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * (max - min + bool) + min));<br>        &#125;,<br>        <span class="hljs-comment">//数组去重</span><br>        <span class="hljs-function"><span class="hljs-title">arrayUniq</span>(<span class="hljs-params">arr</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> list = [];<br>            <span class="hljs-keyword">var</span> leng = arr.length<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; leng; i++) &#123;<br>                <span class="hljs-keyword">if</span> (list.indexOf(arr[i]) === -<span class="hljs-number">1</span>) &#123;<br>                    list.push(arr[i]);<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">return</span> list<br>        &#125;,<br>        <span class="hljs-comment">//数组乱序</span><br>        <span class="hljs-function"><span class="hljs-title">arrayRandom</span>(<span class="hljs-params">arr</span>)</span> &#123;<br>            arr.sort(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.random() - <span class="hljs-number">0.5</span><br>            &#125;)<br>            <span class="hljs-keyword">return</span> arr<br>        &#125;,<br>        <span class="hljs-comment">//拆分url变成对象</span><br>        <span class="hljs-function"><span class="hljs-title">urlSplit</span>(<span class="hljs-params">url</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> list = url.split(<span class="hljs-string">&#x27;?&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;&amp;&#x27;</span>);<br>            <span class="hljs-keyword">var</span> leng = list.length;<br>            <span class="hljs-keyword">let</span> obj = &#123;&#125;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; leng; i++) &#123;<br>                <span class="hljs-keyword">var</span> key = list[i].split(<span class="hljs-string">&#x27;=&#x27;</span>)[<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">var</span> val = list[i].split(<span class="hljs-string">&#x27;=&#x27;</span>)[<span class="hljs-number">1</span>];<br>                obj[key] = val<br>            &#125;<br>            <span class="hljs-keyword">return</span> obj<br>        &#125;,<br>        <span class="hljs-comment">//将对象拼接到url中</span><br>        <span class="hljs-function"><span class="hljs-title">urlJoin</span>(<span class="hljs-params">url, obj</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> list = []<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> key <span class="hljs-keyword">in</span> obj) &#123;<br>                <span class="hljs-keyword">if</span> (obj.hasOwnProperty(key)) &#123;<br>                    list.push(<span class="hljs-string">`<span class="hljs-subst">$&#123;key&#125;</span>=<span class="hljs-subst">$&#123;obj[key]&#125;</span>`</span>)<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;url&#125;</span>?<span class="hljs-subst">$&#123;list.join(<span class="hljs-string">&#x27;&amp;&#x27;</span>)&#125;</span>`</span><br>        &#125;,<br>        <span class="hljs-comment">// 设置元素CSS样式</span><br>        <span class="hljs-function"><span class="hljs-title">setStyle</span>(<span class="hljs-params">elem, style</span>)</span> &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> str <span class="hljs-keyword">in</span> style) &#123;<br>                elem.style[str] = style[str];<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">// Ajax请求函数</span><br>        <span class="hljs-function"><span class="hljs-title">AjaxTool</span>(<span class="hljs-params">method, url, data, fn</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> xhr;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.ActiveXObject) &#123; <span class="hljs-comment">//ie浏览器</span><br>                xhr = <span class="hljs-keyword">new</span> ActiveXObject(<span class="hljs-string">&quot;Microsoft.XMLHTTP&quot;</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.XMLHttpRequest) &#123; <span class="hljs-comment">//其他浏览器</span><br>                xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();<br>            &#125;<br>            <span class="hljs-keyword">if</span> (method == <span class="hljs-string">&#x27;get&#x27;</span>) &#123;<br>                url = <span class="hljs-built_in">this</span>.urlJoin(url, data)<br>                data = <span class="hljs-literal">null</span><br>            &#125;<br>            xhr.open(method, url);<br>            xhr.send(data ? <span class="hljs-built_in">JSON</span>.stringify(data) : <span class="hljs-string">&#x27;&#x27;</span>)<br>            xhr.addEventListener(<span class="hljs-string">&#x27;load&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (xhr.readyState === <span class="hljs-number">4</span> &amp;&amp; xhr.status === <span class="hljs-number">200</span>) &#123;<br>                    fn(<span class="hljs-built_in">this</span>.response)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    fn(<span class="hljs-string">&#x27;err&#x27;</span>)<br>                &#125;<br><br>            &#125;)<br>        &#125;,<br>        <span class="hljs-comment">//拖拽事件</span><br>        <span class="hljs-function"><span class="hljs-title">mouseMove</span>(<span class="hljs-params">ele, parent</span>)</span> &#123;<br>            ele.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, moveHandler);<br>            ele.style.position = <span class="hljs-string">&#x27;absolute&#x27;</span><br><br>            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">moveHandler</span>(<span class="hljs-params">e</span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&#x27;mousedown&#x27;</span>) &#123;<br>                    parent.ele = <span class="hljs-built_in">this</span>;<br>                    parent.point = &#123;<br>                        <span class="hljs-attr">x</span>: e.offsetX,<br>                        <span class="hljs-attr">y</span>: e.offsetY<br>                    &#125;<br>                    parent.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, moveHandler);<br>                    parent.addEventListener(<span class="hljs-string">&#x27;mouseup&#x27;</span>, moveHandler);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&#x27;mousemove&#x27;</span>) &#123;<br>                    <span class="hljs-built_in">this</span>.ele.style.left = e.x - <span class="hljs-built_in">this</span>.point.x + <span class="hljs-string">&quot;px&quot;</span>;<br>                    <span class="hljs-built_in">this</span>.ele.style.top = e.y - <span class="hljs-built_in">this</span>.point.y + <span class="hljs-string">&quot;px&quot;</span>;<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&#x27;mouseup&#x27;</span>) &#123;<br>                    parent.removeEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>, moveHandler);<br>                    parent.ele = <span class="hljs-literal">null</span>;<br>                    parent.point = <span class="hljs-literal">null</span>;<br>                &#125;<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">//继承</span><br>        <span class="hljs-function"><span class="hljs-title">inherit</span>(<span class="hljs-params">father, son</span>)</span> &#123;<br>            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">F</span>(<span class="hljs-params"></span>) </span>&#123;&#125; <span class="hljs-comment">//使用闭包产生私有函数</span><br>            (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">father, son</span>) </span>&#123; 新建一个立即执行函数,(类似雅虎网站的继承写法)<br>                F.prototype = father.prototype; <span class="hljs-comment">//私有函数取出父类的原型</span><br>                son.prototype = <span class="hljs-keyword">new</span> F(); <span class="hljs-comment">//实例化私有函数，并将对象赋给子类的原型</span><br>                son.prototype.superClass = father; <span class="hljs-comment">//自定义子类的超类等于父类</span><br>                son.prototype.constructor = son; <span class="hljs-comment">//将子类的构造函数指向自己，否则是父类(因为原型链上的constructor是父类)</span><br>            &#125;(father, son))<br>        &#125;,<br>        <span class="hljs-comment">//深复制</span><br>        <span class="hljs-function"><span class="hljs-title">deepCopy</span>(<span class="hljs-params">org, tag</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> tag = tag || &#123;&#125;; <span class="hljs-comment">//初始化要复制的对象</span><br>            <span class="hljs-keyword">var</span> name = <span class="hljs-built_in">Object</span>.getOwnPropertyNames(org); <span class="hljs-comment">//获取该对象的属性名，以字符串数组返回</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; name.length; i++) &#123; <span class="hljs-comment">//遍历对象</span><br>                <span class="hljs-keyword">var</span> desc = <span class="hljs-built_in">Object</span>.getOwnPropertyDescriptor(org, name[i]); <span class="hljs-comment">//获取对象的属性描述对象，无引用关系，返回另一个对象，改变时原对象不发生变化(复制的关键)</span><br>                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> desc.value === <span class="hljs-string">&#x27;object&#x27;</span> &amp;&amp; desc.value !== <span class="hljs-literal">null</span>) &#123; <span class="hljs-comment">//若遍历的每一项非空且为对象，则为引用值，则进行下一步</span><br>                    <span class="hljs-keyword">var</span> obj = desc.value.toString() === <span class="hljs-string">&#x27;[object Object]&#x27;</span> ? &#123;&#125; : []; <span class="hljs-comment">//判断是数组还是对象</span><br>                    <span class="hljs-built_in">Object</span>.defineProperty(tag, name[i], &#123; <span class="hljs-comment">//设置对象属性值，前三个的值是返回true或false</span><br>                        <span class="hljs-attr">configurable</span>: desc.configurable, <span class="hljs-comment">//是否可删除可替换</span><br>                        <span class="hljs-attr">enumerable</span>: desc.enumerable, <span class="hljs-comment">//是否可枚举可遍历</span><br>                        <span class="hljs-attr">writable</span>: desc.writable, <span class="hljs-comment">//是否可写入</span><br>                        <span class="hljs-attr">value</span>: obj <span class="hljs-comment">//对象的值</span><br>                    &#125;);<br>                    <span class="hljs-built_in">this</span>.deepCopy(desc.value, obj); <span class="hljs-comment">//再次执行函数</span><br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-built_in">Object</span>.defineProperty(tag, name[i], desc); <span class="hljs-comment">//否则直接将该对象的属性值进行复制(原始值)</span><br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">return</span> tag;<br>        &#125;,<br>        <span class="hljs-comment">//获取伪元素</span><br>        <span class="hljs-function"><span class="hljs-title">pseudoEle</span>(<span class="hljs-params">ele, type</span>)</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">window</span>.getComputedStyle(ele, type)<br>        &#125;,<br>        <span class="hljs-comment">//获取数据类型</span><br>        <span class="hljs-function"><span class="hljs-title">getType</span>(<span class="hljs-params">data</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> type = <span class="hljs-keyword">typeof</span> data;<br>            <span class="hljs-keyword">var</span> obj = &#123;<br>                <span class="hljs-string">&#x27;[object Array]&#x27;</span>: <span class="hljs-string">&#x27;array&#x27;</span>,<br>                <span class="hljs-string">&#x27;[object Object]&#x27;</span>: <span class="hljs-string">&#x27;object&#x27;</span><br>            &#125;<br>            <span class="hljs-keyword">if</span> (data === <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;null&#x27;</span><br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#x27;object&#x27;</span>) &#123;<br>                <span class="hljs-keyword">var</span> key = <span class="hljs-built_in">Object</span>.prototype.toString.call(data);<br>                <span class="hljs-keyword">return</span> obj[key];<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">return</span> type<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">// 在某元素（after）之后插入元素（target）</span><br>        <span class="hljs-function"><span class="hljs-title">insertAfter</span>(<span class="hljs-params">parent, after, target</span>)</span> &#123;<br>            before = after.nextElementSibling;<br>            <span class="hljs-built_in">console</span>.log(before);<br><br>            <span class="hljs-keyword">if</span> (before == <span class="hljs-literal">null</span>) &#123;<br>                parent.appendChild(target)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                parent.insertBefore(target, before)<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">//浏览器事件兼容函数</span><br>        <span class="hljs-function"><span class="hljs-title">addHandler</span>(<span class="hljs-params">ele, type, handler</span>)</span> &#123;<br>            <span class="hljs-keyword">if</span> (ele.addEventListener) &#123;<br>                ele.addEventListener(type, handler, <span class="hljs-literal">false</span>)<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (ele.attachEvent) &#123;<br>                ele.attachEvent(<span class="hljs-string">&#x27;on&#x27;</span> + type, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                    handler.call(ele)<br>                &#125;)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                ele[<span class="hljs-string">&#x27;on&#x27;</span> + type] = handler<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">// 取消事件冒泡</span><br>        <span class="hljs-function"><span class="hljs-title">stopBubble</span>(<span class="hljs-params">event</span>)</span> &#123;<br>            event = event || <span class="hljs-built_in">window</span>.event<br>            <span class="hljs-keyword">if</span> (event.stopPropagation) &#123;<br>                event.stopPropagation()<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                event.cancelBubble()<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">//取消默认事件</span><br>        <span class="hljs-function"><span class="hljs-title">stopDefault</span>(<span class="hljs-params">event</span>)</span> &#123;<br>            event = event || <span class="hljs-built_in">window</span>.event<br>            <span class="hljs-keyword">if</span> (event.preventDefault) &#123;<br>                event.preventDefault();<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                event.returnValue = <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">// 事件处理机制</span><br>        <span class="hljs-function"><span class="hljs-title">eventCtrl</span>(<span class="hljs-params">ele, type, handler, fn, data</span>)</span> &#123;<br>            <span class="hljs-keyword">switch</span> (type) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;on&#x27;</span>:<br>                    <span class="hljs-built_in">this</span>.onEvent(ele, handler, fn, data)<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;remove&#x27;</span>:<br>                    <span class="hljs-built_in">this</span>.removeEvent(ele, handler, fn, data);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;dispatch&#x27;</span>:<br>                    <span class="hljs-built_in">this</span>.dispatchEvent(ele, handler, fn, data);<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">//事件处理机制（方法）</span><br>        <span class="hljs-function"><span class="hljs-title">onEvent</span>(<span class="hljs-params">ele, handler, fn, data</span>)</span> &#123;<br>            <span class="hljs-built_in">this</span>.addHandler(ele, handler, fn)<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">removeEvent</span>(<span class="hljs-params">ele, handler, fn, data</span>)</span> &#123;<br>            ele.removeEventListener(handler, fn)<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">dispatchEvent</span>(<span class="hljs-params">ele, handler, fn, data</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> evts = <span class="hljs-keyword">new</span> Event(handler);<br>            ele.dispatchEvent(evts);<br>        &#125;,<br>        <span class="hljs-comment">// cookie操作(time是小时)</span><br>        <span class="hljs-function"><span class="hljs-title">cookieUse</span>(<span class="hljs-params">type, data, name, time = <span class="hljs-number">1</span></span>)</span> &#123;<br>            <span class="hljs-keyword">switch</span> (type) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;add&#x27;</span>:<br>                    <span class="hljs-keyword">var</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<br>                    date.setHours(date.getHours() + time)<br>                    <span class="hljs-built_in">document</span>.cookie = name + <span class="hljs-string">&#x27;=&#x27;</span> + <span class="hljs-built_in">JSON</span>.stringify(data) + <span class="hljs-string">&quot;;expires=&quot;</span> + date.toString();<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;del&#x27;</span>:<br>                    <span class="hljs-built_in">document</span>.cookie = name + <span class="hljs-string">&quot;=;expires=Thu, 01 Jan 1970 00:00:00 GMT&quot;</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;find&#x27;</span>:<br>                    <span class="hljs-keyword">var</span> arr = <span class="hljs-built_in">document</span>.cookie.split(<span class="hljs-string">&#x27;;&#x27;</span>)<br>                    <span class="hljs-keyword">var</span> leng = arr.length;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; leng; i++) &#123;<br>                        <span class="hljs-keyword">if</span> (arr[i].split(<span class="hljs-string">&#x27;=&#x27;</span>)[<span class="hljs-number">0</span>] === name) &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.parse(arr[i].split(<span class="hljs-string">&#x27;=&#x27;</span>)[<span class="hljs-number">1</span>]);<br>                        &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">default</span>:<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">// 缓存storage使用</span><br>        <span class="hljs-function"><span class="hljs-title">storageUse</span>(<span class="hljs-params">method, type, name, data</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> obj = &#123;&#125;<br>            <span class="hljs-keyword">if</span> (method === <span class="hljs-string">&#x27;session&#x27;</span>) &#123;<br>                obj = sessionStorage<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (method === <span class="hljs-string">&#x27;local&#x27;</span>) &#123;<br>                obj = <span class="hljs-built_in">localStorage</span><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            <span class="hljs-keyword">switch</span> (type) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;add&#x27;</span>:<br>                    obj.setItem(name, <span class="hljs-built_in">JSON</span>.stringify(data))<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;del&#x27;</span>:<br>                    obj.removeItem(name);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;delAll&#x27;</span>:<br>                    obj.clear();<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;find&#x27;</span>:<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.parse(obj[name])<br>                <span class="hljs-attr">default</span>:<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">// 复制文本(可复制元素内容,输入框的值,字符串)ele是触发事件对象，event是事件类型,target是被复制的对象</span><br>        <span class="hljs-function"><span class="hljs-title">copyText</span>(<span class="hljs-params">ele, event, target</span>)</span> &#123;<br>            <span class="hljs-comment">// this.addHandler(ele, event, handle)</span><br>            <span class="hljs-built_in">this</span>.addHandler(ele, event, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>                <span class="hljs-keyword">var</span> input = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;input&#x27;</span>);<br>                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> target == <span class="hljs-string">&#x27;string&#x27;</span>) &#123;<br>                    input.value = target<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (target.value) &#123;<br>                    input.value = target.value<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    input.value = target.textContent<br>                &#125;<br>                <span class="hljs-built_in">document</span>.body.appendChild(input)<br>                input.select();<br>                <span class="hljs-built_in">document</span>.execCommand(<span class="hljs-string">&#x27;Copy&#x27;</span>);<br>                input.style.display = <span class="hljs-string">&#x27;none&#x27;</span><br>            &#125;)<br><br>        &#125;,<br>        <span class="hljs-comment">// 获取选中文本</span><br>        <span class="hljs-function"><span class="hljs-title">selectText</span>(<span class="hljs-params">parent, event, fn</span>)</span> &#123;<br>            <span class="hljs-built_in">this</span>.addHandler(parent, event, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>                <span class="hljs-keyword">var</span> str = <span class="hljs-string">&#x27;&#x27;</span><br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.getSelection) &#123;<br>                    <span class="hljs-comment">//Firefox、Chrome、Safari、Opera</span><br>                    str = <span class="hljs-built_in">window</span>.getSelection().toString();<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">document</span>.selection &amp;&amp; <span class="hljs-built_in">document</span>.selection.createRange) &#123; <span class="hljs-comment">//IE </span><br>                    str = <span class="hljs-built_in">document</span>.selection.createRange().text;<br>                &#125;<br>                fn(str)<br>            &#125;)<br>        &#125;,<br>        <span class="hljs-comment">// checkBox全选</span><br>        <span class="hljs-function"><span class="hljs-title">checkAll</span>(<span class="hljs-params">selectAll, selectItem</span>)</span> &#123;<br>            <span class="hljs-keyword">let</span> len = selectItem.length;<br>            <span class="hljs-built_in">this</span>.addHandler(selectAll, <span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>                    selectItem[i].checked = e.target.checked<br>                &#125;<br>            &#125;);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; len; j++) &#123;<br>                <span class="hljs-built_in">this</span>.addHandler(selectItem[j], <span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>                    <span class="hljs-keyword">let</span> result = <span class="hljs-number">1</span>;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; len; k++) &#123;<br>                        result *= selectItem[k].checked;<br>                    &#125;<br>                    selectAll.checked = result ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span><br>                &#125;)<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">// 数组扁平化</span><br>        <span class="hljs-function"><span class="hljs-title">demoteArr</span>(<span class="hljs-params">arr, list = []</span>)</span> &#123;<br>            <span class="hljs-keyword">let</span> len = arr.length;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getType(arr[i]) === <span class="hljs-string">&#x27;array&#x27;</span>) &#123;<br>                    <span class="hljs-built_in">this</span>.demoteArr(arr[i], list)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    list.push(arr[i])<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">return</span> list<br>        &#125;,<br>        <span class="hljs-comment">//数组升二维(num:每层的个数)</span><br>        <span class="hljs-function"><span class="hljs-title">updateArr</span>(<span class="hljs-params">arr, num, list = []</span>)</span> &#123;<br>            <span class="hljs-keyword">let</span> count = <span class="hljs-built_in">Math</span>.ceil(arr.length / num)<br>            <span class="hljs-keyword">let</span> value = <span class="hljs-number">0</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; count; i++) &#123;<br>                <span class="hljs-keyword">let</span> initList = []<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; num; j++) &#123;<br>                    initList.push(arr[value])<br>                    value++<br>                &#125;<br>                list.push(initList)<br>            &#125;<br>            <span class="hljs-keyword">return</span> list<br>        &#125;,<br>        <span class="hljs-comment">// 图片转base64</span><br>        <span class="hljs-function"><span class="hljs-title">changeBlob</span>(<span class="hljs-params">file, fn</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();<br>            xhr.open(<span class="hljs-string">&quot;POST&quot;</span>, file, <span class="hljs-literal">true</span>);<br>            xhr.responseType = <span class="hljs-string">&quot;blob&quot;</span>;<br>            xhr.send();<br>            xhr.onload = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.status == <span class="hljs-number">200</span>) &#123;<br>                    <span class="hljs-keyword">var</span> blob = <span class="hljs-built_in">this</span>.response;<br>                    <span class="hljs-keyword">let</span> oFileReader = <span class="hljs-keyword">new</span> FileReader();<br>                    oFileReader.onloadend = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>                        <span class="hljs-keyword">let</span> base64 = e.target.result;<br>                        fn(base64)<br>                    &#125;;<br>                    oFileReader.readAsDataURL(blob);<br>                    <span class="hljs-comment">// pic.src = window.URL.createObjectURL(blob);</span><br>                &#125;<br>            &#125;<br><br>        &#125;,<br>        <span class="hljs-comment">// 三级联动</span><br>        <span class="hljs-attr">moreSelect</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">url, elements</span>) </span>&#123;<br>            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetArea</span>(<span class="hljs-params">url</span>) </span>&#123;<br>                <span class="hljs-built_in">this</span>.url = url<br>                <span class="hljs-built_in">this</span>.init(elements)<br>            &#125;<br>            GetArea.prototype = &#123;<br>                <span class="hljs-attr">num</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-attr">selections</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-attr">list</span>: [],<br>                <span class="hljs-function"><span class="hljs-title">createOptions</span>(<span class="hljs-params">data, parent</span>)</span> &#123;<br>                    <span class="hljs-keyword">if</span> (!parent) <span class="hljs-keyword">return</span><br>                    <span class="hljs-keyword">if</span> (parent.children) &#123;<br>                        <span class="hljs-keyword">var</span> leng = parent.children.length<br>                        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; leng; j++) &#123;<br>                            parent.lastElementChild.textContent = <span class="hljs-string">&#x27;&#x27;</span><br>                            parent.lastElementChild.remove()<br>                        &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; data.length; i++) &#123;<br>                        <span class="hljs-keyword">var</span> option = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;option&#x27;</span>);<br>                        option.textContent = data[i].name || data[i]<br>                        parent.appendChild(option)<br>                    &#125;<br>                    parent.addEventListener(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-built_in">this</span>.changeHandler);<br>                    parent.data = data<br>                    parent.self = <span class="hljs-built_in">this</span><br>                &#125;,<br>                <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params">elements</span>)</span> &#123;<br>                    <span class="hljs-built_in">this</span>.selections = elements<br>                    <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();<br>                    xhr.addEventListener(<span class="hljs-string">&#x27;load&#x27;</span>, <span class="hljs-built_in">this</span>.loadHandler);<br>                    xhr.open(<span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-built_in">this</span>.url)<br>                    xhr.send(<span class="hljs-string">&#x27;&#x27;</span>)<br>                    xhr.self = <span class="hljs-built_in">this</span><br>                &#125;,<br>                <span class="hljs-function"><span class="hljs-title">loadHandler</span>(<span class="hljs-params">e</span>)</span> &#123;<br>                    <span class="hljs-built_in">this</span>.self.list = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">this</span>.response)<br>                    <span class="hljs-built_in">this</span>.self.createOptions(<span class="hljs-built_in">this</span>.self.list, <span class="hljs-built_in">this</span>.self.selections[<span class="hljs-built_in">this</span>.self.num])<br>                &#125;,<br>                <span class="hljs-function"><span class="hljs-title">changeHandler</span>(<span class="hljs-params">e</span>)</span> &#123;<br>                    <span class="hljs-keyword">var</span> list;<br>                    <span class="hljs-built_in">this</span>.data.forEach(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;<br>                        <span class="hljs-keyword">if</span> (item.name === <span class="hljs-built_in">this</span>.value) &#123;<br>                            list = item.city ? item.city : item<br>                        &#125;<br>                    &#125;);<br>                    <span class="hljs-built_in">this</span>.self.selections.forEach(<span class="hljs-function">(<span class="hljs-params">item, val</span>) =&gt;</span> &#123;<br>                        <span class="hljs-keyword">if</span> (item.id === <span class="hljs-built_in">this</span>.id) &#123;<br>                            <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.self.num)<br>                            <span class="hljs-built_in">this</span>.self.num = item.id.split(<span class="hljs-string">&#x27;select&#x27;</span>)[<span class="hljs-number">1</span>] - <span class="hljs-number">1</span><br>                        &#125;<br>                    &#125;)<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.self.num &gt; <span class="hljs-built_in">this</span>.self.selections.length - <span class="hljs-number">1</span>) &#123;<br>                        <span class="hljs-keyword">return</span><br>                    &#125;<br>                    <span class="hljs-built_in">this</span>.self.num++<br>                    <span class="hljs-built_in">this</span>.self.createOptions(list, <span class="hljs-built_in">this</span>.self.selections[<span class="hljs-built_in">this</span>.self.num])<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">return</span> getArea = <span class="hljs-keyword">new</span> GetArea(url);<br>        &#125;,<br>        <span class="hljs-comment">// 函数节流</span><br>        <span class="hljs-function"><span class="hljs-title">throttle</span>(<span class="hljs-params">fn, time</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> canDo = <span class="hljs-literal">true</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (!canDo) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>                &#125;<br>                canDo = <span class="hljs-literal">false</span><br>                <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>                    fn.call(<span class="hljs-built_in">this</span>)<br>                    canDo = <span class="hljs-literal">true</span><br>                &#125;, time)<br>            &#125;<br>        &#125;,<br>        <span class="hljs-comment">// 函数防抖</span><br>        <span class="hljs-function"><span class="hljs-title">debounce</span>(<span class="hljs-params">fn, time</span>)</span> &#123;<br>            <span class="hljs-keyword">var</span> _timer = <span class="hljs-literal">null</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (_timer) &#123;<br>                    <span class="hljs-built_in">clearTimeout</span>(_timer)<br>                    _timer = <span class="hljs-literal">null</span><br>                &#125;<br>                _timer = <span class="hljs-built_in">setTimeout</span>(fn, time)<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;())<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>小程序入坑记：TodoList</title>
    <link href="/2019/03/07/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A5%E5%9D%91%E8%AE%B0%20TodoList/"/>
    <url>/2019/03/07/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A5%E5%9D%91%E8%AE%B0%20TodoList/</url>
    
    <content type="html"><![CDATA[<h2 id="小程序数据绑定渲染视图使数据与视图的关系显得很清晰"><a href="#小程序数据绑定渲染视图使数据与视图的关系显得很清晰" class="headerlink" title="小程序数据绑定渲染视图使数据与视图的关系显得很清晰"></a>小程序数据绑定渲染视图使数据与视图的关系显得很清晰</h2><p>wxml：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--pages/todoList/toduList.wxml--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;addItem&#x27;</span> <span class="hljs-attr">placeholder-style</span>=<span class="hljs-string">&#x27;font-size:16px;&#x27;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&#x27;输入事项&#x27;</span> <span class="hljs-attr">bindinput</span>=<span class="hljs-string">&#x27;changeStr&#x27;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;&#123;&#123;addStr&#125;&#125;&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">input</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;add&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;primary&#x27;</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&#x27;addTodo&#x27;</span>&gt;</span>提交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;listBox&#x27;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;listItem&#x27;</span> <span class="hljs-attr">wx:for</span>=<span class="hljs-string">&quot;&#123;&#123;addList&#125;&#125;&quot;</span> <span class="hljs-attr">wx:key</span>=<span class="hljs-string">&#x27;item.id&#x27;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;content&#x27;</span>&gt;</span>&#123;&#123;item.content&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;time&#x27;</span>&gt;</span>&#123;&#123;item.time&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;finish&#x27;</span> <span class="hljs-attr">disabled</span>=<span class="hljs-string">&quot;&#123;&#123;item.finish&#125;&#125;&quot;</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&#x27;tapHandler&#x27;</span> <span class="hljs-attr">data-id</span>=<span class="hljs-string">&#x27;&#123;&#123;item.id&#125;&#125;&#x27;</span>&gt;</span>&#123;&#123;item.finish?&#x27;已完成&#x27;:&#x27;完成&#x27;&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;del&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;warn&#x27;</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&#x27;tapHandler&#x27;</span> <span class="hljs-attr">data-id</span>=<span class="hljs-string">&#x27;&#123;&#123;item.id&#125;&#125;&#x27;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><p>wxss：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.addItem</span> &#123;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">550</span>rpx;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">60</span>rpx;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ccc</span>;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">30</span>rpx;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10</span>rpx;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">10</span>;<br>&#125;<br><br><span class="hljs-selector-class">.add</span> &#123;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">60</span>rpx;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">60</span>rpx;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">150</span>rpx;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30</span>rpx;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">10</span>;<br>&#125;<br><br><span class="hljs-selector-class">.content</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-comment">/* background: lightcoral; */</span><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">250</span>rpx;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">text-overflow</span>: ellipsis;<br>  <span class="hljs-attribute">white-space</span>: nowrap;<br>  <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br><br><span class="hljs-selector-class">.time</span> &#123;<br>  <span class="hljs-comment">/* background: lightblue; */</span><br>  <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br><br><span class="hljs-selector-class">.listBox</span> &#123;<br>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">60</span>rpx;<br>&#125;<br><br><span class="hljs-selector-class">.listItem</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br>  <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">20</span>rpx;<br>&#125;<br><br><span class="hljs-selector-class">.del</span>, <span class="hljs-selector-class">.finish</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">22</span>rpx;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100</span>rpx;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">60</span>rpx;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">60</span>rpx;<br>  <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br></code></pre></td></tr></table></figure><p>js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// pages/todoList/toduList.js</span><br>Page(&#123;<br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">addStr</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">//输入的内容，将该值绑定到input的value中</span><br>    <span class="hljs-attr">addList</span>: [] <span class="hljs-comment">//事项列表</span><br>  &#125;,<br>  <span class="hljs-function"><span class="hljs-title">changeStr</span>(<span class="hljs-params">e</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.setData(&#123;<br>      <span class="hljs-attr">addStr</span>: e.detail.value <span class="hljs-comment">//当用户输入值时，修改当前事项内容</span><br>    &#125;)<br>  &#125;,<br>  <span class="hljs-function"><span class="hljs-title">addTodo</span>(<span class="hljs-params">e</span>)</span> &#123;<br>    <span class="hljs-keyword">var</span> str = <span class="hljs-built_in">this</span>.data.addStr.trim() <span class="hljs-comment">//去除字符前后空格</span><br>    <span class="hljs-keyword">if</span> (str.length === <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">var</span> addList = <span class="hljs-built_in">this</span>.data.addList;<br>    <span class="hljs-keyword">var</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>() <span class="hljs-comment">//生成提交的时间</span><br>    <span class="hljs-keyword">var</span> time = date.toLocaleString(); <span class="hljs-comment">//转换为标准时间</span><br>    <span class="hljs-keyword">var</span> obj = &#123; <span class="hljs-comment">//每个事项的内容</span><br>      <span class="hljs-attr">id</span>: addList.length, <span class="hljs-comment">//将id设为数组的长度，方便后续操作</span><br>      <span class="hljs-attr">content</span>: str, <span class="hljs-comment">//事项内容</span><br>      <span class="hljs-attr">time</span>: time, <span class="hljs-comment">//提交时间</span><br>      <span class="hljs-attr">finish</span>: <span class="hljs-literal">false</span> <span class="hljs-comment">//是否已完成</span><br>    &#125;<br>    addList.push(obj) <span class="hljs-comment">//将该事项添加到事项列表中</span><br>    <span class="hljs-built_in">this</span>.setData(&#123; <span class="hljs-comment">//刷新列表，置空input内容</span><br>      addList,<br>      <span class="hljs-attr">addStr</span>: <span class="hljs-string">&#x27;&#x27;</span><br>    &#125;)<br>  &#125;,<br>  <span class="hljs-function"><span class="hljs-title">tapHandler</span>(<span class="hljs-params">e</span>)</span> &#123; <span class="hljs-comment">//用户点击完成或删除时触发</span><br>    <span class="hljs-keyword">var</span> addList = <span class="hljs-built_in">this</span>.data.addList<br>    <span class="hljs-keyword">var</span> id = e.target.dataset.id <span class="hljs-comment">//获取时间传递的id值</span><br>    <span class="hljs-keyword">var</span> type = e._relatedInfo.anchorTargetText <span class="hljs-comment">//获取点击种类：删除或完成</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; addList.length; i++) &#123; <span class="hljs-comment">//遍历列表</span><br>      <span class="hljs-keyword">if</span> (addList[i].id === id) &#123;<br>        <span class="hljs-keyword">switch</span> (type) &#123;<br>          <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;完成&#x27;</span>:<br>            addList[i].finish = <span class="hljs-literal">true</span>; <span class="hljs-comment">//点击完成时执行</span><br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;删除&#x27;</span>:<br>            addList.splice(i, <span class="hljs-number">1</span>); <span class="hljs-comment">//点击删除时执行</span><br>            <span class="hljs-keyword">break</span>;<br>          <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-built_in">this</span>.setData(&#123; <span class="hljs-comment">//刷新列表</span><br>          addList<br>        &#125;)<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>小程序入坑记：懒加载</title>
    <link href="/2019/03/06/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A5%E5%9D%91%E8%AE%B0%20%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    <url>/2019/03/06/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A5%E5%9D%91%E8%AE%B0%20%E6%87%92%E5%8A%A0%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<p>小程序可以说是非常火热了，开发周期短，页面简洁，数据控制方便，可以说结合了三大框架的特点</p><h2 id="小程序的目录结构："><a href="#小程序的目录结构：" class="headerlink" title="小程序的目录结构："></a>小程序的目录结构：</h2><p>页面以index为例</p><p>utils：工具类目录，供全局调用。在utils中封装一个tools工具类（axios获取请求）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Tools</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br><br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">axios</span>(<span class="hljs-params">method, url, data</span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<span class="hljs-comment">//promise解决异步，其他操作和axios相似</span><br>      wx.request(&#123;<br>        <span class="hljs-attr">method</span>: method,<br>        <span class="hljs-attr">url</span>: url,<br>        <span class="hljs-attr">data</span>: <span class="hljs-built_in">JSON</span>.stringify(data),<br>        <span class="hljs-attr">header</span>: &#123;<br>          <span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span><br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">success</span>(<span class="hljs-params">res</span>)</span> &#123;<br>          <span class="hljs-keyword">if</span> (res.statusCode === <span class="hljs-number">200</span>) &#123;<br>            resolve(res.data);<span class="hljs-comment">//过滤data</span><br>          &#125; <span class="hljs-keyword">else</span> &#123;<br>            reject()<br>          &#125;<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">fail</span>(<span class="hljs-params">res</span>)</span> &#123;<br>          reject(res)<br>        &#125;<br>      &#125;)<br>    &#125;)<br>  &#125;<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> Tools<br></code></pre></td></tr></table></figure><p>之后将页面分成逻辑层和业务层：</p><p>逻辑层：在index同目录下新建extend.js，目的是进行数据操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> tools <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../utils/tool.js&#x27;</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Tools</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">tools</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>()<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">getData</span>(<span class="hljs-params">fn, method = <span class="hljs-string">&#x27;get&#x27;</span>, url, data = &#123;&#125;</span>)</span> &#123;<span class="hljs-comment">//新建一个请求方法，在逻辑层执行一些操作</span><br>    <span class="hljs-built_in">this</span>.axios(method, url, data)<br>      .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        fn(res)<br>      &#125;).catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        fn(err)<br>      &#125;)<br>  &#125;<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> Tools<br></code></pre></td></tr></table></figure><p>业务层：调用逻辑层的方法进行数据渲染</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//获取应用实例</span><br><span class="hljs-keyword">const</span> app = getApp()<br><span class="hljs-keyword">import</span> Tools <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./extend.js&#x27;</span><br><span class="hljs-keyword">var</span> tools = <span class="hljs-keyword">new</span> Tools()<span class="hljs-comment">//实例化方法</span><br>Page(&#123;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 页面的初始数据</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">list</span>: []<br>  &#125;,<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 生命周期函数--监听页面加载</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">onLoad</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">options</span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.loadData()<br>  &#125;,<br>  <span class="hljs-function"><span class="hljs-title">loadData</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">var</span> that = <span class="hljs-built_in">this</span><br>    tools.getData(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) </span>&#123;<span class="hljs-comment">//调用逻辑层的方法获取数据</span><br>      <span class="hljs-keyword">var</span> list = that.data.list.concat(res)<span class="hljs-comment">//连接数据进行懒加载</span><br>      that.setData(&#123;<br>        list<br>      &#125;)<br>    &#125;, <span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-string">&#x27;https://www.easy-mock.com/mock/5c6e58aa511c1f12334d8269/object/getData&#x27;</span>, &#123;&#125;)<br>  &#125;,<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 生命周期函数--监听页面初次渲染完成</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">onReady</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><br>  &#125;,<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 生命周期函数--监听页面显示</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">onShow</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><br>  &#125;,<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 生命周期函数--监听页面隐藏</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">onHide</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><br>  &#125;,<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 生命周期函数--监听页面卸载</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">onUnload</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><br>  &#125;,<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 页面相关事件处理函数--监听用户下拉动作</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">onPullDownRefresh</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><br>  &#125;,<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 页面上拉触底事件的处理函数</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">onReachBottom</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.loadData()<span class="hljs-comment">//触底时加载数据</span><br>  &#125;,<br><br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 用户点击右上角分享</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-attr">onShareAppMessage</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p>index.wxml:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box&#x27;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">wx:for</span>=<span class="hljs-string">&#x27;&#123;&#123;list&#125;&#125;&#x27;</span> <span class="hljs-attr">wx:key</span>=<span class="hljs-string">&#x27;&#123;&#123;item.name&#125;&#125;&#x27;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：简单的多级菜单实现</title>
    <link href="/2019/02/28/JS%E6%A1%88%E4%BE%8B%20%E7%AE%80%E5%8D%95%E7%9A%84%E5%A4%9A%E7%BA%A7%E8%8F%9C%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
    <url>/2019/02/28/JS%E6%A1%88%E4%BE%8B%20%E7%AE%80%E5%8D%95%E7%9A%84%E5%A4%9A%E7%BA%A7%E8%8F%9C%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="代码附上："><a href="#代码附上：" class="headerlink" title="代码附上："></a>代码附上：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>多级联动<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span><br><span class="css">        select,</span><br><span class="css">        option &#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">        &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;select1&#x27;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>--省份--<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;select2&#x27;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>--城市--<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;select3&#x27;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>--县/区--<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetArea</span>(<span class="hljs-params">url</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-built_in">this</span>.url = url</span><br><span class="javascript">            <span class="hljs-built_in">this</span>.init()<span class="hljs-comment">//初始化，入口函数</span></span><br><span class="javascript">        &#125;</span><br><span class="javascript">        GetArea.prototype = &#123;</span><br><span class="javascript">            <span class="hljs-attr">num</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//当前所在的下拉菜单</span></span><br><span class="javascript">            <span class="hljs-attr">selections</span>: <span class="hljs-literal">null</span>,<span class="hljs-comment">//选项框元素</span></span><br><span class="javascript">            <span class="hljs-attr">list</span>: [],<span class="hljs-comment">//数据列表</span></span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-title">createOptions</span>(<span class="hljs-params">data, parent</span>)</span> &#123;</span><br><span class="javascript">                <span class="hljs-keyword">if</span> (!parent) <span class="hljs-keyword">return</span></span><br><span class="javascript">                <span class="hljs-keyword">if</span> (parent.children) &#123;<span class="hljs-comment">//清空select中的子元素，避免数据叠加</span></span><br><span class="javascript">                    <span class="hljs-keyword">var</span> leng = parent.children.length</span><br><span class="javascript">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; leng - <span class="hljs-number">1</span>; j++) &#123;</span><br><span class="javascript">                        parent.lastElementChild.textContent = <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="javascript">                        parent.lastElementChild.remove()</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; data.length; i++) &#123;<span class="hljs-comment">//新建option</span></span><br><span class="javascript">                    <span class="hljs-keyword">var</span> option = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;option&#x27;</span>);</span><br><span class="javascript">                    option.textContent = data[i].name || data[i]</span><br><span class="javascript">                    parent.appendChild(option)</span><br><span class="javascript">                &#125;</span><br><span class="javascript">                parent.addEventListener(<span class="hljs-string">&#x27;change&#x27;</span>, <span class="hljs-built_in">this</span>.changeHandler);<span class="hljs-comment">//当select发生改变时执行changeHandler</span></span><br><span class="javascript">                parent.data = data<span class="hljs-comment">//事件传递数据</span></span><br><span class="javascript">                parent.self = <span class="hljs-built_in">this</span></span><br><span class="javascript">            &#125;,</span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                <span class="hljs-built_in">this</span>.selections = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;select&#x27;</span>)<span class="hljs-comment">//获取所有的select</span></span><br><span class="javascript">                <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();<span class="hljs-comment">//Ajax请求</span></span><br><span class="javascript">                xhr.addEventListener(<span class="hljs-string">&#x27;load&#x27;</span>, <span class="hljs-built_in">this</span>.loadHandler);</span><br><span class="javascript">                xhr.open(<span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-built_in">this</span>.url)</span><br><span class="javascript">                xhr.send(<span class="hljs-string">&#x27;&#x27;</span>)</span><br><span class="javascript">                xhr.self = <span class="hljs-built_in">this</span></span><br><span class="javascript">            &#125;,</span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-title">loadHandler</span>(<span class="hljs-params">e</span>)</span> &#123;</span><br><span class="javascript">                <span class="hljs-built_in">this</span>.self.list = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">this</span>.response)</span><br><span class="javascript">                <span class="hljs-built_in">this</span>.self.createOptions(<span class="hljs-built_in">this</span>.self.list, <span class="hljs-built_in">this</span>.self.selections[<span class="hljs-built_in">this</span>.self.num])<span class="hljs-comment">//当数据加载完成后执行创造option函数</span></span><br><span class="javascript">            &#125;,</span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-title">changeHandler</span>(<span class="hljs-params">e</span>)</span> &#123;</span><br><span class="javascript">                <span class="hljs-keyword">var</span> list;</span><br><span class="javascript">                <span class="hljs-built_in">this</span>.data.forEach(<span class="hljs-function">(<span class="hljs-params">item, val</span>) =&gt;</span> &#123;<span class="hljs-comment">//遍历查找选中的下一级列表</span></span><br><span class="javascript">                    <span class="hljs-keyword">if</span> (item.name === <span class="hljs-built_in">this</span>.value) &#123;</span><br><span class="javascript">                        list = item.city ? item.city : item</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;);</span><br><span class="javascript">                <span class="hljs-built_in">this</span>.self.selections.forEach(<span class="hljs-function">(<span class="hljs-params">item, val</span>) =&gt;</span> &#123;<span class="hljs-comment">//判断选中第几级菜单，并且将数值赋给全局中的当前所在的下拉菜单</span></span><br><span class="javascript">                    <span class="hljs-keyword">if</span> (item.id === <span class="hljs-built_in">this</span>.id) &#123;</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.self.num = item.id.split(<span class="hljs-string">&#x27;select&#x27;</span>)[<span class="hljs-number">1</span>] - <span class="hljs-number">1</span></span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;)</span><br><span class="javascript">                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.self.num &gt; <span class="hljs-built_in">this</span>.self.num) &#123;<span class="hljs-comment">//当选到最大的索引值时不执行下一级的渲染</span></span><br><span class="javascript">                    <span class="hljs-keyword">return</span></span><br><span class="javascript">                &#125;</span><br><span class="javascript">                <span class="hljs-built_in">this</span>.self.num++<span class="hljs-comment">//否则继续渲染下一级菜单</span></span><br><span class="javascript">                <span class="hljs-built_in">this</span>.self.createOptions(list, <span class="hljs-built_in">this</span>.self.selections[<span class="hljs-built_in">this</span>.self.num])</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> getArea = <span class="hljs-keyword">new</span> GetArea(<span class="hljs-string">&#x27;http://127.0.0.1:5500/city.json&#x27;</span>);</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="全国省市县json文件："><a href="#全国省市县json文件：" class="headerlink" title="全国省市县json文件："></a>全国省市县json文件：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br><span class="line">2572</span><br><span class="line">2573</span><br><span class="line">2574</span><br><span class="line">2575</span><br><span class="line">2576</span><br><span class="line">2577</span><br><span class="line">2578</span><br><span class="line">2579</span><br><span class="line">2580</span><br><span class="line">2581</span><br><span class="line">2582</span><br><span class="line">2583</span><br><span class="line">2584</span><br><span class="line">2585</span><br><span class="line">2586</span><br><span class="line">2587</span><br><span class="line">2588</span><br><span class="line">2589</span><br><span class="line">2590</span><br><span class="line">2591</span><br><span class="line">2592</span><br><span class="line">2593</span><br><span class="line">2594</span><br><span class="line">2595</span><br><span class="line">2596</span><br><span class="line">2597</span><br><span class="line">2598</span><br><span class="line">2599</span><br><span class="line">2600</span><br><span class="line">2601</span><br><span class="line">2602</span><br><span class="line">2603</span><br><span class="line">2604</span><br><span class="line">2605</span><br><span class="line">2606</span><br><span class="line">2607</span><br><span class="line">2608</span><br><span class="line">2609</span><br><span class="line">2610</span><br><span class="line">2611</span><br><span class="line">2612</span><br><span class="line">2613</span><br><span class="line">2614</span><br><span class="line">2615</span><br><span class="line">2616</span><br><span class="line">2617</span><br><span class="line">2618</span><br><span class="line">2619</span><br><span class="line">2620</span><br><span class="line">2621</span><br><span class="line">2622</span><br><span class="line">2623</span><br><span class="line">2624</span><br><span class="line">2625</span><br><span class="line">2626</span><br><span class="line">2627</span><br><span class="line">2628</span><br><span class="line">2629</span><br><span class="line">2630</span><br><span class="line">2631</span><br><span class="line">2632</span><br><span class="line">2633</span><br><span class="line">2634</span><br><span class="line">2635</span><br><span class="line">2636</span><br><span class="line">2637</span><br><span class="line">2638</span><br><span class="line">2639</span><br><span class="line">2640</span><br><span class="line">2641</span><br><span class="line">2642</span><br><span class="line">2643</span><br><span class="line">2644</span><br><span class="line">2645</span><br><span class="line">2646</span><br><span class="line">2647</span><br><span class="line">2648</span><br><span class="line">2649</span><br><span class="line">2650</span><br><span class="line">2651</span><br><span class="line">2652</span><br><span class="line">2653</span><br><span class="line">2654</span><br><span class="line">2655</span><br><span class="line">2656</span><br><span class="line">2657</span><br><span class="line">2658</span><br><span class="line">2659</span><br><span class="line">2660</span><br><span class="line">2661</span><br><span class="line">2662</span><br><span class="line">2663</span><br><span class="line">2664</span><br><span class="line">2665</span><br><span class="line">2666</span><br><span class="line">2667</span><br><span class="line">2668</span><br><span class="line">2669</span><br><span class="line">2670</span><br><span class="line">2671</span><br><span class="line">2672</span><br><span class="line">2673</span><br><span class="line">2674</span><br><span class="line">2675</span><br><span class="line">2676</span><br><span class="line">2677</span><br><span class="line">2678</span><br><span class="line">2679</span><br><span class="line">2680</span><br><span class="line">2681</span><br><span class="line">2682</span><br><span class="line">2683</span><br><span class="line">2684</span><br><span class="line">2685</span><br><span class="line">2686</span><br><span class="line">2687</span><br><span class="line">2688</span><br><span class="line">2689</span><br><span class="line">2690</span><br><span class="line">2691</span><br><span class="line">2692</span><br><span class="line">2693</span><br><span class="line">2694</span><br><span class="line">2695</span><br><span class="line">2696</span><br><span class="line">2697</span><br><span class="line">2698</span><br><span class="line">2699</span><br><span class="line">2700</span><br><span class="line">2701</span><br><span class="line">2702</span><br><span class="line">2703</span><br><span class="line">2704</span><br><span class="line">2705</span><br><span class="line">2706</span><br><span class="line">2707</span><br><span class="line">2708</span><br><span class="line">2709</span><br><span class="line">2710</span><br><span class="line">2711</span><br><span class="line">2712</span><br><span class="line">2713</span><br><span class="line">2714</span><br><span class="line">2715</span><br><span class="line">2716</span><br><span class="line">2717</span><br><span class="line">2718</span><br><span class="line">2719</span><br><span class="line">2720</span><br><span class="line">2721</span><br><span class="line">2722</span><br><span class="line">2723</span><br><span class="line">2724</span><br><span class="line">2725</span><br><span class="line">2726</span><br><span class="line">2727</span><br><span class="line">2728</span><br><span class="line">2729</span><br><span class="line">2730</span><br><span class="line">2731</span><br><span class="line">2732</span><br><span class="line">2733</span><br><span class="line">2734</span><br><span class="line">2735</span><br><span class="line">2736</span><br><span class="line">2737</span><br><span class="line">2738</span><br><span class="line">2739</span><br><span class="line">2740</span><br><span class="line">2741</span><br><span class="line">2742</span><br><span class="line">2743</span><br><span class="line">2744</span><br><span class="line">2745</span><br><span class="line">2746</span><br><span class="line">2747</span><br><span class="line">2748</span><br><span class="line">2749</span><br><span class="line">2750</span><br><span class="line">2751</span><br><span class="line">2752</span><br><span class="line">2753</span><br><span class="line">2754</span><br><span class="line">2755</span><br><span class="line">2756</span><br><span class="line">2757</span><br><span class="line">2758</span><br><span class="line">2759</span><br><span class="line">2760</span><br><span class="line">2761</span><br><span class="line">2762</span><br><span class="line">2763</span><br><span class="line">2764</span><br><span class="line">2765</span><br><span class="line">2766</span><br><span class="line">2767</span><br><span class="line">2768</span><br><span class="line">2769</span><br><span class="line">2770</span><br><span class="line">2771</span><br><span class="line">2772</span><br><span class="line">2773</span><br><span class="line">2774</span><br><span class="line">2775</span><br><span class="line">2776</span><br><span class="line">2777</span><br><span class="line">2778</span><br><span class="line">2779</span><br><span class="line">2780</span><br><span class="line">2781</span><br><span class="line">2782</span><br><span class="line">2783</span><br><span class="line">2784</span><br><span class="line">2785</span><br><span class="line">2786</span><br><span class="line">2787</span><br><span class="line">2788</span><br><span class="line">2789</span><br><span class="line">2790</span><br><span class="line">2791</span><br><span class="line">2792</span><br><span class="line">2793</span><br><span class="line">2794</span><br><span class="line">2795</span><br><span class="line">2796</span><br><span class="line">2797</span><br><span class="line">2798</span><br><span class="line">2799</span><br><span class="line">2800</span><br><span class="line">2801</span><br><span class="line">2802</span><br><span class="line">2803</span><br><span class="line">2804</span><br><span class="line">2805</span><br><span class="line">2806</span><br><span class="line">2807</span><br><span class="line">2808</span><br><span class="line">2809</span><br><span class="line">2810</span><br><span class="line">2811</span><br><span class="line">2812</span><br><span class="line">2813</span><br><span class="line">2814</span><br><span class="line">2815</span><br><span class="line">2816</span><br><span class="line">2817</span><br><span class="line">2818</span><br><span class="line">2819</span><br><span class="line">2820</span><br><span class="line">2821</span><br><span class="line">2822</span><br><span class="line">2823</span><br><span class="line">2824</span><br><span class="line">2825</span><br><span class="line">2826</span><br><span class="line">2827</span><br><span class="line">2828</span><br><span class="line">2829</span><br><span class="line">2830</span><br><span class="line">2831</span><br><span class="line">2832</span><br><span class="line">2833</span><br><span class="line">2834</span><br><span class="line">2835</span><br><span class="line">2836</span><br><span class="line">2837</span><br><span class="line">2838</span><br><span class="line">2839</span><br><span class="line">2840</span><br><span class="line">2841</span><br><span class="line">2842</span><br><span class="line">2843</span><br><span class="line">2844</span><br><span class="line">2845</span><br><span class="line">2846</span><br><span class="line">2847</span><br><span class="line">2848</span><br><span class="line">2849</span><br><span class="line">2850</span><br><span class="line">2851</span><br><span class="line">2852</span><br><span class="line">2853</span><br><span class="line">2854</span><br><span class="line">2855</span><br><span class="line">2856</span><br><span class="line">2857</span><br><span class="line">2858</span><br><span class="line">2859</span><br><span class="line">2860</span><br><span class="line">2861</span><br><span class="line">2862</span><br><span class="line">2863</span><br><span class="line">2864</span><br><span class="line">2865</span><br><span class="line">2866</span><br><span class="line">2867</span><br><span class="line">2868</span><br><span class="line">2869</span><br><span class="line">2870</span><br><span class="line">2871</span><br><span class="line">2872</span><br><span class="line">2873</span><br><span class="line">2874</span><br><span class="line">2875</span><br><span class="line">2876</span><br><span class="line">2877</span><br><span class="line">2878</span><br><span class="line">2879</span><br><span class="line">2880</span><br><span class="line">2881</span><br><span class="line">2882</span><br><span class="line">2883</span><br><span class="line">2884</span><br><span class="line">2885</span><br><span class="line">2886</span><br><span class="line">2887</span><br><span class="line">2888</span><br><span class="line">2889</span><br><span class="line">2890</span><br><span class="line">2891</span><br><span class="line">2892</span><br><span class="line">2893</span><br><span class="line">2894</span><br><span class="line">2895</span><br><span class="line">2896</span><br><span class="line">2897</span><br><span class="line">2898</span><br><span class="line">2899</span><br><span class="line">2900</span><br><span class="line">2901</span><br><span class="line">2902</span><br><span class="line">2903</span><br><span class="line">2904</span><br><span class="line">2905</span><br><span class="line">2906</span><br><span class="line">2907</span><br><span class="line">2908</span><br><span class="line">2909</span><br><span class="line">2910</span><br><span class="line">2911</span><br><span class="line">2912</span><br><span class="line">2913</span><br><span class="line">2914</span><br><span class="line">2915</span><br><span class="line">2916</span><br><span class="line">2917</span><br><span class="line">2918</span><br><span class="line">2919</span><br><span class="line">2920</span><br><span class="line">2921</span><br><span class="line">2922</span><br><span class="line">2923</span><br><span class="line">2924</span><br><span class="line">2925</span><br><span class="line">2926</span><br><span class="line">2927</span><br><span class="line">2928</span><br><span class="line">2929</span><br><span class="line">2930</span><br><span class="line">2931</span><br><span class="line">2932</span><br><span class="line">2933</span><br><span class="line">2934</span><br><span class="line">2935</span><br><span class="line">2936</span><br><span class="line">2937</span><br><span class="line">2938</span><br><span class="line">2939</span><br><span class="line">2940</span><br><span class="line">2941</span><br><span class="line">2942</span><br><span class="line">2943</span><br><span class="line">2944</span><br><span class="line">2945</span><br><span class="line">2946</span><br><span class="line">2947</span><br><span class="line">2948</span><br><span class="line">2949</span><br><span class="line">2950</span><br><span class="line">2951</span><br><span class="line">2952</span><br><span class="line">2953</span><br><span class="line">2954</span><br><span class="line">2955</span><br><span class="line">2956</span><br><span class="line">2957</span><br><span class="line">2958</span><br><span class="line">2959</span><br><span class="line">2960</span><br><span class="line">2961</span><br><span class="line">2962</span><br><span class="line">2963</span><br><span class="line">2964</span><br><span class="line">2965</span><br><span class="line">2966</span><br><span class="line">2967</span><br><span class="line">2968</span><br><span class="line">2969</span><br><span class="line">2970</span><br><span class="line">2971</span><br><span class="line">2972</span><br><span class="line">2973</span><br><span class="line">2974</span><br><span class="line">2975</span><br><span class="line">2976</span><br><span class="line">2977</span><br><span class="line">2978</span><br><span class="line">2979</span><br><span class="line">2980</span><br><span class="line">2981</span><br><span class="line">2982</span><br><span class="line">2983</span><br><span class="line">2984</span><br><span class="line">2985</span><br><span class="line">2986</span><br><span class="line">2987</span><br><span class="line">2988</span><br><span class="line">2989</span><br><span class="line">2990</span><br><span class="line">2991</span><br><span class="line">2992</span><br><span class="line">2993</span><br><span class="line">2994</span><br><span class="line">2995</span><br><span class="line">2996</span><br><span class="line">2997</span><br><span class="line">2998</span><br><span class="line">2999</span><br><span class="line">3000</span><br><span class="line">3001</span><br><span class="line">3002</span><br><span class="line">3003</span><br><span class="line">3004</span><br><span class="line">3005</span><br><span class="line">3006</span><br><span class="line">3007</span><br><span class="line">3008</span><br><span class="line">3009</span><br><span class="line">3010</span><br><span class="line">3011</span><br><span class="line">3012</span><br><span class="line">3013</span><br><span class="line">3014</span><br><span class="line">3015</span><br><span class="line">3016</span><br><span class="line">3017</span><br><span class="line">3018</span><br><span class="line">3019</span><br><span class="line">3020</span><br><span class="line">3021</span><br><span class="line">3022</span><br><span class="line">3023</span><br><span class="line">3024</span><br><span class="line">3025</span><br><span class="line">3026</span><br><span class="line">3027</span><br><span class="line">3028</span><br><span class="line">3029</span><br><span class="line">3030</span><br><span class="line">3031</span><br><span class="line">3032</span><br><span class="line">3033</span><br><span class="line">3034</span><br><span class="line">3035</span><br><span class="line">3036</span><br><span class="line">3037</span><br><span class="line">3038</span><br><span class="line">3039</span><br><span class="line">3040</span><br><span class="line">3041</span><br><span class="line">3042</span><br><span class="line">3043</span><br><span class="line">3044</span><br><span class="line">3045</span><br><span class="line">3046</span><br><span class="line">3047</span><br><span class="line">3048</span><br><span class="line">3049</span><br><span class="line">3050</span><br><span class="line">3051</span><br><span class="line">3052</span><br><span class="line">3053</span><br><span class="line">3054</span><br><span class="line">3055</span><br><span class="line">3056</span><br><span class="line">3057</span><br><span class="line">3058</span><br><span class="line">3059</span><br><span class="line">3060</span><br><span class="line">3061</span><br><span class="line">3062</span><br><span class="line">3063</span><br><span class="line">3064</span><br><span class="line">3065</span><br><span class="line">3066</span><br><span class="line">3067</span><br><span class="line">3068</span><br><span class="line">3069</span><br><span class="line">3070</span><br><span class="line">3071</span><br><span class="line">3072</span><br><span class="line">3073</span><br><span class="line">3074</span><br><span class="line">3075</span><br><span class="line">3076</span><br><span class="line">3077</span><br><span class="line">3078</span><br><span class="line">3079</span><br><span class="line">3080</span><br><span class="line">3081</span><br><span class="line">3082</span><br><span class="line">3083</span><br><span class="line">3084</span><br><span class="line">3085</span><br><span class="line">3086</span><br><span class="line">3087</span><br><span class="line">3088</span><br><span class="line">3089</span><br><span class="line">3090</span><br><span class="line">3091</span><br><span class="line">3092</span><br><span class="line">3093</span><br><span class="line">3094</span><br><span class="line">3095</span><br><span class="line">3096</span><br><span class="line">3097</span><br><span class="line">3098</span><br><span class="line">3099</span><br><span class="line">3100</span><br><span class="line">3101</span><br><span class="line">3102</span><br><span class="line">3103</span><br><span class="line">3104</span><br><span class="line">3105</span><br><span class="line">3106</span><br><span class="line">3107</span><br><span class="line">3108</span><br><span class="line">3109</span><br><span class="line">3110</span><br><span class="line">3111</span><br><span class="line">3112</span><br><span class="line">3113</span><br><span class="line">3114</span><br><span class="line">3115</span><br><span class="line">3116</span><br><span class="line">3117</span><br><span class="line">3118</span><br><span class="line">3119</span><br><span class="line">3120</span><br><span class="line">3121</span><br><span class="line">3122</span><br><span class="line">3123</span><br><span class="line">3124</span><br><span class="line">3125</span><br><span class="line">3126</span><br><span class="line">3127</span><br><span class="line">3128</span><br><span class="line">3129</span><br><span class="line">3130</span><br><span class="line">3131</span><br><span class="line">3132</span><br><span class="line">3133</span><br><span class="line">3134</span><br><span class="line">3135</span><br><span class="line">3136</span><br><span class="line">3137</span><br><span class="line">3138</span><br><span class="line">3139</span><br><span class="line">3140</span><br><span class="line">3141</span><br><span class="line">3142</span><br><span class="line">3143</span><br><span class="line">3144</span><br><span class="line">3145</span><br><span class="line">3146</span><br><span class="line">3147</span><br><span class="line">3148</span><br><span class="line">3149</span><br><span class="line">3150</span><br><span class="line">3151</span><br><span class="line">3152</span><br><span class="line">3153</span><br><span class="line">3154</span><br><span class="line">3155</span><br><span class="line">3156</span><br><span class="line">3157</span><br><span class="line">3158</span><br><span class="line">3159</span><br><span class="line">3160</span><br><span class="line">3161</span><br><span class="line">3162</span><br><span class="line">3163</span><br><span class="line">3164</span><br><span class="line">3165</span><br><span class="line">3166</span><br><span class="line">3167</span><br><span class="line">3168</span><br><span class="line">3169</span><br><span class="line">3170</span><br><span class="line">3171</span><br><span class="line">3172</span><br><span class="line">3173</span><br><span class="line">3174</span><br><span class="line">3175</span><br><span class="line">3176</span><br><span class="line">3177</span><br><span class="line">3178</span><br><span class="line">3179</span><br><span class="line">3180</span><br><span class="line">3181</span><br><span class="line">3182</span><br><span class="line">3183</span><br><span class="line">3184</span><br><span class="line">3185</span><br><span class="line">3186</span><br><span class="line">3187</span><br><span class="line">3188</span><br><span class="line">3189</span><br><span class="line">3190</span><br><span class="line">3191</span><br><span class="line">3192</span><br><span class="line">3193</span><br><span class="line">3194</span><br><span class="line">3195</span><br><span class="line">3196</span><br><span class="line">3197</span><br><span class="line">3198</span><br><span class="line">3199</span><br><span class="line">3200</span><br><span class="line">3201</span><br><span class="line">3202</span><br><span class="line">3203</span><br><span class="line">3204</span><br><span class="line">3205</span><br><span class="line">3206</span><br><span class="line">3207</span><br><span class="line">3208</span><br><span class="line">3209</span><br><span class="line">3210</span><br><span class="line">3211</span><br><span class="line">3212</span><br><span class="line">3213</span><br><span class="line">3214</span><br><span class="line">3215</span><br><span class="line">3216</span><br><span class="line">3217</span><br><span class="line">3218</span><br><span class="line">3219</span><br><span class="line">3220</span><br><span class="line">3221</span><br><span class="line">3222</span><br><span class="line">3223</span><br><span class="line">3224</span><br><span class="line">3225</span><br><span class="line">3226</span><br><span class="line">3227</span><br><span class="line">3228</span><br><span class="line">3229</span><br><span class="line">3230</span><br><span class="line">3231</span><br><span class="line">3232</span><br><span class="line">3233</span><br><span class="line">3234</span><br><span class="line">3235</span><br><span class="line">3236</span><br><span class="line">3237</span><br><span class="line">3238</span><br><span class="line">3239</span><br><span class="line">3240</span><br><span class="line">3241</span><br><span class="line">3242</span><br><span class="line">3243</span><br><span class="line">3244</span><br><span class="line">3245</span><br><span class="line">3246</span><br><span class="line">3247</span><br><span class="line">3248</span><br><span class="line">3249</span><br><span class="line">3250</span><br><span class="line">3251</span><br><span class="line">3252</span><br><span class="line">3253</span><br><span class="line">3254</span><br><span class="line">3255</span><br><span class="line">3256</span><br><span class="line">3257</span><br><span class="line">3258</span><br><span class="line">3259</span><br><span class="line">3260</span><br><span class="line">3261</span><br><span class="line">3262</span><br><span class="line">3263</span><br><span class="line">3264</span><br><span class="line">3265</span><br><span class="line">3266</span><br><span class="line">3267</span><br><span class="line">3268</span><br><span class="line">3269</span><br><span class="line">3270</span><br><span class="line">3271</span><br><span class="line">3272</span><br><span class="line">3273</span><br><span class="line">3274</span><br><span class="line">3275</span><br><span class="line">3276</span><br><span class="line">3277</span><br><span class="line">3278</span><br><span class="line">3279</span><br><span class="line">3280</span><br><span class="line">3281</span><br><span class="line">3282</span><br><span class="line">3283</span><br><span class="line">3284</span><br><span class="line">3285</span><br><span class="line">3286</span><br><span class="line">3287</span><br><span class="line">3288</span><br><span class="line">3289</span><br><span class="line">3290</span><br><span class="line">3291</span><br><span class="line">3292</span><br><span class="line">3293</span><br><span class="line">3294</span><br><span class="line">3295</span><br><span class="line">3296</span><br><span class="line">3297</span><br><span class="line">3298</span><br><span class="line">3299</span><br><span class="line">3300</span><br><span class="line">3301</span><br><span class="line">3302</span><br><span class="line">3303</span><br><span class="line">3304</span><br><span class="line">3305</span><br><span class="line">3306</span><br><span class="line">3307</span><br><span class="line">3308</span><br><span class="line">3309</span><br><span class="line">3310</span><br><span class="line">3311</span><br><span class="line">3312</span><br><span class="line">3313</span><br><span class="line">3314</span><br><span class="line">3315</span><br><span class="line">3316</span><br><span class="line">3317</span><br><span class="line">3318</span><br><span class="line">3319</span><br><span class="line">3320</span><br><span class="line">3321</span><br><span class="line">3322</span><br><span class="line">3323</span><br><span class="line">3324</span><br><span class="line">3325</span><br><span class="line">3326</span><br><span class="line">3327</span><br><span class="line">3328</span><br><span class="line">3329</span><br><span class="line">3330</span><br><span class="line">3331</span><br><span class="line">3332</span><br><span class="line">3333</span><br><span class="line">3334</span><br><span class="line">3335</span><br><span class="line">3336</span><br><span class="line">3337</span><br><span class="line">3338</span><br><span class="line">3339</span><br><span class="line">3340</span><br><span class="line">3341</span><br><span class="line">3342</span><br><span class="line">3343</span><br><span class="line">3344</span><br><span class="line">3345</span><br><span class="line">3346</span><br><span class="line">3347</span><br><span class="line">3348</span><br><span class="line">3349</span><br><span class="line">3350</span><br><span class="line">3351</span><br><span class="line">3352</span><br><span class="line">3353</span><br><span class="line">3354</span><br><span class="line">3355</span><br><span class="line">3356</span><br><span class="line">3357</span><br><span class="line">3358</span><br><span class="line">3359</span><br><span class="line">3360</span><br><span class="line">3361</span><br><span class="line">3362</span><br><span class="line">3363</span><br><span class="line">3364</span><br><span class="line">3365</span><br><span class="line">3366</span><br><span class="line">3367</span><br><span class="line">3368</span><br><span class="line">3369</span><br><span class="line">3370</span><br><span class="line">3371</span><br><span class="line">3372</span><br><span class="line">3373</span><br><span class="line">3374</span><br><span class="line">3375</span><br><span class="line">3376</span><br><span class="line">3377</span><br><span class="line">3378</span><br><span class="line">3379</span><br><span class="line">3380</span><br><span class="line">3381</span><br><span class="line">3382</span><br><span class="line">3383</span><br><span class="line">3384</span><br><span class="line">3385</span><br><span class="line">3386</span><br><span class="line">3387</span><br><span class="line">3388</span><br><span class="line">3389</span><br><span class="line">3390</span><br><span class="line">3391</span><br><span class="line">3392</span><br><span class="line">3393</span><br><span class="line">3394</span><br><span class="line">3395</span><br><span class="line">3396</span><br><span class="line">3397</span><br><span class="line">3398</span><br><span class="line">3399</span><br><span class="line">3400</span><br><span class="line">3401</span><br><span class="line">3402</span><br><span class="line">3403</span><br><span class="line">3404</span><br><span class="line">3405</span><br><span class="line">3406</span><br><span class="line">3407</span><br><span class="line">3408</span><br><span class="line">3409</span><br><span class="line">3410</span><br><span class="line">3411</span><br><span class="line">3412</span><br><span class="line">3413</span><br><span class="line">3414</span><br><span class="line">3415</span><br><span class="line">3416</span><br><span class="line">3417</span><br><span class="line">3418</span><br><span class="line">3419</span><br><span class="line">3420</span><br><span class="line">3421</span><br><span class="line">3422</span><br><span class="line">3423</span><br><span class="line">3424</span><br><span class="line">3425</span><br><span class="line">3426</span><br><span class="line">3427</span><br><span class="line">3428</span><br><span class="line">3429</span><br><span class="line">3430</span><br><span class="line">3431</span><br><span class="line">3432</span><br><span class="line">3433</span><br><span class="line">3434</span><br><span class="line">3435</span><br><span class="line">3436</span><br><span class="line">3437</span><br><span class="line">3438</span><br><span class="line">3439</span><br><span class="line">3440</span><br><span class="line">3441</span><br><span class="line">3442</span><br><span class="line">3443</span><br><span class="line">3444</span><br><span class="line">3445</span><br><span class="line">3446</span><br><span class="line">3447</span><br><span class="line">3448</span><br><span class="line">3449</span><br><span class="line">3450</span><br><span class="line">3451</span><br><span class="line">3452</span><br><span class="line">3453</span><br><span class="line">3454</span><br><span class="line">3455</span><br><span class="line">3456</span><br><span class="line">3457</span><br><span class="line">3458</span><br><span class="line">3459</span><br><span class="line">3460</span><br><span class="line">3461</span><br><span class="line">3462</span><br><span class="line">3463</span><br><span class="line">3464</span><br><span class="line">3465</span><br><span class="line">3466</span><br><span class="line">3467</span><br><span class="line">3468</span><br><span class="line">3469</span><br><span class="line">3470</span><br><span class="line">3471</span><br><span class="line">3472</span><br><span class="line">3473</span><br><span class="line">3474</span><br><span class="line">3475</span><br><span class="line">3476</span><br><span class="line">3477</span><br><span class="line">3478</span><br><span class="line">3479</span><br><span class="line">3480</span><br><span class="line">3481</span><br><span class="line">3482</span><br><span class="line">3483</span><br><span class="line">3484</span><br><span class="line">3485</span><br><span class="line">3486</span><br><span class="line">3487</span><br><span class="line">3488</span><br><span class="line">3489</span><br><span class="line">3490</span><br><span class="line">3491</span><br><span class="line">3492</span><br><span class="line">3493</span><br><span class="line">3494</span><br><span class="line">3495</span><br><span class="line">3496</span><br><span class="line">3497</span><br><span class="line">3498</span><br><span class="line">3499</span><br><span class="line">3500</span><br><span class="line">3501</span><br><span class="line">3502</span><br><span class="line">3503</span><br><span class="line">3504</span><br><span class="line">3505</span><br><span class="line">3506</span><br><span class="line">3507</span><br><span class="line">3508</span><br><span class="line">3509</span><br><span class="line">3510</span><br><span class="line">3511</span><br><span class="line">3512</span><br><span class="line">3513</span><br><span class="line">3514</span><br><span class="line">3515</span><br><span class="line">3516</span><br><span class="line">3517</span><br><span class="line">3518</span><br><span class="line">3519</span><br><span class="line">3520</span><br><span class="line">3521</span><br><span class="line">3522</span><br><span class="line">3523</span><br><span class="line">3524</span><br><span class="line">3525</span><br><span class="line">3526</span><br><span class="line">3527</span><br><span class="line">3528</span><br><span class="line">3529</span><br><span class="line">3530</span><br><span class="line">3531</span><br><span class="line">3532</span><br><span class="line">3533</span><br><span class="line">3534</span><br><span class="line">3535</span><br><span class="line">3536</span><br><span class="line">3537</span><br><span class="line">3538</span><br><span class="line">3539</span><br><span class="line">3540</span><br><span class="line">3541</span><br><span class="line">3542</span><br><span class="line">3543</span><br><span class="line">3544</span><br><span class="line">3545</span><br><span class="line">3546</span><br><span class="line">3547</span><br><span class="line">3548</span><br><span class="line">3549</span><br><span class="line">3550</span><br><span class="line">3551</span><br><span class="line">3552</span><br><span class="line">3553</span><br><span class="line">3554</span><br><span class="line">3555</span><br><span class="line">3556</span><br><span class="line">3557</span><br><span class="line">3558</span><br><span class="line">3559</span><br><span class="line">3560</span><br><span class="line">3561</span><br><span class="line">3562</span><br><span class="line">3563</span><br><span class="line">3564</span><br><span class="line">3565</span><br><span class="line">3566</span><br><span class="line">3567</span><br><span class="line">3568</span><br><span class="line">3569</span><br><span class="line">3570</span><br><span class="line">3571</span><br><span class="line">3572</span><br><span class="line">3573</span><br><span class="line">3574</span><br><span class="line">3575</span><br><span class="line">3576</span><br><span class="line">3577</span><br><span class="line">3578</span><br><span class="line">3579</span><br><span class="line">3580</span><br><span class="line">3581</span><br><span class="line">3582</span><br><span class="line">3583</span><br><span class="line">3584</span><br><span class="line">3585</span><br><span class="line">3586</span><br><span class="line">3587</span><br><span class="line">3588</span><br><span class="line">3589</span><br><span class="line">3590</span><br><span class="line">3591</span><br><span class="line">3592</span><br><span class="line">3593</span><br><span class="line">3594</span><br><span class="line">3595</span><br><span class="line">3596</span><br><span class="line">3597</span><br><span class="line">3598</span><br><span class="line">3599</span><br><span class="line">3600</span><br><span class="line">3601</span><br><span class="line">3602</span><br><span class="line">3603</span><br><span class="line">3604</span><br><span class="line">3605</span><br><span class="line">3606</span><br><span class="line">3607</span><br><span class="line">3608</span><br><span class="line">3609</span><br><span class="line">3610</span><br><span class="line">3611</span><br><span class="line">3612</span><br><span class="line">3613</span><br><span class="line">3614</span><br><span class="line">3615</span><br><span class="line">3616</span><br><span class="line">3617</span><br><span class="line">3618</span><br><span class="line">3619</span><br><span class="line">3620</span><br><span class="line">3621</span><br><span class="line">3622</span><br><span class="line">3623</span><br><span class="line">3624</span><br><span class="line">3625</span><br><span class="line">3626</span><br><span class="line">3627</span><br><span class="line">3628</span><br><span class="line">3629</span><br><span class="line">3630</span><br><span class="line">3631</span><br><span class="line">3632</span><br><span class="line">3633</span><br><span class="line">3634</span><br><span class="line">3635</span><br><span class="line">3636</span><br><span class="line">3637</span><br><span class="line">3638</span><br><span class="line">3639</span><br><span class="line">3640</span><br><span class="line">3641</span><br><span class="line">3642</span><br><span class="line">3643</span><br><span class="line">3644</span><br><span class="line">3645</span><br><span class="line">3646</span><br><span class="line">3647</span><br><span class="line">3648</span><br><span class="line">3649</span><br><span class="line">3650</span><br><span class="line">3651</span><br><span class="line">3652</span><br><span class="line">3653</span><br><span class="line">3654</span><br><span class="line">3655</span><br><span class="line">3656</span><br><span class="line">3657</span><br><span class="line">3658</span><br><span class="line">3659</span><br><span class="line">3660</span><br><span class="line">3661</span><br><span class="line">3662</span><br><span class="line">3663</span><br><span class="line">3664</span><br><span class="line">3665</span><br><span class="line">3666</span><br><span class="line">3667</span><br><span class="line">3668</span><br><span class="line">3669</span><br><span class="line">3670</span><br><span class="line">3671</span><br><span class="line">3672</span><br><span class="line">3673</span><br><span class="line">3674</span><br><span class="line">3675</span><br><span class="line">3676</span><br><span class="line">3677</span><br><span class="line">3678</span><br><span class="line">3679</span><br><span class="line">3680</span><br><span class="line">3681</span><br><span class="line">3682</span><br><span class="line">3683</span><br><span class="line">3684</span><br><span class="line">3685</span><br><span class="line">3686</span><br><span class="line">3687</span><br><span class="line">3688</span><br><span class="line">3689</span><br><span class="line">3690</span><br><span class="line">3691</span><br><span class="line">3692</span><br><span class="line">3693</span><br><span class="line">3694</span><br><span class="line">3695</span><br><span class="line">3696</span><br><span class="line">3697</span><br><span class="line">3698</span><br><span class="line">3699</span><br><span class="line">3700</span><br><span class="line">3701</span><br><span class="line">3702</span><br><span class="line">3703</span><br><span class="line">3704</span><br><span class="line">3705</span><br><span class="line">3706</span><br><span class="line">3707</span><br><span class="line">3708</span><br><span class="line">3709</span><br><span class="line">3710</span><br><span class="line">3711</span><br><span class="line">3712</span><br><span class="line">3713</span><br><span class="line">3714</span><br><span class="line">3715</span><br><span class="line">3716</span><br><span class="line">3717</span><br><span class="line">3718</span><br><span class="line">3719</span><br><span class="line">3720</span><br><span class="line">3721</span><br><span class="line">3722</span><br><span class="line">3723</span><br><span class="line">3724</span><br><span class="line">3725</span><br><span class="line">3726</span><br><span class="line">3727</span><br><span class="line">3728</span><br><span class="line">3729</span><br><span class="line">3730</span><br><span class="line">3731</span><br><span class="line">3732</span><br><span class="line">3733</span><br><span class="line">3734</span><br><span class="line">3735</span><br><span class="line">3736</span><br><span class="line">3737</span><br><span class="line">3738</span><br><span class="line">3739</span><br><span class="line">3740</span><br><span class="line">3741</span><br><span class="line">3742</span><br><span class="line">3743</span><br><span class="line">3744</span><br><span class="line">3745</span><br><span class="line">3746</span><br><span class="line">3747</span><br><span class="line">3748</span><br><span class="line">3749</span><br><span class="line">3750</span><br><span class="line">3751</span><br><span class="line">3752</span><br><span class="line">3753</span><br><span class="line">3754</span><br><span class="line">3755</span><br><span class="line">3756</span><br><span class="line">3757</span><br><span class="line">3758</span><br><span class="line">3759</span><br><span class="line">3760</span><br><span class="line">3761</span><br><span class="line">3762</span><br><span class="line">3763</span><br><span class="line">3764</span><br><span class="line">3765</span><br><span class="line">3766</span><br><span class="line">3767</span><br><span class="line">3768</span><br><span class="line">3769</span><br><span class="line">3770</span><br><span class="line">3771</span><br><span class="line">3772</span><br><span class="line">3773</span><br><span class="line">3774</span><br><span class="line">3775</span><br><span class="line">3776</span><br><span class="line">3777</span><br><span class="line">3778</span><br><span class="line">3779</span><br><span class="line">3780</span><br><span class="line">3781</span><br><span class="line">3782</span><br><span class="line">3783</span><br><span class="line">3784</span><br><span class="line">3785</span><br><span class="line">3786</span><br><span class="line">3787</span><br><span class="line">3788</span><br><span class="line">3789</span><br><span class="line">3790</span><br><span class="line">3791</span><br><span class="line">3792</span><br><span class="line">3793</span><br><span class="line">3794</span><br><span class="line">3795</span><br><span class="line">3796</span><br><span class="line">3797</span><br><span class="line">3798</span><br><span class="line">3799</span><br><span class="line">3800</span><br><span class="line">3801</span><br><span class="line">3802</span><br><span class="line">3803</span><br><span class="line">3804</span><br><span class="line">3805</span><br><span class="line">3806</span><br><span class="line">3807</span><br><span class="line">3808</span><br><span class="line">3809</span><br><span class="line">3810</span><br><span class="line">3811</span><br><span class="line">3812</span><br><span class="line">3813</span><br><span class="line">3814</span><br><span class="line">3815</span><br><span class="line">3816</span><br><span class="line">3817</span><br><span class="line">3818</span><br><span class="line">3819</span><br><span class="line">3820</span><br><span class="line">3821</span><br><span class="line">3822</span><br><span class="line">3823</span><br><span class="line">3824</span><br><span class="line">3825</span><br><span class="line">3826</span><br><span class="line">3827</span><br><span class="line">3828</span><br><span class="line">3829</span><br><span class="line">3830</span><br><span class="line">3831</span><br><span class="line">3832</span><br><span class="line">3833</span><br><span class="line">3834</span><br><span class="line">3835</span><br><span class="line">3836</span><br><span class="line">3837</span><br><span class="line">3838</span><br><span class="line">3839</span><br><span class="line">3840</span><br><span class="line">3841</span><br><span class="line">3842</span><br><span class="line">3843</span><br><span class="line">3844</span><br><span class="line">3845</span><br><span class="line">3846</span><br><span class="line">3847</span><br><span class="line">3848</span><br><span class="line">3849</span><br><span class="line">3850</span><br><span class="line">3851</span><br><span class="line">3852</span><br><span class="line">3853</span><br><span class="line">3854</span><br><span class="line">3855</span><br><span class="line">3856</span><br><span class="line">3857</span><br><span class="line">3858</span><br><span class="line">3859</span><br><span class="line">3860</span><br><span class="line">3861</span><br><span class="line">3862</span><br><span class="line">3863</span><br><span class="line">3864</span><br><span class="line">3865</span><br><span class="line">3866</span><br><span class="line">3867</span><br><span class="line">3868</span><br><span class="line">3869</span><br><span class="line">3870</span><br><span class="line">3871</span><br><span class="line">3872</span><br><span class="line">3873</span><br><span class="line">3874</span><br><span class="line">3875</span><br><span class="line">3876</span><br><span class="line">3877</span><br><span class="line">3878</span><br><span class="line">3879</span><br><span class="line">3880</span><br><span class="line">3881</span><br><span class="line">3882</span><br><span class="line">3883</span><br><span class="line">3884</span><br><span class="line">3885</span><br><span class="line">3886</span><br><span class="line">3887</span><br><span class="line">3888</span><br><span class="line">3889</span><br><span class="line">3890</span><br><span class="line">3891</span><br><span class="line">3892</span><br><span class="line">3893</span><br><span class="line">3894</span><br><span class="line">3895</span><br><span class="line">3896</span><br><span class="line">3897</span><br><span class="line">3898</span><br><span class="line">3899</span><br><span class="line">3900</span><br><span class="line">3901</span><br><span class="line">3902</span><br><span class="line">3903</span><br><span class="line">3904</span><br><span class="line">3905</span><br><span class="line">3906</span><br><span class="line">3907</span><br><span class="line">3908</span><br><span class="line">3909</span><br><span class="line">3910</span><br><span class="line">3911</span><br><span class="line">3912</span><br><span class="line">3913</span><br><span class="line">3914</span><br><span class="line">3915</span><br><span class="line">3916</span><br><span class="line">3917</span><br><span class="line">3918</span><br><span class="line">3919</span><br><span class="line">3920</span><br><span class="line">3921</span><br><span class="line">3922</span><br><span class="line">3923</span><br><span class="line">3924</span><br><span class="line">3925</span><br><span class="line">3926</span><br><span class="line">3927</span><br><span class="line">3928</span><br><span class="line">3929</span><br><span class="line">3930</span><br><span class="line">3931</span><br><span class="line">3932</span><br><span class="line">3933</span><br><span class="line">3934</span><br><span class="line">3935</span><br><span class="line">3936</span><br><span class="line">3937</span><br><span class="line">3938</span><br><span class="line">3939</span><br><span class="line">3940</span><br><span class="line">3941</span><br><span class="line">3942</span><br><span class="line">3943</span><br><span class="line">3944</span><br><span class="line">3945</span><br><span class="line">3946</span><br><span class="line">3947</span><br><span class="line">3948</span><br><span class="line">3949</span><br><span class="line">3950</span><br><span class="line">3951</span><br><span class="line">3952</span><br><span class="line">3953</span><br><span class="line">3954</span><br><span class="line">3955</span><br><span class="line">3956</span><br><span class="line">3957</span><br><span class="line">3958</span><br><span class="line">3959</span><br><span class="line">3960</span><br><span class="line">3961</span><br><span class="line">3962</span><br><span class="line">3963</span><br><span class="line">3964</span><br><span class="line">3965</span><br><span class="line">3966</span><br><span class="line">3967</span><br><span class="line">3968</span><br><span class="line">3969</span><br><span class="line">3970</span><br><span class="line">3971</span><br><span class="line">3972</span><br><span class="line">3973</span><br><span class="line">3974</span><br><span class="line">3975</span><br><span class="line">3976</span><br><span class="line">3977</span><br><span class="line">3978</span><br><span class="line">3979</span><br><span class="line">3980</span><br><span class="line">3981</span><br><span class="line">3982</span><br><span class="line">3983</span><br><span class="line">3984</span><br><span class="line">3985</span><br><span class="line">3986</span><br><span class="line">3987</span><br><span class="line">3988</span><br><span class="line">3989</span><br><span class="line">3990</span><br><span class="line">3991</span><br><span class="line">3992</span><br><span class="line">3993</span><br><span class="line">3994</span><br><span class="line">3995</span><br><span class="line">3996</span><br><span class="line">3997</span><br><span class="line">3998</span><br><span class="line">3999</span><br><span class="line">4000</span><br><span class="line">4001</span><br><span class="line">4002</span><br><span class="line">4003</span><br><span class="line">4004</span><br><span class="line">4005</span><br><span class="line">4006</span><br><span class="line">4007</span><br><span class="line">4008</span><br><span class="line">4009</span><br><span class="line">4010</span><br><span class="line">4011</span><br><span class="line">4012</span><br><span class="line">4013</span><br><span class="line">4014</span><br><span class="line">4015</span><br><span class="line">4016</span><br><span class="line">4017</span><br><span class="line">4018</span><br><span class="line">4019</span><br><span class="line">4020</span><br><span class="line">4021</span><br><span class="line">4022</span><br><span class="line">4023</span><br><span class="line">4024</span><br><span class="line">4025</span><br><span class="line">4026</span><br><span class="line">4027</span><br><span class="line">4028</span><br><span class="line">4029</span><br><span class="line">4030</span><br><span class="line">4031</span><br><span class="line">4032</span><br><span class="line">4033</span><br><span class="line">4034</span><br><span class="line">4035</span><br><span class="line">4036</span><br><span class="line">4037</span><br><span class="line">4038</span><br><span class="line">4039</span><br><span class="line">4040</span><br><span class="line">4041</span><br><span class="line">4042</span><br><span class="line">4043</span><br><span class="line">4044</span><br><span class="line">4045</span><br><span class="line">4046</span><br><span class="line">4047</span><br><span class="line">4048</span><br><span class="line">4049</span><br><span class="line">4050</span><br><span class="line">4051</span><br><span class="line">4052</span><br><span class="line">4053</span><br><span class="line">4054</span><br><span class="line">4055</span><br><span class="line">4056</span><br><span class="line">4057</span><br><span class="line">4058</span><br><span class="line">4059</span><br><span class="line">4060</span><br><span class="line">4061</span><br><span class="line">4062</span><br><span class="line">4063</span><br><span class="line">4064</span><br><span class="line">4065</span><br><span class="line">4066</span><br><span class="line">4067</span><br><span class="line">4068</span><br><span class="line">4069</span><br><span class="line">4070</span><br><span class="line">4071</span><br><span class="line">4072</span><br><span class="line">4073</span><br><span class="line">4074</span><br><span class="line">4075</span><br><span class="line">4076</span><br><span class="line">4077</span><br><span class="line">4078</span><br><span class="line">4079</span><br><span class="line">4080</span><br><span class="line">4081</span><br><span class="line">4082</span><br><span class="line">4083</span><br><span class="line">4084</span><br><span class="line">4085</span><br><span class="line">4086</span><br><span class="line">4087</span><br><span class="line">4088</span><br><span class="line">4089</span><br><span class="line">4090</span><br><span class="line">4091</span><br><span class="line">4092</span><br><span class="line">4093</span><br><span class="line">4094</span><br><span class="line">4095</span><br><span class="line">4096</span><br><span class="line">4097</span><br><span class="line">4098</span><br><span class="line">4099</span><br><span class="line">4100</span><br><span class="line">4101</span><br><span class="line">4102</span><br><span class="line">4103</span><br><span class="line">4104</span><br><span class="line">4105</span><br><span class="line">4106</span><br><span class="line">4107</span><br><span class="line">4108</span><br><span class="line">4109</span><br><span class="line">4110</span><br><span class="line">4111</span><br><span class="line">4112</span><br><span class="line">4113</span><br><span class="line">4114</span><br><span class="line">4115</span><br><span class="line">4116</span><br><span class="line">4117</span><br><span class="line">4118</span><br><span class="line">4119</span><br><span class="line">4120</span><br><span class="line">4121</span><br><span class="line">4122</span><br><span class="line">4123</span><br><span class="line">4124</span><br><span class="line">4125</span><br><span class="line">4126</span><br><span class="line">4127</span><br><span class="line">4128</span><br><span class="line">4129</span><br><span class="line">4130</span><br><span class="line">4131</span><br><span class="line">4132</span><br><span class="line">4133</span><br><span class="line">4134</span><br><span class="line">4135</span><br><span class="line">4136</span><br><span class="line">4137</span><br><span class="line">4138</span><br><span class="line">4139</span><br><span class="line">4140</span><br><span class="line">4141</span><br><span class="line">4142</span><br><span class="line">4143</span><br><span class="line">4144</span><br><span class="line">4145</span><br><span class="line">4146</span><br><span class="line">4147</span><br><span class="line">4148</span><br><span class="line">4149</span><br><span class="line">4150</span><br><span class="line">4151</span><br><span class="line">4152</span><br><span class="line">4153</span><br><span class="line">4154</span><br><span class="line">4155</span><br><span class="line">4156</span><br><span class="line">4157</span><br><span class="line">4158</span><br><span class="line">4159</span><br><span class="line">4160</span><br><span class="line">4161</span><br><span class="line">4162</span><br><span class="line">4163</span><br><span class="line">4164</span><br><span class="line">4165</span><br><span class="line">4166</span><br><span class="line">4167</span><br><span class="line">4168</span><br><span class="line">4169</span><br><span class="line">4170</span><br><span class="line">4171</span><br><span class="line">4172</span><br><span class="line">4173</span><br><span class="line">4174</span><br><span class="line">4175</span><br><span class="line">4176</span><br><span class="line">4177</span><br><span class="line">4178</span><br><span class="line">4179</span><br><span class="line">4180</span><br><span class="line">4181</span><br><span class="line">4182</span><br><span class="line">4183</span><br><span class="line">4184</span><br><span class="line">4185</span><br><span class="line">4186</span><br><span class="line">4187</span><br><span class="line">4188</span><br><span class="line">4189</span><br><span class="line">4190</span><br><span class="line">4191</span><br><span class="line">4192</span><br><span class="line">4193</span><br><span class="line">4194</span><br><span class="line">4195</span><br><span class="line">4196</span><br><span class="line">4197</span><br><span class="line">4198</span><br><span class="line">4199</span><br><span class="line">4200</span><br><span class="line">4201</span><br><span class="line">4202</span><br><span class="line">4203</span><br><span class="line">4204</span><br><span class="line">4205</span><br><span class="line">4206</span><br><span class="line">4207</span><br><span class="line">4208</span><br><span class="line">4209</span><br><span class="line">4210</span><br><span class="line">4211</span><br><span class="line">4212</span><br><span class="line">4213</span><br><span class="line">4214</span><br><span class="line">4215</span><br><span class="line">4216</span><br><span class="line">4217</span><br><span class="line">4218</span><br><span class="line">4219</span><br><span class="line">4220</span><br><span class="line">4221</span><br><span class="line">4222</span><br><span class="line">4223</span><br><span class="line">4224</span><br><span class="line">4225</span><br><span class="line">4226</span><br><span class="line">4227</span><br><span class="line">4228</span><br><span class="line">4229</span><br><span class="line">4230</span><br><span class="line">4231</span><br><span class="line">4232</span><br><span class="line">4233</span><br><span class="line">4234</span><br><span class="line">4235</span><br><span class="line">4236</span><br><span class="line">4237</span><br><span class="line">4238</span><br><span class="line">4239</span><br><span class="line">4240</span><br><span class="line">4241</span><br><span class="line">4242</span><br><span class="line">4243</span><br><span class="line">4244</span><br><span class="line">4245</span><br><span class="line">4246</span><br><span class="line">4247</span><br><span class="line">4248</span><br><span class="line">4249</span><br><span class="line">4250</span><br><span class="line">4251</span><br><span class="line">4252</span><br><span class="line">4253</span><br><span class="line">4254</span><br><span class="line">4255</span><br><span class="line">4256</span><br><span class="line">4257</span><br><span class="line">4258</span><br><span class="line">4259</span><br><span class="line">4260</span><br><span class="line">4261</span><br><span class="line">4262</span><br><span class="line">4263</span><br><span class="line">4264</span><br><span class="line">4265</span><br><span class="line">4266</span><br><span class="line">4267</span><br><span class="line">4268</span><br><span class="line">4269</span><br><span class="line">4270</span><br><span class="line">4271</span><br><span class="line">4272</span><br><span class="line">4273</span><br><span class="line">4274</span><br><span class="line">4275</span><br><span class="line">4276</span><br><span class="line">4277</span><br><span class="line">4278</span><br><span class="line">4279</span><br><span class="line">4280</span><br><span class="line">4281</span><br><span class="line">4282</span><br><span class="line">4283</span><br><span class="line">4284</span><br><span class="line">4285</span><br><span class="line">4286</span><br><span class="line">4287</span><br><span class="line">4288</span><br><span class="line">4289</span><br><span class="line">4290</span><br><span class="line">4291</span><br><span class="line">4292</span><br><span class="line">4293</span><br><span class="line">4294</span><br><span class="line">4295</span><br><span class="line">4296</span><br><span class="line">4297</span><br><span class="line">4298</span><br><span class="line">4299</span><br><span class="line">4300</span><br><span class="line">4301</span><br><span class="line">4302</span><br><span class="line">4303</span><br><span class="line">4304</span><br><span class="line">4305</span><br><span class="line">4306</span><br><span class="line">4307</span><br><span class="line">4308</span><br><span class="line">4309</span><br><span class="line">4310</span><br><span class="line">4311</span><br><span class="line">4312</span><br><span class="line">4313</span><br><span class="line">4314</span><br><span class="line">4315</span><br><span class="line">4316</span><br><span class="line">4317</span><br><span class="line">4318</span><br><span class="line">4319</span><br><span class="line">4320</span><br><span class="line">4321</span><br><span class="line">4322</span><br><span class="line">4323</span><br><span class="line">4324</span><br><span class="line">4325</span><br><span class="line">4326</span><br><span class="line">4327</span><br><span class="line">4328</span><br><span class="line">4329</span><br><span class="line">4330</span><br><span class="line">4331</span><br><span class="line">4332</span><br><span class="line">4333</span><br><span class="line">4334</span><br><span class="line">4335</span><br><span class="line">4336</span><br><span class="line">4337</span><br><span class="line">4338</span><br><span class="line">4339</span><br><span class="line">4340</span><br><span class="line">4341</span><br><span class="line">4342</span><br><span class="line">4343</span><br><span class="line">4344</span><br><span class="line">4345</span><br><span class="line">4346</span><br><span class="line">4347</span><br><span class="line">4348</span><br><span class="line">4349</span><br><span class="line">4350</span><br><span class="line">4351</span><br><span class="line">4352</span><br><span class="line">4353</span><br><span class="line">4354</span><br><span class="line">4355</span><br><span class="line">4356</span><br><span class="line">4357</span><br><span class="line">4358</span><br><span class="line">4359</span><br><span class="line">4360</span><br><span class="line">4361</span><br><span class="line">4362</span><br><span class="line">4363</span><br><span class="line">4364</span><br><span class="line">4365</span><br><span class="line">4366</span><br><span class="line">4367</span><br><span class="line">4368</span><br><span class="line">4369</span><br><span class="line">4370</span><br><span class="line">4371</span><br><span class="line">4372</span><br><span class="line">4373</span><br><span class="line">4374</span><br><span class="line">4375</span><br><span class="line">4376</span><br><span class="line">4377</span><br><span class="line">4378</span><br><span class="line">4379</span><br><span class="line">4380</span><br><span class="line">4381</span><br><span class="line">4382</span><br><span class="line">4383</span><br><span class="line">4384</span><br><span class="line">4385</span><br><span class="line">4386</span><br><span class="line">4387</span><br><span class="line">4388</span><br><span class="line">4389</span><br><span class="line">4390</span><br><span class="line">4391</span><br><span class="line">4392</span><br><span class="line">4393</span><br><span class="line">4394</span><br><span class="line">4395</span><br><span class="line">4396</span><br><span class="line">4397</span><br><span class="line">4398</span><br><span class="line">4399</span><br><span class="line">4400</span><br><span class="line">4401</span><br><span class="line">4402</span><br><span class="line">4403</span><br><span class="line">4404</span><br><span class="line">4405</span><br><span class="line">4406</span><br><span class="line">4407</span><br><span class="line">4408</span><br><span class="line">4409</span><br><span class="line">4410</span><br><span class="line">4411</span><br><span class="line">4412</span><br><span class="line">4413</span><br><span class="line">4414</span><br><span class="line">4415</span><br><span class="line">4416</span><br><span class="line">4417</span><br><span class="line">4418</span><br><span class="line">4419</span><br><span class="line">4420</span><br><span class="line">4421</span><br><span class="line">4422</span><br><span class="line">4423</span><br><span class="line">4424</span><br><span class="line">4425</span><br><span class="line">4426</span><br><span class="line">4427</span><br><span class="line">4428</span><br><span class="line">4429</span><br><span class="line">4430</span><br><span class="line">4431</span><br><span class="line">4432</span><br><span class="line">4433</span><br><span class="line">4434</span><br><span class="line">4435</span><br><span class="line">4436</span><br><span class="line">4437</span><br><span class="line">4438</span><br><span class="line">4439</span><br><span class="line">4440</span><br><span class="line">4441</span><br><span class="line">4442</span><br><span class="line">4443</span><br><span class="line">4444</span><br><span class="line">4445</span><br><span class="line">4446</span><br><span class="line">4447</span><br><span class="line">4448</span><br><span class="line">4449</span><br><span class="line">4450</span><br><span class="line">4451</span><br><span class="line">4452</span><br><span class="line">4453</span><br><span class="line">4454</span><br><span class="line">4455</span><br><span class="line">4456</span><br><span class="line">4457</span><br><span class="line">4458</span><br><span class="line">4459</span><br><span class="line">4460</span><br><span class="line">4461</span><br><span class="line">4462</span><br><span class="line">4463</span><br><span class="line">4464</span><br><span class="line">4465</span><br><span class="line">4466</span><br><span class="line">4467</span><br><span class="line">4468</span><br><span class="line">4469</span><br><span class="line">4470</span><br><span class="line">4471</span><br><span class="line">4472</span><br><span class="line">4473</span><br><span class="line">4474</span><br><span class="line">4475</span><br><span class="line">4476</span><br><span class="line">4477</span><br><span class="line">4478</span><br><span class="line">4479</span><br><span class="line">4480</span><br><span class="line">4481</span><br><span class="line">4482</span><br><span class="line">4483</span><br><span class="line">4484</span><br><span class="line">4485</span><br><span class="line">4486</span><br><span class="line">4487</span><br><span class="line">4488</span><br><span class="line">4489</span><br><span class="line">4490</span><br><span class="line">4491</span><br><span class="line">4492</span><br><span class="line">4493</span><br><span class="line">4494</span><br><span class="line">4495</span><br><span class="line">4496</span><br><span class="line">4497</span><br><span class="line">4498</span><br><span class="line">4499</span><br><span class="line">4500</span><br><span class="line">4501</span><br><span class="line">4502</span><br><span class="line">4503</span><br><span class="line">4504</span><br><span class="line">4505</span><br><span class="line">4506</span><br><span class="line">4507</span><br><span class="line">4508</span><br><span class="line">4509</span><br><span class="line">4510</span><br><span class="line">4511</span><br><span class="line">4512</span><br><span class="line">4513</span><br><span class="line">4514</span><br><span class="line">4515</span><br><span class="line">4516</span><br><span class="line">4517</span><br><span class="line">4518</span><br><span class="line">4519</span><br><span class="line">4520</span><br><span class="line">4521</span><br><span class="line">4522</span><br><span class="line">4523</span><br><span class="line">4524</span><br><span class="line">4525</span><br><span class="line">4526</span><br><span class="line">4527</span><br><span class="line">4528</span><br><span class="line">4529</span><br><span class="line">4530</span><br><span class="line">4531</span><br><span class="line">4532</span><br><span class="line">4533</span><br><span class="line">4534</span><br><span class="line">4535</span><br><span class="line">4536</span><br><span class="line">4537</span><br><span class="line">4538</span><br><span class="line">4539</span><br><span class="line">4540</span><br><span class="line">4541</span><br><span class="line">4542</span><br><span class="line">4543</span><br><span class="line">4544</span><br><span class="line">4545</span><br><span class="line">4546</span><br><span class="line">4547</span><br><span class="line">4548</span><br><span class="line">4549</span><br><span class="line">4550</span><br><span class="line">4551</span><br><span class="line">4552</span><br><span class="line">4553</span><br><span class="line">4554</span><br><span class="line">4555</span><br><span class="line">4556</span><br><span class="line">4557</span><br><span class="line">4558</span><br><span class="line">4559</span><br><span class="line">4560</span><br><span class="line">4561</span><br><span class="line">4562</span><br><span class="line">4563</span><br><span class="line">4564</span><br><span class="line">4565</span><br><span class="line">4566</span><br><span class="line">4567</span><br><span class="line">4568</span><br><span class="line">4569</span><br><span class="line">4570</span><br><span class="line">4571</span><br><span class="line">4572</span><br><span class="line">4573</span><br><span class="line">4574</span><br><span class="line">4575</span><br><span class="line">4576</span><br><span class="line">4577</span><br><span class="line">4578</span><br><span class="line">4579</span><br><span class="line">4580</span><br><span class="line">4581</span><br><span class="line">4582</span><br><span class="line">4583</span><br><span class="line">4584</span><br><span class="line">4585</span><br><span class="line">4586</span><br><span class="line">4587</span><br><span class="line">4588</span><br><span class="line">4589</span><br><span class="line">4590</span><br><span class="line">4591</span><br><span class="line">4592</span><br><span class="line">4593</span><br><span class="line">4594</span><br><span class="line">4595</span><br><span class="line">4596</span><br><span class="line">4597</span><br><span class="line">4598</span><br><span class="line">4599</span><br><span class="line">4600</span><br><span class="line">4601</span><br><span class="line">4602</span><br><span class="line">4603</span><br><span class="line">4604</span><br><span class="line">4605</span><br><span class="line">4606</span><br><span class="line">4607</span><br><span class="line">4608</span><br><span class="line">4609</span><br><span class="line">4610</span><br><span class="line">4611</span><br><span class="line">4612</span><br><span class="line">4613</span><br><span class="line">4614</span><br><span class="line">4615</span><br><span class="line">4616</span><br><span class="line">4617</span><br><span class="line">4618</span><br><span class="line">4619</span><br><span class="line">4620</span><br><span class="line">4621</span><br><span class="line">4622</span><br><span class="line">4623</span><br><span class="line">4624</span><br><span class="line">4625</span><br><span class="line">4626</span><br><span class="line">4627</span><br><span class="line">4628</span><br><span class="line">4629</span><br><span class="line">4630</span><br><span class="line">4631</span><br><span class="line">4632</span><br><span class="line">4633</span><br><span class="line">4634</span><br><span class="line">4635</span><br><span class="line">4636</span><br><span class="line">4637</span><br><span class="line">4638</span><br><span class="line">4639</span><br><span class="line">4640</span><br><span class="line">4641</span><br><span class="line">4642</span><br><span class="line">4643</span><br><span class="line">4644</span><br><span class="line">4645</span><br><span class="line">4646</span><br><span class="line">4647</span><br><span class="line">4648</span><br><span class="line">4649</span><br><span class="line">4650</span><br><span class="line">4651</span><br><span class="line">4652</span><br><span class="line">4653</span><br><span class="line">4654</span><br><span class="line">4655</span><br><span class="line">4656</span><br><span class="line">4657</span><br><span class="line">4658</span><br><span class="line">4659</span><br><span class="line">4660</span><br><span class="line">4661</span><br><span class="line">4662</span><br><span class="line">4663</span><br><span class="line">4664</span><br><span class="line">4665</span><br><span class="line">4666</span><br><span class="line">4667</span><br><span class="line">4668</span><br><span class="line">4669</span><br><span class="line">4670</span><br><span class="line">4671</span><br><span class="line">4672</span><br><span class="line">4673</span><br><span class="line">4674</span><br><span class="line">4675</span><br><span class="line">4676</span><br><span class="line">4677</span><br><span class="line">4678</span><br><span class="line">4679</span><br><span class="line">4680</span><br><span class="line">4681</span><br><span class="line">4682</span><br><span class="line">4683</span><br><span class="line">4684</span><br><span class="line">4685</span><br><span class="line">4686</span><br><span class="line">4687</span><br><span class="line">4688</span><br><span class="line">4689</span><br><span class="line">4690</span><br><span class="line">4691</span><br><span class="line">4692</span><br><span class="line">4693</span><br><span class="line">4694</span><br><span class="line">4695</span><br><span class="line">4696</span><br><span class="line">4697</span><br><span class="line">4698</span><br><span class="line">4699</span><br><span class="line">4700</span><br><span class="line">4701</span><br><span class="line">4702</span><br><span class="line">4703</span><br><span class="line">4704</span><br><span class="line">4705</span><br><span class="line">4706</span><br><span class="line">4707</span><br><span class="line">4708</span><br><span class="line">4709</span><br><span class="line">4710</span><br><span class="line">4711</span><br><span class="line">4712</span><br><span class="line">4713</span><br><span class="line">4714</span><br><span class="line">4715</span><br><span class="line">4716</span><br><span class="line">4717</span><br><span class="line">4718</span><br><span class="line">4719</span><br><span class="line">4720</span><br><span class="line">4721</span><br><span class="line">4722</span><br><span class="line">4723</span><br><span class="line">4724</span><br><span class="line">4725</span><br><span class="line">4726</span><br><span class="line">4727</span><br><span class="line">4728</span><br><span class="line">4729</span><br><span class="line">4730</span><br><span class="line">4731</span><br><span class="line">4732</span><br><span class="line">4733</span><br><span class="line">4734</span><br><span class="line">4735</span><br><span class="line">4736</span><br><span class="line">4737</span><br><span class="line">4738</span><br><span class="line">4739</span><br><span class="line">4740</span><br><span class="line">4741</span><br><span class="line">4742</span><br><span class="line">4743</span><br><span class="line">4744</span><br><span class="line">4745</span><br><span class="line">4746</span><br><span class="line">4747</span><br><span class="line">4748</span><br><span class="line">4749</span><br><span class="line">4750</span><br><span class="line">4751</span><br><span class="line">4752</span><br><span class="line">4753</span><br><span class="line">4754</span><br><span class="line">4755</span><br><span class="line">4756</span><br><span class="line">4757</span><br><span class="line">4758</span><br><span class="line">4759</span><br><span class="line">4760</span><br><span class="line">4761</span><br><span class="line">4762</span><br><span class="line">4763</span><br><span class="line">4764</span><br><span class="line">4765</span><br><span class="line">4766</span><br><span class="line">4767</span><br><span class="line">4768</span><br><span class="line">4769</span><br><span class="line">4770</span><br><span class="line">4771</span><br><span class="line">4772</span><br><span class="line">4773</span><br><span class="line">4774</span><br><span class="line">4775</span><br><span class="line">4776</span><br><span class="line">4777</span><br><span class="line">4778</span><br><span class="line">4779</span><br><span class="line">4780</span><br><span class="line">4781</span><br><span class="line">4782</span><br><span class="line">4783</span><br><span class="line">4784</span><br><span class="line">4785</span><br><span class="line">4786</span><br><span class="line">4787</span><br><span class="line">4788</span><br><span class="line">4789</span><br><span class="line">4790</span><br><span class="line">4791</span><br><span class="line">4792</span><br><span class="line">4793</span><br><span class="line">4794</span><br><span class="line">4795</span><br><span class="line">4796</span><br><span class="line">4797</span><br><span class="line">4798</span><br><span class="line">4799</span><br><span class="line">4800</span><br><span class="line">4801</span><br><span class="line">4802</span><br><span class="line">4803</span><br><span class="line">4804</span><br><span class="line">4805</span><br><span class="line">4806</span><br><span class="line">4807</span><br><span class="line">4808</span><br><span class="line">4809</span><br><span class="line">4810</span><br><span class="line">4811</span><br><span class="line">4812</span><br><span class="line">4813</span><br><span class="line">4814</span><br><span class="line">4815</span><br><span class="line">4816</span><br><span class="line">4817</span><br><span class="line">4818</span><br><span class="line">4819</span><br><span class="line">4820</span><br><span class="line">4821</span><br><span class="line">4822</span><br><span class="line">4823</span><br><span class="line">4824</span><br><span class="line">4825</span><br><span class="line">4826</span><br><span class="line">4827</span><br><span class="line">4828</span><br><span class="line">4829</span><br><span class="line">4830</span><br><span class="line">4831</span><br><span class="line">4832</span><br><span class="line">4833</span><br><span class="line">4834</span><br><span class="line">4835</span><br><span class="line">4836</span><br><span class="line">4837</span><br><span class="line">4838</span><br><span class="line">4839</span><br><span class="line">4840</span><br><span class="line">4841</span><br><span class="line">4842</span><br><span class="line">4843</span><br><span class="line">4844</span><br><span class="line">4845</span><br><span class="line">4846</span><br><span class="line">4847</span><br><span class="line">4848</span><br><span class="line">4849</span><br><span class="line">4850</span><br><span class="line">4851</span><br><span class="line">4852</span><br><span class="line">4853</span><br><span class="line">4854</span><br><span class="line">4855</span><br><span class="line">4856</span><br><span class="line">4857</span><br><span class="line">4858</span><br><span class="line">4859</span><br><span class="line">4860</span><br><span class="line">4861</span><br><span class="line">4862</span><br><span class="line">4863</span><br><span class="line">4864</span><br><span class="line">4865</span><br><span class="line">4866</span><br><span class="line">4867</span><br><span class="line">4868</span><br><span class="line">4869</span><br><span class="line">4870</span><br><span class="line">4871</span><br><span class="line">4872</span><br><span class="line">4873</span><br><span class="line">4874</span><br><span class="line">4875</span><br><span class="line">4876</span><br><span class="line">4877</span><br><span class="line">4878</span><br><span class="line">4879</span><br><span class="line">4880</span><br><span class="line">4881</span><br><span class="line">4882</span><br><span class="line">4883</span><br><span class="line">4884</span><br><span class="line">4885</span><br><span class="line">4886</span><br><span class="line">4887</span><br><span class="line">4888</span><br><span class="line">4889</span><br><span class="line">4890</span><br><span class="line">4891</span><br><span class="line">4892</span><br><span class="line">4893</span><br><span class="line">4894</span><br><span class="line">4895</span><br><span class="line">4896</span><br><span class="line">4897</span><br><span class="line">4898</span><br><span class="line">4899</span><br><span class="line">4900</span><br><span class="line">4901</span><br><span class="line">4902</span><br><span class="line">4903</span><br><span class="line">4904</span><br><span class="line">4905</span><br><span class="line">4906</span><br><span class="line">4907</span><br><span class="line">4908</span><br><span class="line">4909</span><br><span class="line">4910</span><br><span class="line">4911</span><br><span class="line">4912</span><br><span class="line">4913</span><br><span class="line">4914</span><br></pre></td><td class="code"><pre><code class="hljs javascript">[<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;北京市&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;北京市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;东城区&quot;</span>,<br>            <span class="hljs-string">&quot;西城区&quot;</span>,<br>            <span class="hljs-string">&quot;崇文区&quot;</span>,<br>            <span class="hljs-string">&quot;宣武区&quot;</span>,<br>            <span class="hljs-string">&quot;朝阳区&quot;</span>,<br>            <span class="hljs-string">&quot;丰台区&quot;</span>,<br>            <span class="hljs-string">&quot;石景山区&quot;</span>,<br>            <span class="hljs-string">&quot;海淀区&quot;</span>,<br>            <span class="hljs-string">&quot;门头沟区&quot;</span>,<br>            <span class="hljs-string">&quot;房山区&quot;</span>,<br>            <span class="hljs-string">&quot;通州区&quot;</span>,<br>            <span class="hljs-string">&quot;顺义区&quot;</span>,<br>            <span class="hljs-string">&quot;昌平区&quot;</span>,<br>            <span class="hljs-string">&quot;大兴区&quot;</span>,<br>            <span class="hljs-string">&quot;平谷区&quot;</span>,<br>            <span class="hljs-string">&quot;怀柔区&quot;</span>,<br>            <span class="hljs-string">&quot;密云县&quot;</span>,<br>            <span class="hljs-string">&quot;延庆县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;天津市&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;天津市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;和平区&quot;</span>,<br>            <span class="hljs-string">&quot;河东区&quot;</span>,<br>            <span class="hljs-string">&quot;河西区&quot;</span>,<br>            <span class="hljs-string">&quot;南开区&quot;</span>,<br>            <span class="hljs-string">&quot;河北区&quot;</span>,<br>            <span class="hljs-string">&quot;红桥区&quot;</span>,<br>            <span class="hljs-string">&quot;塘沽区&quot;</span>,<br>            <span class="hljs-string">&quot;汉沽区&quot;</span>,<br>            <span class="hljs-string">&quot;大港区&quot;</span>,<br>            <span class="hljs-string">&quot;东丽区&quot;</span>,<br>            <span class="hljs-string">&quot;西青区&quot;</span>,<br>            <span class="hljs-string">&quot;津南区&quot;</span>,<br>            <span class="hljs-string">&quot;北辰区&quot;</span>,<br>            <span class="hljs-string">&quot;武清区&quot;</span>,<br>            <span class="hljs-string">&quot;宝坻区&quot;</span>,<br>            <span class="hljs-string">&quot;宁河县&quot;</span>,<br>            <span class="hljs-string">&quot;静海县&quot;</span>,<br>            <span class="hljs-string">&quot;蓟  县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;河北省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;石家庄市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;长安区&quot;</span>,<br>            <span class="hljs-string">&quot;桥东区&quot;</span>,<br>            <span class="hljs-string">&quot;桥西区&quot;</span>,<br>            <span class="hljs-string">&quot;新华区&quot;</span>,<br>            <span class="hljs-string">&quot;郊  区&quot;</span>,<br>            <span class="hljs-string">&quot;井陉矿区&quot;</span>,<br>            <span class="hljs-string">&quot;井陉县&quot;</span>,<br>            <span class="hljs-string">&quot;正定县&quot;</span>,<br>            <span class="hljs-string">&quot;栾城县&quot;</span>,<br>            <span class="hljs-string">&quot;行唐县&quot;</span>,<br>            <span class="hljs-string">&quot;灵寿县&quot;</span>,<br>            <span class="hljs-string">&quot;高邑县&quot;</span>,<br>            <span class="hljs-string">&quot;深泽县&quot;</span>,<br>            <span class="hljs-string">&quot;赞皇县&quot;</span>,<br>            <span class="hljs-string">&quot;无极县&quot;</span>,<br>            <span class="hljs-string">&quot;平山县&quot;</span>,<br>            <span class="hljs-string">&quot;元氏县&quot;</span>,<br>            <span class="hljs-string">&quot;赵  县&quot;</span>,<br>            <span class="hljs-string">&quot;辛集市&quot;</span>,<br>            <span class="hljs-string">&quot;藁&quot;</span>,<br>            <span class="hljs-string">&quot;晋州市&quot;</span>,<br>            <span class="hljs-string">&quot;新乐市&quot;</span>,<br>            <span class="hljs-string">&quot;鹿泉市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;唐山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;路南区&quot;</span>,<br>            <span class="hljs-string">&quot;路北区&quot;</span>,<br>            <span class="hljs-string">&quot;古冶区&quot;</span>,<br>            <span class="hljs-string">&quot;开平区&quot;</span>,<br>            <span class="hljs-string">&quot;新  区&quot;</span>,<br>            <span class="hljs-string">&quot;丰润县&quot;</span>,<br>            <span class="hljs-string">&quot;滦  县&quot;</span>,<br>            <span class="hljs-string">&quot;滦南县&quot;</span>,<br>            <span class="hljs-string">&quot;乐亭县&quot;</span>,<br>            <span class="hljs-string">&quot;迁西县&quot;</span>,<br>            <span class="hljs-string">&quot;玉田县&quot;</span>,<br>            <span class="hljs-string">&quot;唐海县&quot;</span>,<br>            <span class="hljs-string">&quot;遵化市&quot;</span>,<br>            <span class="hljs-string">&quot;丰南市&quot;</span>,<br>            <span class="hljs-string">&quot;迁安市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;秦皇岛市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;海港区&quot;</span>,<br>            <span class="hljs-string">&quot;山海关区&quot;</span>,<br>            <span class="hljs-string">&quot;北戴河区&quot;</span>,<br>            <span class="hljs-string">&quot;青龙满族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;昌黎县&quot;</span>,<br>            <span class="hljs-string">&quot;抚宁县&quot;</span>,<br>            <span class="hljs-string">&quot;卢龙县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;邯郸市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;邯山区&quot;</span>,<br>            <span class="hljs-string">&quot;丛台区&quot;</span>,<br>            <span class="hljs-string">&quot;复兴区&quot;</span>,<br>            <span class="hljs-string">&quot;峰峰矿区&quot;</span>,<br>            <span class="hljs-string">&quot;邯郸县&quot;</span>,<br>            <span class="hljs-string">&quot;临漳县&quot;</span>,<br>            <span class="hljs-string">&quot;成安县&quot;</span>,<br>            <span class="hljs-string">&quot;大名县&quot;</span>,<br>            <span class="hljs-string">&quot;涉  县&quot;</span>,<br>            <span class="hljs-string">&quot;磁  县&quot;</span>,<br>            <span class="hljs-string">&quot;肥乡县&quot;</span>,<br>            <span class="hljs-string">&quot;永年县&quot;</span>,<br>            <span class="hljs-string">&quot;邱  县&quot;</span>,<br>            <span class="hljs-string">&quot;鸡泽县&quot;</span>,<br>            <span class="hljs-string">&quot;广平县&quot;</span>,<br>            <span class="hljs-string">&quot;馆陶县&quot;</span>,<br>            <span class="hljs-string">&quot;魏  县&quot;</span>,<br>            <span class="hljs-string">&quot;曲周县&quot;</span>,<br>            <span class="hljs-string">&quot;武安市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;邢台市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;桥东区&quot;</span>,<br>            <span class="hljs-string">&quot;桥西区&quot;</span>,<br>            <span class="hljs-string">&quot;邢台县&quot;</span>,<br>            <span class="hljs-string">&quot;临城县&quot;</span>,<br>            <span class="hljs-string">&quot;内丘县&quot;</span>,<br>            <span class="hljs-string">&quot;柏乡县&quot;</span>,<br>            <span class="hljs-string">&quot;隆尧县&quot;</span>,<br>            <span class="hljs-string">&quot;任  县&quot;</span>,<br>            <span class="hljs-string">&quot;南和县&quot;</span>,<br>            <span class="hljs-string">&quot;宁晋县&quot;</span>,<br>            <span class="hljs-string">&quot;巨鹿县&quot;</span>,<br>            <span class="hljs-string">&quot;新河县&quot;</span>,<br>            <span class="hljs-string">&quot;广宗县&quot;</span>,<br>            <span class="hljs-string">&quot;平乡县&quot;</span>,<br>            <span class="hljs-string">&quot;威  县&quot;</span>,<br>            <span class="hljs-string">&quot;清河县&quot;</span>,<br>            <span class="hljs-string">&quot;临西县&quot;</span>,<br>            <span class="hljs-string">&quot;南宫市&quot;</span>,<br>            <span class="hljs-string">&quot;沙河市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;保定市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;新市区&quot;</span>,<br>            <span class="hljs-string">&quot;北市区&quot;</span>,<br>            <span class="hljs-string">&quot;南市区&quot;</span>,<br>            <span class="hljs-string">&quot;满城县&quot;</span>,<br>            <span class="hljs-string">&quot;清苑县&quot;</span>,<br>            <span class="hljs-string">&quot;涞水县&quot;</span>,<br>            <span class="hljs-string">&quot;阜平县&quot;</span>,<br>            <span class="hljs-string">&quot;徐水县&quot;</span>,<br>            <span class="hljs-string">&quot;定兴县&quot;</span>,<br>            <span class="hljs-string">&quot;唐  县&quot;</span>,<br>            <span class="hljs-string">&quot;高阳县&quot;</span>,<br>            <span class="hljs-string">&quot;容城县&quot;</span>,<br>            <span class="hljs-string">&quot;涞源县&quot;</span>,<br>            <span class="hljs-string">&quot;望都县&quot;</span>,<br>            <span class="hljs-string">&quot;安新县&quot;</span>,<br>            <span class="hljs-string">&quot;易  县&quot;</span>,<br>            <span class="hljs-string">&quot;曲阳县&quot;</span>,<br>            <span class="hljs-string">&quot;蠡  县&quot;</span>,<br>            <span class="hljs-string">&quot;顺平县&quot;</span>,<br>            <span class="hljs-string">&quot;博野&quot;</span>,<br>            <span class="hljs-string">&quot;雄县&quot;</span>,<br>            <span class="hljs-string">&quot;涿州市&quot;</span>,<br>            <span class="hljs-string">&quot;定州市&quot;</span>,<br>            <span class="hljs-string">&quot;安国市&quot;</span>,<br>            <span class="hljs-string">&quot;高碑店市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;张家口&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;桥东区&quot;</span>,<br>            <span class="hljs-string">&quot;桥西区&quot;</span>,<br>            <span class="hljs-string">&quot;宣化区&quot;</span>,<br>            <span class="hljs-string">&quot;下花园区&quot;</span>,<br>            <span class="hljs-string">&quot;宣化县&quot;</span>,<br>            <span class="hljs-string">&quot;张北县&quot;</span>,<br>            <span class="hljs-string">&quot;康保县&quot;</span>,<br>            <span class="hljs-string">&quot;沽源县&quot;</span>,<br>            <span class="hljs-string">&quot;尚义县&quot;</span>,<br>            <span class="hljs-string">&quot;蔚  县&quot;</span>,<br>            <span class="hljs-string">&quot;阳原县&quot;</span>,<br>            <span class="hljs-string">&quot;怀安县&quot;</span>,<br>            <span class="hljs-string">&quot;万全县&quot;</span>,<br>            <span class="hljs-string">&quot;怀来县&quot;</span>,<br>            <span class="hljs-string">&quot;涿鹿县&quot;</span>,<br>            <span class="hljs-string">&quot;赤城县&quot;</span>,<br>            <span class="hljs-string">&quot;崇礼县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;承德市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;双桥区&quot;</span>,<br>            <span class="hljs-string">&quot;双滦区&quot;</span>,<br>            <span class="hljs-string">&quot;鹰手营子矿区&quot;</span>,<br>            <span class="hljs-string">&quot;承德县&quot;</span>,<br>            <span class="hljs-string">&quot;兴隆县&quot;</span>,<br>            <span class="hljs-string">&quot;平泉县&quot;</span>,<br>            <span class="hljs-string">&quot;滦平县&quot;</span>,<br>            <span class="hljs-string">&quot;隆化县&quot;</span>,<br>            <span class="hljs-string">&quot;丰宁满族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;宽城满族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;围场满族蒙古族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;沧州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;新华区&quot;</span>,<br>            <span class="hljs-string">&quot;运河区&quot;</span>,<br>            <span class="hljs-string">&quot;沧  县&quot;</span>,<br>            <span class="hljs-string">&quot;青  县&quot;</span>,<br>            <span class="hljs-string">&quot;东光县&quot;</span>,<br>            <span class="hljs-string">&quot;海兴县&quot;</span>,<br>            <span class="hljs-string">&quot;盐山县&quot;</span>,<br>            <span class="hljs-string">&quot;肃宁县&quot;</span>,<br>            <span class="hljs-string">&quot;南皮县&quot;</span>,<br>            <span class="hljs-string">&quot;吴桥县&quot;</span>,<br>            <span class="hljs-string">&quot;献  县&quot;</span>,<br>            <span class="hljs-string">&quot;孟村回族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;泊头市&quot;</span>,<br>            <span class="hljs-string">&quot;任丘市&quot;</span>,<br>            <span class="hljs-string">&quot;黄骅市&quot;</span>,<br>            <span class="hljs-string">&quot;河间市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;廊坊市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;安次区&quot;</span>,<br>            <span class="hljs-string">&quot;固安县&quot;</span>,<br>            <span class="hljs-string">&quot;永清县&quot;</span>,<br>            <span class="hljs-string">&quot;香河县&quot;</span>,<br>            <span class="hljs-string">&quot;大城县&quot;</span>,<br>            <span class="hljs-string">&quot;文安县&quot;</span>,<br>            <span class="hljs-string">&quot;大厂回族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;霸州市&quot;</span>,<br>            <span class="hljs-string">&quot;三河市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;衡水市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;桃城区&quot;</span>,<br>            <span class="hljs-string">&quot;枣强县&quot;</span>,<br>            <span class="hljs-string">&quot;武邑县&quot;</span>,<br>            <span class="hljs-string">&quot;武强县&quot;</span>,<br>            <span class="hljs-string">&quot;饶阳县&quot;</span>,<br>            <span class="hljs-string">&quot;安平县&quot;</span>,<br>            <span class="hljs-string">&quot;故城县&quot;</span>,<br>            <span class="hljs-string">&quot;景  县&quot;</span>,<br>            <span class="hljs-string">&quot;阜城县&quot;</span>,<br>            <span class="hljs-string">&quot;冀州市&quot;</span>,<br>            <span class="hljs-string">&quot;深州市&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;山西省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;太原市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;小店区&quot;</span>,<br>            <span class="hljs-string">&quot;迎泽区&quot;</span>,<br>            <span class="hljs-string">&quot;杏花岭区&quot;</span>,<br>            <span class="hljs-string">&quot;尖草坪区&quot;</span>,<br>            <span class="hljs-string">&quot;万柏林区&quot;</span>,<br>            <span class="hljs-string">&quot;晋源区&quot;</span>,<br>            <span class="hljs-string">&quot;清徐县&quot;</span>,<br>            <span class="hljs-string">&quot;阳曲县&quot;</span>,<br>            <span class="hljs-string">&quot;娄烦县&quot;</span>,<br>            <span class="hljs-string">&quot;古交市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;大同市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;城  区&quot;</span>,<br>            <span class="hljs-string">&quot;矿  区&quot;</span>,<br>            <span class="hljs-string">&quot;南郊区&quot;</span>,<br>            <span class="hljs-string">&quot;新荣区&quot;</span>,<br>            <span class="hljs-string">&quot;阳高县&quot;</span>,<br>            <span class="hljs-string">&quot;天镇县&quot;</span>,<br>            <span class="hljs-string">&quot;广灵县&quot;</span>,<br>            <span class="hljs-string">&quot;灵丘县&quot;</span>,<br>            <span class="hljs-string">&quot;浑源县&quot;</span>,<br>            <span class="hljs-string">&quot;左云县&quot;</span>,<br>            <span class="hljs-string">&quot;大同县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;阳泉市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;城  区&quot;</span>,<br>            <span class="hljs-string">&quot;矿  区&quot;</span>,<br>            <span class="hljs-string">&quot;郊  区&quot;</span>,<br>            <span class="hljs-string">&quot;平定县&quot;</span>,<br>            <span class="hljs-string">&quot;盂  县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;长治市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;城  区&quot;</span>,<br>            <span class="hljs-string">&quot;郊  区&quot;</span>,<br>            <span class="hljs-string">&quot;长治县&quot;</span>,<br>            <span class="hljs-string">&quot;襄垣县&quot;</span>,<br>            <span class="hljs-string">&quot;屯留县&quot;</span>,<br>            <span class="hljs-string">&quot;平顺县&quot;</span>,<br>            <span class="hljs-string">&quot;黎城县&quot;</span>,<br>            <span class="hljs-string">&quot;壶关县&quot;</span>,<br>            <span class="hljs-string">&quot;长子县&quot;</span>,<br>            <span class="hljs-string">&quot;武乡县&quot;</span>,<br>            <span class="hljs-string">&quot;沁  县&quot;</span>,<br>            <span class="hljs-string">&quot;沁源县&quot;</span>,<br>            <span class="hljs-string">&quot;潞城市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;晋城市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;城  区&quot;</span>,<br>            <span class="hljs-string">&quot;沁水县&quot;</span>,<br>            <span class="hljs-string">&quot;阳城县&quot;</span>,<br>            <span class="hljs-string">&quot;陵川县&quot;</span>,<br>            <span class="hljs-string">&quot;泽州县&quot;</span>,<br>            <span class="hljs-string">&quot;高平市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;朔州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;朔城区&quot;</span>,<br>            <span class="hljs-string">&quot;平鲁区&quot;</span>,<br>            <span class="hljs-string">&quot;山阴县&quot;</span>,<br>            <span class="hljs-string">&quot;应  县&quot;</span>,<br>            <span class="hljs-string">&quot;右玉县&quot;</span>,<br>            <span class="hljs-string">&quot;怀仁县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;忻州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;忻府区&quot;</span>,<br>            <span class="hljs-string">&quot;原平市&quot;</span>,<br>            <span class="hljs-string">&quot;定襄县&quot;</span>,<br>            <span class="hljs-string">&quot;五台县&quot;</span>,<br>            <span class="hljs-string">&quot;代  县&quot;</span>,<br>            <span class="hljs-string">&quot;繁峙县&quot;</span>,<br>            <span class="hljs-string">&quot;宁武县&quot;</span>,<br>            <span class="hljs-string">&quot;静乐县&quot;</span>,<br>            <span class="hljs-string">&quot;神池县&quot;</span>,<br>            <span class="hljs-string">&quot;五寨县&quot;</span>,<br>            <span class="hljs-string">&quot;岢岚县&quot;</span>,<br>            <span class="hljs-string">&quot;河曲县&quot;</span>,<br>            <span class="hljs-string">&quot;保德县&quot;</span>,<br>            <span class="hljs-string">&quot;偏关县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;吕梁市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;离石区&quot;</span>,<br>            <span class="hljs-string">&quot;孝义市&quot;</span>,<br>            <span class="hljs-string">&quot;汾阳市&quot;</span>,<br>            <span class="hljs-string">&quot;文水县&quot;</span>,<br>            <span class="hljs-string">&quot;交城县&quot;</span>,<br>            <span class="hljs-string">&quot;兴  县&quot;</span>,<br>            <span class="hljs-string">&quot;临  县&quot;</span>,<br>            <span class="hljs-string">&quot;柳林县&quot;</span>,<br>            <span class="hljs-string">&quot;石楼县&quot;</span>,<br>            <span class="hljs-string">&quot;岚  县&quot;</span>,<br>            <span class="hljs-string">&quot;方山县&quot;</span>,<br>            <span class="hljs-string">&quot;中阳县&quot;</span>,<br>            <span class="hljs-string">&quot;交口县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;晋中市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;榆次市&quot;</span>,<br>            <span class="hljs-string">&quot;介休市&quot;</span>,<br>            <span class="hljs-string">&quot;榆社县&quot;</span>,<br>            <span class="hljs-string">&quot;左权县&quot;</span>,<br>            <span class="hljs-string">&quot;和顺县&quot;</span>,<br>            <span class="hljs-string">&quot;昔阳县&quot;</span>,<br>            <span class="hljs-string">&quot;寿阳县&quot;</span>,<br>            <span class="hljs-string">&quot;太谷县&quot;</span>,<br>            <span class="hljs-string">&quot;祁  县&quot;</span>,<br>            <span class="hljs-string">&quot;平遥县&quot;</span>,<br>            <span class="hljs-string">&quot;灵石县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;临汾市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;临汾市&quot;</span>,<br>            <span class="hljs-string">&quot;侯马市&quot;</span>,<br>            <span class="hljs-string">&quot;霍州市&quot;</span>,<br>            <span class="hljs-string">&quot;曲沃县&quot;</span>,<br>            <span class="hljs-string">&quot;翼城县&quot;</span>,<br>            <span class="hljs-string">&quot;襄汾县&quot;</span>,<br>            <span class="hljs-string">&quot;洪洞县&quot;</span>,<br>            <span class="hljs-string">&quot;古  县&quot;</span>,<br>            <span class="hljs-string">&quot;安泽县&quot;</span>,<br>            <span class="hljs-string">&quot;浮山县&quot;</span>,<br>            <span class="hljs-string">&quot;吉  县&quot;</span>,<br>            <span class="hljs-string">&quot;乡宁县&quot;</span>,<br>            <span class="hljs-string">&quot;蒲  县&quot;</span>,<br>            <span class="hljs-string">&quot;大宁县&quot;</span>,<br>            <span class="hljs-string">&quot;永和县&quot;</span>,<br>            <span class="hljs-string">&quot;隰  县&quot;</span>,<br>            <span class="hljs-string">&quot;汾西县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;运城市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;运城市&quot;</span>,<br>            <span class="hljs-string">&quot;永济市&quot;</span>,<br>            <span class="hljs-string">&quot;河津市&quot;</span>,<br>            <span class="hljs-string">&quot;芮城县&quot;</span>,<br>            <span class="hljs-string">&quot;临猗县&quot;</span>,<br>            <span class="hljs-string">&quot;万荣县&quot;</span>,<br>            <span class="hljs-string">&quot;新绛县&quot;</span>,<br>            <span class="hljs-string">&quot;稷山县&quot;</span>,<br>            <span class="hljs-string">&quot;闻喜县&quot;</span>,<br>            <span class="hljs-string">&quot;夏  县&quot;</span>,<br>            <span class="hljs-string">&quot;绛  县&quot;</span>,<br>            <span class="hljs-string">&quot;平陆县&quot;</span>,<br>            <span class="hljs-string">&quot;垣曲县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;内蒙古&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;呼和浩特市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;新城区&quot;</span>,<br>            <span class="hljs-string">&quot;回民区&quot;</span>,<br>            <span class="hljs-string">&quot;玉泉区&quot;</span>,<br>            <span class="hljs-string">&quot;郊  区&quot;</span>,<br>            <span class="hljs-string">&quot;土默特左旗&quot;</span>,<br>            <span class="hljs-string">&quot;托克托县&quot;</span>,<br>            <span class="hljs-string">&quot;和林格尔县&quot;</span>,<br>            <span class="hljs-string">&quot;清水河县&quot;</span>,<br>            <span class="hljs-string">&quot;武川县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;包头市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;东河区&quot;</span>,<br>            <span class="hljs-string">&quot;昆都伦区&quot;</span>,<br>            <span class="hljs-string">&quot;青山区&quot;</span>,<br>            <span class="hljs-string">&quot;石拐矿区&quot;</span>,<br>            <span class="hljs-string">&quot;白云矿区&quot;</span>,<br>            <span class="hljs-string">&quot;郊  区&quot;</span>,<br>            <span class="hljs-string">&quot;土默特右旗&quot;</span>,<br>            <span class="hljs-string">&quot;固阳县&quot;</span>,<br>            <span class="hljs-string">&quot;达尔罕茂明安联合旗&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;乌海市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;海勃湾区&quot;</span>,<br>            <span class="hljs-string">&quot;海南区&quot;</span>,<br>            <span class="hljs-string">&quot;乌达区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;赤峰市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;红山区&quot;</span>,<br>            <span class="hljs-string">&quot;元宝山区&quot;</span>,<br>            <span class="hljs-string">&quot;松山区&quot;</span>,<br>            <span class="hljs-string">&quot;阿鲁科尔沁旗&quot;</span>,<br>            <span class="hljs-string">&quot;巴林左旗&quot;</span>,<br>            <span class="hljs-string">&quot;巴林右旗&quot;</span>,<br>            <span class="hljs-string">&quot;林西县&quot;</span>,<br>            <span class="hljs-string">&quot;克什克腾旗&quot;</span>,<br>            <span class="hljs-string">&quot;翁牛特旗&quot;</span>,<br>            <span class="hljs-string">&quot;喀喇沁旗&quot;</span>,<br>            <span class="hljs-string">&quot;宁城县&quot;</span>,<br>            <span class="hljs-string">&quot;敖汉旗&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;呼伦贝尔市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;海拉尔市&quot;</span>,<br>            <span class="hljs-string">&quot;满洲里市&quot;</span>,<br>            <span class="hljs-string">&quot;扎兰屯市&quot;</span>,<br>            <span class="hljs-string">&quot;牙克石市&quot;</span>,<br>            <span class="hljs-string">&quot;根河市&quot;</span>,<br>            <span class="hljs-string">&quot;额尔古纳市&quot;</span>,<br>            <span class="hljs-string">&quot;阿荣旗&quot;</span>,<br>            <span class="hljs-string">&quot;莫力达瓦达斡尔族自治旗&quot;</span>,<br>            <span class="hljs-string">&quot;鄂伦春自治旗&quot;</span>,<br>            <span class="hljs-string">&quot;鄂温克族自治旗&quot;</span>,<br>            <span class="hljs-string">&quot;新巴尔虎右旗&quot;</span>,<br>            <span class="hljs-string">&quot;新巴尔虎左旗&quot;</span>,<br>            <span class="hljs-string">&quot;陈巴尔虎旗&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;兴安盟&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;乌兰浩特市&quot;</span>,<br>            <span class="hljs-string">&quot;阿尔山市&quot;</span>,<br>            <span class="hljs-string">&quot;科尔沁右翼前旗&quot;</span>,<br>            <span class="hljs-string">&quot;科尔沁右翼中旗&quot;</span>,<br>            <span class="hljs-string">&quot;扎赉特旗&quot;</span>,<br>            <span class="hljs-string">&quot;突泉县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;通辽市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;科尔沁区&quot;</span>,<br>            <span class="hljs-string">&quot;霍林郭勒市&quot;</span>,<br>            <span class="hljs-string">&quot;科尔沁左翼中旗&quot;</span>,<br>            <span class="hljs-string">&quot;科尔沁左翼后旗&quot;</span>,<br>            <span class="hljs-string">&quot;开鲁县&quot;</span>,<br>            <span class="hljs-string">&quot;库伦旗&quot;</span>,<br>            <span class="hljs-string">&quot;奈曼旗&quot;</span>,<br>            <span class="hljs-string">&quot;扎鲁特旗&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;锡林郭勒盟&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;二连浩特市&quot;</span>,<br>            <span class="hljs-string">&quot;锡林浩特市&quot;</span>,<br>            <span class="hljs-string">&quot;阿巴嘎旗&quot;</span>,<br>            <span class="hljs-string">&quot;苏尼特左旗&quot;</span>,<br>            <span class="hljs-string">&quot;苏尼特右旗&quot;</span>,<br>            <span class="hljs-string">&quot;东乌珠穆沁旗&quot;</span>,<br>            <span class="hljs-string">&quot;西乌珠穆沁旗&quot;</span>,<br>            <span class="hljs-string">&quot;太仆寺旗&quot;</span>,<br>            <span class="hljs-string">&quot;镶黄旗&quot;</span>,<br>            <span class="hljs-string">&quot;正镶白旗&quot;</span>,<br>            <span class="hljs-string">&quot;正蓝旗&quot;</span>,<br>            <span class="hljs-string">&quot;多伦县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;乌兰察布盟&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;集宁市&quot;</span>,<br>            <span class="hljs-string">&quot;丰镇市&quot;</span>,<br>            <span class="hljs-string">&quot;卓资县&quot;</span>,<br>            <span class="hljs-string">&quot;化德县&quot;</span>,<br>            <span class="hljs-string">&quot;商都县&quot;</span>,<br>            <span class="hljs-string">&quot;兴和县&quot;</span>,<br>            <span class="hljs-string">&quot;凉城县&quot;</span>,<br>            <span class="hljs-string">&quot;察哈尔右翼前旗&quot;</span>,<br>            <span class="hljs-string">&quot;察哈尔右翼中旗&quot;</span>,<br>            <span class="hljs-string">&quot;察哈尔右翼后旗&quot;</span>,<br>            <span class="hljs-string">&quot;四子王旗&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;伊克昭盟&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;东胜市&quot;</span>,<br>            <span class="hljs-string">&quot;达拉特旗&quot;</span>,<br>            <span class="hljs-string">&quot;准格尔旗&quot;</span>,<br>            <span class="hljs-string">&quot;鄂托克前旗&quot;</span>,<br>            <span class="hljs-string">&quot;鄂托克旗&quot;</span>,<br>            <span class="hljs-string">&quot;杭锦旗&quot;</span>,<br>            <span class="hljs-string">&quot;乌审旗&quot;</span>,<br>            <span class="hljs-string">&quot;伊金霍洛旗&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;巴彦淖尔盟&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;临河市&quot;</span>,<br>            <span class="hljs-string">&quot;五原县&quot;</span>,<br>            <span class="hljs-string">&quot;磴口县&quot;</span>,<br>            <span class="hljs-string">&quot;乌拉特前旗&quot;</span>,<br>            <span class="hljs-string">&quot;乌拉特中旗&quot;</span>,<br>            <span class="hljs-string">&quot;乌拉特后旗&quot;</span>,<br>            <span class="hljs-string">&quot;杭锦后旗&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;阿拉善盟&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;阿拉善左旗&quot;</span>,<br>            <span class="hljs-string">&quot;阿拉善右旗&quot;</span>,<br>            <span class="hljs-string">&quot;额济纳旗&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;辽宁省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;沈阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;沈河区&quot;</span>,<br>            <span class="hljs-string">&quot;皇姑区&quot;</span>,<br>            <span class="hljs-string">&quot;和平区&quot;</span>,<br>            <span class="hljs-string">&quot;大东区&quot;</span>,<br>            <span class="hljs-string">&quot;铁西区&quot;</span>,<br>            <span class="hljs-string">&quot;苏家屯区&quot;</span>,<br>            <span class="hljs-string">&quot;东陵区&quot;</span>,<br>            <span class="hljs-string">&quot;于洪区&quot;</span>,<br>            <span class="hljs-string">&quot;新民市&quot;</span>,<br>            <span class="hljs-string">&quot;法库县&quot;</span>,<br>            <span class="hljs-string">&quot;辽中县&quot;</span>,<br>            <span class="hljs-string">&quot;康平县&quot;</span>,<br>            <span class="hljs-string">&quot;新城子区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;大连市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;西岗区&quot;</span>,<br>            <span class="hljs-string">&quot;中山区&quot;</span>,<br>            <span class="hljs-string">&quot;沙河口区&quot;</span>,<br>            <span class="hljs-string">&quot;甘井子区&quot;</span>,<br>            <span class="hljs-string">&quot;旅顺口区&quot;</span>,<br>            <span class="hljs-string">&quot;金州区&quot;</span>,<br>            <span class="hljs-string">&quot;瓦房店市&quot;</span>,<br>            <span class="hljs-string">&quot;普兰店市&quot;</span>,<br>            <span class="hljs-string">&quot;庄河市&quot;</span>,<br>            <span class="hljs-string">&quot;长海县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;鞍山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;铁东区&quot;</span>,<br>            <span class="hljs-string">&quot;铁西区&quot;</span>,<br>            <span class="hljs-string">&quot;立山区&quot;</span>,<br>            <span class="hljs-string">&quot;千山区&quot;</span>,<br>            <span class="hljs-string">&quot;海城市&quot;</span>,<br>            <span class="hljs-string">&quot;台安县&quot;</span>,<br>            <span class="hljs-string">&quot;岫岩满族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;抚顺市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;顺城区&quot;</span>,<br>            <span class="hljs-string">&quot;新抚区&quot;</span>,<br>            <span class="hljs-string">&quot;东洲区&quot;</span>,<br>            <span class="hljs-string">&quot;望花区&quot;</span>,<br>            <span class="hljs-string">&quot;抚顺县&quot;</span>,<br>            <span class="hljs-string">&quot;清原满族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;新宾满族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;本溪市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;平山区&quot;</span>,<br>            <span class="hljs-string">&quot;明山区&quot;</span>,<br>            <span class="hljs-string">&quot;溪湖区&quot;</span>,<br>            <span class="hljs-string">&quot;南芬区&quot;</span>,<br>            <span class="hljs-string">&quot;本溪满族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;桓仁满族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;丹东市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;振兴区&quot;</span>,<br>            <span class="hljs-string">&quot;元宝区&quot;</span>,<br>            <span class="hljs-string">&quot;振安区&quot;</span>,<br>            <span class="hljs-string">&quot;东港市&quot;</span>,<br>            <span class="hljs-string">&quot;凤城市&quot;</span>,<br>            <span class="hljs-string">&quot;宽甸满族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;锦州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;太和区&quot;</span>,<br>            <span class="hljs-string">&quot;古塔区&quot;</span>,<br>            <span class="hljs-string">&quot;凌河区&quot;</span>,<br>            <span class="hljs-string">&quot;凌海市&quot;</span>,<br>            <span class="hljs-string">&quot;黑山县&quot;</span>,<br>            <span class="hljs-string">&quot;义县&quot;</span>,<br>            <span class="hljs-string">&quot;北宁市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;营口市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;站前区&quot;</span>,<br>            <span class="hljs-string">&quot;西市区&quot;</span>,<br>            <span class="hljs-string">&quot;鲅鱼圈区&quot;</span>,<br>            <span class="hljs-string">&quot;老边区&quot;</span>,<br>            <span class="hljs-string">&quot;大石桥市&quot;</span>,<br>            <span class="hljs-string">&quot;盖州市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;阜新市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;海州区&quot;</span>,<br>            <span class="hljs-string">&quot;新邱区&quot;</span>,<br>            <span class="hljs-string">&quot;太平区&quot;</span>,<br>            <span class="hljs-string">&quot;清河门区&quot;</span>,<br>            <span class="hljs-string">&quot;细河区&quot;</span>,<br>            <span class="hljs-string">&quot;彰武县&quot;</span>,<br>            <span class="hljs-string">&quot;阜新蒙古族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;辽阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;白塔区&quot;</span>,<br>            <span class="hljs-string">&quot;文圣区&quot;</span>,<br>            <span class="hljs-string">&quot;宏伟区&quot;</span>,<br>            <span class="hljs-string">&quot;太子河区&quot;</span>,<br>            <span class="hljs-string">&quot;弓长岭区&quot;</span>,<br>            <span class="hljs-string">&quot;灯塔市&quot;</span>,<br>            <span class="hljs-string">&quot;辽阳县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;盘锦&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;双台子区&quot;</span>,<br>            <span class="hljs-string">&quot;兴隆台区&quot;</span>,<br>            <span class="hljs-string">&quot;盘山县&quot;</span>,<br>            <span class="hljs-string">&quot;大洼县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;铁岭市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;银州区&quot;</span>,<br>            <span class="hljs-string">&quot;清河区&quot;</span>,<br>            <span class="hljs-string">&quot;调兵山市&quot;</span>,<br>            <span class="hljs-string">&quot;开原市&quot;</span>,<br>            <span class="hljs-string">&quot;铁岭县&quot;</span>,<br>            <span class="hljs-string">&quot;昌图县&quot;</span>,<br>            <span class="hljs-string">&quot;西丰县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;朝阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;双塔区&quot;</span>,<br>            <span class="hljs-string">&quot;龙城区&quot;</span>,<br>            <span class="hljs-string">&quot;凌源市&quot;</span>,<br>            <span class="hljs-string">&quot;北票市&quot;</span>,<br>            <span class="hljs-string">&quot;朝阳县&quot;</span>,<br>            <span class="hljs-string">&quot;建平县&quot;</span>,<br>            <span class="hljs-string">&quot;喀喇沁左翼蒙古族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;葫芦岛市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;龙港区&quot;</span>,<br>            <span class="hljs-string">&quot;南票区&quot;</span>,<br>            <span class="hljs-string">&quot;连山区&quot;</span>,<br>            <span class="hljs-string">&quot;兴城市&quot;</span>,<br>            <span class="hljs-string">&quot;绥中县&quot;</span>,<br>            <span class="hljs-string">&quot;建昌县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;吉林省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;长春市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;朝阳区&quot;</span>,<br>            <span class="hljs-string">&quot;宽城区&quot;</span>,<br>            <span class="hljs-string">&quot;二道区&quot;</span>,<br>            <span class="hljs-string">&quot;南关区&quot;</span>,<br>            <span class="hljs-string">&quot;绿园区&quot;</span>,<br>            <span class="hljs-string">&quot;双阳区&quot;</span>,<br>            <span class="hljs-string">&quot;九台市&quot;</span>,<br>            <span class="hljs-string">&quot;榆树市&quot;</span>,<br>            <span class="hljs-string">&quot;德惠市&quot;</span>,<br>            <span class="hljs-string">&quot;农安县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;吉林市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;船营区&quot;</span>,<br>            <span class="hljs-string">&quot;昌邑区&quot;</span>,<br>            <span class="hljs-string">&quot;龙潭区&quot;</span>,<br>            <span class="hljs-string">&quot;丰满区&quot;</span>,<br>            <span class="hljs-string">&quot;舒兰市&quot;</span>,<br>            <span class="hljs-string">&quot;桦甸市&quot;</span>,<br>            <span class="hljs-string">&quot;蛟河市&quot;</span>,<br>            <span class="hljs-string">&quot;磐石市&quot;</span>,<br>            <span class="hljs-string">&quot;永吉县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;四平&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;铁西区&quot;</span>,<br>            <span class="hljs-string">&quot;铁东区&quot;</span>,<br>            <span class="hljs-string">&quot;公主岭市&quot;</span>,<br>            <span class="hljs-string">&quot;双辽市&quot;</span>,<br>            <span class="hljs-string">&quot;梨树县&quot;</span>,<br>            <span class="hljs-string">&quot;伊通满族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;辽源市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;龙山区&quot;</span>,<br>            <span class="hljs-string">&quot;西安区&quot;</span>,<br>            <span class="hljs-string">&quot;东辽县&quot;</span>,<br>            <span class="hljs-string">&quot;东丰县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;通化市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;东昌区&quot;</span>,<br>            <span class="hljs-string">&quot;二道江区&quot;</span>,<br>            <span class="hljs-string">&quot;梅河口市&quot;</span>,<br>            <span class="hljs-string">&quot;集安市&quot;</span>,<br>            <span class="hljs-string">&quot;通化县&quot;</span>,<br>            <span class="hljs-string">&quot;辉南县&quot;</span>,<br>            <span class="hljs-string">&quot;柳河县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;白山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;八道江区&quot;</span>,<br>            <span class="hljs-string">&quot;江源区&quot;</span>,<br>            <span class="hljs-string">&quot;临江市&quot;</span>,<br>            <span class="hljs-string">&quot;靖宇县&quot;</span>,<br>            <span class="hljs-string">&quot;抚松县&quot;</span>,<br>            <span class="hljs-string">&quot;长白朝鲜族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;松原市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;宁江区&quot;</span>,<br>            <span class="hljs-string">&quot;乾安县&quot;</span>,<br>            <span class="hljs-string">&quot;长岭县&quot;</span>,<br>            <span class="hljs-string">&quot;扶余县&quot;</span>,<br>            <span class="hljs-string">&quot;前郭尔罗斯蒙古族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;白城市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;洮北区&quot;</span>,<br>            <span class="hljs-string">&quot;大安市&quot;</span>,<br>            <span class="hljs-string">&quot;洮南市&quot;</span>,<br>            <span class="hljs-string">&quot;镇赉县&quot;</span>,<br>            <span class="hljs-string">&quot;通榆县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;延边朝鲜族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;延吉市&quot;</span>,<br>            <span class="hljs-string">&quot;图们市&quot;</span>,<br>            <span class="hljs-string">&quot;敦化市&quot;</span>,<br>            <span class="hljs-string">&quot;龙井市&quot;</span>,<br>            <span class="hljs-string">&quot;珲春市&quot;</span>,<br>            <span class="hljs-string">&quot;和龙市&quot;</span>,<br>            <span class="hljs-string">&quot;安图县&quot;</span>,<br>            <span class="hljs-string">&quot;汪清县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;黑龙江省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;哈尔滨市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;松北区&quot;</span>,<br>            <span class="hljs-string">&quot;道里区&quot;</span>,<br>            <span class="hljs-string">&quot;南岗区&quot;</span>,<br>            <span class="hljs-string">&quot;平房区&quot;</span>,<br>            <span class="hljs-string">&quot;香坊区&quot;</span>,<br>            <span class="hljs-string">&quot;道外区&quot;</span>,<br>            <span class="hljs-string">&quot;呼兰区&quot;</span>,<br>            <span class="hljs-string">&quot;阿城区&quot;</span>,<br>            <span class="hljs-string">&quot;双城市&quot;</span>,<br>            <span class="hljs-string">&quot;尚志市&quot;</span>,<br>            <span class="hljs-string">&quot;五常市&quot;</span>,<br>            <span class="hljs-string">&quot;宾县&quot;</span>,<br>            <span class="hljs-string">&quot;方正县&quot;</span>,<br>            <span class="hljs-string">&quot;通河县&quot;</span>,<br>            <span class="hljs-string">&quot;巴彦县&quot;</span>,<br>            <span class="hljs-string">&quot;延寿县&quot;</span>,<br>            <span class="hljs-string">&quot;木兰县&quot;</span>,<br>            <span class="hljs-string">&quot;依兰县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;齐齐哈尔市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;龙沙区&quot;</span>,<br>            <span class="hljs-string">&quot;昂昂溪区&quot;</span>,<br>            <span class="hljs-string">&quot;铁锋区&quot;</span>,<br>            <span class="hljs-string">&quot;建华区&quot;</span>,<br>            <span class="hljs-string">&quot;富拉尔基区&quot;</span>,<br>            <span class="hljs-string">&quot;碾子山区&quot;</span>,<br>            <span class="hljs-string">&quot;梅里斯达斡尔族区&quot;</span>,<br>            <span class="hljs-string">&quot;讷河市&quot;</span>,<br>            <span class="hljs-string">&quot;富裕县&quot;</span>,<br>            <span class="hljs-string">&quot;拜泉县&quot;</span>,<br>            <span class="hljs-string">&quot;甘南县&quot;</span>,<br>            <span class="hljs-string">&quot;依安县&quot;</span>,<br>            <span class="hljs-string">&quot;克山县&quot;</span>,<br>            <span class="hljs-string">&quot;泰来县&quot;</span>,<br>            <span class="hljs-string">&quot;克东县&quot;</span>,<br>            <span class="hljs-string">&quot;龙江县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;鹤岗市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;兴山区&quot;</span>,<br>            <span class="hljs-string">&quot;工农区&quot;</span>,<br>            <span class="hljs-string">&quot;南山区&quot;</span>,<br>            <span class="hljs-string">&quot;兴安区&quot;</span>,<br>            <span class="hljs-string">&quot;向阳区&quot;</span>,<br>            <span class="hljs-string">&quot;东山区&quot;</span>,<br>            <span class="hljs-string">&quot;萝北县&quot;</span>,<br>            <span class="hljs-string">&quot;绥滨县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;双鸭山&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;尖山区&quot;</span>,<br>            <span class="hljs-string">&quot;岭东区&quot;</span>,<br>            <span class="hljs-string">&quot;四方台区&quot;</span>,<br>            <span class="hljs-string">&quot;宝山区&quot;</span>,<br>            <span class="hljs-string">&quot;集贤县&quot;</span>,<br>            <span class="hljs-string">&quot;宝清县&quot;</span>,<br>            <span class="hljs-string">&quot;友谊县&quot;</span>,<br>            <span class="hljs-string">&quot;饶河县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;鸡西市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;鸡冠区&quot;</span>,<br>            <span class="hljs-string">&quot;恒山区&quot;</span>,<br>            <span class="hljs-string">&quot;城子河区&quot;</span>,<br>            <span class="hljs-string">&quot;滴道区&quot;</span>,<br>            <span class="hljs-string">&quot;梨树区&quot;</span>,<br>            <span class="hljs-string">&quot;麻山区&quot;</span>,<br>            <span class="hljs-string">&quot;密山市&quot;</span>,<br>            <span class="hljs-string">&quot;虎林市&quot;</span>,<br>            <span class="hljs-string">&quot;鸡东县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;大庆市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;萨尔图区&quot;</span>,<br>            <span class="hljs-string">&quot;红岗区&quot;</span>,<br>            <span class="hljs-string">&quot;龙凤区&quot;</span>,<br>            <span class="hljs-string">&quot;让胡路区&quot;</span>,<br>            <span class="hljs-string">&quot;大同区&quot;</span>,<br>            <span class="hljs-string">&quot;林甸县&quot;</span>,<br>            <span class="hljs-string">&quot;肇州县&quot;</span>,<br>            <span class="hljs-string">&quot;肇源县&quot;</span>,<br>            <span class="hljs-string">&quot;杜尔伯特蒙古族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;伊春市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;伊春区&quot;</span>,<br>            <span class="hljs-string">&quot;带岭区&quot;</span>,<br>            <span class="hljs-string">&quot;南岔区&quot;</span>,<br>            <span class="hljs-string">&quot;金山屯区&quot;</span>,<br>            <span class="hljs-string">&quot;西林区&quot;</span>,<br>            <span class="hljs-string">&quot;美溪区&quot;</span>,<br>            <span class="hljs-string">&quot;乌马河区&quot;</span>,<br>            <span class="hljs-string">&quot;翠峦区&quot;</span>,<br>            <span class="hljs-string">&quot;友好区&quot;</span>,<br>            <span class="hljs-string">&quot;上甘岭区&quot;</span>,<br>            <span class="hljs-string">&quot;五营区&quot;</span>,<br>            <span class="hljs-string">&quot;红星区&quot;</span>,<br>            <span class="hljs-string">&quot;新青区&quot;</span>,<br>            <span class="hljs-string">&quot;汤旺河区&quot;</span>,<br>            <span class="hljs-string">&quot;乌伊岭区&quot;</span>,<br>            <span class="hljs-string">&quot;铁力市&quot;</span>,<br>            <span class="hljs-string">&quot;嘉荫县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;牡丹江市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;爱民区&quot;</span>,<br>            <span class="hljs-string">&quot;东安区&quot;</span>,<br>            <span class="hljs-string">&quot;阳明区&quot;</span>,<br>            <span class="hljs-string">&quot;西安区&quot;</span>,<br>            <span class="hljs-string">&quot;绥芬河市&quot;</span>,<br>            <span class="hljs-string">&quot;宁安市&quot;</span>,<br>            <span class="hljs-string">&quot;海林市&quot;</span>,<br>            <span class="hljs-string">&quot;穆棱市&quot;</span>,<br>            <span class="hljs-string">&quot;林口县&quot;</span>,<br>            <span class="hljs-string">&quot;东宁县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;佳木斯市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;向阳区&quot;</span>,<br>            <span class="hljs-string">&quot;前进区&quot;</span>,<br>            <span class="hljs-string">&quot;东风区&quot;</span>,<br>            <span class="hljs-string">&quot;郊区&quot;</span>,<br>            <span class="hljs-string">&quot;同江市&quot;</span>,<br>            <span class="hljs-string">&quot;富锦市&quot;</span>,<br>            <span class="hljs-string">&quot;桦川县&quot;</span>,<br>            <span class="hljs-string">&quot;抚远县&quot;</span>,<br>            <span class="hljs-string">&quot;桦南县&quot;</span>,<br>            <span class="hljs-string">&quot;汤原县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;七台河市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;桃山区&quot;</span>,<br>            <span class="hljs-string">&quot;新兴区&quot;</span>,<br>            <span class="hljs-string">&quot;茄子河区&quot;</span>,<br>            <span class="hljs-string">&quot;勃利县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;黑河市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;爱辉区&quot;</span>,<br>            <span class="hljs-string">&quot;北安市&quot;</span>,<br>            <span class="hljs-string">&quot;五大连池市&quot;</span>,<br>            <span class="hljs-string">&quot;逊克县&quot;</span>,<br>            <span class="hljs-string">&quot;嫩江县&quot;</span>,<br>            <span class="hljs-string">&quot;孙吴县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;绥化市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;北林区&quot;</span>,<br>            <span class="hljs-string">&quot;安达市&quot;</span>,<br>            <span class="hljs-string">&quot;肇东市&quot;</span>,<br>            <span class="hljs-string">&quot;海伦市&quot;</span>,<br>            <span class="hljs-string">&quot;绥棱县&quot;</span>,<br>            <span class="hljs-string">&quot;兰西县&quot;</span>,<br>            <span class="hljs-string">&quot;明水县&quot;</span>,<br>            <span class="hljs-string">&quot;青冈县&quot;</span>,<br>            <span class="hljs-string">&quot;庆安县&quot;</span>,<br>            <span class="hljs-string">&quot;望奎县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;大兴安岭地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;呼玛县&quot;</span>,<br>            <span class="hljs-string">&quot;塔河县&quot;</span>,<br>            <span class="hljs-string">&quot;漠河县&quot;</span>,<br>            <span class="hljs-string">&quot;大兴安岭辖区&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;上海市&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;上海市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;黄浦区&quot;</span>,<br>            <span class="hljs-string">&quot;卢湾区&quot;</span>,<br>            <span class="hljs-string">&quot;徐汇区&quot;</span>,<br>            <span class="hljs-string">&quot;长宁区&quot;</span>,<br>            <span class="hljs-string">&quot;静安区&quot;</span>,<br>            <span class="hljs-string">&quot;普陀区&quot;</span>,<br>            <span class="hljs-string">&quot;闸北区&quot;</span>,<br>            <span class="hljs-string">&quot;虹口区&quot;</span>,<br>            <span class="hljs-string">&quot;杨浦区&quot;</span>,<br>            <span class="hljs-string">&quot;宝山区&quot;</span>,<br>            <span class="hljs-string">&quot;闵行区&quot;</span>,<br>            <span class="hljs-string">&quot;嘉定区&quot;</span>,<br>            <span class="hljs-string">&quot;松江区&quot;</span>,<br>            <span class="hljs-string">&quot;金山区&quot;</span>,<br>            <span class="hljs-string">&quot;青浦区&quot;</span>,<br>            <span class="hljs-string">&quot;南汇区&quot;</span>,<br>            <span class="hljs-string">&quot;奉贤区&quot;</span>,<br>            <span class="hljs-string">&quot;浦东新区&quot;</span>,<br>            <span class="hljs-string">&quot;崇明县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;江苏省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;南京市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;玄武区&quot;</span>,<br>            <span class="hljs-string">&quot;白下区&quot;</span>,<br>            <span class="hljs-string">&quot;秦淮区&quot;</span>,<br>            <span class="hljs-string">&quot;建邺区&quot;</span>,<br>            <span class="hljs-string">&quot;鼓楼区&quot;</span>,<br>            <span class="hljs-string">&quot;下关区&quot;</span>,<br>            <span class="hljs-string">&quot;栖霞区&quot;</span>,<br>            <span class="hljs-string">&quot;雨花台区&quot;</span>,<br>            <span class="hljs-string">&quot;浦口区&quot;</span>,<br>            <span class="hljs-string">&quot;江宁区&quot;</span>,<br>            <span class="hljs-string">&quot;六合区&quot;</span>,<br>            <span class="hljs-string">&quot;溧水县&quot;</span>,<br>            <span class="hljs-string">&quot;高淳县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;苏州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;金阊区&quot;</span>,<br>            <span class="hljs-string">&quot;平江区&quot;</span>,<br>            <span class="hljs-string">&quot;沧浪区&quot;</span>,<br>            <span class="hljs-string">&quot;虎丘区&quot;</span>,<br>            <span class="hljs-string">&quot;吴中区&quot;</span>,<br>            <span class="hljs-string">&quot;相城区&quot;</span>,<br>            <span class="hljs-string">&quot;常熟市&quot;</span>,<br>            <span class="hljs-string">&quot;张家港市&quot;</span>,<br>            <span class="hljs-string">&quot;昆山市&quot;</span>,<br>            <span class="hljs-string">&quot;吴江市&quot;</span>,<br>            <span class="hljs-string">&quot;太仓市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;无锡市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;崇安区&quot;</span>,<br>            <span class="hljs-string">&quot;南长区&quot;</span>,<br>            <span class="hljs-string">&quot;北塘区&quot;</span>,<br>            <span class="hljs-string">&quot;滨湖区&quot;</span>,<br>            <span class="hljs-string">&quot;锡山区&quot;</span>,<br>            <span class="hljs-string">&quot;惠山区&quot;</span>,<br>            <span class="hljs-string">&quot;江阴市&quot;</span>,<br>            <span class="hljs-string">&quot;宜兴市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;常州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;钟楼区&quot;</span>,<br>            <span class="hljs-string">&quot;天宁区&quot;</span>,<br>            <span class="hljs-string">&quot;戚墅堰区&quot;</span>,<br>            <span class="hljs-string">&quot;新北区&quot;</span>,<br>            <span class="hljs-string">&quot;武进区&quot;</span>,<br>            <span class="hljs-string">&quot;金坛市&quot;</span>,<br>            <span class="hljs-string">&quot;溧阳市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;镇江市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;京口区&quot;</span>,<br>            <span class="hljs-string">&quot;润州区&quot;</span>,<br>            <span class="hljs-string">&quot;丹徒区&quot;</span>,<br>            <span class="hljs-string">&quot;丹阳市&quot;</span>,<br>            <span class="hljs-string">&quot;扬中市&quot;</span>,<br>            <span class="hljs-string">&quot;句容市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;南通市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;崇川区&quot;</span>,<br>            <span class="hljs-string">&quot;港闸区&quot;</span>,<br>            <span class="hljs-string">&quot;通州市&quot;</span>,<br>            <span class="hljs-string">&quot;如皋市&quot;</span>,<br>            <span class="hljs-string">&quot;海门市&quot;</span>,<br>            <span class="hljs-string">&quot;启东市&quot;</span>,<br>            <span class="hljs-string">&quot;海安县&quot;</span>,<br>            <span class="hljs-string">&quot;如东县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;泰州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;海陵区&quot;</span>,<br>            <span class="hljs-string">&quot;高港区&quot;</span>,<br>            <span class="hljs-string">&quot;姜堰市&quot;</span>,<br>            <span class="hljs-string">&quot;泰兴市&quot;</span>,<br>            <span class="hljs-string">&quot;靖江市&quot;</span>,<br>            <span class="hljs-string">&quot;兴化市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;扬州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;广陵区&quot;</span>,<br>            <span class="hljs-string">&quot;维扬区&quot;</span>,<br>            <span class="hljs-string">&quot;邗江区&quot;</span>,<br>            <span class="hljs-string">&quot;江都市&quot;</span>,<br>            <span class="hljs-string">&quot;仪征市&quot;</span>,<br>            <span class="hljs-string">&quot;高邮市&quot;</span>,<br>            <span class="hljs-string">&quot;宝应县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;盐城市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;亭湖区&quot;</span>,<br>            <span class="hljs-string">&quot;盐都区&quot;</span>,<br>            <span class="hljs-string">&quot;大丰市&quot;</span>,<br>            <span class="hljs-string">&quot;东台市&quot;</span>,<br>            <span class="hljs-string">&quot;建湖县&quot;</span>,<br>            <span class="hljs-string">&quot;射阳县&quot;</span>,<br>            <span class="hljs-string">&quot;阜宁县&quot;</span>,<br>            <span class="hljs-string">&quot;滨海县&quot;</span>,<br>            <span class="hljs-string">&quot;响水县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;连云港市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;新浦区&quot;</span>,<br>            <span class="hljs-string">&quot;海州区&quot;</span>,<br>            <span class="hljs-string">&quot;连云区&quot;</span>,<br>            <span class="hljs-string">&quot;东海县&quot;</span>,<br>            <span class="hljs-string">&quot;灌云县&quot;</span>,<br>            <span class="hljs-string">&quot;赣榆县&quot;</span>,<br>            <span class="hljs-string">&quot;灌南县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;徐州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;云龙区&quot;</span>,<br>            <span class="hljs-string">&quot;鼓楼区&quot;</span>,<br>            <span class="hljs-string">&quot;九里区&quot;</span>,<br>            <span class="hljs-string">&quot;泉山区&quot;</span>,<br>            <span class="hljs-string">&quot;贾汪区&quot;</span>,<br>            <span class="hljs-string">&quot;邳州市&quot;</span>,<br>            <span class="hljs-string">&quot;新沂市&quot;</span>,<br>            <span class="hljs-string">&quot;铜山县&quot;</span>,<br>            <span class="hljs-string">&quot;睢宁县&quot;</span>,<br>            <span class="hljs-string">&quot;沛县&quot;</span>,<br>            <span class="hljs-string">&quot;丰县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;淮安市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;清河区&quot;</span>,<br>            <span class="hljs-string">&quot;清浦区&quot;</span>,<br>            <span class="hljs-string">&quot;楚州区&quot;</span>,<br>            <span class="hljs-string">&quot;淮阴区&quot;</span>,<br>            <span class="hljs-string">&quot;涟水县&quot;</span>,<br>            <span class="hljs-string">&quot;洪泽县&quot;</span>,<br>            <span class="hljs-string">&quot;金湖县&quot;</span>,<br>            <span class="hljs-string">&quot;盱眙县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;宿迁市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;宿城区&quot;</span>,<br>            <span class="hljs-string">&quot;宿豫区&quot;</span>,<br>            <span class="hljs-string">&quot;沭阳县&quot;</span>,<br>            <span class="hljs-string">&quot;泗阳县&quot;</span>,<br>            <span class="hljs-string">&quot;泗洪县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;浙江省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;杭州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;拱墅区&quot;</span>,<br>            <span class="hljs-string">&quot;西湖区&quot;</span>,<br>            <span class="hljs-string">&quot;上城区&quot;</span>,<br>            <span class="hljs-string">&quot;下城区&quot;</span>,<br>            <span class="hljs-string">&quot;江干区&quot;</span>,<br>            <span class="hljs-string">&quot;滨江区&quot;</span>,<br>            <span class="hljs-string">&quot;余杭区&quot;</span>,<br>            <span class="hljs-string">&quot;萧山区&quot;</span>,<br>            <span class="hljs-string">&quot;建德市&quot;</span>,<br>            <span class="hljs-string">&quot;富阳市&quot;</span>,<br>            <span class="hljs-string">&quot;临安市&quot;</span>,<br>            <span class="hljs-string">&quot;桐庐县&quot;</span>,<br>            <span class="hljs-string">&quot;淳安县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;宁波市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;海曙区&quot;</span>,<br>            <span class="hljs-string">&quot;江东区&quot;</span>,<br>            <span class="hljs-string">&quot;江北区&quot;</span>,<br>            <span class="hljs-string">&quot;镇海区&quot;</span>,<br>            <span class="hljs-string">&quot;北仑区&quot;</span>,<br>            <span class="hljs-string">&quot;鄞州区&quot;</span>,<br>            <span class="hljs-string">&quot;余姚市&quot;</span>,<br>            <span class="hljs-string">&quot;慈溪市&quot;</span>,<br>            <span class="hljs-string">&quot;奉化市&quot;</span>,<br>            <span class="hljs-string">&quot;宁海县&quot;</span>,<br>            <span class="hljs-string">&quot;象山县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;温州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;鹿城区&quot;</span>,<br>            <span class="hljs-string">&quot;龙湾区&quot;</span>,<br>            <span class="hljs-string">&quot;瓯海区&quot;</span>,<br>            <span class="hljs-string">&quot;瑞安市&quot;</span>,<br>            <span class="hljs-string">&quot;乐清市&quot;</span>,<br>            <span class="hljs-string">&quot;永嘉县&quot;</span>,<br>            <span class="hljs-string">&quot;洞头县&quot;</span>,<br>            <span class="hljs-string">&quot;平阳县&quot;</span>,<br>            <span class="hljs-string">&quot;苍南县&quot;</span>,<br>            <span class="hljs-string">&quot;文成县&quot;</span>,<br>            <span class="hljs-string">&quot;泰顺县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;嘉兴市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;秀城区&quot;</span>,<br>            <span class="hljs-string">&quot;秀洲区&quot;</span>,<br>            <span class="hljs-string">&quot;海宁市&quot;</span>,<br>            <span class="hljs-string">&quot;平湖市&quot;</span>,<br>            <span class="hljs-string">&quot;桐乡市&quot;</span>,<br>            <span class="hljs-string">&quot;嘉善县&quot;</span>,<br>            <span class="hljs-string">&quot;海盐县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;湖州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;吴兴区&quot;</span>,<br>            <span class="hljs-string">&quot;南浔区&quot;</span>,<br>            <span class="hljs-string">&quot;长兴县&quot;</span>,<br>            <span class="hljs-string">&quot;德清县&quot;</span>,<br>            <span class="hljs-string">&quot;安吉县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;绍兴市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;越城区&quot;</span>,<br>            <span class="hljs-string">&quot;诸暨市&quot;</span>,<br>            <span class="hljs-string">&quot;上虞市&quot;</span>,<br>            <span class="hljs-string">&quot;嵊州市&quot;</span>,<br>            <span class="hljs-string">&quot;绍兴县&quot;</span>,<br>            <span class="hljs-string">&quot;新昌县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;金华市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;婺城区&quot;</span>,<br>            <span class="hljs-string">&quot;金东区&quot;</span>,<br>            <span class="hljs-string">&quot;兰溪市&quot;</span>,<br>            <span class="hljs-string">&quot;义乌市&quot;</span>,<br>            <span class="hljs-string">&quot;东阳市&quot;</span>,<br>            <span class="hljs-string">&quot;永康市&quot;</span>,<br>            <span class="hljs-string">&quot;武义县&quot;</span>,<br>            <span class="hljs-string">&quot;浦江县&quot;</span>,<br>            <span class="hljs-string">&quot;磐安县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;衢州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;柯城区&quot;</span>,<br>            <span class="hljs-string">&quot;衢江区&quot;</span>,<br>            <span class="hljs-string">&quot;江山市&quot;</span>,<br>            <span class="hljs-string">&quot;龙游县&quot;</span>,<br>            <span class="hljs-string">&quot;常山县&quot;</span>,<br>            <span class="hljs-string">&quot;开化县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;舟山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;定海区&quot;</span>,<br>            <span class="hljs-string">&quot;普陀区&quot;</span>,<br>            <span class="hljs-string">&quot;岱山县&quot;</span>,<br>            <span class="hljs-string">&quot;嵊泗县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;台州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;椒江区&quot;</span>,<br>            <span class="hljs-string">&quot;黄岩区&quot;</span>,<br>            <span class="hljs-string">&quot;路桥区&quot;</span>,<br>            <span class="hljs-string">&quot;临海市&quot;</span>,<br>            <span class="hljs-string">&quot;温岭市&quot;</span>,<br>            <span class="hljs-string">&quot;玉环县&quot;</span>,<br>            <span class="hljs-string">&quot;天台县&quot;</span>,<br>            <span class="hljs-string">&quot;仙居县&quot;</span>,<br>            <span class="hljs-string">&quot;三门县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;丽水市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;莲都区&quot;</span>,<br>            <span class="hljs-string">&quot;龙泉市&quot;</span>,<br>            <span class="hljs-string">&quot;缙云县&quot;</span>,<br>            <span class="hljs-string">&quot;青田县&quot;</span>,<br>            <span class="hljs-string">&quot;云和县&quot;</span>,<br>            <span class="hljs-string">&quot;遂昌县&quot;</span>,<br>            <span class="hljs-string">&quot;松阳县&quot;</span>,<br>            <span class="hljs-string">&quot;庆元县&quot;</span>,<br>            <span class="hljs-string">&quot;景宁畲族自治县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;安徽省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;合肥市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;庐阳区&quot;</span>,<br>            <span class="hljs-string">&quot;瑶海区&quot;</span>,<br>            <span class="hljs-string">&quot;蜀山区&quot;</span>,<br>            <span class="hljs-string">&quot;包河区&quot;</span>,<br>            <span class="hljs-string">&quot;长丰县&quot;</span>,<br>            <span class="hljs-string">&quot;肥东县&quot;</span>,<br>            <span class="hljs-string">&quot;肥西县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;芜湖市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;镜湖区&quot;</span>,<br>            <span class="hljs-string">&quot;弋江区&quot;</span>,<br>            <span class="hljs-string">&quot;鸠江区&quot;</span>,<br>            <span class="hljs-string">&quot;三山区&quot;</span>,<br>            <span class="hljs-string">&quot;芜湖县&quot;</span>,<br>            <span class="hljs-string">&quot;南陵县&quot;</span>,<br>            <span class="hljs-string">&quot;繁昌县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;蚌埠市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;蚌山区&quot;</span>,<br>            <span class="hljs-string">&quot;龙子湖区&quot;</span>,<br>            <span class="hljs-string">&quot;禹会区&quot;</span>,<br>            <span class="hljs-string">&quot;淮上区&quot;</span>,<br>            <span class="hljs-string">&quot;怀远县&quot;</span>,<br>            <span class="hljs-string">&quot;固镇县&quot;</span>,<br>            <span class="hljs-string">&quot;五河县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;淮南市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;田家庵区&quot;</span>,<br>            <span class="hljs-string">&quot;大通区&quot;</span>,<br>            <span class="hljs-string">&quot;谢家集区&quot;</span>,<br>            <span class="hljs-string">&quot;八公山区&quot;</span>,<br>            <span class="hljs-string">&quot;潘集区&quot;</span>,<br>            <span class="hljs-string">&quot;凤台县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;马鞍山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;雨山区&quot;</span>,<br>            <span class="hljs-string">&quot;花山区&quot;</span>,<br>            <span class="hljs-string">&quot;金家庄区&quot;</span>,<br>            <span class="hljs-string">&quot;当涂县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;淮北市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;相山区&quot;</span>,<br>            <span class="hljs-string">&quot;杜集区&quot;</span>,<br>            <span class="hljs-string">&quot;烈山区&quot;</span>,<br>            <span class="hljs-string">&quot;濉溪县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;铜陵市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;铜官山区&quot;</span>,<br>            <span class="hljs-string">&quot;狮子山区&quot;</span>,<br>            <span class="hljs-string">&quot;郊区&quot;</span>,<br>            <span class="hljs-string">&quot;铜陵县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;安庆市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;迎江区&quot;</span>,<br>            <span class="hljs-string">&quot;大观区&quot;</span>,<br>            <span class="hljs-string">&quot;宜秀区&quot;</span>,<br>            <span class="hljs-string">&quot;桐城市&quot;</span>,<br>            <span class="hljs-string">&quot;宿松县&quot;</span>,<br>            <span class="hljs-string">&quot;枞阳县&quot;</span>,<br>            <span class="hljs-string">&quot;太湖县&quot;</span>,<br>            <span class="hljs-string">&quot;怀宁县&quot;</span>,<br>            <span class="hljs-string">&quot;岳西县&quot;</span>,<br>            <span class="hljs-string">&quot;望江县&quot;</span>,<br>            <span class="hljs-string">&quot;潜山县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;黄山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;屯溪区&quot;</span>,<br>            <span class="hljs-string">&quot;黄山区&quot;</span>,<br>            <span class="hljs-string">&quot;徽州区&quot;</span>,<br>            <span class="hljs-string">&quot;休宁县&quot;</span>,<br>            <span class="hljs-string">&quot;歙县&quot;</span>,<br>            <span class="hljs-string">&quot;祁门县&quot;</span>,<br>            <span class="hljs-string">&quot;黟县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;滁州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;琅琊区&quot;</span>,<br>            <span class="hljs-string">&quot;南谯区&quot;</span>,<br>            <span class="hljs-string">&quot;天长市&quot;</span>,<br>            <span class="hljs-string">&quot;明光市&quot;</span>,<br>            <span class="hljs-string">&quot;全椒县&quot;</span>,<br>            <span class="hljs-string">&quot;来安县&quot;</span>,<br>            <span class="hljs-string">&quot;定远县&quot;</span>,<br>            <span class="hljs-string">&quot;凤阳县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;阜阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;颍州区&quot;</span>,<br>            <span class="hljs-string">&quot;颍东区&quot;</span>,<br>            <span class="hljs-string">&quot;颍泉区&quot;</span>,<br>            <span class="hljs-string">&quot;界首市&quot;</span>,<br>            <span class="hljs-string">&quot;临泉县&quot;</span>,<br>            <span class="hljs-string">&quot;颍上县&quot;</span>,<br>            <span class="hljs-string">&quot;阜南县&quot;</span>,<br>            <span class="hljs-string">&quot;太和县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;宿州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;埇桥区&quot;</span>,<br>            <span class="hljs-string">&quot;萧县&quot;</span>,<br>            <span class="hljs-string">&quot;泗县&quot;</span>,<br>            <span class="hljs-string">&quot;砀山县&quot;</span>,<br>            <span class="hljs-string">&quot;灵璧县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;巢湖市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;居巢区&quot;</span>,<br>            <span class="hljs-string">&quot;含山县&quot;</span>,<br>            <span class="hljs-string">&quot;无为县&quot;</span>,<br>            <span class="hljs-string">&quot;庐江县&quot;</span>,<br>            <span class="hljs-string">&quot;和县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;六安市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;金安区&quot;</span>,<br>            <span class="hljs-string">&quot;裕安区&quot;</span>,<br>            <span class="hljs-string">&quot;寿县&quot;</span>,<br>            <span class="hljs-string">&quot;霍山县&quot;</span>,<br>            <span class="hljs-string">&quot;霍邱县&quot;</span>,<br>            <span class="hljs-string">&quot;舒城县&quot;</span>,<br>            <span class="hljs-string">&quot;金寨县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;亳州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;谯城区&quot;</span>,<br>            <span class="hljs-string">&quot;利辛县&quot;</span>,<br>            <span class="hljs-string">&quot;涡阳县&quot;</span>,<br>            <span class="hljs-string">&quot;蒙城县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;池州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;贵池区&quot;</span>,<br>            <span class="hljs-string">&quot;东至县&quot;</span>,<br>            <span class="hljs-string">&quot;石台县&quot;</span>,<br>            <span class="hljs-string">&quot;青阳县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;宣城市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;宣州区&quot;</span>,<br>            <span class="hljs-string">&quot;宁国市&quot;</span>,<br>            <span class="hljs-string">&quot;广德县&quot;</span>,<br>            <span class="hljs-string">&quot;郎溪县&quot;</span>,<br>            <span class="hljs-string">&quot;泾县&quot;</span>,<br>            <span class="hljs-string">&quot;旌德县&quot;</span>,<br>            <span class="hljs-string">&quot;绩溪县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;福建省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;福州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;鼓楼区&quot;</span>,<br>            <span class="hljs-string">&quot;台江区&quot;</span>,<br>            <span class="hljs-string">&quot;仓山区&quot;</span>,<br>            <span class="hljs-string">&quot;马尾区&quot;</span>,<br>            <span class="hljs-string">&quot;晋安区&quot;</span>,<br>            <span class="hljs-string">&quot;福清市&quot;</span>,<br>            <span class="hljs-string">&quot;长乐市&quot;</span>,<br>            <span class="hljs-string">&quot;闽侯县&quot;</span>,<br>            <span class="hljs-string">&quot;闽清县&quot;</span>,<br>            <span class="hljs-string">&quot;永泰县&quot;</span>,<br>            <span class="hljs-string">&quot;连江县&quot;</span>,<br>            <span class="hljs-string">&quot;罗源县&quot;</span>,<br>            <span class="hljs-string">&quot;平潭县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;厦门市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;思明区&quot;</span>,<br>            <span class="hljs-string">&quot;海沧区&quot;</span>,<br>            <span class="hljs-string">&quot;湖里区&quot;</span>,<br>            <span class="hljs-string">&quot;集美区&quot;</span>,<br>            <span class="hljs-string">&quot;同安区&quot;</span>,<br>            <span class="hljs-string">&quot;翔安区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;莆田市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;城厢区&quot;</span>,<br>            <span class="hljs-string">&quot;涵江区&quot;</span>,<br>            <span class="hljs-string">&quot;荔城区&quot;</span>,<br>            <span class="hljs-string">&quot;秀屿区&quot;</span>,<br>            <span class="hljs-string">&quot;仙游县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;三明市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;梅列区&quot;</span>,<br>            <span class="hljs-string">&quot;三元区&quot;</span>,<br>            <span class="hljs-string">&quot;永安市&quot;</span>,<br>            <span class="hljs-string">&quot;明溪县&quot;</span>,<br>            <span class="hljs-string">&quot;将乐县&quot;</span>,<br>            <span class="hljs-string">&quot;大田县&quot;</span>,<br>            <span class="hljs-string">&quot;宁化县&quot;</span>,<br>            <span class="hljs-string">&quot;建宁县&quot;</span>,<br>            <span class="hljs-string">&quot;沙县&quot;</span>,<br>            <span class="hljs-string">&quot;尤溪县&quot;</span>,<br>            <span class="hljs-string">&quot;清流县&quot;</span>,<br>            <span class="hljs-string">&quot;泰宁县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;泉州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;鲤城区&quot;</span>,<br>            <span class="hljs-string">&quot;丰泽区&quot;</span>,<br>            <span class="hljs-string">&quot;洛江区&quot;</span>,<br>            <span class="hljs-string">&quot;泉港区&quot;</span>,<br>            <span class="hljs-string">&quot;石狮市&quot;</span>,<br>            <span class="hljs-string">&quot;晋江市&quot;</span>,<br>            <span class="hljs-string">&quot;南安市&quot;</span>,<br>            <span class="hljs-string">&quot;惠安县&quot;</span>,<br>            <span class="hljs-string">&quot;永春县&quot;</span>,<br>            <span class="hljs-string">&quot;安溪县&quot;</span>,<br>            <span class="hljs-string">&quot;德化县&quot;</span>,<br>            <span class="hljs-string">&quot;金门县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;漳州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;芗城区&quot;</span>,<br>            <span class="hljs-string">&quot;龙文区&quot;</span>,<br>            <span class="hljs-string">&quot;龙海市&quot;</span>,<br>            <span class="hljs-string">&quot;平和县&quot;</span>,<br>            <span class="hljs-string">&quot;南靖县&quot;</span>,<br>            <span class="hljs-string">&quot;诏安县&quot;</span>,<br>            <span class="hljs-string">&quot;漳浦县&quot;</span>,<br>            <span class="hljs-string">&quot;华安县&quot;</span>,<br>            <span class="hljs-string">&quot;东山县&quot;</span>,<br>            <span class="hljs-string">&quot;长泰县&quot;</span>,<br>            <span class="hljs-string">&quot;云霄县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;南平市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;延平区&quot;</span>,<br>            <span class="hljs-string">&quot;建瓯市&quot;</span>,<br>            <span class="hljs-string">&quot;邵武市&quot;</span>,<br>            <span class="hljs-string">&quot;武夷山市&quot;</span>,<br>            <span class="hljs-string">&quot;建阳市&quot;</span>,<br>            <span class="hljs-string">&quot;松溪县&quot;</span>,<br>            <span class="hljs-string">&quot;光泽县&quot;</span>,<br>            <span class="hljs-string">&quot;顺昌县&quot;</span>,<br>            <span class="hljs-string">&quot;浦城县&quot;</span>,<br>            <span class="hljs-string">&quot;政和县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;龙岩市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;新罗区&quot;</span>,<br>            <span class="hljs-string">&quot;漳平市&quot;</span>,<br>            <span class="hljs-string">&quot;长汀县&quot;</span>,<br>            <span class="hljs-string">&quot;武平县&quot;</span>,<br>            <span class="hljs-string">&quot;上杭县&quot;</span>,<br>            <span class="hljs-string">&quot;永定县&quot;</span>,<br>            <span class="hljs-string">&quot;连城县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;宁德市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;蕉城区&quot;</span>,<br>            <span class="hljs-string">&quot;福安市&quot;</span>,<br>            <span class="hljs-string">&quot;福鼎市&quot;</span>,<br>            <span class="hljs-string">&quot;寿宁县&quot;</span>,<br>            <span class="hljs-string">&quot;霞浦县&quot;</span>,<br>            <span class="hljs-string">&quot;柘荣县&quot;</span>,<br>            <span class="hljs-string">&quot;屏南县&quot;</span>,<br>            <span class="hljs-string">&quot;古田县&quot;</span>,<br>            <span class="hljs-string">&quot;周宁县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;江西省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;南昌市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;东湖区&quot;</span>,<br>            <span class="hljs-string">&quot;西湖区&quot;</span>,<br>            <span class="hljs-string">&quot;青云谱区&quot;</span>,<br>            <span class="hljs-string">&quot;湾里区&quot;</span>,<br>            <span class="hljs-string">&quot;青山湖区&quot;</span>,<br>            <span class="hljs-string">&quot;新建县&quot;</span>,<br>            <span class="hljs-string">&quot;南昌县&quot;</span>,<br>            <span class="hljs-string">&quot;进贤县&quot;</span>,<br>            <span class="hljs-string">&quot;安义县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;景德镇市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;珠山区&quot;</span>,<br>            <span class="hljs-string">&quot;昌江区&quot;</span>,<br>            <span class="hljs-string">&quot;乐平市&quot;</span>,<br>            <span class="hljs-string">&quot;浮梁县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;萍乡市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;安源区&quot;</span>,<br>            <span class="hljs-string">&quot;湘东区&quot;</span>,<br>            <span class="hljs-string">&quot;莲花县&quot;</span>,<br>            <span class="hljs-string">&quot;上栗县&quot;</span>,<br>            <span class="hljs-string">&quot;芦溪县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;九江市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;浔阳区&quot;</span>,<br>            <span class="hljs-string">&quot;庐山区&quot;</span>,<br>            <span class="hljs-string">&quot;瑞昌市&quot;</span>,<br>            <span class="hljs-string">&quot;九江县&quot;</span>,<br>            <span class="hljs-string">&quot;星子县&quot;</span>,<br>            <span class="hljs-string">&quot;武宁县&quot;</span>,<br>            <span class="hljs-string">&quot;彭泽县&quot;</span>,<br>            <span class="hljs-string">&quot;永修县&quot;</span>,<br>            <span class="hljs-string">&quot;修水县&quot;</span>,<br>            <span class="hljs-string">&quot;湖口县&quot;</span>,<br>            <span class="hljs-string">&quot;德安县&quot;</span>,<br>            <span class="hljs-string">&quot;都昌县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;新余市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;渝水区&quot;</span>,<br>            <span class="hljs-string">&quot;分宜县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;鹰潭市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;月湖区&quot;</span>,<br>            <span class="hljs-string">&quot;贵溪市&quot;</span>,<br>            <span class="hljs-string">&quot;余江县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;赣州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;章贡区&quot;</span>,<br>            <span class="hljs-string">&quot;瑞金市&quot;</span>,<br>            <span class="hljs-string">&quot;南康市&quot;</span>,<br>            <span class="hljs-string">&quot;石城县&quot;</span>,<br>            <span class="hljs-string">&quot;安远县&quot;</span>,<br>            <span class="hljs-string">&quot;赣县&quot;</span>,<br>            <span class="hljs-string">&quot;宁都县&quot;</span>,<br>            <span class="hljs-string">&quot;寻乌县&quot;</span>,<br>            <span class="hljs-string">&quot;兴国县&quot;</span>,<br>            <span class="hljs-string">&quot;定南县&quot;</span>,<br>            <span class="hljs-string">&quot;上犹县&quot;</span>,<br>            <span class="hljs-string">&quot;于都县&quot;</span>,<br>            <span class="hljs-string">&quot;龙南县&quot;</span>,<br>            <span class="hljs-string">&quot;崇义县&quot;</span>,<br>            <span class="hljs-string">&quot;信丰县&quot;</span>,<br>            <span class="hljs-string">&quot;全南县&quot;</span>,<br>            <span class="hljs-string">&quot;大余县&quot;</span>,<br>            <span class="hljs-string">&quot;会昌县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;吉安市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;吉州区&quot;</span>,<br>            <span class="hljs-string">&quot;青原区&quot;</span>,<br>            <span class="hljs-string">&quot;井冈山市&quot;</span>,<br>            <span class="hljs-string">&quot;吉安县&quot;</span>,<br>            <span class="hljs-string">&quot;永丰县&quot;</span>,<br>            <span class="hljs-string">&quot;永新县&quot;</span>,<br>            <span class="hljs-string">&quot;新干县&quot;</span>,<br>            <span class="hljs-string">&quot;泰和县&quot;</span>,<br>            <span class="hljs-string">&quot;峡江县&quot;</span>,<br>            <span class="hljs-string">&quot;遂川县&quot;</span>,<br>            <span class="hljs-string">&quot;安福县&quot;</span>,<br>            <span class="hljs-string">&quot;吉水县&quot;</span>,<br>            <span class="hljs-string">&quot;万安县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;宜春市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;袁州区&quot;</span>,<br>            <span class="hljs-string">&quot;丰城市&quot;</span>,<br>            <span class="hljs-string">&quot;樟树市&quot;</span>,<br>            <span class="hljs-string">&quot;高安市&quot;</span>,<br>            <span class="hljs-string">&quot;铜鼓县&quot;</span>,<br>            <span class="hljs-string">&quot;靖安县&quot;</span>,<br>            <span class="hljs-string">&quot;宜丰县&quot;</span>,<br>            <span class="hljs-string">&quot;奉新县&quot;</span>,<br>            <span class="hljs-string">&quot;万载县&quot;</span>,<br>            <span class="hljs-string">&quot;上高县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;抚州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;临川区&quot;</span>,<br>            <span class="hljs-string">&quot;南丰县&quot;</span>,<br>            <span class="hljs-string">&quot;乐安县&quot;</span>,<br>            <span class="hljs-string">&quot;金溪县&quot;</span>,<br>            <span class="hljs-string">&quot;南城县&quot;</span>,<br>            <span class="hljs-string">&quot;东乡县&quot;</span>,<br>            <span class="hljs-string">&quot;资溪县&quot;</span>,<br>            <span class="hljs-string">&quot;宜黄县&quot;</span>,<br>            <span class="hljs-string">&quot;广昌县&quot;</span>,<br>            <span class="hljs-string">&quot;黎川县&quot;</span>,<br>            <span class="hljs-string">&quot;崇仁县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;上饶市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;信州区&quot;</span>,<br>            <span class="hljs-string">&quot;德兴市&quot;</span>,<br>            <span class="hljs-string">&quot;上饶县&quot;</span>,<br>            <span class="hljs-string">&quot;广丰县&quot;</span>,<br>            <span class="hljs-string">&quot;鄱阳县&quot;</span>,<br>            <span class="hljs-string">&quot;婺源县&quot;</span>,<br>            <span class="hljs-string">&quot;铅山县&quot;</span>,<br>            <span class="hljs-string">&quot;余干县&quot;</span>,<br>            <span class="hljs-string">&quot;横峰县&quot;</span>,<br>            <span class="hljs-string">&quot;弋阳县&quot;</span>,<br>            <span class="hljs-string">&quot;玉山县&quot;</span>,<br>            <span class="hljs-string">&quot;万年县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;山东省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;济南市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;市中区&quot;</span>,<br>            <span class="hljs-string">&quot;历下区&quot;</span>,<br>            <span class="hljs-string">&quot;天桥区&quot;</span>,<br>            <span class="hljs-string">&quot;槐荫区&quot;</span>,<br>            <span class="hljs-string">&quot;历城区&quot;</span>,<br>            <span class="hljs-string">&quot;长清区&quot;</span>,<br>            <span class="hljs-string">&quot;章丘市&quot;</span>,<br>            <span class="hljs-string">&quot;平阴县&quot;</span>,<br>            <span class="hljs-string">&quot;济阳县&quot;</span>,<br>            <span class="hljs-string">&quot;商河县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;青岛市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;市南区&quot;</span>,<br>            <span class="hljs-string">&quot;市北区&quot;</span>,<br>            <span class="hljs-string">&quot;城阳区&quot;</span>,<br>            <span class="hljs-string">&quot;四方区&quot;</span>,<br>            <span class="hljs-string">&quot;李沧区&quot;</span>,<br>            <span class="hljs-string">&quot;黄岛区&quot;</span>,<br>            <span class="hljs-string">&quot;崂山区&quot;</span>,<br>            <span class="hljs-string">&quot;胶南市&quot;</span>,<br>            <span class="hljs-string">&quot;胶州市&quot;</span>,<br>            <span class="hljs-string">&quot;平度市&quot;</span>,<br>            <span class="hljs-string">&quot;莱西市&quot;</span>,<br>            <span class="hljs-string">&quot;即墨市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;淄博市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;张店区&quot;</span>,<br>            <span class="hljs-string">&quot;临淄区&quot;</span>,<br>            <span class="hljs-string">&quot;淄川区&quot;</span>,<br>            <span class="hljs-string">&quot;博山区&quot;</span>,<br>            <span class="hljs-string">&quot;周村区&quot;</span>,<br>            <span class="hljs-string">&quot;桓台县&quot;</span>,<br>            <span class="hljs-string">&quot;高青县&quot;</span>,<br>            <span class="hljs-string">&quot;沂源县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;枣庄市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;市中区&quot;</span>,<br>            <span class="hljs-string">&quot;山亭区&quot;</span>,<br>            <span class="hljs-string">&quot;峄城区&quot;</span>,<br>            <span class="hljs-string">&quot;台儿庄区&quot;</span>,<br>            <span class="hljs-string">&quot;薛城区&quot;</span>,<br>            <span class="hljs-string">&quot;滕州市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;东营市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;东营区&quot;</span>,<br>            <span class="hljs-string">&quot;河口区&quot;</span>,<br>            <span class="hljs-string">&quot;垦利县&quot;</span>,<br>            <span class="hljs-string">&quot;广饶县&quot;</span>,<br>            <span class="hljs-string">&quot;利津县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;烟台市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;芝罘区&quot;</span>,<br>            <span class="hljs-string">&quot;福山区&quot;</span>,<br>            <span class="hljs-string">&quot;牟平区&quot;</span>,<br>            <span class="hljs-string">&quot;莱山区&quot;</span>,<br>            <span class="hljs-string">&quot;龙口市&quot;</span>,<br>            <span class="hljs-string">&quot;莱阳市&quot;</span>,<br>            <span class="hljs-string">&quot;莱州市&quot;</span>,<br>            <span class="hljs-string">&quot;招远市&quot;</span>,<br>            <span class="hljs-string">&quot;蓬莱市&quot;</span>,<br>            <span class="hljs-string">&quot;栖霞市&quot;</span>,<br>            <span class="hljs-string">&quot;海阳市&quot;</span>,<br>            <span class="hljs-string">&quot;长岛县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;潍坊市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;潍城区&quot;</span>,<br>            <span class="hljs-string">&quot;寒亭区&quot;</span>,<br>            <span class="hljs-string">&quot;坊子区&quot;</span>,<br>            <span class="hljs-string">&quot;奎文区&quot;</span>,<br>            <span class="hljs-string">&quot;青州市&quot;</span>,<br>            <span class="hljs-string">&quot;诸城市&quot;</span>,<br>            <span class="hljs-string">&quot;寿光市&quot;</span>,<br>            <span class="hljs-string">&quot;安丘市&quot;</span>,<br>            <span class="hljs-string">&quot;高密市&quot;</span>,<br>            <span class="hljs-string">&quot;昌邑市&quot;</span>,<br>            <span class="hljs-string">&quot;昌乐县&quot;</span>,<br>            <span class="hljs-string">&quot;临朐县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;济宁市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;市中区&quot;</span>,<br>            <span class="hljs-string">&quot;任城区&quot;</span>,<br>            <span class="hljs-string">&quot;曲阜市&quot;</span>,<br>            <span class="hljs-string">&quot;兖州市&quot;</span>,<br>            <span class="hljs-string">&quot;邹城市&quot;</span>,<br>            <span class="hljs-string">&quot;鱼台县&quot;</span>,<br>            <span class="hljs-string">&quot;金乡县&quot;</span>,<br>            <span class="hljs-string">&quot;嘉祥县&quot;</span>,<br>            <span class="hljs-string">&quot;微山县&quot;</span>,<br>            <span class="hljs-string">&quot;汶上县&quot;</span>,<br>            <span class="hljs-string">&quot;泗水县&quot;</span>,<br>            <span class="hljs-string">&quot;梁山县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;泰安市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;泰山区&quot;</span>,<br>            <span class="hljs-string">&quot;岱岳区&quot;</span>,<br>            <span class="hljs-string">&quot;新泰市&quot;</span>,<br>            <span class="hljs-string">&quot;肥城市&quot;</span>,<br>            <span class="hljs-string">&quot;宁阳县&quot;</span>,<br>            <span class="hljs-string">&quot;东平县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;威海市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;环翠区&quot;</span>,<br>            <span class="hljs-string">&quot;乳山市&quot;</span>,<br>            <span class="hljs-string">&quot;文登市&quot;</span>,<br>            <span class="hljs-string">&quot;荣成市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;日照市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;东港区&quot;</span>,<br>            <span class="hljs-string">&quot;岚山区&quot;</span>,<br>            <span class="hljs-string">&quot;五莲县&quot;</span>,<br>            <span class="hljs-string">&quot;莒县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;莱芜市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;莱城区&quot;</span>,<br>            <span class="hljs-string">&quot;钢城区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;临沂市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;兰山区&quot;</span>,<br>            <span class="hljs-string">&quot;罗庄区&quot;</span>,<br>            <span class="hljs-string">&quot;河东区&quot;</span>,<br>            <span class="hljs-string">&quot;沂南县&quot;</span>,<br>            <span class="hljs-string">&quot;郯城县&quot;</span>,<br>            <span class="hljs-string">&quot;沂水县&quot;</span>,<br>            <span class="hljs-string">&quot;苍山县&quot;</span>,<br>            <span class="hljs-string">&quot;费县&quot;</span>,<br>            <span class="hljs-string">&quot;平邑县&quot;</span>,<br>            <span class="hljs-string">&quot;莒南县&quot;</span>,<br>            <span class="hljs-string">&quot;蒙阴县&quot;</span>,<br>            <span class="hljs-string">&quot;临沭县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;德州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;德城区&quot;</span>,<br>            <span class="hljs-string">&quot;乐陵市&quot;</span>,<br>            <span class="hljs-string">&quot;禹城市&quot;</span>,<br>            <span class="hljs-string">&quot;陵县&quot;</span>,<br>            <span class="hljs-string">&quot;宁津县&quot;</span>,<br>            <span class="hljs-string">&quot;齐河县&quot;</span>,<br>            <span class="hljs-string">&quot;武城县&quot;</span>,<br>            <span class="hljs-string">&quot;庆云县&quot;</span>,<br>            <span class="hljs-string">&quot;平原县&quot;</span>,<br>            <span class="hljs-string">&quot;夏津县&quot;</span>,<br>            <span class="hljs-string">&quot;临邑县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;聊城市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;东昌府区&quot;</span>,<br>            <span class="hljs-string">&quot;临清市&quot;</span>,<br>            <span class="hljs-string">&quot;高唐县&quot;</span>,<br>            <span class="hljs-string">&quot;阳谷县&quot;</span>,<br>            <span class="hljs-string">&quot;茌平县&quot;</span>,<br>            <span class="hljs-string">&quot;莘县&quot;</span>,<br>            <span class="hljs-string">&quot;东阿县&quot;</span>,<br>            <span class="hljs-string">&quot;冠县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;滨州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;滨城区&quot;</span>,<br>            <span class="hljs-string">&quot;邹平县&quot;</span>,<br>            <span class="hljs-string">&quot;沾化县&quot;</span>,<br>            <span class="hljs-string">&quot;惠民县&quot;</span>,<br>            <span class="hljs-string">&quot;博兴县&quot;</span>,<br>            <span class="hljs-string">&quot;阳信县&quot;</span>,<br>            <span class="hljs-string">&quot;无棣县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;菏泽市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;牡丹区&quot;</span>,<br>            <span class="hljs-string">&quot;鄄城县&quot;</span>,<br>            <span class="hljs-string">&quot;单县&quot;</span>,<br>            <span class="hljs-string">&quot;郓城县&quot;</span>,<br>            <span class="hljs-string">&quot;曹县&quot;</span>,<br>            <span class="hljs-string">&quot;定陶县&quot;</span>,<br>            <span class="hljs-string">&quot;巨野县&quot;</span>,<br>            <span class="hljs-string">&quot;东明县&quot;</span>,<br>            <span class="hljs-string">&quot;成武县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;河南省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;郑州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;中原区&quot;</span>,<br>            <span class="hljs-string">&quot;金水区&quot;</span>,<br>            <span class="hljs-string">&quot;二七区&quot;</span>,<br>            <span class="hljs-string">&quot;管城回族区&quot;</span>,<br>            <span class="hljs-string">&quot;上街区&quot;</span>,<br>            <span class="hljs-string">&quot;惠济区&quot;</span>,<br>            <span class="hljs-string">&quot;巩义市&quot;</span>,<br>            <span class="hljs-string">&quot;新郑市&quot;</span>,<br>            <span class="hljs-string">&quot;新密市&quot;</span>,<br>            <span class="hljs-string">&quot;登封市&quot;</span>,<br>            <span class="hljs-string">&quot;荥阳市&quot;</span>,<br>            <span class="hljs-string">&quot;中牟县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;开封市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;鼓楼区&quot;</span>,<br>            <span class="hljs-string">&quot;龙亭区&quot;</span>,<br>            <span class="hljs-string">&quot;顺河回族区&quot;</span>,<br>            <span class="hljs-string">&quot;禹王台区&quot;</span>,<br>            <span class="hljs-string">&quot;金明区&quot;</span>,<br>            <span class="hljs-string">&quot;开封县&quot;</span>,<br>            <span class="hljs-string">&quot;尉氏县&quot;</span>,<br>            <span class="hljs-string">&quot;兰考县&quot;</span>,<br>            <span class="hljs-string">&quot;杞县&quot;</span>,<br>            <span class="hljs-string">&quot;通许县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;洛阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;西工区&quot;</span>,<br>            <span class="hljs-string">&quot;老城区&quot;</span>,<br>            <span class="hljs-string">&quot;涧西区&quot;</span>,<br>            <span class="hljs-string">&quot;瀍河回族区&quot;</span>,<br>            <span class="hljs-string">&quot;洛龙区&quot;</span>,<br>            <span class="hljs-string">&quot;吉利区&quot;</span>,<br>            <span class="hljs-string">&quot;偃师市&quot;</span>,<br>            <span class="hljs-string">&quot;孟津县&quot;</span>,<br>            <span class="hljs-string">&quot;汝阳县&quot;</span>,<br>            <span class="hljs-string">&quot;伊川县&quot;</span>,<br>            <span class="hljs-string">&quot;洛宁县&quot;</span>,<br>            <span class="hljs-string">&quot;嵩县&quot;</span>,<br>            <span class="hljs-string">&quot;宜阳县&quot;</span>,<br>            <span class="hljs-string">&quot;新安县&quot;</span>,<br>            <span class="hljs-string">&quot;栾川县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;平顶山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;新华区&quot;</span>,<br>            <span class="hljs-string">&quot;卫东区&quot;</span>,<br>            <span class="hljs-string">&quot;湛河区&quot;</span>,<br>            <span class="hljs-string">&quot;石龙区&quot;</span>,<br>            <span class="hljs-string">&quot;汝州市&quot;</span>,<br>            <span class="hljs-string">&quot;舞钢市&quot;</span>,<br>            <span class="hljs-string">&quot;宝丰县&quot;</span>,<br>            <span class="hljs-string">&quot;叶县&quot;</span>,<br>            <span class="hljs-string">&quot;郏县&quot;</span>,<br>            <span class="hljs-string">&quot;鲁山县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;安阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;北关区&quot;</span>,<br>            <span class="hljs-string">&quot;文峰区&quot;</span>,<br>            <span class="hljs-string">&quot;殷都区&quot;</span>,<br>            <span class="hljs-string">&quot;龙安区&quot;</span>,<br>            <span class="hljs-string">&quot;林州市&quot;</span>,<br>            <span class="hljs-string">&quot;安阳县&quot;</span>,<br>            <span class="hljs-string">&quot;滑县&quot;</span>,<br>            <span class="hljs-string">&quot;内黄县&quot;</span>,<br>            <span class="hljs-string">&quot;汤阴县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;鹤壁市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;淇滨区&quot;</span>,<br>            <span class="hljs-string">&quot;山城区&quot;</span>,<br>            <span class="hljs-string">&quot;鹤山区&quot;</span>,<br>            <span class="hljs-string">&quot;浚县&quot;</span>,<br>            <span class="hljs-string">&quot;淇县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;新乡市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;卫滨区&quot;</span>,<br>            <span class="hljs-string">&quot;红旗区&quot;</span>,<br>            <span class="hljs-string">&quot;凤泉区&quot;</span>,<br>            <span class="hljs-string">&quot;牧野区&quot;</span>,<br>            <span class="hljs-string">&quot;卫辉市&quot;</span>,<br>            <span class="hljs-string">&quot;辉县市&quot;</span>,<br>            <span class="hljs-string">&quot;新乡县&quot;</span>,<br>            <span class="hljs-string">&quot;获嘉县&quot;</span>,<br>            <span class="hljs-string">&quot;原阳县&quot;</span>,<br>            <span class="hljs-string">&quot;长垣县&quot;</span>,<br>            <span class="hljs-string">&quot;封丘县&quot;</span>,<br>            <span class="hljs-string">&quot;延津县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;焦作市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;解放区&quot;</span>,<br>            <span class="hljs-string">&quot;中站区&quot;</span>,<br>            <span class="hljs-string">&quot;马村区&quot;</span>,<br>            <span class="hljs-string">&quot;山阳区&quot;</span>,<br>            <span class="hljs-string">&quot;沁阳市&quot;</span>,<br>            <span class="hljs-string">&quot;孟州市&quot;</span>,<br>            <span class="hljs-string">&quot;修武县&quot;</span>,<br>            <span class="hljs-string">&quot;温县&quot;</span>,<br>            <span class="hljs-string">&quot;武陟县&quot;</span>,<br>            <span class="hljs-string">&quot;博爱县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;濮阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;华龙区&quot;</span>,<br>            <span class="hljs-string">&quot;濮阳县&quot;</span>,<br>            <span class="hljs-string">&quot;南乐县&quot;</span>,<br>            <span class="hljs-string">&quot;台前县&quot;</span>,<br>            <span class="hljs-string">&quot;清丰县&quot;</span>,<br>            <span class="hljs-string">&quot;范县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;许昌市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;魏都区&quot;</span>,<br>            <span class="hljs-string">&quot;禹州市&quot;</span>,<br>            <span class="hljs-string">&quot;长葛市&quot;</span>,<br>            <span class="hljs-string">&quot;许昌县&quot;</span>,<br>            <span class="hljs-string">&quot;鄢陵县&quot;</span>,<br>            <span class="hljs-string">&quot;襄城县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;漯河市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;源汇区&quot;</span>,<br>            <span class="hljs-string">&quot;郾城区&quot;</span>,<br>            <span class="hljs-string">&quot;召陵区&quot;</span>,<br>            <span class="hljs-string">&quot;临颍县&quot;</span>,<br>            <span class="hljs-string">&quot;舞阳县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;三门峡市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;湖滨区&quot;</span>,<br>            <span class="hljs-string">&quot;义马市&quot;</span>,<br>            <span class="hljs-string">&quot;灵宝市&quot;</span>,<br>            <span class="hljs-string">&quot;渑池县&quot;</span>,<br>            <span class="hljs-string">&quot;卢氏县&quot;</span>,<br>            <span class="hljs-string">&quot;陕县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;南阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;卧龙区&quot;</span>,<br>            <span class="hljs-string">&quot;宛城区&quot;</span>,<br>            <span class="hljs-string">&quot;邓州市&quot;</span>,<br>            <span class="hljs-string">&quot;桐柏县&quot;</span>,<br>            <span class="hljs-string">&quot;方城县&quot;</span>,<br>            <span class="hljs-string">&quot;淅川县&quot;</span>,<br>            <span class="hljs-string">&quot;镇平县&quot;</span>,<br>            <span class="hljs-string">&quot;唐河县&quot;</span>,<br>            <span class="hljs-string">&quot;南召县&quot;</span>,<br>            <span class="hljs-string">&quot;内乡县&quot;</span>,<br>            <span class="hljs-string">&quot;新野县&quot;</span>,<br>            <span class="hljs-string">&quot;社旗县&quot;</span>,<br>            <span class="hljs-string">&quot;西峡县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;商丘市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;梁园区&quot;</span>,<br>            <span class="hljs-string">&quot;睢阳区&quot;</span>,<br>            <span class="hljs-string">&quot;永城市&quot;</span>,<br>            <span class="hljs-string">&quot;宁陵县&quot;</span>,<br>            <span class="hljs-string">&quot;虞城县&quot;</span>,<br>            <span class="hljs-string">&quot;民权县&quot;</span>,<br>            <span class="hljs-string">&quot;夏邑县&quot;</span>,<br>            <span class="hljs-string">&quot;柘城县&quot;</span>,<br>            <span class="hljs-string">&quot;睢县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;信阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;浉河区&quot;</span>,<br>            <span class="hljs-string">&quot;平桥区&quot;</span>,<br>            <span class="hljs-string">&quot;潢川县&quot;</span>,<br>            <span class="hljs-string">&quot;淮滨县&quot;</span>,<br>            <span class="hljs-string">&quot;息县&quot;</span>,<br>            <span class="hljs-string">&quot;新县&quot;</span>,<br>            <span class="hljs-string">&quot;商城县&quot;</span>,<br>            <span class="hljs-string">&quot;固始县&quot;</span>,<br>            <span class="hljs-string">&quot;罗山县&quot;</span>,<br>            <span class="hljs-string">&quot;光山县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;周口市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;川汇区&quot;</span>,<br>            <span class="hljs-string">&quot;项城市&quot;</span>,<br>            <span class="hljs-string">&quot;商水县&quot;</span>,<br>            <span class="hljs-string">&quot;淮阳县&quot;</span>,<br>            <span class="hljs-string">&quot;太康县&quot;</span>,<br>            <span class="hljs-string">&quot;鹿邑县&quot;</span>,<br>            <span class="hljs-string">&quot;西华县&quot;</span>,<br>            <span class="hljs-string">&quot;扶沟县&quot;</span>,<br>            <span class="hljs-string">&quot;沈丘县&quot;</span>,<br>            <span class="hljs-string">&quot;郸城县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;驻马店市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;驿城区&quot;</span>,<br>            <span class="hljs-string">&quot;确山县&quot;</span>,<br>            <span class="hljs-string">&quot;新蔡县&quot;</span>,<br>            <span class="hljs-string">&quot;上蔡县&quot;</span>,<br>            <span class="hljs-string">&quot;西平县&quot;</span>,<br>            <span class="hljs-string">&quot;泌阳县&quot;</span>,<br>            <span class="hljs-string">&quot;平舆县&quot;</span>,<br>            <span class="hljs-string">&quot;汝南县&quot;</span>,<br>            <span class="hljs-string">&quot;遂平县&quot;</span>,<br>            <span class="hljs-string">&quot;正阳县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;焦作市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;济源市&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;湖北省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;武汉市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;江岸区&quot;</span>,<br>            <span class="hljs-string">&quot;武昌区&quot;</span>,<br>            <span class="hljs-string">&quot;江汉区&quot;</span>,<br>            <span class="hljs-string">&quot;硚口区&quot;</span>,<br>            <span class="hljs-string">&quot;汉阳区&quot;</span>,<br>            <span class="hljs-string">&quot;青山区&quot;</span>,<br>            <span class="hljs-string">&quot;洪山区&quot;</span>,<br>            <span class="hljs-string">&quot;东西湖区&quot;</span>,<br>            <span class="hljs-string">&quot;汉南区&quot;</span>,<br>            <span class="hljs-string">&quot;蔡甸区&quot;</span>,<br>            <span class="hljs-string">&quot;江夏区&quot;</span>,<br>            <span class="hljs-string">&quot;黄陂区&quot;</span>,<br>            <span class="hljs-string">&quot;新洲区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;黄石市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;黄石港区&quot;</span>,<br>            <span class="hljs-string">&quot;西塞山区&quot;</span>,<br>            <span class="hljs-string">&quot;下陆区&quot;</span>,<br>            <span class="hljs-string">&quot;铁山区&quot;</span>,<br>            <span class="hljs-string">&quot;大冶市&quot;</span>,<br>            <span class="hljs-string">&quot;阳新县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;十堰市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;张湾区&quot;</span>,<br>            <span class="hljs-string">&quot;茅箭区&quot;</span>,<br>            <span class="hljs-string">&quot;丹江口市&quot;</span>,<br>            <span class="hljs-string">&quot;郧县&quot;</span>,<br>            <span class="hljs-string">&quot;竹山县&quot;</span>,<br>            <span class="hljs-string">&quot;房县&quot;</span>,<br>            <span class="hljs-string">&quot;郧西县&quot;</span>,<br>            <span class="hljs-string">&quot;竹溪县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;荆州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;沙市区&quot;</span>,<br>            <span class="hljs-string">&quot;荆州区&quot;</span>,<br>            <span class="hljs-string">&quot;洪湖市&quot;</span>,<br>            <span class="hljs-string">&quot;石首市&quot;</span>,<br>            <span class="hljs-string">&quot;松滋市&quot;</span>,<br>            <span class="hljs-string">&quot;监利县&quot;</span>,<br>            <span class="hljs-string">&quot;公安县&quot;</span>,<br>            <span class="hljs-string">&quot;江陵县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;宜昌市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;西陵区&quot;</span>,<br>            <span class="hljs-string">&quot;伍家岗区&quot;</span>,<br>            <span class="hljs-string">&quot;点军区&quot;</span>,<br>            <span class="hljs-string">&quot;猇亭区&quot;</span>,<br>            <span class="hljs-string">&quot;夷陵区&quot;</span>,<br>            <span class="hljs-string">&quot;宜都市&quot;</span>,<br>            <span class="hljs-string">&quot;当阳市&quot;</span>,<br>            <span class="hljs-string">&quot;枝江市&quot;</span>,<br>            <span class="hljs-string">&quot;秭归县&quot;</span>,<br>            <span class="hljs-string">&quot;远安县&quot;</span>,<br>            <span class="hljs-string">&quot;兴山县&quot;</span>,<br>            <span class="hljs-string">&quot;五峰土家族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;长阳土家族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;襄樊市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;襄城区&quot;</span>,<br>            <span class="hljs-string">&quot;樊城区&quot;</span>,<br>            <span class="hljs-string">&quot;襄阳区&quot;</span>,<br>            <span class="hljs-string">&quot;老河口市&quot;</span>,<br>            <span class="hljs-string">&quot;枣阳市&quot;</span>,<br>            <span class="hljs-string">&quot;宜城市&quot;</span>,<br>            <span class="hljs-string">&quot;南漳县&quot;</span>,<br>            <span class="hljs-string">&quot;谷城县&quot;</span>,<br>            <span class="hljs-string">&quot;保康县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;鄂州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;鄂城区&quot;</span>,<br>            <span class="hljs-string">&quot;华容区&quot;</span>,<br>            <span class="hljs-string">&quot;梁子湖区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;荆门市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;东宝区&quot;</span>,<br>            <span class="hljs-string">&quot;掇刀区&quot;</span>,<br>            <span class="hljs-string">&quot;钟祥市&quot;</span>,<br>            <span class="hljs-string">&quot;京山县&quot;</span>,<br>            <span class="hljs-string">&quot;沙洋县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;孝感市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;孝南区&quot;</span>,<br>            <span class="hljs-string">&quot;应城市&quot;</span>,<br>            <span class="hljs-string">&quot;安陆市&quot;</span>,<br>            <span class="hljs-string">&quot;汉川市&quot;</span>,<br>            <span class="hljs-string">&quot;云梦县&quot;</span>,<br>            <span class="hljs-string">&quot;大悟县&quot;</span>,<br>            <span class="hljs-string">&quot;孝昌县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;黄冈市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;黄州区&quot;</span>,<br>            <span class="hljs-string">&quot;麻城市&quot;</span>,<br>            <span class="hljs-string">&quot;武穴市&quot;</span>,<br>            <span class="hljs-string">&quot;红安县&quot;</span>,<br>            <span class="hljs-string">&quot;罗田县&quot;</span>,<br>            <span class="hljs-string">&quot;浠水县&quot;</span>,<br>            <span class="hljs-string">&quot;蕲春县&quot;</span>,<br>            <span class="hljs-string">&quot;黄梅县&quot;</span>,<br>            <span class="hljs-string">&quot;英山县&quot;</span>,<br>            <span class="hljs-string">&quot;团风县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;咸宁市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;咸安区&quot;</span>,<br>            <span class="hljs-string">&quot;赤壁市&quot;</span>,<br>            <span class="hljs-string">&quot;嘉鱼县&quot;</span>,<br>            <span class="hljs-string">&quot;通山县&quot;</span>,<br>            <span class="hljs-string">&quot;崇阳县&quot;</span>,<br>            <span class="hljs-string">&quot;通城县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;随州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;曾都区&quot;</span>,<br>            <span class="hljs-string">&quot;广水市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;恩施土家族苗族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;恩施市&quot;</span>,<br>            <span class="hljs-string">&quot;利川市&quot;</span>,<br>            <span class="hljs-string">&quot;建始县&quot;</span>,<br>            <span class="hljs-string">&quot;来凤县&quot;</span>,<br>            <span class="hljs-string">&quot;巴东县&quot;</span>,<br>            <span class="hljs-string">&quot;鹤峰县&quot;</span>,<br>            <span class="hljs-string">&quot;宣恩县&quot;</span>,<br>            <span class="hljs-string">&quot;咸丰县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;仙桃市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;仙桃&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;天门市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;天门&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;潜江市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;潜江&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;神农架林区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;神农架林区&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;湖南省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;长沙市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;岳麓区&quot;</span>,<br>            <span class="hljs-string">&quot;芙蓉区&quot;</span>,<br>            <span class="hljs-string">&quot;天心区&quot;</span>,<br>            <span class="hljs-string">&quot;开福区&quot;</span>,<br>            <span class="hljs-string">&quot;雨花区&quot;</span>,<br>            <span class="hljs-string">&quot;浏阳市&quot;</span>,<br>            <span class="hljs-string">&quot;长沙县&quot;</span>,<br>            <span class="hljs-string">&quot;望城县&quot;</span>,<br>            <span class="hljs-string">&quot;宁乡县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;株洲市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;天元区&quot;</span>,<br>            <span class="hljs-string">&quot;荷塘区&quot;</span>,<br>            <span class="hljs-string">&quot;芦淞区&quot;</span>,<br>            <span class="hljs-string">&quot;石峰区&quot;</span>,<br>            <span class="hljs-string">&quot;醴陵市&quot;</span>,<br>            <span class="hljs-string">&quot;株洲县&quot;</span>,<br>            <span class="hljs-string">&quot;炎陵县&quot;</span>,<br>            <span class="hljs-string">&quot;茶陵县&quot;</span>,<br>            <span class="hljs-string">&quot;攸县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;湘潭市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;岳塘区&quot;</span>,<br>            <span class="hljs-string">&quot;雨湖区&quot;</span>,<br>            <span class="hljs-string">&quot;湘乡市&quot;</span>,<br>            <span class="hljs-string">&quot;韶山市&quot;</span>,<br>            <span class="hljs-string">&quot;湘潭县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;衡阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;雁峰区&quot;</span>,<br>            <span class="hljs-string">&quot;珠晖区&quot;</span>,<br>            <span class="hljs-string">&quot;石鼓区&quot;</span>,<br>            <span class="hljs-string">&quot;蒸湘区&quot;</span>,<br>            <span class="hljs-string">&quot;南岳区&quot;</span>,<br>            <span class="hljs-string">&quot;耒阳市&quot;</span>,<br>            <span class="hljs-string">&quot;常宁市&quot;</span>,<br>            <span class="hljs-string">&quot;衡阳县&quot;</span>,<br>            <span class="hljs-string">&quot;衡东县&quot;</span>,<br>            <span class="hljs-string">&quot;衡山县&quot;</span>,<br>            <span class="hljs-string">&quot;衡南县&quot;</span>,<br>            <span class="hljs-string">&quot;祁东县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;邵阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;双清区&quot;</span>,<br>            <span class="hljs-string">&quot;大祥区&quot;</span>,<br>            <span class="hljs-string">&quot;北塔区&quot;</span>,<br>            <span class="hljs-string">&quot;武冈市&quot;</span>,<br>            <span class="hljs-string">&quot;邵东县&quot;</span>,<br>            <span class="hljs-string">&quot;洞口县&quot;</span>,<br>            <span class="hljs-string">&quot;新邵县&quot;</span>,<br>            <span class="hljs-string">&quot;绥宁县&quot;</span>,<br>            <span class="hljs-string">&quot;新宁县&quot;</span>,<br>            <span class="hljs-string">&quot;邵阳县&quot;</span>,<br>            <span class="hljs-string">&quot;隆回县&quot;</span>,<br>            <span class="hljs-string">&quot;城步苗族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;岳阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;岳阳楼区&quot;</span>,<br>            <span class="hljs-string">&quot;云溪区&quot;</span>,<br>            <span class="hljs-string">&quot;君山区&quot;</span>,<br>            <span class="hljs-string">&quot;临湘市&quot;</span>,<br>            <span class="hljs-string">&quot;汨罗市&quot;</span>,<br>            <span class="hljs-string">&quot;岳阳县&quot;</span>,<br>            <span class="hljs-string">&quot;湘阴县&quot;</span>,<br>            <span class="hljs-string">&quot;平江县&quot;</span>,<br>            <span class="hljs-string">&quot;华容县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;常德市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;武陵区&quot;</span>,<br>            <span class="hljs-string">&quot;鼎城区&quot;</span>,<br>            <span class="hljs-string">&quot;津市市&quot;</span>,<br>            <span class="hljs-string">&quot;澧县&quot;</span>,<br>            <span class="hljs-string">&quot;临澧县&quot;</span>,<br>            <span class="hljs-string">&quot;桃源县&quot;</span>,<br>            <span class="hljs-string">&quot;汉寿县&quot;</span>,<br>            <span class="hljs-string">&quot;安乡县&quot;</span>,<br>            <span class="hljs-string">&quot;石门县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;张家界市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;永定区&quot;</span>,<br>            <span class="hljs-string">&quot;武陵源区&quot;</span>,<br>            <span class="hljs-string">&quot;慈利县&quot;</span>,<br>            <span class="hljs-string">&quot;桑植县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;益阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;赫山区&quot;</span>,<br>            <span class="hljs-string">&quot;资阳区&quot;</span>,<br>            <span class="hljs-string">&quot;沅江市&quot;</span>,<br>            <span class="hljs-string">&quot;桃江县&quot;</span>,<br>            <span class="hljs-string">&quot;南县&quot;</span>,<br>            <span class="hljs-string">&quot;安化县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;郴州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;北湖区&quot;</span>,<br>            <span class="hljs-string">&quot;苏仙区&quot;</span>,<br>            <span class="hljs-string">&quot;资兴市&quot;</span>,<br>            <span class="hljs-string">&quot;宜章县&quot;</span>,<br>            <span class="hljs-string">&quot;汝城县&quot;</span>,<br>            <span class="hljs-string">&quot;安仁县&quot;</span>,<br>            <span class="hljs-string">&quot;嘉禾县&quot;</span>,<br>            <span class="hljs-string">&quot;临武县&quot;</span>,<br>            <span class="hljs-string">&quot;桂东县&quot;</span>,<br>            <span class="hljs-string">&quot;永兴县&quot;</span>,<br>            <span class="hljs-string">&quot;桂阳县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;永州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;冷水滩区&quot;</span>,<br>            <span class="hljs-string">&quot;零陵区&quot;</span>,<br>            <span class="hljs-string">&quot;祁阳县&quot;</span>,<br>            <span class="hljs-string">&quot;蓝山县&quot;</span>,<br>            <span class="hljs-string">&quot;宁远县&quot;</span>,<br>            <span class="hljs-string">&quot;新田县&quot;</span>,<br>            <span class="hljs-string">&quot;东安县&quot;</span>,<br>            <span class="hljs-string">&quot;江永县&quot;</span>,<br>            <span class="hljs-string">&quot;道县&quot;</span>,<br>            <span class="hljs-string">&quot;双牌县&quot;</span>,<br>            <span class="hljs-string">&quot;江华瑶族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;怀化市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;鹤城区&quot;</span>,<br>            <span class="hljs-string">&quot;洪江市&quot;</span>,<br>            <span class="hljs-string">&quot;会同县&quot;</span>,<br>            <span class="hljs-string">&quot;沅陵县&quot;</span>,<br>            <span class="hljs-string">&quot;辰溪县&quot;</span>,<br>            <span class="hljs-string">&quot;溆浦县&quot;</span>,<br>            <span class="hljs-string">&quot;中方县&quot;</span>,<br>            <span class="hljs-string">&quot;新晃侗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;芷江侗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;通道侗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;靖州苗族侗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;麻阳苗族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;娄底市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;娄星区&quot;</span>,<br>            <span class="hljs-string">&quot;冷水江市&quot;</span>,<br>            <span class="hljs-string">&quot;涟源市&quot;</span>,<br>            <span class="hljs-string">&quot;新化县&quot;</span>,<br>            <span class="hljs-string">&quot;双峰县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;湘西土家族苗族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;吉首市&quot;</span>,<br>            <span class="hljs-string">&quot;古丈县&quot;</span>,<br>            <span class="hljs-string">&quot;龙山县&quot;</span>,<br>            <span class="hljs-string">&quot;永顺县&quot;</span>,<br>            <span class="hljs-string">&quot;凤凰县&quot;</span>,<br>            <span class="hljs-string">&quot;泸溪县&quot;</span>,<br>            <span class="hljs-string">&quot;保靖县&quot;</span>,<br>            <span class="hljs-string">&quot;花垣县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;广东省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;广州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;越秀区&quot;</span>,<br>            <span class="hljs-string">&quot;荔湾区&quot;</span>,<br>            <span class="hljs-string">&quot;海珠区&quot;</span>,<br>            <span class="hljs-string">&quot;天河区&quot;</span>,<br>            <span class="hljs-string">&quot;白云区&quot;</span>,<br>            <span class="hljs-string">&quot;黄埔区&quot;</span>,<br>            <span class="hljs-string">&quot;番禺区&quot;</span>,<br>            <span class="hljs-string">&quot;花都区&quot;</span>,<br>            <span class="hljs-string">&quot;南沙区&quot;</span>,<br>            <span class="hljs-string">&quot;萝岗区&quot;</span>,<br>            <span class="hljs-string">&quot;增城市&quot;</span>,<br>            <span class="hljs-string">&quot;从化市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;深圳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;福田区&quot;</span>,<br>            <span class="hljs-string">&quot;罗湖区&quot;</span>,<br>            <span class="hljs-string">&quot;南山区&quot;</span>,<br>            <span class="hljs-string">&quot;宝安区&quot;</span>,<br>            <span class="hljs-string">&quot;龙岗区&quot;</span>,<br>            <span class="hljs-string">&quot;盐田区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;东莞市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;莞城&quot;</span>,<br>            <span class="hljs-string">&quot;常平&quot;</span>,<br>            <span class="hljs-string">&quot;塘厦&quot;</span>,<br>            <span class="hljs-string">&quot;塘厦&quot;</span>,<br>            <span class="hljs-string">&quot;塘厦&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;中山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;中山&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;潮州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;湘桥区&quot;</span>,<br>            <span class="hljs-string">&quot;潮安县&quot;</span>,<br>            <span class="hljs-string">&quot;饶平县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;揭阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;榕城区&quot;</span>,<br>            <span class="hljs-string">&quot;揭东县&quot;</span>,<br>            <span class="hljs-string">&quot;揭西县&quot;</span>,<br>            <span class="hljs-string">&quot;惠来县&quot;</span>,<br>            <span class="hljs-string">&quot;普宁市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;云浮市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;云城区&quot;</span>,<br>            <span class="hljs-string">&quot;新兴县&quot;</span>,<br>            <span class="hljs-string">&quot;郁南县&quot;</span>,<br>            <span class="hljs-string">&quot;云安县&quot;</span>,<br>            <span class="hljs-string">&quot;罗定市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;珠海市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;香洲区&quot;</span>,<br>            <span class="hljs-string">&quot;斗门区&quot;</span>,<br>            <span class="hljs-string">&quot;金湾区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;汕头市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;金平区&quot;</span>,<br>            <span class="hljs-string">&quot;濠江区&quot;</span>,<br>            <span class="hljs-string">&quot;龙湖区&quot;</span>,<br>            <span class="hljs-string">&quot;潮阳区&quot;</span>,<br>            <span class="hljs-string">&quot;潮南区&quot;</span>,<br>            <span class="hljs-string">&quot;澄海区&quot;</span>,<br>            <span class="hljs-string">&quot;南澳县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;韶关市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;浈江区&quot;</span>,<br>            <span class="hljs-string">&quot;武江区&quot;</span>,<br>            <span class="hljs-string">&quot;曲江区&quot;</span>,<br>            <span class="hljs-string">&quot;乐昌市&quot;</span>,<br>            <span class="hljs-string">&quot;南雄市&quot;</span>,<br>            <span class="hljs-string">&quot;始兴县&quot;</span>,<br>            <span class="hljs-string">&quot;仁化县&quot;</span>,<br>            <span class="hljs-string">&quot;翁源县&quot;</span>,<br>            <span class="hljs-string">&quot;新丰县&quot;</span>,<br>            <span class="hljs-string">&quot;乳源瑶族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;佛山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;禅城区&quot;</span>,<br>            <span class="hljs-string">&quot;南海区&quot;</span>,<br>            <span class="hljs-string">&quot;顺德区&quot;</span>,<br>            <span class="hljs-string">&quot;三水区&quot;</span>,<br>            <span class="hljs-string">&quot;高明区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;江门市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;蓬江区&quot;</span>,<br>            <span class="hljs-string">&quot;江海区&quot;</span>,<br>            <span class="hljs-string">&quot;新会区&quot;</span>,<br>            <span class="hljs-string">&quot;恩平市&quot;</span>,<br>            <span class="hljs-string">&quot;台山市&quot;</span>,<br>            <span class="hljs-string">&quot;开平市&quot;</span>,<br>            <span class="hljs-string">&quot;鹤山市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;湛江市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;赤坎区&quot;</span>,<br>            <span class="hljs-string">&quot;霞山区&quot;</span>,<br>            <span class="hljs-string">&quot;坡头区&quot;</span>,<br>            <span class="hljs-string">&quot;麻章区&quot;</span>,<br>            <span class="hljs-string">&quot;吴川市&quot;</span>,<br>            <span class="hljs-string">&quot;廉江市&quot;</span>,<br>            <span class="hljs-string">&quot;雷州市&quot;</span>,<br>            <span class="hljs-string">&quot;遂溪县&quot;</span>,<br>            <span class="hljs-string">&quot;徐闻县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;茂名市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;茂南区&quot;</span>,<br>            <span class="hljs-string">&quot;茂港区&quot;</span>,<br>            <span class="hljs-string">&quot;化州市&quot;</span>,<br>            <span class="hljs-string">&quot;信宜市&quot;</span>,<br>            <span class="hljs-string">&quot;高州市&quot;</span>,<br>            <span class="hljs-string">&quot;电白县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;肇庆市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;端州区&quot;</span>,<br>            <span class="hljs-string">&quot;鼎湖区&quot;</span>,<br>            <span class="hljs-string">&quot;高要市&quot;</span>,<br>            <span class="hljs-string">&quot;四会市&quot;</span>,<br>            <span class="hljs-string">&quot;广宁县&quot;</span>,<br>            <span class="hljs-string">&quot;怀集县&quot;</span>,<br>            <span class="hljs-string">&quot;封开县&quot;</span>,<br>            <span class="hljs-string">&quot;德庆县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;惠州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;惠城区&quot;</span>,<br>            <span class="hljs-string">&quot;惠阳区&quot;</span>,<br>            <span class="hljs-string">&quot;博罗县&quot;</span>,<br>            <span class="hljs-string">&quot;惠东县&quot;</span>,<br>            <span class="hljs-string">&quot;龙门县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;梅州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;梅江区&quot;</span>,<br>            <span class="hljs-string">&quot;兴宁市&quot;</span>,<br>            <span class="hljs-string">&quot;梅县&quot;</span>,<br>            <span class="hljs-string">&quot;大埔县&quot;</span>,<br>            <span class="hljs-string">&quot;丰顺县&quot;</span>,<br>            <span class="hljs-string">&quot;五华县&quot;</span>,<br>            <span class="hljs-string">&quot;平远县&quot;</span>,<br>            <span class="hljs-string">&quot;蕉岭县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;汕尾市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;城区&quot;</span>,<br>            <span class="hljs-string">&quot;陆丰市&quot;</span>,<br>            <span class="hljs-string">&quot;海丰县&quot;</span>,<br>            <span class="hljs-string">&quot;陆河县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;河源市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;源城区&quot;</span>,<br>            <span class="hljs-string">&quot;紫金县&quot;</span>,<br>            <span class="hljs-string">&quot;龙川县&quot;</span>,<br>            <span class="hljs-string">&quot;连平县&quot;</span>,<br>            <span class="hljs-string">&quot;和平县&quot;</span>,<br>            <span class="hljs-string">&quot;东源县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;阳江市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;江城区&quot;</span>,<br>            <span class="hljs-string">&quot;阳春市&quot;</span>,<br>            <span class="hljs-string">&quot;阳西县&quot;</span>,<br>            <span class="hljs-string">&quot;阳东县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;清远市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;清城区&quot;</span>,<br>            <span class="hljs-string">&quot;英德市&quot;</span>,<br>            <span class="hljs-string">&quot;连州市&quot;</span>,<br>            <span class="hljs-string">&quot;佛冈县&quot;</span>,<br>            <span class="hljs-string">&quot;阳山县&quot;</span>,<br>            <span class="hljs-string">&quot;清新县&quot;</span>,<br>            <span class="hljs-string">&quot;连山壮族瑶族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;连南瑶族自治县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;广西&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;南宁市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;青秀区&quot;</span>,<br>            <span class="hljs-string">&quot;兴宁区&quot;</span>,<br>            <span class="hljs-string">&quot;西乡塘区&quot;</span>,<br>            <span class="hljs-string">&quot;良庆区&quot;</span>,<br>            <span class="hljs-string">&quot;江南区&quot;</span>,<br>            <span class="hljs-string">&quot;邕宁区&quot;</span>,<br>            <span class="hljs-string">&quot;武鸣县&quot;</span>,<br>            <span class="hljs-string">&quot;隆安县&quot;</span>,<br>            <span class="hljs-string">&quot;马山县&quot;</span>,<br>            <span class="hljs-string">&quot;上林县&quot;</span>,<br>            <span class="hljs-string">&quot;宾阳县&quot;</span>,<br>            <span class="hljs-string">&quot;横县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;柳州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;城中区&quot;</span>,<br>            <span class="hljs-string">&quot;鱼峰区&quot;</span>,<br>            <span class="hljs-string">&quot;柳北区&quot;</span>,<br>            <span class="hljs-string">&quot;柳南区&quot;</span>,<br>            <span class="hljs-string">&quot;柳江县&quot;</span>,<br>            <span class="hljs-string">&quot;柳城县&quot;</span>,<br>            <span class="hljs-string">&quot;鹿寨县&quot;</span>,<br>            <span class="hljs-string">&quot;融安县&quot;</span>,<br>            <span class="hljs-string">&quot;融水苗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;三江侗族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;桂林市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;象山区&quot;</span>,<br>            <span class="hljs-string">&quot;秀峰区&quot;</span>,<br>            <span class="hljs-string">&quot;叠彩区&quot;</span>,<br>            <span class="hljs-string">&quot;七星区&quot;</span>,<br>            <span class="hljs-string">&quot;雁山区&quot;</span>,<br>            <span class="hljs-string">&quot;阳朔县&quot;</span>,<br>            <span class="hljs-string">&quot;临桂县&quot;</span>,<br>            <span class="hljs-string">&quot;灵川县&quot;</span>,<br>            <span class="hljs-string">&quot;全州县&quot;</span>,<br>            <span class="hljs-string">&quot;平乐县&quot;</span>,<br>            <span class="hljs-string">&quot;兴安县&quot;</span>,<br>            <span class="hljs-string">&quot;灌阳县&quot;</span>,<br>            <span class="hljs-string">&quot;荔浦县&quot;</span>,<br>            <span class="hljs-string">&quot;资源县&quot;</span>,<br>            <span class="hljs-string">&quot;永福县&quot;</span>,<br>            <span class="hljs-string">&quot;龙胜各族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;恭城瑶族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;梧州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;万秀区&quot;</span>,<br>            <span class="hljs-string">&quot;蝶山区&quot;</span>,<br>            <span class="hljs-string">&quot;长洲区&quot;</span>,<br>            <span class="hljs-string">&quot;岑溪市&quot;</span>,<br>            <span class="hljs-string">&quot;苍梧县&quot;</span>,<br>            <span class="hljs-string">&quot;藤县&quot;</span>,<br>            <span class="hljs-string">&quot;蒙山县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;北海市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;海城区&quot;</span>,<br>            <span class="hljs-string">&quot;银海区&quot;</span>,<br>            <span class="hljs-string">&quot;铁山港区&quot;</span>,<br>            <span class="hljs-string">&quot;合浦县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;防城港市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;港口区&quot;</span>,<br>            <span class="hljs-string">&quot;防城区&quot;</span>,<br>            <span class="hljs-string">&quot;东兴市&quot;</span>,<br>            <span class="hljs-string">&quot;上思县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;钦州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;钦南区&quot;</span>,<br>            <span class="hljs-string">&quot;钦北区&quot;</span>,<br>            <span class="hljs-string">&quot;灵山县&quot;</span>,<br>            <span class="hljs-string">&quot;浦北县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;贵港市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;港北区&quot;</span>,<br>            <span class="hljs-string">&quot;港南区&quot;</span>,<br>            <span class="hljs-string">&quot;覃塘区&quot;</span>,<br>            <span class="hljs-string">&quot;桂平市&quot;</span>,<br>            <span class="hljs-string">&quot;平南县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;玉林市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;玉州区&quot;</span>,<br>            <span class="hljs-string">&quot;北流市&quot;</span>,<br>            <span class="hljs-string">&quot;容县&quot;</span>,<br>            <span class="hljs-string">&quot;陆川县&quot;</span>,<br>            <span class="hljs-string">&quot;博白县&quot;</span>,<br>            <span class="hljs-string">&quot;兴业县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;百色市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;右江区&quot;</span>,<br>            <span class="hljs-string">&quot;凌云县&quot;</span>,<br>            <span class="hljs-string">&quot;平果县&quot;</span>,<br>            <span class="hljs-string">&quot;西林县&quot;</span>,<br>            <span class="hljs-string">&quot;乐业县&quot;</span>,<br>            <span class="hljs-string">&quot;德保县&quot;</span>,<br>            <span class="hljs-string">&quot;田林县&quot;</span>,<br>            <span class="hljs-string">&quot;田阳县&quot;</span>,<br>            <span class="hljs-string">&quot;靖西县&quot;</span>,<br>            <span class="hljs-string">&quot;田东县&quot;</span>,<br>            <span class="hljs-string">&quot;那坡县&quot;</span>,<br>            <span class="hljs-string">&quot;隆林各族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;贺州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;八步区&quot;</span>,<br>            <span class="hljs-string">&quot;钟山县&quot;</span>,<br>            <span class="hljs-string">&quot;昭平县&quot;</span>,<br>            <span class="hljs-string">&quot;富川瑶族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;河池市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;金城江区&quot;</span>,<br>            <span class="hljs-string">&quot;宜州市&quot;</span>,<br>            <span class="hljs-string">&quot;天峨县&quot;</span>,<br>            <span class="hljs-string">&quot;凤山县&quot;</span>,<br>            <span class="hljs-string">&quot;南丹县&quot;</span>,<br>            <span class="hljs-string">&quot;东兰县&quot;</span>,<br>            <span class="hljs-string">&quot;都安瑶族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;罗城仫佬族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;巴马瑶族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;环江毛南族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;大化瑶族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;来宾市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;兴宾区&quot;</span>,<br>            <span class="hljs-string">&quot;合山市&quot;</span>,<br>            <span class="hljs-string">&quot;象州县&quot;</span>,<br>            <span class="hljs-string">&quot;武宣县&quot;</span>,<br>            <span class="hljs-string">&quot;忻城县&quot;</span>,<br>            <span class="hljs-string">&quot;金秀瑶族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;崇左市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;江州区&quot;</span>,<br>            <span class="hljs-string">&quot;凭祥市&quot;</span>,<br>            <span class="hljs-string">&quot;宁明县&quot;</span>,<br>            <span class="hljs-string">&quot;扶绥县&quot;</span>,<br>            <span class="hljs-string">&quot;龙州县&quot;</span>,<br>            <span class="hljs-string">&quot;大新县&quot;</span>,<br>            <span class="hljs-string">&quot;天等县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;海南省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;海口市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;龙华区&quot;</span>,<br>            <span class="hljs-string">&quot;秀英区&quot;</span>,<br>            <span class="hljs-string">&quot;琼山区&quot;</span>,<br>            <span class="hljs-string">&quot;美兰区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;三亚市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;三亚市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;五指山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;五指山&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;琼海市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;琼海&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;儋州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;儋州&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;文昌市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;文昌&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;万宁市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;万宁&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;东方市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;东方&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;澄迈县&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;澄迈县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;定安县&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;定安县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;屯昌县&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;屯昌县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;临高县&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;临高县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;白沙黎族自治县&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;白沙黎族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;昌江黎族自治县&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;昌江黎族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;乐东黎族自治县&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;乐东黎族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;陵水黎族自治县&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;陵水黎族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;保亭黎族苗族自治县&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;保亭黎族苗族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;琼中黎族苗族自治县&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;琼中黎族苗族自治县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;重庆市&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;重庆市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;渝中区&quot;</span>,<br>            <span class="hljs-string">&quot;大渡口区&quot;</span>,<br>            <span class="hljs-string">&quot;江北区&quot;</span>,<br>            <span class="hljs-string">&quot;南岸区&quot;</span>,<br>            <span class="hljs-string">&quot;北碚区&quot;</span>,<br>            <span class="hljs-string">&quot;渝北区&quot;</span>,<br>            <span class="hljs-string">&quot;巴南区&quot;</span>,<br>            <span class="hljs-string">&quot;长寿区&quot;</span>,<br>            <span class="hljs-string">&quot;双桥区&quot;</span>,<br>            <span class="hljs-string">&quot;沙坪坝区&quot;</span>,<br>            <span class="hljs-string">&quot;万盛区&quot;</span>,<br>            <span class="hljs-string">&quot;万州区&quot;</span>,<br>            <span class="hljs-string">&quot;涪陵区&quot;</span>,<br>            <span class="hljs-string">&quot;黔江区&quot;</span>,<br>            <span class="hljs-string">&quot;永川区&quot;</span>,<br>            <span class="hljs-string">&quot;合川区&quot;</span>,<br>            <span class="hljs-string">&quot;江津区&quot;</span>,<br>            <span class="hljs-string">&quot;九龙坡区&quot;</span>,<br>            <span class="hljs-string">&quot;南川区&quot;</span>,<br>            <span class="hljs-string">&quot;綦江县&quot;</span>,<br>            <span class="hljs-string">&quot;潼南县&quot;</span>,<br>            <span class="hljs-string">&quot;荣昌县&quot;</span>,<br>            <span class="hljs-string">&quot;璧山县&quot;</span>,<br>            <span class="hljs-string">&quot;大足县&quot;</span>,<br>            <span class="hljs-string">&quot;铜梁县&quot;</span>,<br>            <span class="hljs-string">&quot;梁平县&quot;</span>,<br>            <span class="hljs-string">&quot;开县&quot;</span>,<br>            <span class="hljs-string">&quot;忠县&quot;</span>,<br>            <span class="hljs-string">&quot;城口县&quot;</span>,<br>            <span class="hljs-string">&quot;垫江县&quot;</span>,<br>            <span class="hljs-string">&quot;武隆县&quot;</span>,<br>            <span class="hljs-string">&quot;丰都县&quot;</span>,<br>            <span class="hljs-string">&quot;奉节县&quot;</span>,<br>            <span class="hljs-string">&quot;云阳县&quot;</span>,<br>            <span class="hljs-string">&quot;巫溪县&quot;</span>,<br>            <span class="hljs-string">&quot;巫山县&quot;</span>,<br>            <span class="hljs-string">&quot;石柱土家族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;秀山土家族苗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;酉阳土家族苗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;彭水苗族土家族自治县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;四川省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;成都市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;青羊区&quot;</span>,<br>            <span class="hljs-string">&quot;锦江区&quot;</span>,<br>            <span class="hljs-string">&quot;金牛区&quot;</span>,<br>            <span class="hljs-string">&quot;武侯区&quot;</span>,<br>            <span class="hljs-string">&quot;成华区&quot;</span>,<br>            <span class="hljs-string">&quot;龙泉驿区&quot;</span>,<br>            <span class="hljs-string">&quot;青白江区&quot;</span>,<br>            <span class="hljs-string">&quot;新都区&quot;</span>,<br>            <span class="hljs-string">&quot;温江区&quot;</span>,<br>            <span class="hljs-string">&quot;都江堰市&quot;</span>,<br>            <span class="hljs-string">&quot;彭州市&quot;</span>,<br>            <span class="hljs-string">&quot;邛崃市&quot;</span>,<br>            <span class="hljs-string">&quot;崇州市&quot;</span>,<br>            <span class="hljs-string">&quot;金堂县&quot;</span>,<br>            <span class="hljs-string">&quot;郫县&quot;</span>,<br>            <span class="hljs-string">&quot;新津县&quot;</span>,<br>            <span class="hljs-string">&quot;双流县&quot;</span>,<br>            <span class="hljs-string">&quot;蒲江县&quot;</span>,<br>            <span class="hljs-string">&quot;大邑县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;自贡市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;大安区&quot;</span>,<br>            <span class="hljs-string">&quot;自流井区&quot;</span>,<br>            <span class="hljs-string">&quot;贡井区&quot;</span>,<br>            <span class="hljs-string">&quot;沿滩区&quot;</span>,<br>            <span class="hljs-string">&quot;荣县&quot;</span>,<br>            <span class="hljs-string">&quot;富顺县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;攀枝花市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;仁和区&quot;</span>,<br>            <span class="hljs-string">&quot;米易县&quot;</span>,<br>            <span class="hljs-string">&quot;盐边县&quot;</span>,<br>            <span class="hljs-string">&quot;东区&quot;</span>,<br>            <span class="hljs-string">&quot;西区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;泸州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;江阳区&quot;</span>,<br>            <span class="hljs-string">&quot;纳溪区&quot;</span>,<br>            <span class="hljs-string">&quot;龙马潭区&quot;</span>,<br>            <span class="hljs-string">&quot;泸县&quot;</span>,<br>            <span class="hljs-string">&quot;合江县&quot;</span>,<br>            <span class="hljs-string">&quot;叙永县&quot;</span>,<br>            <span class="hljs-string">&quot;古蔺县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;德阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;旌阳区&quot;</span>,<br>            <span class="hljs-string">&quot;广汉市&quot;</span>,<br>            <span class="hljs-string">&quot;什邡市&quot;</span>,<br>            <span class="hljs-string">&quot;绵竹市&quot;</span>,<br>            <span class="hljs-string">&quot;罗江县&quot;</span>,<br>            <span class="hljs-string">&quot;中江县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;绵阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;涪城区&quot;</span>,<br>            <span class="hljs-string">&quot;游仙区&quot;</span>,<br>            <span class="hljs-string">&quot;江油市&quot;</span>,<br>            <span class="hljs-string">&quot;盐亭县&quot;</span>,<br>            <span class="hljs-string">&quot;三台县&quot;</span>,<br>            <span class="hljs-string">&quot;平武县&quot;</span>,<br>            <span class="hljs-string">&quot;安县&quot;</span>,<br>            <span class="hljs-string">&quot;梓潼县&quot;</span>,<br>            <span class="hljs-string">&quot;北川羌族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;广元市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;元坝区&quot;</span>,<br>            <span class="hljs-string">&quot;朝天区&quot;</span>,<br>            <span class="hljs-string">&quot;青川县&quot;</span>,<br>            <span class="hljs-string">&quot;旺苍县&quot;</span>,<br>            <span class="hljs-string">&quot;剑阁县&quot;</span>,<br>            <span class="hljs-string">&quot;苍溪县&quot;</span>,<br>            <span class="hljs-string">&quot;市中区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;遂宁市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;船山区&quot;</span>,<br>            <span class="hljs-string">&quot;安居区&quot;</span>,<br>            <span class="hljs-string">&quot;射洪县&quot;</span>,<br>            <span class="hljs-string">&quot;蓬溪县&quot;</span>,<br>            <span class="hljs-string">&quot;大英县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;内江市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;市中区&quot;</span>,<br>            <span class="hljs-string">&quot;东兴区&quot;</span>,<br>            <span class="hljs-string">&quot;资中县&quot;</span>,<br>            <span class="hljs-string">&quot;隆昌县&quot;</span>,<br>            <span class="hljs-string">&quot;威远县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;乐山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;市中区&quot;</span>,<br>            <span class="hljs-string">&quot;五通桥区&quot;</span>,<br>            <span class="hljs-string">&quot;沙湾区&quot;</span>,<br>            <span class="hljs-string">&quot;金口河区&quot;</span>,<br>            <span class="hljs-string">&quot;峨眉山市&quot;</span>,<br>            <span class="hljs-string">&quot;夹江县&quot;</span>,<br>            <span class="hljs-string">&quot;井研县&quot;</span>,<br>            <span class="hljs-string">&quot;犍为县&quot;</span>,<br>            <span class="hljs-string">&quot;沐川县&quot;</span>,<br>            <span class="hljs-string">&quot;马边彝族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;峨边彝族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;南充&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;顺庆区&quot;</span>,<br>            <span class="hljs-string">&quot;高坪区&quot;</span>,<br>            <span class="hljs-string">&quot;嘉陵区&quot;</span>,<br>            <span class="hljs-string">&quot;阆中市&quot;</span>,<br>            <span class="hljs-string">&quot;营山县&quot;</span>,<br>            <span class="hljs-string">&quot;蓬安县&quot;</span>,<br>            <span class="hljs-string">&quot;仪陇县&quot;</span>,<br>            <span class="hljs-string">&quot;南部县&quot;</span>,<br>            <span class="hljs-string">&quot;西充县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;眉山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;东坡区&quot;</span>,<br>            <span class="hljs-string">&quot;仁寿县&quot;</span>,<br>            <span class="hljs-string">&quot;彭山县&quot;</span>,<br>            <span class="hljs-string">&quot;洪雅县&quot;</span>,<br>            <span class="hljs-string">&quot;丹棱县&quot;</span>,<br>            <span class="hljs-string">&quot;青神县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;宜宾市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;翠屏区&quot;</span>,<br>            <span class="hljs-string">&quot;宜宾县&quot;</span>,<br>            <span class="hljs-string">&quot;兴文县&quot;</span>,<br>            <span class="hljs-string">&quot;南溪县&quot;</span>,<br>            <span class="hljs-string">&quot;珙县&quot;</span>,<br>            <span class="hljs-string">&quot;长宁县&quot;</span>,<br>            <span class="hljs-string">&quot;高县&quot;</span>,<br>            <span class="hljs-string">&quot;江安县&quot;</span>,<br>            <span class="hljs-string">&quot;筠连县&quot;</span>,<br>            <span class="hljs-string">&quot;屏山县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;广安市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;广安区&quot;</span>,<br>            <span class="hljs-string">&quot;华蓥市&quot;</span>,<br>            <span class="hljs-string">&quot;岳池县&quot;</span>,<br>            <span class="hljs-string">&quot;邻水县&quot;</span>,<br>            <span class="hljs-string">&quot;武胜县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;达州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;通川区&quot;</span>,<br>            <span class="hljs-string">&quot;万源市&quot;</span>,<br>            <span class="hljs-string">&quot;达县&quot;</span>,<br>            <span class="hljs-string">&quot;渠县&quot;</span>,<br>            <span class="hljs-string">&quot;宣汉县&quot;</span>,<br>            <span class="hljs-string">&quot;开江县&quot;</span>,<br>            <span class="hljs-string">&quot;大竹县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;雅安市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;雨城区&quot;</span>,<br>            <span class="hljs-string">&quot;芦山县&quot;</span>,<br>            <span class="hljs-string">&quot;石棉县&quot;</span>,<br>            <span class="hljs-string">&quot;名山县&quot;</span>,<br>            <span class="hljs-string">&quot;天全县&quot;</span>,<br>            <span class="hljs-string">&quot;荥经县&quot;</span>,<br>            <span class="hljs-string">&quot;宝兴县&quot;</span>,<br>            <span class="hljs-string">&quot;汉源县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;巴中市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;巴州区&quot;</span>,<br>            <span class="hljs-string">&quot;南江县&quot;</span>,<br>            <span class="hljs-string">&quot;平昌县&quot;</span>,<br>            <span class="hljs-string">&quot;通江县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;资阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;雁江区&quot;</span>,<br>            <span class="hljs-string">&quot;简阳市&quot;</span>,<br>            <span class="hljs-string">&quot;安岳县&quot;</span>,<br>            <span class="hljs-string">&quot;乐至县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;阿坝藏族羌族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;马尔康县&quot;</span>,<br>            <span class="hljs-string">&quot;九寨沟县&quot;</span>,<br>            <span class="hljs-string">&quot;红原县&quot;</span>,<br>            <span class="hljs-string">&quot;汶川县&quot;</span>,<br>            <span class="hljs-string">&quot;阿坝县&quot;</span>,<br>            <span class="hljs-string">&quot;理县&quot;</span>,<br>            <span class="hljs-string">&quot;若尔盖县&quot;</span>,<br>            <span class="hljs-string">&quot;小金县&quot;</span>,<br>            <span class="hljs-string">&quot;黑水县&quot;</span>,<br>            <span class="hljs-string">&quot;金川县&quot;</span>,<br>            <span class="hljs-string">&quot;松潘县&quot;</span>,<br>            <span class="hljs-string">&quot;壤塘县&quot;</span>,<br>            <span class="hljs-string">&quot;茂县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;甘孜藏族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;康定县&quot;</span>,<br>            <span class="hljs-string">&quot;丹巴县&quot;</span>,<br>            <span class="hljs-string">&quot;炉霍县&quot;</span>,<br>            <span class="hljs-string">&quot;九龙县&quot;</span>,<br>            <span class="hljs-string">&quot;甘孜县&quot;</span>,<br>            <span class="hljs-string">&quot;雅江县&quot;</span>,<br>            <span class="hljs-string">&quot;新龙县&quot;</span>,<br>            <span class="hljs-string">&quot;道孚县&quot;</span>,<br>            <span class="hljs-string">&quot;白玉县&quot;</span>,<br>            <span class="hljs-string">&quot;理塘县&quot;</span>,<br>            <span class="hljs-string">&quot;德格县&quot;</span>,<br>            <span class="hljs-string">&quot;乡城县&quot;</span>,<br>            <span class="hljs-string">&quot;石渠县&quot;</span>,<br>            <span class="hljs-string">&quot;稻城县&quot;</span>,<br>            <span class="hljs-string">&quot;色达县&quot;</span>,<br>            <span class="hljs-string">&quot;巴塘县&quot;</span>,<br>            <span class="hljs-string">&quot;泸定县&quot;</span>,<br>            <span class="hljs-string">&quot;得荣县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;凉山彝族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;西昌市&quot;</span>,<br>            <span class="hljs-string">&quot;美姑县&quot;</span>,<br>            <span class="hljs-string">&quot;昭觉县&quot;</span>,<br>            <span class="hljs-string">&quot;金阳县&quot;</span>,<br>            <span class="hljs-string">&quot;甘洛县&quot;</span>,<br>            <span class="hljs-string">&quot;布拖县&quot;</span>,<br>            <span class="hljs-string">&quot;雷波县&quot;</span>,<br>            <span class="hljs-string">&quot;普格县&quot;</span>,<br>            <span class="hljs-string">&quot;宁南县&quot;</span>,<br>            <span class="hljs-string">&quot;喜德县&quot;</span>,<br>            <span class="hljs-string">&quot;会东县&quot;</span>,<br>            <span class="hljs-string">&quot;越西县&quot;</span>,<br>            <span class="hljs-string">&quot;会理县&quot;</span>,<br>            <span class="hljs-string">&quot;盐源县&quot;</span>,<br>            <span class="hljs-string">&quot;德昌县&quot;</span>,<br>            <span class="hljs-string">&quot;冕宁县&quot;</span>,<br>            <span class="hljs-string">&quot;木里藏族自治县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;贵州省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;贵阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;南明区&quot;</span>,<br>            <span class="hljs-string">&quot;云岩区&quot;</span>,<br>            <span class="hljs-string">&quot;花溪区&quot;</span>,<br>            <span class="hljs-string">&quot;乌当区&quot;</span>,<br>            <span class="hljs-string">&quot;白云区&quot;</span>,<br>            <span class="hljs-string">&quot;小河区&quot;</span>,<br>            <span class="hljs-string">&quot;清镇市&quot;</span>,<br>            <span class="hljs-string">&quot;开阳县&quot;</span>,<br>            <span class="hljs-string">&quot;修文县&quot;</span>,<br>            <span class="hljs-string">&quot;息烽县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;六盘水市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;钟山区&quot;</span>,<br>            <span class="hljs-string">&quot;水城县&quot;</span>,<br>            <span class="hljs-string">&quot;盘县&quot;</span>,<br>            <span class="hljs-string">&quot;六枝特区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;遵义市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;红花岗区&quot;</span>,<br>            <span class="hljs-string">&quot;汇川区&quot;</span>,<br>            <span class="hljs-string">&quot;赤水市&quot;</span>,<br>            <span class="hljs-string">&quot;仁怀市&quot;</span>,<br>            <span class="hljs-string">&quot;遵义县&quot;</span>,<br>            <span class="hljs-string">&quot;绥阳县&quot;</span>,<br>            <span class="hljs-string">&quot;桐梓县&quot;</span>,<br>            <span class="hljs-string">&quot;习水县&quot;</span>,<br>            <span class="hljs-string">&quot;凤冈县&quot;</span>,<br>            <span class="hljs-string">&quot;正安县&quot;</span>,<br>            <span class="hljs-string">&quot;余庆县&quot;</span>,<br>            <span class="hljs-string">&quot;湄潭县&quot;</span>,<br>            <span class="hljs-string">&quot;道真仡佬族苗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;务川仡佬族苗族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;安顺市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;西秀区&quot;</span>,<br>            <span class="hljs-string">&quot;普定县&quot;</span>,<br>            <span class="hljs-string">&quot;平坝县&quot;</span>,<br>            <span class="hljs-string">&quot;镇宁布依族苗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;紫云苗族布依族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;关岭布依族苗族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;铜仁地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;铜仁市&quot;</span>,<br>            <span class="hljs-string">&quot;德江县&quot;</span>,<br>            <span class="hljs-string">&quot;江口县&quot;</span>,<br>            <span class="hljs-string">&quot;思南县&quot;</span>,<br>            <span class="hljs-string">&quot;石阡县&quot;</span>,<br>            <span class="hljs-string">&quot;玉屏侗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;松桃苗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;印江土家族苗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;沿河土家族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;万山特区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;毕节地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;毕节市&quot;</span>,<br>            <span class="hljs-string">&quot;黔西县&quot;</span>,<br>            <span class="hljs-string">&quot;大方县&quot;</span>,<br>            <span class="hljs-string">&quot;织金县&quot;</span>,<br>            <span class="hljs-string">&quot;金沙县&quot;</span>,<br>            <span class="hljs-string">&quot;赫章县&quot;</span>,<br>            <span class="hljs-string">&quot;纳雍县&quot;</span>,<br>            <span class="hljs-string">&quot;威宁彝族回族苗族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;黔西南布依族苗族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;兴义市&quot;</span>,<br>            <span class="hljs-string">&quot;望谟县&quot;</span>,<br>            <span class="hljs-string">&quot;兴仁县&quot;</span>,<br>            <span class="hljs-string">&quot;普安县&quot;</span>,<br>            <span class="hljs-string">&quot;册亨县&quot;</span>,<br>            <span class="hljs-string">&quot;晴隆县&quot;</span>,<br>            <span class="hljs-string">&quot;贞丰县&quot;</span>,<br>            <span class="hljs-string">&quot;安龙县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;黔东南苗族侗族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;凯里市&quot;</span>,<br>            <span class="hljs-string">&quot;施秉县&quot;</span>,<br>            <span class="hljs-string">&quot;从江县&quot;</span>,<br>            <span class="hljs-string">&quot;锦屏县&quot;</span>,<br>            <span class="hljs-string">&quot;镇远县&quot;</span>,<br>            <span class="hljs-string">&quot;麻江县&quot;</span>,<br>            <span class="hljs-string">&quot;台江县&quot;</span>,<br>            <span class="hljs-string">&quot;天柱县&quot;</span>,<br>            <span class="hljs-string">&quot;黄平县&quot;</span>,<br>            <span class="hljs-string">&quot;榕江县&quot;</span>,<br>            <span class="hljs-string">&quot;剑河县&quot;</span>,<br>            <span class="hljs-string">&quot;三穗县&quot;</span>,<br>            <span class="hljs-string">&quot;雷山县&quot;</span>,<br>            <span class="hljs-string">&quot;黎平县&quot;</span>,<br>            <span class="hljs-string">&quot;岑巩县&quot;</span>,<br>            <span class="hljs-string">&quot;丹寨县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;黔南布依族苗族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;都匀市&quot;</span>,<br>            <span class="hljs-string">&quot;福泉市&quot;</span>,<br>            <span class="hljs-string">&quot;贵定县&quot;</span>,<br>            <span class="hljs-string">&quot;惠水县&quot;</span>,<br>            <span class="hljs-string">&quot;罗甸县&quot;</span>,<br>            <span class="hljs-string">&quot;瓮安县&quot;</span>,<br>            <span class="hljs-string">&quot;荔波县&quot;</span>,<br>            <span class="hljs-string">&quot;龙里县&quot;</span>,<br>            <span class="hljs-string">&quot;平塘县&quot;</span>,<br>            <span class="hljs-string">&quot;长顺县&quot;</span>,<br>            <span class="hljs-string">&quot;独山县&quot;</span>,<br>            <span class="hljs-string">&quot;三都水族自治县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;云南省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;昆明市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;盘龙区&quot;</span>,<br>            <span class="hljs-string">&quot;五华区&quot;</span>,<br>            <span class="hljs-string">&quot;官渡区&quot;</span>,<br>            <span class="hljs-string">&quot;西山区&quot;</span>,<br>            <span class="hljs-string">&quot;东川区&quot;</span>,<br>            <span class="hljs-string">&quot;安宁市&quot;</span>,<br>            <span class="hljs-string">&quot;呈贡县&quot;</span>,<br>            <span class="hljs-string">&quot;晋宁县&quot;</span>,<br>            <span class="hljs-string">&quot;富民县&quot;</span>,<br>            <span class="hljs-string">&quot;宜良县&quot;</span>,<br>            <span class="hljs-string">&quot;嵩明县&quot;</span>,<br>            <span class="hljs-string">&quot;石林彝族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;禄劝彝族苗族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;寻甸回族彝族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;曲靖市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;麒麟区&quot;</span>,<br>            <span class="hljs-string">&quot;宣威市&quot;</span>,<br>            <span class="hljs-string">&quot;马龙县&quot;</span>,<br>            <span class="hljs-string">&quot;沾益县&quot;</span>,<br>            <span class="hljs-string">&quot;富源县&quot;</span>,<br>            <span class="hljs-string">&quot;罗平县&quot;</span>,<br>            <span class="hljs-string">&quot;师宗县&quot;</span>,<br>            <span class="hljs-string">&quot;陆良县&quot;</span>,<br>            <span class="hljs-string">&quot;会泽县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;玉溪市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;红塔区&quot;</span>,<br>            <span class="hljs-string">&quot;江川县&quot;</span>,<br>            <span class="hljs-string">&quot;澄江县&quot;</span>,<br>            <span class="hljs-string">&quot;通海县&quot;</span>,<br>            <span class="hljs-string">&quot;华宁县&quot;</span>,<br>            <span class="hljs-string">&quot;易门县&quot;</span>,<br>            <span class="hljs-string">&quot;峨山彝族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;新平彝族傣族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;元江哈尼族彝族傣族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;保山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;隆阳区&quot;</span>,<br>            <span class="hljs-string">&quot;施甸县&quot;</span>,<br>            <span class="hljs-string">&quot;腾冲县&quot;</span>,<br>            <span class="hljs-string">&quot;龙陵县&quot;</span>,<br>            <span class="hljs-string">&quot;昌宁县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;昭通市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;昭阳区&quot;</span>,<br>            <span class="hljs-string">&quot;鲁甸县&quot;</span>,<br>            <span class="hljs-string">&quot;巧家县&quot;</span>,<br>            <span class="hljs-string">&quot;盐津县&quot;</span>,<br>            <span class="hljs-string">&quot;大关县&quot;</span>,<br>            <span class="hljs-string">&quot;永善县&quot;</span>,<br>            <span class="hljs-string">&quot;绥江县&quot;</span>,<br>            <span class="hljs-string">&quot;镇雄县&quot;</span>,<br>            <span class="hljs-string">&quot;彝良县&quot;</span>,<br>            <span class="hljs-string">&quot;威信县&quot;</span>,<br>            <span class="hljs-string">&quot;水富县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;丽江市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;古城区&quot;</span>,<br>            <span class="hljs-string">&quot;永胜县&quot;</span>,<br>            <span class="hljs-string">&quot;华坪县&quot;</span>,<br>            <span class="hljs-string">&quot;玉龙纳西族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;宁蒗彝族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;普洱市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;思茅区&quot;</span>,<br>            <span class="hljs-string">&quot;普洱哈尼族彝族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;墨江哈尼族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;景东彝族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;景谷傣族彝族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;镇沅彝族哈尼族拉祜族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;江城哈尼族彝族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;孟连傣族拉祜族佤族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;澜沧拉祜族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;西盟佤族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;临沧市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;临翔区&quot;</span>,<br>            <span class="hljs-string">&quot;凤庆县&quot;</span>,<br>            <span class="hljs-string">&quot;云县&quot;</span>,<br>            <span class="hljs-string">&quot;永德县&quot;</span>,<br>            <span class="hljs-string">&quot;镇康县&quot;</span>,<br>            <span class="hljs-string">&quot;双江拉祜族佤族布朗族傣族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;耿马傣族佤族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;沧源佤族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;德宏傣族景颇族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;潞西市&quot;</span>,<br>            <span class="hljs-string">&quot;瑞丽市&quot;</span>,<br>            <span class="hljs-string">&quot;梁河县&quot;</span>,<br>            <span class="hljs-string">&quot;盈江县&quot;</span>,<br>            <span class="hljs-string">&quot;陇川县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;怒江傈僳族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;泸水县&quot;</span>,<br>            <span class="hljs-string">&quot;福贡县&quot;</span>,<br>            <span class="hljs-string">&quot;贡山独龙族怒族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;兰坪白族普米族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;迪庆藏族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;香格里拉县&quot;</span>,<br>            <span class="hljs-string">&quot;德钦县&quot;</span>,<br>            <span class="hljs-string">&quot;维西傈僳族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;大理白族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;大理市&quot;</span>,<br>            <span class="hljs-string">&quot;祥云县&quot;</span>,<br>            <span class="hljs-string">&quot;宾川县&quot;</span>,<br>            <span class="hljs-string">&quot;弥渡县&quot;</span>,<br>            <span class="hljs-string">&quot;永平县&quot;</span>,<br>            <span class="hljs-string">&quot;云龙县&quot;</span>,<br>            <span class="hljs-string">&quot;洱源县&quot;</span>,<br>            <span class="hljs-string">&quot;剑川县&quot;</span>,<br>            <span class="hljs-string">&quot;鹤庆县&quot;</span>,<br>            <span class="hljs-string">&quot;漾濞彝族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;南涧彝族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;巍山彝族回族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;楚雄彝族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;楚雄市&quot;</span>,<br>            <span class="hljs-string">&quot;双柏县&quot;</span>,<br>            <span class="hljs-string">&quot;牟定县&quot;</span>,<br>            <span class="hljs-string">&quot;南华县&quot;</span>,<br>            <span class="hljs-string">&quot;姚安县&quot;</span>,<br>            <span class="hljs-string">&quot;大姚县&quot;</span>,<br>            <span class="hljs-string">&quot;永仁县&quot;</span>,<br>            <span class="hljs-string">&quot;元谋县&quot;</span>,<br>            <span class="hljs-string">&quot;武定县&quot;</span>,<br>            <span class="hljs-string">&quot;禄丰县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;红河哈尼族彝族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;蒙自县&quot;</span>,<br>            <span class="hljs-string">&quot;个旧市&quot;</span>,<br>            <span class="hljs-string">&quot;开远市&quot;</span>,<br>            <span class="hljs-string">&quot;绿春县&quot;</span>,<br>            <span class="hljs-string">&quot;建水县&quot;</span>,<br>            <span class="hljs-string">&quot;石屏县&quot;</span>,<br>            <span class="hljs-string">&quot;弥勒县&quot;</span>,<br>            <span class="hljs-string">&quot;泸西县&quot;</span>,<br>            <span class="hljs-string">&quot;元阳县&quot;</span>,<br>            <span class="hljs-string">&quot;红河县&quot;</span>,<br>            <span class="hljs-string">&quot;金平苗族瑶族傣族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;河口瑶族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;屏边苗族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;文山壮族苗族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;文山县&quot;</span>,<br>            <span class="hljs-string">&quot;砚山县&quot;</span>,<br>            <span class="hljs-string">&quot;西畴县&quot;</span>,<br>            <span class="hljs-string">&quot;麻栗坡县&quot;</span>,<br>            <span class="hljs-string">&quot;马关县&quot;</span>,<br>            <span class="hljs-string">&quot;丘北县&quot;</span>,<br>            <span class="hljs-string">&quot;广南县&quot;</span>,<br>            <span class="hljs-string">&quot;富宁县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;西双版纳傣族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;景洪市&quot;</span>,<br>            <span class="hljs-string">&quot;勐海县&quot;</span>,<br>            <span class="hljs-string">&quot;勐腊县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;西藏&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;拉萨市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;城关区&quot;</span>,<br>            <span class="hljs-string">&quot;林周县&quot;</span>,<br>            <span class="hljs-string">&quot;当雄县&quot;</span>,<br>            <span class="hljs-string">&quot;尼木县&quot;</span>,<br>            <span class="hljs-string">&quot;曲水县&quot;</span>,<br>            <span class="hljs-string">&quot;堆龙德庆县&quot;</span>,<br>            <span class="hljs-string">&quot;达孜县&quot;</span>,<br>            <span class="hljs-string">&quot;墨竹工卡县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;那曲地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;那曲县&quot;</span>,<br>            <span class="hljs-string">&quot;嘉黎县&quot;</span>,<br>            <span class="hljs-string">&quot;比如县&quot;</span>,<br>            <span class="hljs-string">&quot;聂荣县&quot;</span>,<br>            <span class="hljs-string">&quot;安多县&quot;</span>,<br>            <span class="hljs-string">&quot;申扎县&quot;</span>,<br>            <span class="hljs-string">&quot;索县&quot;</span>,<br>            <span class="hljs-string">&quot;班戈县&quot;</span>,<br>            <span class="hljs-string">&quot;巴青县&quot;</span>,<br>            <span class="hljs-string">&quot;尼玛县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;昌都地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;昌都县&quot;</span>,<br>            <span class="hljs-string">&quot;江达县&quot;</span>,<br>            <span class="hljs-string">&quot;贡觉县&quot;</span>,<br>            <span class="hljs-string">&quot;类乌齐县&quot;</span>,<br>            <span class="hljs-string">&quot;丁青县&quot;</span>,<br>            <span class="hljs-string">&quot;察雅县&quot;</span>,<br>            <span class="hljs-string">&quot;八宿县&quot;</span>,<br>            <span class="hljs-string">&quot;左贡县&quot;</span>,<br>            <span class="hljs-string">&quot;芒康县&quot;</span>,<br>            <span class="hljs-string">&quot;洛隆县&quot;</span>,<br>            <span class="hljs-string">&quot;边坝县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;林芝地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;林芝县&quot;</span>,<br>            <span class="hljs-string">&quot;工布江达县&quot;</span>,<br>            <span class="hljs-string">&quot;米林县&quot;</span>,<br>            <span class="hljs-string">&quot;墨脱县&quot;</span>,<br>            <span class="hljs-string">&quot;波密县&quot;</span>,<br>            <span class="hljs-string">&quot;察隅县&quot;</span>,<br>            <span class="hljs-string">&quot;朗县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;山南地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;乃东县&quot;</span>,<br>            <span class="hljs-string">&quot;扎囊县&quot;</span>,<br>            <span class="hljs-string">&quot;贡嘎县&quot;</span>,<br>            <span class="hljs-string">&quot;桑日县&quot;</span>,<br>            <span class="hljs-string">&quot;琼结县&quot;</span>,<br>            <span class="hljs-string">&quot;曲松县&quot;</span>,<br>            <span class="hljs-string">&quot;措美县&quot;</span>,<br>            <span class="hljs-string">&quot;洛扎县&quot;</span>,<br>            <span class="hljs-string">&quot;加查县&quot;</span>,<br>            <span class="hljs-string">&quot;隆子县&quot;</span>,<br>            <span class="hljs-string">&quot;错那县&quot;</span>,<br>            <span class="hljs-string">&quot;浪卡子县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;日喀则地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;日喀则市&quot;</span>,<br>            <span class="hljs-string">&quot;南木林县&quot;</span>,<br>            <span class="hljs-string">&quot;江孜县&quot;</span>,<br>            <span class="hljs-string">&quot;定日县&quot;</span>,<br>            <span class="hljs-string">&quot;萨迦县&quot;</span>,<br>            <span class="hljs-string">&quot;拉孜县&quot;</span>,<br>            <span class="hljs-string">&quot;昂仁县&quot;</span>,<br>            <span class="hljs-string">&quot;谢通门县&quot;</span>,<br>            <span class="hljs-string">&quot;白朗县&quot;</span>,<br>            <span class="hljs-string">&quot;仁布县&quot;</span>,<br>            <span class="hljs-string">&quot;康马县&quot;</span>,<br>            <span class="hljs-string">&quot;定结县&quot;</span>,<br>            <span class="hljs-string">&quot;仲巴县&quot;</span>,<br>            <span class="hljs-string">&quot;亚东县&quot;</span>,<br>            <span class="hljs-string">&quot;吉隆县&quot;</span>,<br>            <span class="hljs-string">&quot;聂拉木县&quot;</span>,<br>            <span class="hljs-string">&quot;萨嘎县&quot;</span>,<br>            <span class="hljs-string">&quot;岗巴县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;阿里地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;噶尔县&quot;</span>,<br>            <span class="hljs-string">&quot;普兰县&quot;</span>,<br>            <span class="hljs-string">&quot;札达县&quot;</span>,<br>            <span class="hljs-string">&quot;日土县&quot;</span>,<br>            <span class="hljs-string">&quot;革吉县&quot;</span>,<br>            <span class="hljs-string">&quot;改则县&quot;</span>,<br>            <span class="hljs-string">&quot;措勤县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;陕西省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;西安市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;莲湖区&quot;</span>,<br>            <span class="hljs-string">&quot;新城区&quot;</span>,<br>            <span class="hljs-string">&quot;碑林区&quot;</span>,<br>            <span class="hljs-string">&quot;雁塔区&quot;</span>,<br>            <span class="hljs-string">&quot;灞桥区&quot;</span>,<br>            <span class="hljs-string">&quot;未央区&quot;</span>,<br>            <span class="hljs-string">&quot;阎良区&quot;</span>,<br>            <span class="hljs-string">&quot;临潼区&quot;</span>,<br>            <span class="hljs-string">&quot;长安区&quot;</span>,<br>            <span class="hljs-string">&quot;高陵县&quot;</span>,<br>            <span class="hljs-string">&quot;蓝田县&quot;</span>,<br>            <span class="hljs-string">&quot;户县&quot;</span>,<br>            <span class="hljs-string">&quot;周至县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;铜川市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;耀州区&quot;</span>,<br>            <span class="hljs-string">&quot;王益区&quot;</span>,<br>            <span class="hljs-string">&quot;印台区&quot;</span>,<br>            <span class="hljs-string">&quot;宜君县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;宝鸡市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;渭滨区&quot;</span>,<br>            <span class="hljs-string">&quot;金台区&quot;</span>,<br>            <span class="hljs-string">&quot;陈仓区&quot;</span>,<br>            <span class="hljs-string">&quot;岐山县&quot;</span>,<br>            <span class="hljs-string">&quot;凤翔县&quot;</span>,<br>            <span class="hljs-string">&quot;陇县&quot;</span>,<br>            <span class="hljs-string">&quot;太白县&quot;</span>,<br>            <span class="hljs-string">&quot;麟游县&quot;</span>,<br>            <span class="hljs-string">&quot;扶风县&quot;</span>,<br>            <span class="hljs-string">&quot;千阳县&quot;</span>,<br>            <span class="hljs-string">&quot;眉县&quot;</span>,<br>            <span class="hljs-string">&quot;凤县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;咸阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;秦都区&quot;</span>,<br>            <span class="hljs-string">&quot;渭城区&quot;</span>,<br>            <span class="hljs-string">&quot;杨陵区&quot;</span>,<br>            <span class="hljs-string">&quot;兴平市&quot;</span>,<br>            <span class="hljs-string">&quot;礼泉县&quot;</span>,<br>            <span class="hljs-string">&quot;泾阳县&quot;</span>,<br>            <span class="hljs-string">&quot;永寿县&quot;</span>,<br>            <span class="hljs-string">&quot;三原县&quot;</span>,<br>            <span class="hljs-string">&quot;彬县&quot;</span>,<br>            <span class="hljs-string">&quot;旬邑县&quot;</span>,<br>            <span class="hljs-string">&quot;长武县&quot;</span>,<br>            <span class="hljs-string">&quot;乾县&quot;</span>,<br>            <span class="hljs-string">&quot;武功县&quot;</span>,<br>            <span class="hljs-string">&quot;淳化县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;渭南市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;临渭区&quot;</span>,<br>            <span class="hljs-string">&quot;韩城市&quot;</span>,<br>            <span class="hljs-string">&quot;华阴市&quot;</span>,<br>            <span class="hljs-string">&quot;蒲城县&quot;</span>,<br>            <span class="hljs-string">&quot;潼关县&quot;</span>,<br>            <span class="hljs-string">&quot;白水县&quot;</span>,<br>            <span class="hljs-string">&quot;澄城县&quot;</span>,<br>            <span class="hljs-string">&quot;华县&quot;</span>,<br>            <span class="hljs-string">&quot;合阳县&quot;</span>,<br>            <span class="hljs-string">&quot;富平县&quot;</span>,<br>            <span class="hljs-string">&quot;大荔县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;延安市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;宝塔区&quot;</span>,<br>            <span class="hljs-string">&quot;安塞县&quot;</span>,<br>            <span class="hljs-string">&quot;洛川县&quot;</span>,<br>            <span class="hljs-string">&quot;子长县&quot;</span>,<br>            <span class="hljs-string">&quot;黄陵县&quot;</span>,<br>            <span class="hljs-string">&quot;延川县&quot;</span>,<br>            <span class="hljs-string">&quot;富县&quot;</span>,<br>            <span class="hljs-string">&quot;延长县&quot;</span>,<br>            <span class="hljs-string">&quot;甘泉县&quot;</span>,<br>            <span class="hljs-string">&quot;宜川县&quot;</span>,<br>            <span class="hljs-string">&quot;志丹县&quot;</span>,<br>            <span class="hljs-string">&quot;黄龙县&quot;</span>,<br>            <span class="hljs-string">&quot;吴起县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;汉中市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;汉台区&quot;</span>,<br>            <span class="hljs-string">&quot;留坝县&quot;</span>,<br>            <span class="hljs-string">&quot;镇巴县&quot;</span>,<br>            <span class="hljs-string">&quot;城固县&quot;</span>,<br>            <span class="hljs-string">&quot;南郑县&quot;</span>,<br>            <span class="hljs-string">&quot;洋县&quot;</span>,<br>            <span class="hljs-string">&quot;宁强县&quot;</span>,<br>            <span class="hljs-string">&quot;佛坪县&quot;</span>,<br>            <span class="hljs-string">&quot;勉县&quot;</span>,<br>            <span class="hljs-string">&quot;西乡县&quot;</span>,<br>            <span class="hljs-string">&quot;略阳县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;榆林市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;榆阳区&quot;</span>,<br>            <span class="hljs-string">&quot;清涧县&quot;</span>,<br>            <span class="hljs-string">&quot;绥德县&quot;</span>,<br>            <span class="hljs-string">&quot;神木县&quot;</span>,<br>            <span class="hljs-string">&quot;佳县&quot;</span>,<br>            <span class="hljs-string">&quot;府谷县&quot;</span>,<br>            <span class="hljs-string">&quot;子洲县&quot;</span>,<br>            <span class="hljs-string">&quot;靖边县&quot;</span>,<br>            <span class="hljs-string">&quot;横山县&quot;</span>,<br>            <span class="hljs-string">&quot;米脂县&quot;</span>,<br>            <span class="hljs-string">&quot;吴堡县&quot;</span>,<br>            <span class="hljs-string">&quot;定边县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;安康市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;汉滨区&quot;</span>,<br>            <span class="hljs-string">&quot;紫阳县&quot;</span>,<br>            <span class="hljs-string">&quot;岚皋县&quot;</span>,<br>            <span class="hljs-string">&quot;旬阳县&quot;</span>,<br>            <span class="hljs-string">&quot;镇坪县&quot;</span>,<br>            <span class="hljs-string">&quot;平利县&quot;</span>,<br>            <span class="hljs-string">&quot;石泉县&quot;</span>,<br>            <span class="hljs-string">&quot;宁陕县&quot;</span>,<br>            <span class="hljs-string">&quot;白河县&quot;</span>,<br>            <span class="hljs-string">&quot;汉阴县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;商洛市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;商州区&quot;</span>,<br>            <span class="hljs-string">&quot;镇安县&quot;</span>,<br>            <span class="hljs-string">&quot;山阳县&quot;</span>,<br>            <span class="hljs-string">&quot;洛南县&quot;</span>,<br>            <span class="hljs-string">&quot;商南县&quot;</span>,<br>            <span class="hljs-string">&quot;丹凤县&quot;</span>,<br>            <span class="hljs-string">&quot;柞水县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;甘肃省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;兰州市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;城关区&quot;</span>,<br>            <span class="hljs-string">&quot;七里河区&quot;</span>,<br>            <span class="hljs-string">&quot;西固区&quot;</span>,<br>            <span class="hljs-string">&quot;安宁区&quot;</span>,<br>            <span class="hljs-string">&quot;红古区&quot;</span>,<br>            <span class="hljs-string">&quot;永登县&quot;</span>,<br>            <span class="hljs-string">&quot;皋兰县&quot;</span>,<br>            <span class="hljs-string">&quot;榆中县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;嘉峪关市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;嘉峪关市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;金昌市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;金川区&quot;</span>,<br>            <span class="hljs-string">&quot;永昌县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;白银市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;白银区&quot;</span>,<br>            <span class="hljs-string">&quot;平川区&quot;</span>,<br>            <span class="hljs-string">&quot;靖远县&quot;</span>,<br>            <span class="hljs-string">&quot;会宁县&quot;</span>,<br>            <span class="hljs-string">&quot;景泰县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;天水市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;清水县&quot;</span>,<br>            <span class="hljs-string">&quot;秦安县&quot;</span>,<br>            <span class="hljs-string">&quot;甘谷县&quot;</span>,<br>            <span class="hljs-string">&quot;武山县&quot;</span>,<br>            <span class="hljs-string">&quot;张家川回族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;北道区&quot;</span>,<br>            <span class="hljs-string">&quot;秦城区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;武威市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;凉州区&quot;</span>,<br>            <span class="hljs-string">&quot;民勤县&quot;</span>,<br>            <span class="hljs-string">&quot;古浪县&quot;</span>,<br>            <span class="hljs-string">&quot;天祝藏族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;酒泉市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;肃州区&quot;</span>,<br>            <span class="hljs-string">&quot;玉门市&quot;</span>,<br>            <span class="hljs-string">&quot;敦煌市&quot;</span>,<br>            <span class="hljs-string">&quot;金塔县&quot;</span>,<br>            <span class="hljs-string">&quot;肃北蒙古族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;阿克塞哈萨克族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;安西县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;张掖市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;甘州区&quot;</span>,<br>            <span class="hljs-string">&quot;民乐县&quot;</span>,<br>            <span class="hljs-string">&quot;临泽县&quot;</span>,<br>            <span class="hljs-string">&quot;高台县&quot;</span>,<br>            <span class="hljs-string">&quot;山丹县&quot;</span>,<br>            <span class="hljs-string">&quot;肃南裕固族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;庆阳市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;西峰区&quot;</span>,<br>            <span class="hljs-string">&quot;庆城县&quot;</span>,<br>            <span class="hljs-string">&quot;环县&quot;</span>,<br>            <span class="hljs-string">&quot;华池县&quot;</span>,<br>            <span class="hljs-string">&quot;合水县&quot;</span>,<br>            <span class="hljs-string">&quot;正宁县&quot;</span>,<br>            <span class="hljs-string">&quot;宁县&quot;</span>,<br>            <span class="hljs-string">&quot;镇原县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;平凉市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;崆峒区&quot;</span>,<br>            <span class="hljs-string">&quot;泾川县&quot;</span>,<br>            <span class="hljs-string">&quot;灵台县&quot;</span>,<br>            <span class="hljs-string">&quot;崇信县&quot;</span>,<br>            <span class="hljs-string">&quot;华亭县&quot;</span>,<br>            <span class="hljs-string">&quot;庄浪县&quot;</span>,<br>            <span class="hljs-string">&quot;静宁县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;定西市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;安定区&quot;</span>,<br>            <span class="hljs-string">&quot;通渭县&quot;</span>,<br>            <span class="hljs-string">&quot;临洮县&quot;</span>,<br>            <span class="hljs-string">&quot;漳县&quot;</span>,<br>            <span class="hljs-string">&quot;岷县&quot;</span>,<br>            <span class="hljs-string">&quot;渭源县&quot;</span>,<br>            <span class="hljs-string">&quot;陇西县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;陇南市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;武都区&quot;</span>,<br>            <span class="hljs-string">&quot;成县&quot;</span>,<br>            <span class="hljs-string">&quot;宕昌县&quot;</span>,<br>            <span class="hljs-string">&quot;康县&quot;</span>,<br>            <span class="hljs-string">&quot;文县&quot;</span>,<br>            <span class="hljs-string">&quot;西和县&quot;</span>,<br>            <span class="hljs-string">&quot;礼县&quot;</span>,<br>            <span class="hljs-string">&quot;两当县&quot;</span>,<br>            <span class="hljs-string">&quot;徽县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;临夏回族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;临夏市&quot;</span>,<br>            <span class="hljs-string">&quot;临夏县&quot;</span>,<br>            <span class="hljs-string">&quot;康乐县&quot;</span>,<br>            <span class="hljs-string">&quot;永靖县&quot;</span>,<br>            <span class="hljs-string">&quot;广河县&quot;</span>,<br>            <span class="hljs-string">&quot;和政县&quot;</span>,<br>            <span class="hljs-string">&quot;东乡族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;积石山保安族东乡族撒拉族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;甘南藏族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;合作市&quot;</span>,<br>            <span class="hljs-string">&quot;临潭县&quot;</span>,<br>            <span class="hljs-string">&quot;卓尼县&quot;</span>,<br>            <span class="hljs-string">&quot;舟曲县&quot;</span>,<br>            <span class="hljs-string">&quot;迭部县&quot;</span>,<br>            <span class="hljs-string">&quot;玛曲县&quot;</span>,<br>            <span class="hljs-string">&quot;碌曲县&quot;</span>,<br>            <span class="hljs-string">&quot;夏河县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;青海省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;西宁市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;城中区&quot;</span>,<br>            <span class="hljs-string">&quot;城东区&quot;</span>,<br>            <span class="hljs-string">&quot;城西区&quot;</span>,<br>            <span class="hljs-string">&quot;城北区&quot;</span>,<br>            <span class="hljs-string">&quot;湟源县&quot;</span>,<br>            <span class="hljs-string">&quot;湟中县&quot;</span>,<br>            <span class="hljs-string">&quot;大通回族土族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;海东地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;平安县&quot;</span>,<br>            <span class="hljs-string">&quot;乐都县&quot;</span>,<br>            <span class="hljs-string">&quot;民和回族土族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;互助土族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;化隆回族自治县&quot;</span>,<br>            <span class="hljs-string">&quot;循化撒拉族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;海北藏族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;海晏县&quot;</span>,<br>            <span class="hljs-string">&quot;祁连县&quot;</span>,<br>            <span class="hljs-string">&quot;刚察县&quot;</span>,<br>            <span class="hljs-string">&quot;门源回族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;海南藏族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;共和县&quot;</span>,<br>            <span class="hljs-string">&quot;同德县&quot;</span>,<br>            <span class="hljs-string">&quot;贵德县&quot;</span>,<br>            <span class="hljs-string">&quot;兴海县&quot;</span>,<br>            <span class="hljs-string">&quot;贵南县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;黄南藏族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;同仁县&quot;</span>,<br>            <span class="hljs-string">&quot;尖扎县&quot;</span>,<br>            <span class="hljs-string">&quot;泽库县&quot;</span>,<br>            <span class="hljs-string">&quot;河南蒙古族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;果洛藏族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;玛沁县&quot;</span>,<br>            <span class="hljs-string">&quot;班玛县&quot;</span>,<br>            <span class="hljs-string">&quot;甘德县&quot;</span>,<br>            <span class="hljs-string">&quot;达日县&quot;</span>,<br>            <span class="hljs-string">&quot;久治县&quot;</span>,<br>            <span class="hljs-string">&quot;玛多县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;玉树藏族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;玉树县&quot;</span>,<br>            <span class="hljs-string">&quot;杂多县&quot;</span>,<br>            <span class="hljs-string">&quot;称多县&quot;</span>,<br>            <span class="hljs-string">&quot;治多县&quot;</span>,<br>            <span class="hljs-string">&quot;囊谦县&quot;</span>,<br>            <span class="hljs-string">&quot;曲麻莱县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;海西蒙古族藏族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;德令哈市&quot;</span>,<br>            <span class="hljs-string">&quot;格尔木市&quot;</span>,<br>            <span class="hljs-string">&quot;乌兰县&quot;</span>,<br>            <span class="hljs-string">&quot;都兰县&quot;</span>,<br>            <span class="hljs-string">&quot;天峻县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;宁夏&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;银川市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;兴庆区&quot;</span>,<br>            <span class="hljs-string">&quot;西夏区&quot;</span>,<br>            <span class="hljs-string">&quot;金凤区&quot;</span>,<br>            <span class="hljs-string">&quot;灵武市&quot;</span>,<br>            <span class="hljs-string">&quot;永宁县&quot;</span>,<br>            <span class="hljs-string">&quot;贺兰县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;石嘴山市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;大武口区&quot;</span>,<br>            <span class="hljs-string">&quot;惠农区&quot;</span>,<br>            <span class="hljs-string">&quot;平罗县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;吴忠市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;利通区&quot;</span>,<br>            <span class="hljs-string">&quot;青铜峡市&quot;</span>,<br>            <span class="hljs-string">&quot;盐池县&quot;</span>,<br>            <span class="hljs-string">&quot;同心县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;固原市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;原州区&quot;</span>,<br>            <span class="hljs-string">&quot;西吉县&quot;</span>,<br>            <span class="hljs-string">&quot;隆德县&quot;</span>,<br>            <span class="hljs-string">&quot;泾源县&quot;</span>,<br>            <span class="hljs-string">&quot;彭阳县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;中卫市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;沙坡头区&quot;</span>,<br>            <span class="hljs-string">&quot;中宁县&quot;</span>,<br>            <span class="hljs-string">&quot;海原县&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;新疆&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;乌鲁木齐市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;天山区&quot;</span>,<br>            <span class="hljs-string">&quot;沙依巴克区&quot;</span>,<br>            <span class="hljs-string">&quot;新市区&quot;</span>,<br>            <span class="hljs-string">&quot;水磨沟区&quot;</span>,<br>            <span class="hljs-string">&quot;头屯河区&quot;</span>,<br>            <span class="hljs-string">&quot;达坂城区&quot;</span>,<br>            <span class="hljs-string">&quot;东山区&quot;</span>,<br>            <span class="hljs-string">&quot;乌鲁木齐县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;克拉玛依市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;克拉玛依区&quot;</span>,<br>            <span class="hljs-string">&quot;独山子区&quot;</span>,<br>            <span class="hljs-string">&quot;白碱滩区&quot;</span>,<br>            <span class="hljs-string">&quot;乌尔禾区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;吐鲁番地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;吐鲁番市&quot;</span>,<br>            <span class="hljs-string">&quot;托克逊县&quot;</span>,<br>            <span class="hljs-string">&quot;鄯善县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;哈密地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;哈密市&quot;</span>,<br>            <span class="hljs-string">&quot;伊吾县&quot;</span>,<br>            <span class="hljs-string">&quot;巴里坤哈萨克自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;和田地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;和田市&quot;</span>,<br>            <span class="hljs-string">&quot;和田县&quot;</span>,<br>            <span class="hljs-string">&quot;洛浦县&quot;</span>,<br>            <span class="hljs-string">&quot;民丰县&quot;</span>,<br>            <span class="hljs-string">&quot;皮山县&quot;</span>,<br>            <span class="hljs-string">&quot;策勒县&quot;</span>,<br>            <span class="hljs-string">&quot;于田县&quot;</span>,<br>            <span class="hljs-string">&quot;墨玉县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;阿克苏地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;阿克苏市&quot;</span>,<br>            <span class="hljs-string">&quot;温宿县&quot;</span>,<br>            <span class="hljs-string">&quot;沙雅县&quot;</span>,<br>            <span class="hljs-string">&quot;拜城县&quot;</span>,<br>            <span class="hljs-string">&quot;阿瓦提县&quot;</span>,<br>            <span class="hljs-string">&quot;库车县&quot;</span>,<br>            <span class="hljs-string">&quot;柯坪县&quot;</span>,<br>            <span class="hljs-string">&quot;新和县&quot;</span>,<br>            <span class="hljs-string">&quot;乌什县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;喀什地区&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;喀什市&quot;</span>,<br>            <span class="hljs-string">&quot;巴楚县&quot;</span>,<br>            <span class="hljs-string">&quot;泽普县&quot;</span>,<br>            <span class="hljs-string">&quot;伽师县&quot;</span>,<br>            <span class="hljs-string">&quot;叶城县&quot;</span>,<br>            <span class="hljs-string">&quot;岳普湖县&quot;</span>,<br>            <span class="hljs-string">&quot;疏勒县&quot;</span>,<br>            <span class="hljs-string">&quot;麦盖提县&quot;</span>,<br>            <span class="hljs-string">&quot;英吉沙县&quot;</span>,<br>            <span class="hljs-string">&quot;莎车县&quot;</span>,<br>            <span class="hljs-string">&quot;疏附县&quot;</span>,<br>            <span class="hljs-string">&quot;塔什库尔干塔吉克自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;克孜勒苏柯尔克孜自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;阿图什市&quot;</span>,<br>            <span class="hljs-string">&quot;阿合奇县&quot;</span>,<br>            <span class="hljs-string">&quot;乌恰县&quot;</span>,<br>            <span class="hljs-string">&quot;阿克陶县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;巴音郭楞蒙古自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;库尔勒市&quot;</span>,<br>            <span class="hljs-string">&quot;和静县&quot;</span>,<br>            <span class="hljs-string">&quot;尉犁县&quot;</span>,<br>            <span class="hljs-string">&quot;和硕县&quot;</span>,<br>            <span class="hljs-string">&quot;且末县&quot;</span>,<br>            <span class="hljs-string">&quot;博湖县&quot;</span>,<br>            <span class="hljs-string">&quot;轮台县&quot;</span>,<br>            <span class="hljs-string">&quot;若羌县&quot;</span>,<br>            <span class="hljs-string">&quot;焉耆回族自治县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;昌吉回族自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;昌吉市&quot;</span>,<br>            <span class="hljs-string">&quot;阜康市&quot;</span>,<br>            <span class="hljs-string">&quot;奇台县&quot;</span>,<br>            <span class="hljs-string">&quot;玛纳斯县&quot;</span>,<br>            <span class="hljs-string">&quot;吉木萨尔县&quot;</span>,<br>            <span class="hljs-string">&quot;呼图壁县&quot;</span>,<br>            <span class="hljs-string">&quot;木垒哈萨克自治县&quot;</span>,<br>            <span class="hljs-string">&quot;米泉市&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;博尔塔拉蒙古自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;博乐市&quot;</span>,<br>            <span class="hljs-string">&quot;精河县&quot;</span>,<br>            <span class="hljs-string">&quot;温泉县&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;石河子&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;石河子&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;阿拉尔&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;阿拉尔&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;图木舒克&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;图木舒克&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;五家渠&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;五家渠&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;伊犁哈萨克自治州&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;伊宁市&quot;</span>,<br>            <span class="hljs-string">&quot;奎屯市&quot;</span>,<br>            <span class="hljs-string">&quot;伊宁县&quot;</span>,<br>            <span class="hljs-string">&quot;特克斯县&quot;</span>,<br>            <span class="hljs-string">&quot;尼勒克县&quot;</span>,<br>            <span class="hljs-string">&quot;昭苏县&quot;</span>,<br>            <span class="hljs-string">&quot;新源县&quot;</span>,<br>            <span class="hljs-string">&quot;霍城县&quot;</span>,<br>            <span class="hljs-string">&quot;巩留县&quot;</span>,<br>            <span class="hljs-string">&quot;察布查尔锡伯自治县&quot;</span>,<br>            <span class="hljs-string">&quot;塔城地区&quot;</span>,<br>            <span class="hljs-string">&quot;阿勒泰地区&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;台湾省&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;台北市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;内湖区&quot;</span>,<br>            <span class="hljs-string">&quot;南港区&quot;</span>,<br>            <span class="hljs-string">&quot;中正区&quot;</span>,<br>            <span class="hljs-string">&quot;万华区&quot;</span>,<br>            <span class="hljs-string">&quot;大同区&quot;</span>,<br>            <span class="hljs-string">&quot;中山区&quot;</span>,<br>            <span class="hljs-string">&quot;松山区&quot;</span>,<br>            <span class="hljs-string">&quot;大安区&quot;</span>,<br>            <span class="hljs-string">&quot;信义区&quot;</span>,<br>            <span class="hljs-string">&quot;文山区&quot;</span>,<br>            <span class="hljs-string">&quot;士林区&quot;</span>,<br>            <span class="hljs-string">&quot;北投区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;新北市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;板桥区&quot;</span>,<br>            <span class="hljs-string">&quot;汐止区&quot;</span>,<br>            <span class="hljs-string">&quot;新店区&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;桃园市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;其他&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;台中市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;其他&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;台南市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;其他&quot;</span><br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;高雄市&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;其他&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;澳门&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;澳门&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;花地玛堂区&quot;</span>,<br>            <span class="hljs-string">&quot;圣安多尼堂区&quot;</span>,<br>            <span class="hljs-string">&quot;大堂区&quot;</span>,<br>            <span class="hljs-string">&quot;望德堂区&quot;</span>,<br>            <span class="hljs-string">&quot;风顺堂区&quot;</span>,<br>            <span class="hljs-string">&quot;嘉模堂区&quot;</span>,<br>            <span class="hljs-string">&quot;圣方济各堂区&quot;</span>,<br>            <span class="hljs-string">&quot;路凼&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;香港&quot;</span>,<br>      <span class="hljs-string">&quot;city&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;香港&quot;</span>,<br>          <span class="hljs-string">&quot;city&quot;</span>: [<br>            <span class="hljs-string">&quot;深水埗区&quot;</span>,<br>            <span class="hljs-string">&quot;油尖旺区&quot;</span>,<br>            <span class="hljs-string">&quot;九龙城区&quot;</span>,<br>            <span class="hljs-string">&quot;黄大仙区&quot;</span>,<br>            <span class="hljs-string">&quot;观塘区&quot;</span>,<br>            <span class="hljs-string">&quot;北区&quot;</span>,<br>            <span class="hljs-string">&quot;大埔区&quot;</span>,<br>            <span class="hljs-string">&quot;沙田区&quot;</span>,<br>            <span class="hljs-string">&quot;西贡区&quot;</span>,<br>            <span class="hljs-string">&quot;元朗区&quot;</span>,<br>            <span class="hljs-string">&quot;屯门区&quot;</span>,<br>            <span class="hljs-string">&quot;荃湾区&quot;</span>,<br>            <span class="hljs-string">&quot;葵青区&quot;</span>,<br>            <span class="hljs-string">&quot;离岛区&quot;</span>,<br>            <span class="hljs-string">&quot;中西区&quot;</span>,<br>            <span class="hljs-string">&quot;湾仔区&quot;</span>,<br>            <span class="hljs-string">&quot;东区&quot;</span>,<br>            <span class="hljs-string">&quot;南区&quot;</span><br>          ]<br>        &#125;<br>      ]<br>    &#125;<br>  ]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：Socket聊天室（两种方式）</title>
    <link href="/2019/02/02/JS%E6%A1%88%E4%BE%8B%20Socket%E8%81%8A%E5%A4%A9%E5%AE%A4%EF%BC%88%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <url>/2019/02/02/JS%E6%A1%88%E4%BE%8B%20Socket%E8%81%8A%E5%A4%A9%E5%AE%A4%EF%BC%88%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="一-socket轮询（每隔一段时间向后端请求一次，增加服务器压力）"><a href="#一-socket轮询（每隔一段时间向后端请求一次，增加服务器压力）" class="headerlink" title="一.socket轮询（每隔一段时间向后端请求一次，增加服务器压力）:"></a>一.socket轮询（每隔一段时间向后端请求一次，增加服务器压力）:</h2><p>由于socket连接时采用ws/wss协议，页面必须放在服务器端，所以首先用node产生一个静态文件夹，方便通过IP直接访问</p><h3 id="static-js"><a href="#static-js" class="headerlink" title="static.js:"></a>static.js:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<span class="hljs-comment">//这里要引入express</span><br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br>app.use(<span class="hljs-string">&#x27;/main&#x27;</span>, express.static(path.join(__dirname, <span class="hljs-string">&#x27;./html&#x27;</span>)));<span class="hljs-comment">//设置静态文件夹</span><br>app.listen(<span class="hljs-number">2048</span>, <span class="hljs-function">() =&gt;</span> &#123;<span class="hljs-comment">//端口号不能与socket监听的端口号一样</span><br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;static 2048 Server Start~&#x27;</span>);<br>&#125;)<br></code></pre></td></tr></table></figure><p>在html界面做一些简单的布局以及socket数据请求：</p><h3 id="index-html："><a href="#index-html：" class="headerlink" title="index.html："></a>index.html：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">    <span class="hljs-selector-id">#text</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">350px</span>;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-id">#netName</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">      &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;msg&quot;</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;80&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;30&quot;</span> <span class="hljs-attr">readonly</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;netName&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;名称&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;消息&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;clickHandler()&quot;</span>&gt;</span>发送<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-built_in">setInterval</span>(sendMsg, <span class="hljs-number">1000</span>); <span class="hljs-comment">//这里做轮询请求</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendMsg</span>(<span class="hljs-params">data</span>) </span>&#123; <span class="hljs-comment">//封装WebSocket请求函数</span></span><br><span class="javascript">      <span class="hljs-keyword">if</span> (!data) &#123;</span><br><span class="javascript">        data = &#123;</span><br><span class="javascript">          <span class="hljs-attr">err</span>: <span class="hljs-number">1</span></span><br><span class="javascript">        &#125;; <span class="hljs-comment">//根据参数判断是否符合数据规范</span></span><br><span class="javascript">      &#125;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> ws = <span class="hljs-keyword">new</span> WebSocket(<span class="hljs-string">&quot;ws://192.168.1.4:1024&quot;</span>); <span class="hljs-comment">//使用ws协议对1024端口进行请求</span></span><br><span class="javascript">      ws.onopen = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        ws.send(<span class="hljs-built_in">JSON</span>.stringify(data));</span><br><span class="javascript">      &#125;;</span><br><span class="javascript">      ws.onmessage = getData;</span><br><span class="javascript">    &#125;</span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getData</span>(<span class="hljs-params">evt</span>) </span>&#123; <span class="hljs-comment">//将请求成功后返回的数据接收</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> received_msg = evt.data;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> val = <span class="hljs-built_in">JSON</span>.parse(evt.data).join(<span class="hljs-string">&quot;\n&quot;</span>);</span><br><span class="javascript">      msg.value = val;</span><br><span class="javascript">    &#125;</span><br><span class="javascript">    <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">&quot;keyup&quot;</span>, <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123; <span class="hljs-comment">//回车键发送</span></span><br><span class="javascript">      <span class="hljs-keyword">if</span> (e.keyCode !== <span class="hljs-number">13</span>) <span class="hljs-keyword">return</span>;</span><br><span class="javascript">      clickHandler(e);</span><br><span class="javascript">    &#125;);</span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//点击Button时将数据发送到服务端</span></span><br><span class="javascript">      <span class="hljs-keyword">if</span> (netName.value.trim().length == <span class="hljs-number">0</span> || text.value.trim().length == <span class="hljs-number">0</span>)</span><br><span class="javascript">        <span class="hljs-keyword">return</span>;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> obj = &#123;</span><br><span class="javascript">        <span class="hljs-attr">err</span>: <span class="hljs-number">0</span>,</span><br><span class="javascript">        <span class="hljs-attr">netName</span>: netName.value,</span><br><span class="javascript">        <span class="hljs-attr">msg</span>: text.value</span><br><span class="javascript">      &#125;;</span><br><span class="javascript">      sendMsg(obj);</span><br><span class="javascript">      text.value = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">//每次发送后将内容制空</span></span><br><span class="javascript">    &#125;</span><br><span class="javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Client-js（客户端）"><a href="#Client-js（客户端）" class="headerlink" title="Client.js（客户端）"></a>Client.js（客户端）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> WebSocket = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;ws&#x27;</span>);<span class="hljs-comment">//这里引入一个模块ws</span><br><br><span class="hljs-keyword">const</span> ws = <span class="hljs-keyword">new</span> WebSocket(<span class="hljs-string">&#x27;ws://192.168.1.4:1024&#x27;</span>);<span class="hljs-comment">//对1024端口进行监听</span><br> <br>ws.on(<span class="hljs-string">&#x27;open&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Client is listening on port 1024&#x27;</span>);<br>&#125;);<br>ws.on(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    ws.send(msg);<span class="hljs-comment">//获取到前端传来的数据后，直接向服务端传递</span><br>&#125;);<br>ws.on(<span class="hljs-string">&#x27;close&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123; <br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Client close&#x27;</span>)<br>&#125;); <br></code></pre></td></tr></table></figure><h2 id="Server-js"><a href="#Server-js" class="headerlink" title="Server.js"></a>Server.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-keyword">static</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./static&#x27;</span>)<span class="hljs-comment">//引入刚刚创建的static静态目录</span><br><span class="hljs-keyword">const</span> client = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./client&#x27;</span>)<span class="hljs-comment">//引入客户端</span><br><span class="hljs-keyword">const</span> WebSocket = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;ws&#x27;</span>);<br><span class="hljs-keyword">let</span> list = [];<br><span class="hljs-keyword">const</span> wss = <span class="hljs-keyword">new</span> WebSocket.Server(&#123;<span class="hljs-comment">//对1024端口进行监听</span><br>    <span class="hljs-attr">port</span>: <span class="hljs-number">1024</span><br>&#125;, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Server is listening on port 1024&#x27;</span>);<br>&#125;);<br><br>wss.on(<span class="hljs-string">&#x27;connection&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">ws</span>) </span>&#123;<br>    ws.on(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">msg</span>) </span>&#123;<span class="hljs-comment">//对数据过滤和处理</span><br>        <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">JSON</span>.parse(msg).err)&#123;<br>            list.push(<span class="hljs-built_in">JSON</span>.parse(msg).netName + <span class="hljs-string">&#x27; 说: &#x27;</span> + <span class="hljs-built_in">JSON</span>.parse(msg).msg)<br>        &#125;<br>        ws.send(<span class="hljs-built_in">JSON</span>.stringify(list));<span class="hljs-comment">//将数据传到前端</span><br>    &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="二-socketio长链接（与轮询不同，使前后端通过事件处理机制时刻保持连接状态）"><a href="#二-socketio长链接（与轮询不同，使前后端通过事件处理机制时刻保持连接状态）" class="headerlink" title="二.socketio长链接（与轮询不同，使前后端通过事件处理机制时刻保持连接状态）"></a>二.socketio长链接（与轮询不同，使前后端通过事件处理机制时刻保持连接状态）</h2><p>同样产生一个静态文件夹：</p><h3 id="static-js-1"><a href="#static-js-1" class="headerlink" title="static.js:"></a>static.js:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br>app.use(<span class="hljs-string">&#x27;/main&#x27;</span>, express.static(path.join(__dirname, <span class="hljs-string">&#x27;./static&#x27;</span>)));<br>app.listen(<span class="hljs-number">2048</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;static 2048 Server Start~&#x27;</span>);<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">    <span class="hljs-selector-id">#text</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">350px</span>;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-id">#netName</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">      &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./socket.io.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 首先用npm下载socketio并且使用socket.io-client中的socket.io.js --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;msg&quot;</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;80&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;30&quot;</span> <span class="hljs-attr">readonly</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;netName&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;名称&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;消息&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;clickHandler()&quot;</span>&gt;</span>发送<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">var</span> socket = io.connect(<span class="hljs-string">&#x27;http://192.168.1.4:1024&#x27;</span>); <span class="hljs-comment">//建立http连接</span></span><br><span class="javascript">    <span class="hljs-keyword">var</span> list = [] <span class="hljs-comment">//本地聊天记录缓存</span></span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">if</span> (netName.value.trim().length == <span class="hljs-number">0</span> || text.value.trim().length == <span class="hljs-number">0</span>)</span><br><span class="javascript">        <span class="hljs-keyword">return</span>; <span class="hljs-comment">//过滤输入框</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> obj = &#123;</span><br><span class="javascript">        <span class="hljs-attr">netName</span>: netName.value,</span><br><span class="javascript">        <span class="hljs-attr">msg</span>: text.value</span><br><span class="javascript">      &#125;;</span><br><span class="javascript">      list.push(obj.netName + <span class="hljs-string">&#x27; 说: &#x27;</span> + obj.msg)</span><br><span class="javascript">      socket.emit(<span class="hljs-string">&#x27;send&#x27;</span>, obj)<span class="hljs-comment">//触发send事件</span></span><br><span class="javascript">      getData(list);</span><br><span class="javascript">      text.value = <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="javascript">    &#125;</span><br><span class="javascript">    socket.on(<span class="hljs-string">&#x27;msg&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">msg</span>) </span>&#123;<span class="hljs-comment">//添加msg监听事件</span></span><br><span class="javascript">      list = msg;</span><br><span class="javascript">      getData(list)</span><br><span class="javascript">    &#125;)</span><br><span class="javascript"></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getData</span>(<span class="hljs-params">arr</span>) </span>&#123;<span class="hljs-comment">//将聊天记录放至area标签</span></span><br><span class="javascript">      msg.value = arr.join(<span class="hljs-string">&#x27;\n&#x27;</span>);</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Server-js-1"><a href="#Server-js-1" class="headerlink" title="Server.js:"></a>Server.js:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-keyword">static</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./static&quot;</span>);<span class="hljs-comment">//引入刚刚创建的static静态目录</span><br><span class="hljs-keyword">let</span> list = [];<span class="hljs-comment">//聊天记录缓存</span><br><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>);<br><span class="hljs-keyword">var</span> app = express();<br><span class="hljs-keyword">var</span> server = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;http&quot;</span>).Server(app);<br><span class="hljs-keyword">const</span> io = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;socket.io&quot;</span>)(server);<br>io.on(<span class="hljs-string">&quot;connection&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">client</span>) </span>&#123;<br>  client.on(<span class="hljs-string">&quot;send&quot;</span>, <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;<span class="hljs-comment">//添加send监听事件</span><br>    list.push(data.netName + <span class="hljs-string">&quot; 说: &quot;</span> + data.msg);<span class="hljs-comment">//将前端事件传过来的参数进行处理</span><br>    sendList(list, client);<span class="hljs-comment">//将数据通过事件发送到前端</span><br>  &#125;);<br>&#125;);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendList</span>(<span class="hljs-params">list, target</span>) </span>&#123;<br>  target.broadcast.emit(<span class="hljs-string">&quot;msg&quot;</span>, list);<span class="hljs-comment">//触发msg事件</span><br>&#125;<br>server.listen(<span class="hljs-number">1024</span>, <span class="hljs-string">&quot;192.168.1.4&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Connect Success At 1024&quot;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：继承和深复制</title>
    <link href="/2018/12/30/JS%E6%A1%88%E4%BE%8B%20%E7%BB%A7%E6%89%BF%E5%92%8C%E6%B7%B1%E5%A4%8D%E5%88%B6/"/>
    <url>/2018/12/30/JS%E6%A1%88%E4%BE%8B%20%E7%BB%A7%E6%89%BF%E5%92%8C%E6%B7%B1%E5%A4%8D%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="继承："><a href="#继承：" class="headerlink" title="继承："></a>继承：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 寄生式继承(圣杯)</span><br>Father.prototype.name = <span class="hljs-string">&#x27;Hello&#x27;</span> <span class="hljs-comment">//在Father类中添加一个name属性</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Father</span>(<span class="hljs-params"></span>) </span>&#123;&#125; <span class="hljs-comment">//构造Father类</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Son</span>(<span class="hljs-params"></span>) </span>&#123;&#125; <span class="hljs-comment">//构造Son类</span><br><span class="hljs-keyword">var</span> inherit = (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//新建一个立即执行函数,(类似雅虎网站的继承写法)</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">F</span>(<span class="hljs-params"></span>) </span>&#123;&#125; <span class="hljs-comment">//使用闭包产生私有函数</span><br><span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">father, son</span>) </span>&#123; <span class="hljs-comment">//返回继承函数</span><br>F.prototype = father.prototype; <span class="hljs-comment">//私有函数取出父类的原型</span><br>son.prototype = <span class="hljs-keyword">new</span> F(); <span class="hljs-comment">//实例化私有函数，并将对象赋给子类的原型</span><br>son.prototype.superClass = father; <span class="hljs-comment">//自定义子类的超类等于父类</span><br>son.prototype.constructor = son; <span class="hljs-comment">//将子类的构造函数指向自己，否则是父类(因为原型链上的constructor是父类)</span><br>&#125;<br>&#125;())<br>inherit(Father, Son) <span class="hljs-comment">//调用函数</span><br>Son.prototype.age = <span class="hljs-string">&#x27;World&#x27;</span> <span class="hljs-comment">//改变子类的原型(目的：测试父类原型与子类原型是否绑定)</span><br><span class="hljs-keyword">var</span> son = <span class="hljs-keyword">new</span> Son(); <span class="hljs-comment">//实例化子类对象</span><br><span class="hljs-keyword">var</span> father = <span class="hljs-keyword">new</span> Father(); <span class="hljs-comment">//实例化父类对象</span><br><span class="hljs-built_in">console</span>.log(son, father)<br><span class="hljs-built_in">console</span>.log(son.name, father.name); <span class="hljs-comment">//此时父子类都有该属性。打印(Hello Hello)</span><br><span class="hljs-built_in">console</span>.log(son.age, father.age) <span class="hljs-comment">//子类独有属性，父类无此属性。打印(World undefined)</span><br></code></pre></td></tr></table></figure><h2 id="深复制："><a href="#深复制：" class="headerlink" title="深复制："></a>深复制：</h2><h3 id="简易版："><a href="#简易版：" class="headerlink" title="简易版："></a>简易版：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> obj = &#123;<br><span class="hljs-attr">a</span>: <span class="hljs-number">1</span>,<br><span class="hljs-attr">b</span>: <span class="hljs-string">&#x27;hello&#x27;</span>,<br><span class="hljs-attr">c</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.a, <span class="hljs-built_in">this</span>.b);<br>&#125;,<br><span class="hljs-attr">d</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-literal">false</span>],<br><span class="hljs-attr">e</span>: &#123;<br><span class="hljs-attr">a</span>: <span class="hljs-number">11</span>,<br><span class="hljs-attr">b</span>: <span class="hljs-string">&#x27;11&#x27;</span>,<br><span class="hljs-attr">c</span>: &#123;<br><span class="hljs-attr">arr</span>: [<span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>],<br><span class="hljs-attr">obj</span>: &#123;<br><span class="hljs-attr">z</span>: <span class="hljs-string">&#x27;hello&#x27;</span>,<br><span class="hljs-attr">y</span>: <span class="hljs-string">&#x27;world&#x27;</span><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">var</span> obj1 = &#123;&#125;<br>obj1 = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(obj))<br><span class="hljs-built_in">console</span>.log(obj1);<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181230173146272.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="进阶版：（缺点：遇到不可枚举项时无法遍历，对象中有set和get时只会将结果输出）"><a href="#进阶版：（缺点：遇到不可枚举项时无法遍历，对象中有set和get时只会将结果输出）" class="headerlink" title="进阶版：（缺点：遇到不可枚举项时无法遍历，对象中有set和get时只会将结果输出）"></a>进阶版：（缺点：遇到不可枚举项时无法遍历，对象中有set和get时只会将结果输出）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> obj = &#123;<br><span class="hljs-attr">a</span>: <span class="hljs-number">1</span>,<br><span class="hljs-attr">b</span>: <span class="hljs-string">&#x27;hello&#x27;</span>,<br><span class="hljs-attr">c</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.a, <span class="hljs-built_in">this</span>.b);<br>&#125;,<br><span class="hljs-attr">d</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-literal">false</span>],<br><span class="hljs-attr">e</span>: &#123;<br><span class="hljs-attr">a</span>: <span class="hljs-number">11</span>,<br><span class="hljs-attr">b</span>: <span class="hljs-string">&#x27;11&#x27;</span>,<br><span class="hljs-attr">c</span>: &#123;<br><span class="hljs-attr">arr</span>: [<span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>],<br><span class="hljs-attr">obj</span>: &#123;<br><span class="hljs-attr">z</span>: <span class="hljs-string">&#x27;hello&#x27;</span>,<br><span class="hljs-attr">y</span>: <span class="hljs-string">&#x27;world&#x27;</span><br>&#125;<br>&#125;<br>&#125;,<br><span class="hljs-attr">f</span>: <span class="hljs-literal">null</span>,<br><span class="hljs-attr">g</span>: <span class="hljs-literal">undefined</span>,<br><span class="hljs-keyword">set</span> <span class="hljs-title">count</span>(<span class="hljs-params">val</span>) &#123;<br><span class="hljs-built_in">this</span>.f = val;<br>&#125;,<br><span class="hljs-keyword">get</span> <span class="hljs-title">count</span>() &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.f<br>&#125;<br>&#125;<br><span class="hljs-keyword">var</span> obj1 = &#123;&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">copyObj</span>(<span class="hljs-params">org, tag</span>) </span>&#123; <span class="hljs-comment">//org是原对象(obj)，tag是复制后的对象(obj1)</span><br><span class="hljs-keyword">var</span> tag = tag || &#123;&#125;; <span class="hljs-comment">//初始化要复制的对象</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> key <span class="hljs-keyword">in</span> org) &#123; <span class="hljs-comment">//遍历对象</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> org[key] === <span class="hljs-string">&#x27;object&#x27;</span> &amp;&amp; org[key] !== <span class="hljs-literal">null</span>) &#123; <span class="hljs-comment">//若遍历的每一项非空且为对象，则为引用值，则继续下一步</span><br><span class="hljs-keyword">if</span> (org[key].toString() === <span class="hljs-string">&#x27;[object Object]&#x27;</span>) &#123;<span class="hljs-comment">//若引用值.toString等于[object Object]，说明该值数据类型为对象</span><br>tag[key] = &#123;&#125;;<br>&#125; <span class="hljs-keyword">else</span> &#123;<span class="hljs-comment">//否则为数组</span><br>tag[key] = [];<br>&#125;<br>copyObj(org[key], tag[key])<span class="hljs-comment">//再次执行函数</span><br>&#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">//若每一项除了typeof为obj以外的值都是原始值，直接赋值即可</span><br>tag[key] = org[key];<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> tag; <span class="hljs-comment">//递归结束后返回对象</span><br>&#125;<br>copyObj(obj, obj1)<br>obj.e.c.obj.z = <span class="hljs-string">&#x27;world&#x27;</span>;<span class="hljs-comment">//改变复制后的值观察复制后的对象是否发生改变</span><br>obj.e.c.obj.y = <span class="hljs-string">&#x27;hello&#x27;</span>;<br><span class="hljs-built_in">console</span>.log(obj, obj1);<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181230173201112.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="终极版深复制：（解决进阶版的问题）"><a href="#终极版深复制：（解决进阶版的问题）" class="headerlink" title="终极版深复制：（解决进阶版的问题）"></a>终极版深复制：（解决进阶版的问题）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> obj = &#123;<br><span class="hljs-attr">a</span>: <span class="hljs-number">1</span>,<br><span class="hljs-attr">b</span>: <span class="hljs-string">&#x27;hello&#x27;</span>,<br><span class="hljs-attr">c</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.a, <span class="hljs-built_in">this</span>.b);<br>&#125;,<br><span class="hljs-attr">d</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-literal">false</span>],<br><span class="hljs-attr">e</span>: &#123;<br><span class="hljs-attr">a</span>: <span class="hljs-number">11</span>,<br><span class="hljs-attr">b</span>: <span class="hljs-string">&#x27;11&#x27;</span>,<br><span class="hljs-attr">c</span>: &#123;<br><span class="hljs-attr">arr</span>: [<span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>],<br><span class="hljs-attr">obj</span>: &#123;<br><span class="hljs-attr">z</span>: <span class="hljs-string">&#x27;hello&#x27;</span>,<br><span class="hljs-attr">y</span>: <span class="hljs-string">&#x27;world&#x27;</span><br>&#125;<br>&#125;<br>&#125;,<br><span class="hljs-attr">f</span>: <span class="hljs-literal">null</span>,<br><span class="hljs-attr">g</span>: <span class="hljs-literal">undefined</span>,<br><span class="hljs-keyword">set</span> <span class="hljs-title">count</span>(<span class="hljs-params">val</span>) &#123;<br><span class="hljs-built_in">this</span>.f = val;<br>&#125;,<br><span class="hljs-keyword">get</span> <span class="hljs-title">count</span>() &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.f<br>&#125;<br>&#125;<br><span class="hljs-keyword">var</span> obj1 = &#123;&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">copyObj</span>(<span class="hljs-params">org, tag</span>) </span>&#123;<br><span class="hljs-keyword">var</span> tag = tag || &#123;&#125;; <span class="hljs-comment">//初始化要复制的对象</span><br><span class="hljs-keyword">var</span> name = <span class="hljs-built_in">Object</span>.getOwnPropertyNames(org); <span class="hljs-comment">//获取该对象的属性名，以字符串数组返回</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; name.length; i++) &#123; <span class="hljs-comment">//遍历对象</span><br><span class="hljs-keyword">var</span> desc = <span class="hljs-built_in">Object</span>.getOwnPropertyDescriptor(org, name[i]); <span class="hljs-comment">//获取对象的属性描述对象，无引用关系，返回另一个对象，改变时原对象不发生变化(复制的关键)</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> desc.value === <span class="hljs-string">&#x27;object&#x27;</span> &amp;&amp; desc.value !== <span class="hljs-literal">null</span>) &#123; <span class="hljs-comment">//若遍历的每一项非空且为对象，则为引用值，则进行下一步</span><br><span class="hljs-keyword">var</span> obj = desc.value.toString() === <span class="hljs-string">&#x27;[object Object]&#x27;</span> ? &#123;&#125; : []; <span class="hljs-comment">//判断是数组还是对象</span><br><span class="hljs-built_in">Object</span>.defineProperty(tag, name[i], &#123; <span class="hljs-comment">//设置对象属性值，前三个的值是返回true或false</span><br><span class="hljs-attr">configurable</span>: desc.configurable, <span class="hljs-comment">//是否可删除可替换</span><br><span class="hljs-attr">enumerable</span>: desc.enumerable, <span class="hljs-comment">//是否可枚举可遍历</span><br><span class="hljs-attr">writable</span>: desc.writable, <span class="hljs-comment">//是否可写入</span><br><span class="hljs-attr">value</span>: obj <span class="hljs-comment">//对象的值</span><br>&#125;);<br>copyObj(desc.value, obj); <span class="hljs-comment">//再次执行函数</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">Object</span>.defineProperty(tag, name[i], desc); <span class="hljs-comment">//否则直接将该对象的属性值进行复制(原始值)</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> tag;<br>&#125;<br>copyObj(obj, obj1)<br>obj.e.c.obj.z = <span class="hljs-string">&#x27;world&#x27;</span>; <span class="hljs-comment">//改变复制后的值观察复制后的对象是否发生改变</span><br>obj.e.c.obj.y = <span class="hljs-string">&#x27;hello&#x27;</span>;<br><span class="hljs-built_in">console</span>.log(obj, obj1);<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181230174051591.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>React（四）进阶</title>
    <link href="/2018/12/30/React%EF%BC%88%E5%9B%9B%EF%BC%89%E8%BF%9B%E9%98%B6/"/>
    <url>/2018/12/30/React%EF%BC%88%E5%9B%9B%EF%BC%89%E8%BF%9B%E9%98%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="搭建脚手架-create-react-app：（类似Vue）："><a href="#搭建脚手架-create-react-app：（类似Vue）：" class="headerlink" title="搭建脚手架 create-react-app：（类似Vue）："></a>搭建脚手架 create-react-app：（类似Vue）：</h2><p>步骤：</p><p>全局安装 npm install create-react-app -g</p><p>在项目目录下安装create-react-app myapp(项目名称）</p><p>npm start 运行项目</p><p>npm run eject——–将配置文件迁移到外部（产生config文件夹）</p><p><img src="https://img-blog.csdnimg.cn/201812301515375.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h2 id="Redux："><a href="#Redux：" class="headerlink" title="Redux："></a>Redux：</h2><p>如果你不知道是否需要 Redux，那就是不需要它</p><p>只有遇到 React 实在解决不了的问题，你才需要 Redux</p><p>redux的条件：</p><ul><li>某个组件的状态，需要共享</li><li>某个状态需要在任何地方都可以拿到</li><li>一个组件需要改变全局状态</li><li>一个组件需要改变另一个组件的状态</li></ul><p>安装： npm install –save redux</p><p>安装redux工具：</p><p>npm install –save react-redux<br>npm install –save-dev redux-devtools</p><h3 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h3><p>组件触发actionCreate中的函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addTodoWithDispatch</span>(<span class="hljs-params">text</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> action = &#123;<br>    <span class="hljs-attr">type</span>: ADD_TODO,<span class="hljs-comment">//自定类型</span><br>    text<span class="hljs-comment">//抛出的内容</span><br>  &#125;<br>  dispatch(action)<span class="hljs-comment">//抛出action对象</span><br>&#125;<br></code></pre></td></tr></table></figure><p>但是只会经过Store而不会操作，直接抛出到Reducers，<u>不能修改<code>state，因为对象的引用关系，会将原数据修改</code></u></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; VisibilityFilters &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./actions&#x27;</span><span class="hljs-comment">//引入actions</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">todoApp</span>(<span class="hljs-params">state, action</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> state === <span class="hljs-string">&#x27;undefined&#x27;</span>) &#123;<br>    <span class="hljs-keyword">return</span> initialState<br>  &#125;<br><br>  <span class="hljs-comment">// 这里暂不处理任何 action，</span><br>  <span class="hljs-comment">// 仅返回传入的 state。</span><br>  <span class="hljs-keyword">return</span> state<br>&#125;<br></code></pre></td></tr></table></figure><p>若要对state修改，需另附值（对象复制），再做修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; VisibilityFilters &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./actions&#x27;</span><span class="hljs-comment">//引入actions</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">todoApp</span>(<span class="hljs-params">state, action</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> state === <span class="hljs-string">&#x27;undefined&#x27;</span>) &#123;<br>    <span class="hljs-keyword">return</span> initialState<br>  &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">Object</span>.assign(&#123;&#125;, state, &#123;<br>        <span class="hljs-attr">visibilityFilter</span>: action.filter<br>      &#125;)<span class="hljs-comment">//复制了state，并返回</span><br>&#125;<br></code></pre></td></tr></table></figure><p>获取返回的state</p><h3 id="getState-方法获取-state；"><a href="#getState-方法获取-state；" class="headerlink" title="getState()方法获取 state；"></a><a href="https://www.redux.org.cn/docs/api/Store.html#getState"><code>getState()</code></a>方法获取 state；</h3><h3 id="dispatch-action-方法更新-state；"><a href="#dispatch-action-方法更新-state；" class="headerlink" title="dispatch(action)方法更新 state；"></a><a href="https://www.redux.org.cn/docs/api/Store.html#dispatch"><code>dispatch(action)</code></a>方法更新 state；</h3><h3 id="subscribe-listener-注册监听器"><a href="#subscribe-listener-注册监听器" class="headerlink" title="subscribe(listener)注册监听器;"></a><a href="https://www.redux.org.cn/docs/api/Store.html#subscribe"><code>subscribe(listener)</code></a>注册监听器;</h3><h3 id="subscribe-listener-返回的函数注销监听器。"><a href="#subscribe-listener-返回的函数注销监听器。" class="headerlink" title="subscribe(listener)返回的函数注销监听器。"></a><a href="https://www.redux.org.cn/docs/api/Store.html#subscribe"><code>subscribe(listener)</code></a>返回的函数注销监听器。</h3><p><img src="https://img-blog.csdnimg.cn/20181231141248528.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h1 id="react-router-dom和react-router（路由）："><a href="#react-router-dom和react-router（路由）：" class="headerlink" title="react-router-dom和react-router（路由）："></a>react-router-dom和react-router（路由）：</h1><h2 id="react-router-dom："><a href="#react-router-dom：" class="headerlink" title="react-router-dom："></a>react-router-dom：</h2><p>安装：npm install react-router-dom</p><p>使用一个js文件实现路由功能：</p><p>需要路由操作的页面引入路由方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123;HashRouter,BrowserRouter,Link,NavLink,Route,Switch&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react-router-dom&#x27;</span><br></code></pre></td></tr></table></figure><p>HashRouter：根据哈希变化进行路由操作；</p><p>BrowserRouter：根据Path路径变化而操作；</p><p>Link 和 Route：类似于Vue的routerlink 和 route-view，连接路由的组件，显示路由的组件；</p><h2 id="例如："><a href="#例如：" class="headerlink" title="例如："></a>例如：</h2><p>引入要路由的文件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> A <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./a&#x27;</span><br><span class="hljs-keyword">import</span> B <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./b&#x27;</span><br><span class="hljs-keyword">import</span> C <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./c&#x27;</span><br></code></pre></td></tr></table></figure><p>路由操作：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span>(<br>        <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">HashRouter</span>&gt;</span></span><br><span class="xml">            </span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">           </span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">                    <span class="hljs-tag">&lt;<span class="hljs-name">Link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&#x27;/&#x27;</span>&gt;</span>a<span class="hljs-tag">&lt;/<span class="hljs-name">Link</span>&gt;</span>&#123;/*匹配全部的*/&#125;</span><br><span class="xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">                    <span class="hljs-tag">&lt;<span class="hljs-name">Link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&#x27;/b&#x27;</span>&gt;</span>b<span class="hljs-tag">&lt;/<span class="hljs-name">Link</span>&gt;</span>&#123;/*匹配b的*/&#125;</span><br><span class="xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">                    <span class="hljs-tag">&lt;<span class="hljs-name">Link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&#x27;/c&#x27;</span>&gt;</span>c<span class="hljs-tag">&lt;/<span class="hljs-name">Link</span>&gt;</span>&#123;/*匹配c的*/&#125;</span><br><span class="xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>/&gt;</span></span><br><span class="xml">             <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">exact</span>=<span class="hljs-string">&#123;true&#125;</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&#x27;/&#x27;</span> <span class="hljs-attr">component</span>=<span class="hljs-string">&#123;A&#125;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Route</span>&gt;</span>&#123;/*跳到a*/&#125;</span><br><span class="xml">             <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&#x27;/b&#x27;</span> <span class="hljs-attr">component</span>=<span class="hljs-string">&#123;B&#125;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Route</span>&gt;</span>&#123;/*跳到b*/&#125;</span><br><span class="xml">             <span class="hljs-tag">&lt;<span class="hljs-name">Route</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&#x27;/c&#x27;</span> <span class="hljs-attr">component</span>=<span class="hljs-string">&#123;C&#125;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Route</span>&gt;</span>&#123;/*跳到c*/&#125;</span><br><span class="xml">             <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">HashRouter</span>&gt;</span></span><br>        )<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="react-router："><a href="#react-router：" class="headerlink" title="react-router："></a>react-router：</h2><p>React Router 是一个基于React之上的强大路由库；</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-keyword">import</span> &#123; Router, Route, Link &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react-router&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="传参："><a href="#传参：" class="headerlink" title="传参："></a>传参：</h3><ul><li>params：在编程式导航的push或replace中加/ : key，传递方式由路由匹配，只能传字符（JOSN处理），刷新界面依然保存</li><li>query：在路由path处写{path：‘/admin’，query：{name：aaa，age：20}},无需动态路由（即，在路径处有个 /：key），刷新后不保存，可传任何数据</li><li>state：类似query，在路由path处写{path：‘/admin’，state：{name：aaa，age：20}}，无需动态路由，刷新后保存，可传任何数据</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>React（三）TableBar，ToDoList，Redux案例</title>
    <link href="/2018/12/27/React%EF%BC%88%E4%B8%89%EF%BC%89TableBar%EF%BC%8CToDoList%EF%BC%8CRedux%E6%A1%88%E4%BE%8B/"/>
    <url>/2018/12/27/React%EF%BC%88%E4%B8%89%EF%BC%89TableBar%EF%BC%8CToDoList%EF%BC%8CRedux%E6%A1%88%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="直接上代码："><a href="#直接上代码：" class="headerlink" title="直接上代码："></a>直接上代码：</h3><p>TableBar:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./react.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./react-dom.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./browser.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">    * &#123;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">        <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">body</span>&#123;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">        <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">list-style</span>: none;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-class">.title</span> <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">float</span>: left;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightcoral;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span>;</span><br><span class="css">        <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">60px</span>;</span><br><span class="css">        <span class="hljs-attribute">cursor</span>: pointer;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-id">#tabbar</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto <span class="hljs-number">0</span>;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-class">.title</span> <span class="hljs-selector-class">.change</span>&#123;</span><br><span class="css">          <span class="hljs-attribute">background</span>: lightgreen;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-class">.area</span> <span class="hljs-selector-tag">li</span>&#123;</span><br><span class="css">        <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">        <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightblue;</span><br><span class="css">      &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;tabbar&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/babel&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">var</span> Tab = React.createClass(&#123;</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">getDefaultProps</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">            <span class="hljs-attr">list</span>: [<span class="hljs-comment">//数据</span></span><br><span class="javascript">              &#123;</span><br><span class="javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;北京&quot;</span>,</span><br><span class="javascript">                <span class="hljs-attr">area</span>: [</span><br><span class="javascript">                  <span class="hljs-string">&quot;东城区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;西城区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;崇文区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;宣武区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;朝阳区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;丰台区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;石景山区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;海淀区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;门头沟区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;房山区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;通州区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;顺义区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;昌平区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;大兴区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;平谷区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;怀柔区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;密云县&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;延庆县&quot;</span></span><br><span class="javascript">                ]</span><br><span class="javascript">              &#125;,</span><br><span class="javascript">              &#123;</span><br><span class="javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;上海&quot;</span>,</span><br><span class="javascript">                <span class="hljs-attr">area</span>: [</span><br><span class="javascript">                  <span class="hljs-string">&quot;黄浦区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;卢湾区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;徐汇区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;长宁区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;静安区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;普陀区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;闸北区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;虹口区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;杨浦区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;宝山区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;闵行区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;嘉定区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;松江区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;金山区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;青浦区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;南汇区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;奉贤区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;浦东新区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;崇明县&quot;</span></span><br><span class="javascript">                ]</span><br><span class="javascript">              &#125;,</span><br><span class="javascript">              &#123;</span><br><span class="javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;广州&quot;</span>,</span><br><span class="javascript">                <span class="hljs-attr">area</span>: [</span><br><span class="javascript">                  <span class="hljs-string">&quot;越秀区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;荔湾区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;海珠区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;天河区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;白云区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;黄埔区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;番禺区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;花都区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;南沙区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;萝岗区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;增城市&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;从化市&quot;</span></span><br><span class="javascript">                ]</span><br><span class="javascript">              &#125;,</span><br><span class="javascript">              &#123;</span><br><span class="javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;深圳&quot;</span>,</span><br><span class="javascript">                <span class="hljs-attr">area</span>: [</span><br><span class="javascript">                  <span class="hljs-string">&quot;福田区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;罗湖区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;南山区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;宝安区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;龙岗区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;盐田区&quot;</span></span><br><span class="javascript">                ]</span><br><span class="javascript">              &#125;,</span><br><span class="javascript">              &#123;</span><br><span class="javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;南昌&quot;</span>,</span><br><span class="javascript">                <span class="hljs-attr">area</span>: [</span><br><span class="javascript">                  <span class="hljs-string">&quot;东湖区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;西湖区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;青云谱区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;湾里区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;青山湖区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;新建县&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;南昌县&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;进贤县&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;安义县&quot;</span></span><br><span class="javascript">                ]</span><br><span class="javascript">              &#125;</span><br><span class="javascript">            ]</span><br><span class="javascript">          &#125;;</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">getInitialState</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> &#123;<span class="hljs-comment">//默认值</span></span><br><span class="javascript">            <span class="hljs-attr">str</span>: <span class="hljs-string">&quot;南昌&quot;</span>,</span><br><span class="javascript">            <span class="hljs-attr">arr</span>:[</span><br><span class="javascript">                  <span class="hljs-string">&quot;东湖区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;西湖区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;青云谱区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;湾里区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;青山湖区&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;新建县&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;南昌县&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;进贤县&quot;</span>,</span><br><span class="javascript">                  <span class="hljs-string">&quot;安义县&quot;</span></span><br><span class="javascript">                ]</span><br><span class="javascript">          &#125;;</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> (</span><br><span class="javascript">            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">              <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>&#123;this.init()&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>&#123;/*初始化数据，遍历生成li*/&#125;</span></span><br><span class="xml"><span class="javascript">              <span class="hljs-tag">&lt;<span class="hljs-name">Bar</span> <span class="hljs-attr">list</span>=<span class="hljs-string">&#123;this.state.arr&#125;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Bar</span>&gt;</span>&#123;/*传列表到子元素*/&#125;</span></span><br><span class="xml"><span class="javascript">            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="javascript">          );</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">          <span class="hljs-keyword">var</span> arr = [];</span><br><span class="javascript">          <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.props.list.length; i++) &#123;</span><br><span class="javascript">            arr.push(<span class="hljs-comment">//将元素放到数组中，绑定事件，让单击到的那个li改变颜色，绑定事件时将全局this，用bind绑定到事件函数</span></span><br><span class="javascript">              <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#123;this.state.str</span>===<span class="hljs-string">this.props.list[i].name?</span>&#x27;<span class="hljs-attr">change</span>&#x27;<span class="hljs-attr">:</span>&#x27;&#x27;&#125; <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.changeName.bind(this,this.props.list[i].name,this.props.list[i].area)&#125;</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">                &#123;this.props.list[i].name&#125;</span></span><br><span class="xml"><span class="javascript">              <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="javascript">            );</span><br><span class="javascript">          &#125;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> arr;</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">changeName</span>(<span class="hljs-params">count,area</span>)</span> &#123;</span><br><span class="javascript">          <span class="hljs-keyword">if</span> (count===<span class="hljs-built_in">this</span>.state.str) &#123;</span><br><span class="javascript">              <span class="hljs-keyword">return</span>;</span><br><span class="javascript">          &#125;</span><br><span class="javascript">          <span class="hljs-built_in">this</span>.setState(&#123; <span class="hljs-attr">str</span>: count ,<span class="hljs-attr">arr</span>:area&#125;);<span class="hljs-comment">//动态设置新的数据</span></span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;);</span><br><span class="javascript">      <span class="hljs-keyword">var</span> Bar = React.createClass(&#123;</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> (</span><br><span class="javascript">            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#x27;area&#x27;</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">            &#123;</span></span><br><span class="xml"><span class="javascript">              this.init()</span></span><br><span class="xml"><span class="javascript">            &#125;</span></span><br><span class="xml"><span class="javascript">          <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span></span><br><span class="javascript">          );</span><br><span class="javascript">          </span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//类似于上面的父组件，将传过来的数据遍历渲染到页面</span></span><br><span class="javascript">          <span class="hljs-keyword">var</span> arr = [];</span><br><span class="javascript">          <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.props.list.length; i++) &#123;</span><br><span class="javascript">            arr.push(</span><br><span class="javascript">              <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">                &#123;this.props.list[i]&#125;</span></span><br><span class="xml"><span class="javascript">              <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="javascript">            );</span><br><span class="javascript">          &#125;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> arr;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;);</span><br><span class="javascript">      ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Tab</span> /&gt;</span></span>, tabbar);</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>ToDoList：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./react.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./react-dom.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./browser.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">        *&#123;</span><br><span class="css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-id">#todo</span>&#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">900px</span>;</span><br><span class="css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto <span class="hljs-number">0</span>;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-class">.text</span>&#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">            <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">200px</span>;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-class">.btn</span>&#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-class">.list</span>&#123;</span><br><span class="css">            <span class="hljs-attribute">background</span>: lightblue;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-class">.list</span> <span class="hljs-selector-tag">li</span>&#123;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">            <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-tag">ul</span>&#123;</span><br><span class="css">            <span class="hljs-attribute">list-style</span>: none;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-class">.finish</span>&#123;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">            <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>; </span><br><span class="css">            <span class="hljs-attribute">background</span>: lightgray;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">110px</span>;</span><br><span class="css">            <span class="hljs-attribute">float</span>: right;</span><br><span class="css">            <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-class">.unfinish</span>&#123;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">            <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">            <span class="hljs-attribute">background</span>: lightseagreen;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">110px</span>;</span><br><span class="css">            <span class="hljs-attribute">float</span>: right;</span><br><span class="css">            <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-class">.list</span> <span class="hljs-selector-tag">button</span>&#123;</span><br><span class="css">            <span class="hljs-attribute">float</span>: right;</span><br><span class="css">            <span class="hljs-attribute">vertical-align</span>: middle;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">            <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">110px</span>;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-class">.time</span>&#123;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">            <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">110px</span>;</span><br><span class="css">            <span class="hljs-attribute">float</span><span class="hljs-selector-pseudo">:right</span>;</span><br><span class="css">            <span class="hljs-attribute">background</span>: lightcyan;</span><br><span class="css">        &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;todo&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/babel&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">var</span> Todo = React.createClass(&#123;</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">getInitialState</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">                        <span class="hljs-attr">arr</span>:[]<span class="hljs-comment">//初始化消息容器</span></span><br><span class="javascript">                    &#125;;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> (</span><br><span class="javascript">                        <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;/*组件的一些布局，onclick触发父元素的提交事件，将每次改变的数据以及子组件执行父组件中对数据的操作函数传递到子组件*/&#125;</span></span><br><span class="xml"><span class="javascript">                            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#x27;text&#x27;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;txt&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>/&gt;</span></span></span><br><span class="xml"><span class="javascript">                            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#x27;btn&#x27;</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.clickHandler&#125;</span>&gt;</span>提交</span></span><br><span class="xml"><span class="javascript">                            <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">                            <span class="hljs-tag">&lt;<span class="hljs-name">List</span> <span class="hljs-attr">listData</span>=<span class="hljs-string">&#123;this.state.arr&#125;</span> <span class="hljs-attr">changeItem</span>=<span class="hljs-string">&#123;this.changeItem&#125;/</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">                        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="javascript">                    );</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">if</span>(!txt.value) <span class="hljs-keyword">return</span>;</span><br><span class="javascript">                    <span class="hljs-keyword">var</span> list = <span class="hljs-built_in">this</span>.state.arr||[];<span class="hljs-comment">//初始化点击前的容器</span></span><br><span class="javascript">                    list.push(&#123;<span class="hljs-attr">id</span>:<span class="hljs-built_in">this</span>.state.arr.length,<span class="hljs-attr">concent</span>:txt.value,<span class="hljs-attr">time</span>:<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().toLocaleTimeString(),<span class="hljs-attr">finish</span>:<span class="hljs-literal">false</span>&#125;);<span class="hljs-comment">//点击时更新数据</span></span><br><span class="javascript">                    <span class="hljs-built_in">this</span>.setState(&#123;<span class="hljs-attr">arr</span>:list&#125;)<span class="hljs-comment">//将数据更新到state中</span></span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">changeItem</span>(<span class="hljs-params">item,how</span>)</span>&#123;<span class="hljs-comment">//子组件执行的函数，删除和修改状态</span></span><br><span class="javascript">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.state.arr.length; i++) &#123;<span class="hljs-comment">//遍历数据</span></span><br><span class="javascript">                        <span class="hljs-keyword">if</span> (how==<span class="hljs-string">&#x27;delete&#x27;</span>&amp;&amp;<span class="hljs-built_in">this</span>.state.arr[i].id===item) &#123;<span class="hljs-comment">//根据参数的类型判断修改状态还是删除</span></span><br><span class="javascript">                            <span class="hljs-built_in">this</span>.state.arr.splice(i,<span class="hljs-number">1</span>);</span><br><span class="javascript">                            <span class="hljs-keyword">break</span>;</span><br><span class="javascript">                        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(how==<span class="hljs-string">&#x27;finish&#x27;</span>&amp;&amp;<span class="hljs-built_in">this</span>.state.arr[i].id===item)&#123;</span><br><span class="javascript">                            <span class="hljs-built_in">this</span>.state.arr[i].finish=<span class="hljs-literal">true</span>;</span><br><span class="javascript">                            <span class="hljs-keyword">break</span>;</span><br><span class="javascript">                        &#125;</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                    <span class="hljs-built_in">this</span>.setState(&#123;&#125;)<span class="hljs-comment">//更新state</span></span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            <span class="hljs-keyword">var</span> List = React.createClass(&#123;</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                <span class="hljs-keyword">return</span> (</span><br><span class="javascript">                    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#x27;list&#x27;</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">                    &#123;</span></span><br><span class="xml"><span class="javascript">                    this.init()//初始化，遍历数据新建li</span></span><br><span class="xml"><span class="javascript">                    &#125;</span></span><br><span class="xml"><span class="javascript">                <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span></span><br><span class="javascript">                );</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                <span class="hljs-keyword">var</span> arr = [];<span class="hljs-comment">//初始化容器</span></span><br><span class="javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.props.listData.length; i++) &#123;</span><br><span class="javascript">                    arr.push(</span><br><span class="javascript">                    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">                        &#123;this.props.listData[i].concent&#125;&#123;/*显示内容*/&#125;</span></span><br><span class="xml"><span class="javascript">                        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#x27;time&#x27;</span>&gt;</span>&#123;this.props.listData[i].time||&#x27;&#x27;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>&#123;/*显示新建的时间*/&#125;</span></span><br><span class="xml"><span class="javascript">                        &#123;this.props.listData[i].finish?<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#x27;finish&#x27;</span>&gt;</span>已完成<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>:<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#x27;unfinish&#x27;</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.changeOne.bind(this,this.props.listData[i].id,</span>&#x27;<span class="hljs-attr">finish</span>&#x27;)&#125;&gt;</span>未完成<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>&#125;&#123;/*更改状态，调用子组件的函数触发父组件的函数*/&#125;</span></span><br><span class="xml"><span class="javascript">                        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.changeOne.bind(this,this.props.listData[i].id,</span>&#x27;<span class="hljs-attr">delete</span>&#x27;)&#125;&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>&#123;/*删除，调用子组件的函数触发父组件的函数*/&#125;</span></span><br><span class="xml"><span class="javascript">                    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="javascript">                    );</span><br><span class="javascript">                &#125;</span><br><span class="javascript">                <span class="hljs-keyword">return</span> arr;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">changeOne</span>(<span class="hljs-params">id,how</span>)</span>&#123;<span class="hljs-comment">//执行父组件的函数</span></span><br><span class="javascript">                    <span class="hljs-built_in">this</span>.props.changeItem(id,how)</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Todo</span>/&gt;</span></span>,todo);</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="Redux案例"><a href="#Redux案例" class="headerlink" title="Redux案例:"></a>Redux案例:</h1><p>待办事项和计算器（GitHub）：<a href="https://github.com/ZbyA/React_todolist_computer.git">https://github.com/ZbyA/React_todolist_computer.git</a>（首先在项目内用npm install（默认下依赖包）</p><p>然后运行项目即可）</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>React（二）组件通信</title>
    <link href="/2018/12/27/React%EF%BC%88%E4%BA%8C%EF%BC%89%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/"/>
    <url>/2018/12/27/React%EF%BC%88%E4%BA%8C%EF%BC%89%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="组件通信：-react版本是15版本，可能和16版本的操作有部分差异"><a href="#组件通信：-react版本是15版本，可能和16版本的操作有部分差异" class="headerlink" title="组件通信：(react版本是15版本，可能和16版本的操作有部分差异)"></a>组件通信：(react版本是15版本，可能和16版本的操作有部分差异)</h1><h2 id="父子组件："><a href="#父子组件：" class="headerlink" title="父子组件："></a>父子组件：</h2><h3 id="父-gt-子"><a href="#父-gt-子" class="headerlink" title="父=&gt;子"></a>父=&gt;子</h3><ol><li><p>用props：</p></li><li><p>通过ref进行标记</p></li></ol><p>1.用props</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Life<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../react.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../react-dom.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../browser.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">            <span class="hljs-selector-tag">div</span>&#123;</span><br><span class="css">                <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">                <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">                <span class="hljs-attribute">line-height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">                <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">                <span class="hljs-attribute">background</span>: lightgreen;</span><br><span class="css">            &#125;</span><br><span class="css">            <span class="hljs-selector-class">.yes</span>&#123;</span><br><span class="css">                <span class="hljs-attribute">background</span>: lightblue;</span><br><span class="css">            &#125;</span><br><span class="css">            <span class="hljs-selector-class">.no</span>&#123;</span><br><span class="css">                <span class="hljs-attribute">background</span>: lightcoral;</span><br><span class="css">            &#125;</span><br><span class="css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/babel&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">var</span> Father = React.createClass(&#123;</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">getInitialState</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span>&#123;</span><br><span class="javascript">                        <span class="hljs-attr">isTrue</span>:<span class="hljs-string">&#x27;Hello&#x27;</span></span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> (</span><br><span class="javascript">                        <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;/*组件传参，用bind绑定this，以取到this.state.isTrue，</span></span><br><span class="xml"><span class="javascript">                        将this.state.isTrue作为属性传到子组件中</span></span><br><span class="xml"><span class="javascript">                        */&#125;</span></span><br><span class="xml"><span class="javascript">                            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.clickHandler.bind(this,this.state.isTrue)&#125;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">                            <span class="hljs-tag">&lt;<span class="hljs-name">Son</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&#123;this.state.isTrue&#125;/</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">                        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="javascript">                    );</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params">a</span>)</span>&#123;</span><br><span class="javascript">                    <span class="hljs-comment">// 将state的值改变，使Hello取World，World取Hello</span></span><br><span class="javascript">                    <span class="hljs-built_in">this</span>.setState(&#123;<span class="hljs-attr">isTrue</span>:<span class="hljs-built_in">this</span>.state.isTrue==<span class="hljs-string">&#x27;Hello&#x27;</span>?<span class="hljs-string">&#x27;World&#x27;</span>:<span class="hljs-string">&#x27;Hello&#x27;</span>&#125;);</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            <span class="hljs-keyword">var</span> Son = React.createClass(&#123;</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//取到父组件的值，修改颜色</span></span><br><span class="javascript">                    <span class="hljs-keyword">return</span> (</span><br><span class="javascript">                        <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#123;this.props.name</span>===<span class="hljs-string">&#x27;Hello&#x27;</span>?&#x27;<span class="hljs-attr">yes</span>&#x27;<span class="hljs-attr">:</span>&#x27;<span class="hljs-attr">no</span>&#x27;&#125;&gt;</span>&#123;this.props.name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="javascript">                    );</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Father</span>/&gt;</span></span>,app);</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2.ref标记：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Life<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../react.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../react-dom.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../browser.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">            <span class="hljs-selector-tag">div</span>&#123;</span><br><span class="css">                <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">                <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">                <span class="hljs-attribute">line-height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">                <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">                <span class="hljs-attribute">background</span>: lightgreen;</span><br><span class="css">            &#125;</span><br><span class="css">            <span class="hljs-selector-class">.yes</span>&#123;</span><br><span class="css">                <span class="hljs-attribute">background</span>: lightblue;</span><br><span class="css">            &#125;</span><br><span class="css">            <span class="hljs-selector-class">.no</span>&#123;</span><br><span class="css">                <span class="hljs-attribute">background</span>: lightcoral;</span><br><span class="css">            &#125;</span><br><span class="css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/babel&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">var</span> Father = React.createClass(&#123;</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">                    <span class="hljs-built_in">this</span>.self.clickHandler()<span class="hljs-comment">//执行子组件的方法</span></span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> (</span><br><span class="javascript">                        <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">                            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.init&#125;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">                            <span class="hljs-tag">&lt;<span class="hljs-name">Son</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&#123;(el)</span>=&gt;</span> this.self=el&#125;/&gt;&#123;/*绑定一个标记绑定在自己身上，使this.self等于子组件，于是调用this.self以达到调用子组件的方法*/&#125;</span></span><br><span class="xml"><span class="javascript">                        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="javascript">                    );</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            <span class="hljs-keyword">var</span> Son = React.createClass(&#123;</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">getInitialState</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span>&#123;</span><br><span class="javascript">                        <span class="hljs-attr">str</span>:<span class="hljs-string">&#x27;Hello&#x27;</span></span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> (</span><br><span class="javascript">                        <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#123;this.state.str</span>===<span class="hljs-string">&#x27;Hello&#x27;</span>?&#x27;<span class="hljs-attr">yes</span>&#x27;<span class="hljs-attr">:</span>&#x27;<span class="hljs-attr">no</span>&#x27;&#125;&gt;</span>&#123;this.state.str&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="javascript">                    );</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">                    <span class="hljs-comment">// 将state的值改变，使Hello取World，World取Hello，该方法被父组件调用</span></span><br><span class="javascript">                    <span class="hljs-built_in">this</span>.setState(&#123;<span class="hljs-attr">str</span>:<span class="hljs-built_in">this</span>.state.str==<span class="hljs-string">&#x27;Hello&#x27;</span>?<span class="hljs-string">&#x27;World&#x27;</span>:<span class="hljs-string">&#x27;Hello&#x27;</span>&#125;);</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Father</span>/&gt;</span></span>,app);</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="子-gt-父："><a href="#子-gt-父：" class="headerlink" title="子=&gt;父："></a>子=&gt;父：</h3><p>通过子组件调用父组件的函数传递信息</p><p>下面是个简单的小例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>s_f<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../react.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../react-dom.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../browser.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">            <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightgreen;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-class">.yes</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightblue;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-class">.no</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightcoral;</span><br><span class="css">      &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/babel&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">var</span> Father = React.createClass(&#123;</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">getInitialState</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">            <span class="hljs-attr">str</span>: <span class="hljs-string">&quot;Hello&quot;</span></span><br><span class="javascript">          &#125;;</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> (</span><br><span class="javascript">            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;/*父组件添加点击事件改变自身颜色和数据，并将自己的函数和state附在子组件的属性上*/&#125;</span></span><br><span class="xml"><span class="javascript">              <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#123;this.state.str</span>===<span class="hljs-string">&#x27;Hello&#x27;</span>?&#x27;<span class="hljs-attr">yes</span>&#x27;<span class="hljs-attr">:</span>&#x27;<span class="hljs-attr">no</span>&#x27;&#125; <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.clickHandler&#125;</span>&gt;</span>&#123;this.state.str&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">              <span class="hljs-tag">&lt;<span class="hljs-name">Son</span> <span class="hljs-attr">Fn</span>=<span class="hljs-string">&#123;this.clickHandler&#125;</span> <span class="hljs-attr">str</span>=<span class="hljs-string">&#123;this.state.str&#125;</span> /&gt;</span></span></span><br><span class="xml"><span class="javascript">            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="javascript">          );</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//点击事件，单击时将world换成hello，hello换成world</span></span><br><span class="javascript">          <span class="hljs-built_in">this</span>.setState(&#123; <span class="hljs-attr">str</span>: <span class="hljs-built_in">this</span>.state.str == <span class="hljs-string">&quot;Hello&quot;</span> ? <span class="hljs-string">&quot;World&quot;</span> : <span class="hljs-string">&quot;Hello&quot;</span> &#125;);</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;);</span><br><span class="javascript">      <span class="hljs-keyword">var</span> Son = React.createClass(&#123;</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> (&#123;<span class="hljs-comment">/*子组件中将调用父组件传过来的函数及数据，并修改自身样式，达到子组件修改父组件的方法，从而父组件变化，子组件也变化，子组件变化，父组件也变化*/</span>&#125;</span><br><span class="javascript">            &lt;div className=&#123;<span class="hljs-built_in">this</span>.props.str===<span class="hljs-string">&#x27;Hello&#x27;</span>?<span class="hljs-string">&#x27;no&#x27;</span>:<span class="hljs-string">&#x27;yes&#x27;</span>&#125; onClick=&#123;<span class="hljs-built_in">this</span>.props.Fn&#125;&gt;&#123;<span class="hljs-built_in">this</span>.props.str&#125;</span><br><span class="javascript">            &lt;/div&gt;</span><br><span class="javascript">          );</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;);</span><br><span class="javascript">      ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Father</span>/&gt;</span></span>, app);</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="简单的兄弟组件（非redux、flux）"><a href="#简单的兄弟组件（非redux、flux）" class="headerlink" title="简单的兄弟组件（非redux、flux）"></a>简单的兄弟组件（非redux、flux）</h2><p>将以上两种结合即可，子传父，父传子</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>s_s<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../react.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../react-dom.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../browser.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">            <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightgreen;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-class">.yes</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightblue;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-class">.no</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightcoral;</span><br><span class="css">      &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/babel&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">var</span> Father = React.createClass(&#123;</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">getInitialState</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">            <span class="hljs-attr">str</span>: <span class="hljs-string">&quot;Hello&quot;</span></span><br><span class="javascript">          &#125;;</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> (</span><br><span class="javascript">            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;/*父组件添加点击事件改变自身颜色和数据，并将自己的函数和state附在子组件的属性上*/&#125;</span></span><br><span class="xml"><span class="javascript">              <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;this.state.str&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">              <span class="hljs-tag">&lt;<span class="hljs-name">Son</span> <span class="hljs-attr">Fn</span>=<span class="hljs-string">&#123;this.clickHandler&#125;/</span>&gt;</span>&#123;/*Son组件触发父组件的事件*/&#125;</span></span><br><span class="xml"><span class="javascript">              <span class="hljs-tag">&lt;<span class="hljs-name">Son1</span> <span class="hljs-attr">str</span>=<span class="hljs-string">&#123;this.state.str&#125;/</span>&gt;</span>&#123;/*父组件将数据更新传给Son1组件*/&#125;</span></span><br><span class="xml"><span class="javascript">            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="javascript">          );</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//点击事件，单击时将world换成hello，hello换成world</span></span><br><span class="javascript">          <span class="hljs-built_in">this</span>.setState(&#123; <span class="hljs-attr">str</span>: <span class="hljs-built_in">this</span>.state.str == <span class="hljs-string">&quot;Hello&quot;</span> ? <span class="hljs-string">&quot;World&quot;</span> : <span class="hljs-string">&quot;Hello&quot;</span> &#125;);</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;);</span><br><span class="javascript">      <span class="hljs-keyword">var</span> Son = React.createClass(&#123;</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//Son触发事件改变数据</span></span><br><span class="javascript">          <span class="hljs-keyword">return</span> (</span><br><span class="javascript">            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.props.Fn&#125;</span>&gt;</span>Son</span></span><br><span class="xml"><span class="javascript">            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="javascript">          );</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;);</span><br><span class="javascript">      <span class="hljs-keyword">var</span> Son1 = React.createClass(&#123;</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<span class="hljs-comment">//Son1对传来的数据进行改变</span></span><br><span class="javascript">          <span class="hljs-keyword">return</span> (</span><br><span class="javascript">            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#123;this.props.str</span>===<span class="hljs-string">&#x27;Hello&#x27;</span>?&#x27;<span class="hljs-attr">no</span>&#x27;<span class="hljs-attr">:</span>&#x27;<span class="hljs-attr">yes</span>&#x27;&#125;&gt;</span>Son1</span></span><br><span class="xml"><span class="javascript">            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="javascript">          );</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;);</span><br><span class="javascript">      ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Father</span>/&gt;</span></span>, app);</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="模拟事件总线通信：（react-16版的组件共用事件总线传参）"><a href="#模拟事件总线通信：（react-16版的组件共用事件总线传参）" class="headerlink" title="模拟事件总线通信：（react-16版的组件共用事件总线传参）"></a>模拟事件总线通信：（react-16版的组件共用事件总线传参）</h3><p>在装好react-cli后，新建一个文件bus：（将Event事件总线布置在全局）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123;EventEmitter&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;events&#x27;</span><br><span class="hljs-keyword">const</span> bus=EventEmitter.prototype<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> bus<br></code></pre></td></tr></table></figure><p>然后在兄弟组件中分别引入：（当做全局变量）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> bus <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../../module/bus.js&#x27;</span><br></code></pre></td></tr></table></figure><p>以下是两个兄弟组件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span><br><span class="hljs-keyword">import</span> bus <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../../module/bus.js&#x27;</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Son</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">props</span>)</span>&#123;<br>        <span class="hljs-built_in">super</span>(props)<br>        <span class="hljs-built_in">this</span>.state=&#123;<span class="hljs-comment">//设置当前state</span><br>            <span class="hljs-attr">isTrue</span>:<span class="hljs-literal">false</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">componentWillMount</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-comment">//将事件注册在bus事件总线上</span><br>        bus.on(<span class="hljs-string">&#x27;change&#x27;</span>,<span class="hljs-function">()=&gt;</span>&#123;<br>            <span class="hljs-built_in">console</span>.log(<br>                <span class="hljs-built_in">this</span>.state.isTrue<br>            );<br>            <span class="hljs-built_in">this</span>.setState(&#123;<span class="hljs-attr">isTrue</span>:!<span class="hljs-built_in">this</span>.state.isTrue&#125;)<br>        &#125;)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span>(<br>            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">                 &#123;this.state.isTrue&#125;</span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>        )<br>    &#125;<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> Son<span class="hljs-comment">//抛出组件</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span><br><span class="hljs-keyword">import</span> bus <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../../module/bus.js&#x27;</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Son1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">props</span>)</span>&#123;<br>        <span class="hljs-built_in">super</span>(props)<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;------&#x27;</span>)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">changeSon</span>(<span class="hljs-params"></span>)</span>&#123;<br>       bus.emit(<span class="hljs-string">&#x27;change&#x27;</span>)<span class="hljs-comment">//触发全局事件，使上面的兄弟触发方法</span><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span>(<br>            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.changeSon&#125;</span>&gt;</span>变色<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>//触发点击事件</span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>        )<br>    &#125;<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> Son1<span class="hljs-comment">//抛出组件</span><br></code></pre></td></tr></table></figure><p>在父组件中注册子元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span><br><span class="hljs-keyword">import</span> Son1 <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./father&#x27;</span><br><span class="hljs-keyword">import</span> Son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son&#x27;</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bus</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">props</span>)</span>&#123;<br>        <span class="hljs-built_in">super</span>(props)<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;------&#x27;</span>)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span>(<br>           <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">           <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Event<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml">               <span class="hljs-tag">&lt;<span class="hljs-name">Son1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Son1</span>&gt;</span>//将两个组件注册</span><br><span class="xml">               <span class="hljs-tag">&lt;<span class="hljs-name">Son</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Son</span>&gt;</span></span><br><span class="xml">           <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span> <br>        )<br>    &#125;<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> Bus;<span class="hljs-comment">//抛出父组件</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>React（一）起步</title>
    <link href="/2018/12/25/React%EF%BC%88%E4%B8%80%EF%BC%89%E8%B5%B7%E6%AD%A5/"/>
    <url>/2018/12/25/React%EF%BC%88%E4%B8%80%EF%BC%89%E8%B5%B7%E6%AD%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="轻量级的视图层框架"><a href="#轻量级的视图层框架" class="headerlink" title="轻量级的视图层框架"></a>轻量级的视图层框架</h1><p>React不是一个完整的MVC框架，最多可以认为是MVC中的V（View），甚至React并不非常认可MVC开发模式</p><h2 id="React高性能的原理："><a href="#React高性能的原理：" class="headerlink" title="React高性能的原理："></a>React高性能的原理：</h2><p>减少对DOM进行操作，引入了虚拟DOM，如：先将节点内容从A-B,B-A，React会认为A变成B，然后又从B变成A ，不发生任何变化。</p><h2 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h2><p>虚拟DOM</p><p>组件系统</p><p>单向数据流</p><p>JSX 语法</p><h2 id="起步："><a href="#起步：" class="headerlink" title="起步："></a>起步：</h2><p>引入三个js文件：(react版本是15版本，可能和16版本的操作有部分差异)</p><p>react.js<br>react-dom.js<br>browser.js</p><p>最简单的React操作：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./react.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./react-dom.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./browser.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;text/babel&#x27;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-comment">//创建组件</span></span><br><span class="javascript">    <span class="hljs-keyword">var</span> Hello = React.createClass(&#123;</span><br><span class="javascript">        <span class="hljs-attr">render</span>:<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-keyword">return</span> (</span><br><span class="javascript">                <span class="hljs-comment">//jsx语法</span></span><br><span class="javascript">                <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>HelloWorld<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="javascript">            )</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;)</span><br><span class="javascript">    <span class="hljs-comment">//利用ReactDOM对象的render方法将组件渲染到某个节点里</span></span><br><span class="javascript">    ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Hello</span>/&gt;</span></span>,app)</span><br><span class="javascript">   </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="JSX："><a href="#JSX：" class="headerlink" title="JSX："></a>JSX：</h3><p>JSX是一种语法，全称：javascript xml</p><p>用法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./react.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./react-dom.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./browser.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;text/babel&#x27;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">var</span> World = React.createElement(</span><br><span class="javascript">            <span class="hljs-string">&#x27;h1&#x27;</span>,</span><br><span class="javascript">            &#123;<span class="hljs-attr">className</span>:<span class="hljs-string">&#x27;abc&#x27;</span>,<span class="hljs-attr">id</span>:<span class="hljs-string">&#x27;haha&#x27;</span>&#125;,</span><br><span class="javascript">            [React.createElement(<span class="hljs-string">&#x27;span&#x27;</span>,<span class="hljs-literal">null</span>,<span class="hljs-string">&#x27;Hello&#x27;</span>),</span><br><span class="javascript">            React.createElement(<span class="hljs-string">&#x27;mark&#x27;</span>,<span class="hljs-literal">null</span>,<span class="hljs-string">&#x27;World&#x27;</span>)])</span><br><span class="javascript">            ReactDOM.render(World,app1)</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="添加样式："><a href="#添加样式：" class="headerlink" title="添加样式："></a>添加样式：</h2><p>行内样式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span> = <span class="hljs-string">&#123;</span> &#123;<span class="hljs-attr">color:</span>&#x27;<span class="hljs-attr">red</span>&#x27;,<span class="hljs-attr">fontSize:2</span>+&#x27;<span class="hljs-attr">em</span>&#x27;&#125; &#125;&gt;</span>Hello world<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>//&#123; &#125;的作用类似于Vue中的表达式符号<br></code></pre></td></tr></table></figure><p>写在React.createClass中用this调用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> Hello = React.createClass(&#123;<br>        <span class="hljs-attr">style</span>:&#123;<br>            <span class="hljs-attr">background</span>:<span class="hljs-string">&#x27;lightgreen&#x27;</span>,<br>            <span class="hljs-attr">color</span>:<span class="hljs-string">&#x27;deepskyblue&#x27;</span><br>        &#125;,<br>        <span class="hljs-attr">render</span>:<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            <span class="hljs-keyword">return</span> (<br>                <span class="hljs-comment">//jsx语法</span><br>                <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;this.style&#125;</span>&gt;</span>HelloWorld<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>            )<br>        &#125;<br>    &#125;)<br></code></pre></td></tr></table></figure><h2 id="事件：（类似于原生，在React-createClass中添加事件触发的函数，在元素中用this-handler调用）"><a href="#事件：（类似于原生，在React-createClass中添加事件触发的函数，在元素中用this-handler调用）" class="headerlink" title="事件：（类似于原生，在React.createClass中添加事件触发的函数，在元素中用this.handler调用）"></a>事件：（类似于原生，在React.createClass中添加事件触发的函数，在元素中用this.handler调用）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script type=<span class="hljs-string">&quot;text/babel&quot;</span>&gt;<br>            <span class="hljs-keyword">var</span> Hello = React.createClass(&#123;<br>            <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;HelloWorld&#x27;</span>);<br>            &#125;,<br>          <span class="hljs-attr">render</span>:<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>              <span class="hljs-keyword">return</span> (<br>                  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">                      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.clickHandler&#125;</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><br>              )<br>          &#125;<br>      &#125;)<br>      ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Hello</span>/&gt;</span></span>,app)<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><h2 id="React与原生事件的不同点：（react中对于事件进行了处理，解决了一些兼容性问题，如果不取值的话，值都是null）"><a href="#React与原生事件的不同点：（react中对于事件进行了处理，解决了一些兼容性问题，如果不取值的话，值都是null）" class="headerlink" title="React与原生事件的不同点：（react中对于事件进行了处理，解决了一些兼容性问题，如果不取值的话，值都是null）"></a>React与原生事件的不同点：（react中对于事件进行了处理，解决了一些兼容性问题，如果不取值的话，值都是null）</h2><p><img src="https://img-blog.csdnimg.cn/20181226174550595.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20181226174613381.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h2 id="组件包含：（在父组件直接写子组件即可）"><a href="#组件包含：（在父组件直接写子组件即可）" class="headerlink" title="组件包含：（在父组件直接写子组件即可）"></a>组件包含：（在父组件直接写子组件即可）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script type=<span class="hljs-string">&quot;text/babel&quot;</span>&gt;<br>            <span class="hljs-keyword">var</span> Hello = React.createClass(&#123;<br>            <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;HelloWorld&#x27;</span>);<br>            &#125;,<br>          <span class="hljs-attr">render</span>:<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>              <span class="hljs-keyword">return</span> (<br>                  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">                      <span class="hljs-tag">&lt;<span class="hljs-name">World</span>/&gt;</span>//子元素</span><br><span class="xml">                  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>              )<br>          &#125;<br>      &#125;)<br>      <span class="hljs-keyword">var</span> World = React.createClass(&#123;<br>            <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;HelloWorld&#x27;</span>);<br>            &#125;,<br>          <span class="hljs-attr">render</span>:<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>              <span class="hljs-keyword">return</span> (<br>                  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">                      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.clickHandler&#125;</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>              )<br>          &#125;<br>      &#125;)<br>      ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Hello</span>/&gt;</span></span>,app)<br></code></pre></td></tr></table></figure><h3 id="state（状态）与组件本身有关，由自己修改"><a href="#state（状态）与组件本身有关，由自己修改" class="headerlink" title="state（状态）与组件本身有关，由自己修改"></a>state（状态）与组件本身有关，由自己修改</h3><h3 id="props（属性）并非自己修改，可以从父组件获取，也可以给子组件设置"><a href="#props（属性）并非自己修改，可以从父组件获取，也可以给子组件设置" class="headerlink" title="props（属性）并非自己修改，可以从父组件获取，也可以给子组件设置"></a>props（属性）并非自己修改，可以从父组件获取，也可以给子组件设置</h3><h2 id="props（属性）：在父组件包含的子组件标签中加入参数，在子组件中用this-props-children调用："><a href="#props（属性）：在父组件包含的子组件标签中加入参数，在子组件中用this-props-children调用：" class="headerlink" title="props（属性）：在父组件包含的子组件标签中加入参数，在子组件中用this.props.children调用："></a>props（属性）：在父组件包含的子组件标签中加入参数，在子组件中用this.props.children调用：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script type=<span class="hljs-string">&quot;text/babel&quot;</span>&gt;<br>            <span class="hljs-keyword">var</span> Hello = React.createClass(&#123;<br>          <span class="hljs-attr">render</span>:<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>              <span class="hljs-keyword">return</span> (<br>                  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">                      <span class="hljs-tag">&lt;<span class="hljs-name">World</span>&gt;</span>&#123;&#123;a:1,b:2&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">World</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>              )<br>          &#125;<br>      &#125;)<br>      <span class="hljs-keyword">var</span> World = React.createClass(&#123;<br>            <span class="hljs-function"><span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.props);<br>            &#125;,<br>          <span class="hljs-attr">render</span>:<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>              <span class="hljs-keyword">return</span> (<br>                  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">                      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.clickHandler&#125;</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">                  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>              )<br>          &#125;<br>      &#125;)<br>      ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Hello</span>/&gt;</span></span>,app)<br>    &lt;/script&gt;<br></code></pre></td></tr></table></figure><h2 id="state（状态）：组件自己可修改的状态（数据）配合setState-params-使用："><a href="#state（状态）：组件自己可修改的状态（数据）配合setState-params-使用：" class="headerlink" title="state（状态）：组件自己可修改的状态（数据）配合setState(params)使用："></a>state（状态）：组件自己可修改的状态（数据）配合setState(params)使用：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./react.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./react-dom.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./browser.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/babel&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">var</span> Hello = React.createClass(&#123;</span><br><span class="javascript">                <span class="hljs-function"><span class="hljs-title">getInitialState</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-comment">//设置state的数据</span></span><br><span class="javascript">                <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">                    <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;World&#x27;</span></span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;,</span><br><span class="javascript">            <span class="hljs-attr">render</span>:<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">              <span class="hljs-keyword">return</span> (</span><br><span class="javascript">                  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="xml"><span class="javascript">                      &#123;this.state.name&#125;&#123;/*这里渲染了state的name*/&#125;</span></span><br><span class="xml"><span class="javascript">                  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="javascript">              )</span><br><span class="javascript">          &#125;</span><br><span class="javascript">      &#125;)</span><br><span class="javascript">      ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Hello</span>/&gt;</span></span>,app)</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="生命周期："><a href="#生命周期：" class="headerlink" title="生命周期："></a>生命周期：</h2><p><img src="https://img-blog.csdnimg.cn/20181226171123283.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="React组件生命周期："><a href="#React组件生命周期：" class="headerlink" title="React组件生命周期："></a>React组件生命周期：</h3><h3 id="初始化："><a href="#初始化：" class="headerlink" title="初始化："></a>初始化：</h3><ol><li>执行getDefaultProps钩子函数，执行一次，挂载属性props（无Dom元素，有组件相关的this但是无法获取数据）</li><li>执行getInitialState钩子函数，初始化自身状态state（同上，无Dom元素，有组件相关的this，但是无法获取数据）</li><li>componentWillMount（）挂载前（类似于Vue的created加beforeMount阶段，可以进行数据请求（ajax））</li><li>componentDidMount（）挂载完成（有Dom元素，数据准备完毕）</li></ol><h3 id="运行中："><a href="#运行中：" class="headerlink" title="运行中："></a>运行中：</h3><ol><li>componentWillReceiveProps函数：当props发生变化时调用</li><li>shouldComponentUpdate函数：主要做效率优化，控制组件是否随之更新，函数返回的true或false表示视图是否渲染，如：在函数中比较this.props.name（数据更新前）和props.name（数据更新后）对比，二者是否相同，从而避免重复渲染，加强优化</li><li>componentWillUpdate函数：准备工作，不允许更改数值，否则会死循环，类似Vue中的beforeUpdate</li><li>render：重新渲染Dom</li><li>componentDidUpdate：页面更新渲染完成，类似Vue的updated</li></ol><h3 id="组件销毁："><a href="#组件销毁：" class="headerlink" title="组件销毁："></a>组件销毁：</h3><ol><li>componentWillUnmount：组件将要销毁，可以将定时器，事件等取消或结束（ReactDOM.unmountComponentAtNode(node) 销毁节点中的组件）</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Vue（二）进阶</title>
    <link href="/2018/12/24/Vue%EF%BC%88%E4%BA%8C%EF%BC%89%E8%BF%9B%E9%98%B6/"/>
    <url>/2018/12/24/Vue%EF%BC%88%E4%BA%8C%EF%BC%89%E8%BF%9B%E9%98%B6/</url>
    
    <content type="html"><![CDATA[<h3 id="Vue脚手架："><a href="#Vue脚手架：" class="headerlink" title="Vue脚手架："></a>Vue脚手架：</h3><h3 id="vue-cli："><a href="#vue-cli：" class="headerlink" title="vue-cli："></a>vue-cli：</h3><p>全局安装：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">npm install  -g  vue-cli<br></code></pre></td></tr></table></figure><p>查看版本：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">vue -V <br></code></pre></td></tr></table></figure><p>初始化脚手架：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">vue init webpack + 项目的名字<br></code></pre></td></tr></table></figure><p>运行项目：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">npm run dev<br></code></pre></td></tr></table></figure><p>打包项目：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">npm run build<br></code></pre></td></tr></table></figure><h3 id="文件及文件夹的信息："><a href="#文件及文件夹的信息：" class="headerlink" title="文件及文件夹的信息："></a>文件及文件夹的信息：</h3><p><img src="https://img-blog.csdnimg.cn/20181223235455492.jpg"><img src="https://img-blog.csdnimg.cn/20181223235948289.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">开发依赖：  开发编译打包需要的依赖，打包之后就不要了 <br>生产依赖：  打包前后都需要的依赖<br></code></pre></td></tr></table></figure><h3 id="Vue-router："><a href="#Vue-router：" class="headerlink" title="Vue-router："></a>Vue-router：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">下载安装：<br>npm install vue-router<br></code></pre></td></tr></table></figure><p>在router文件夹下新建js文件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> VueRouter <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><span class="hljs-comment">//引入路由模块</span><br>       <span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br>       Vue.use(VueRouter)<span class="hljs-comment">//依赖模块</span><br>       <span class="hljs-keyword">let</span> router=<span class="hljs-keyword">new</span> VueRouter(&#123;<br>       <span class="hljs-attr">routes</span>:[<br>&#123;<span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;路径（加斜杠访问）&#x27;</span>,<span class="hljs-attr">name</span>:<span class="hljs-string">&quot;名字（直接访问）&quot;</span>,<span class="hljs-attr">component</span>:<span class="hljs-string">&#x27;注册组件（跳转的位置）&#x27;</span>,<span class="hljs-attr">chidern</span>:[]子路由&#125;<br>&#123;<span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;/&#x27;</span>,<span class="hljs-attr">redirect</span>:<span class="hljs-string">&quot;/home&quot;</span>&#125;,<span class="hljs-comment">//路由的重定向 如果hash 为&#x27;/&#x27; 指向到 /home</span><br>       ]<br>       &#125;)<br>       <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> router<br></code></pre></td></tr></table></figure><p>通过<router-link to='/path'>标签来切换组件</p><p>通过<router-view>标签显示</p><p>keep-alive:在component组件、router-view外面包裹上keep-alive的话，就会对组件进行缓存，当切换回来的时候，组件会立即渲染，理论来说，切换组件的时候其实会把上一个组件销毁，使用了keep-alive则不会(就是组件一直存在于缓存中)</p><p>include匹配到的组件会被缓存，exclude匹配到的不会被缓存</p><p>值可以为逗号隔开的字符串include = ‘a,b’;正则:include = ‘/a|b/’;数组:include=[‘a’,’b’]</p><p>多级路由：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> routes = [<br>  &#123;<span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;/main&#x27;</span>,<span class="hljs-attr">component</span>:AppMain&#125;,<br>  &#123;<span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;/news&#x27;</span>,<span class="hljs-attr">component</span>:AppNews,<span class="hljs-attr">children</span>:[<span class="hljs-comment">//children是子目录</span><br>    &#123;<span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;inside&#x27;</span>,<span class="hljs-attr">component</span>:AppNewsInside&#125;,<br>    &#123;<span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;outside&#x27;</span>,<span class="hljs-attr">component</span>:AppNewsOutside&#125;<br>  ]&#125;,<br>]<br></code></pre></td></tr></table></figure><p>默认路由：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;path:&#x27;&#x27;,component:Main&#125;//将默认路径设置成Main<br></code></pre></td></tr></table></figure><p>动态路由：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;path:&#x27;/user/:id&#x27;,component:User&#125;//id为传的值<br></code></pre></td></tr></table></figure><p>命名路由：</p><p>直接用name : main在hash中写name就可以路由</p><p>路由跳转：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.push = router-link:to router.replace = router-link:to.replace router.go() = <span class="hljs-built_in">window</span>.history.go<br></code></pre></td></tr></table></figure><p>路由钩子：</p><p>全局路由钩子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.beforeEach(<span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">//会在任意路由跳转前执行，next一定要记着执行，不然路由不能跳转了</span><br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;beforeEach&#x27;</span>)<br>  <span class="hljs-built_in">console</span>.log(to,<span class="hljs-keyword">from</span>)<br>  <span class="hljs-comment">//</span><br>  next()<br>&#125;)<br><span class="hljs-comment">//</span><br>router.afterEach(<span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span></span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">//会在任意路由跳转后执行</span><br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;afterEach&#x27;</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><p>局部路由：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">routes: [<br>   &#123;<br>     <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/foo&#x27;</span>,<br>     <span class="hljs-attr">component</span>: Foo,<br>     <span class="hljs-attr">beforeEnter</span>: <span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) =&gt;</span> &#123;<br>       <span class="hljs-comment">// ...</span><br>     &#125;<br>   &#125;<br> ]<br></code></pre></td></tr></table></figure><p>组件内的路由钩子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">beforeRouteEnter (to, <span class="hljs-keyword">from</span>, next) <span class="hljs-comment">//confirm 前调用</span><br>beforeRouteUpdate (to, <span class="hljs-keyword">from</span>, next) <span class="hljs-comment">//在当前路由改变调用</span><br>beforeRouteLeave (to, <span class="hljs-keyword">from</span>, next)<span class="hljs-comment">//导航离开该组件的对应路由时调用</span><br></code></pre></td></tr></table></figure><h3 id="生命周期："><a href="#生命周期：" class="headerlink" title="生命周期："></a>生命周期：</h3><p><img src="https://img-blog.csdnimg.cn/20181224114138567.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="beforeCreate："><a href="#beforeCreate：" class="headerlink" title="beforeCreate："></a>beforeCreate：</h3><p>创建组件之前，没有组件，没有元素，没有事件，没有生命周期</p><h3 id="created："><a href="#created：" class="headerlink" title="created："></a>created：</h3><p>创建组件结束，有数据，没有元素</p><h3 id="beforeMount："><a href="#beforeMount：" class="headerlink" title="beforeMount："></a>beforeMount：</h3><p>挂载之前，有数据，没有元素</p><h3 id="mounted："><a href="#mounted：" class="headerlink" title="mounted："></a>mounted：</h3><p>挂载完成，有元素，有数据</p><h3 id="beforeUpdate：（在mounted后执行）"><a href="#beforeUpdate：（在mounted后执行）" class="headerlink" title="beforeUpdate：（在mounted后执行）"></a>beforeUpdate：（在mounted后执行）</h3><p>用于监听数据变化</p><h3 id="updated："><a href="#updated：" class="headerlink" title="updated："></a>updated：</h3><p>用于监听数据变化</p><h3 id="beforeDestroy："><a href="#beforeDestroy：" class="headerlink" title="beforeDestroy："></a>beforeDestroy：</h3><p>销毁实例，元素数据还在</p><h3 id="destroyed："><a href="#destroyed：" class="headerlink" title="destroyed："></a>destroyed：</h3><p>销毁实例</p><h3 id="Vue中的ajax："><a href="#Vue中的ajax：" class="headerlink" title="Vue中的ajax："></a>Vue中的ajax：</h3><h3 id="axios："><a href="#axios：" class="headerlink" title="axios："></a>axios：</h3><p>载入：npm install axios</p><p>在main.js中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span>;<span class="hljs-comment">//引入</span><br>Vue.prototype.$axios = Axios;<span class="hljs-comment">//将Axios附着在Vue，以供全局调用</span><br>Axios.defaults.baseURL = <span class="hljs-string">&#x27;http://localhost:1024&#x27;</span>;<span class="hljs-comment">//设置默认接口地址</span><br></code></pre></td></tr></table></figure><p>然后在需要请求的组件中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">this</span>.$axios<br>        .post(<span class="hljs-string">&quot;hash&quot;</span>,data)<span class="hljs-comment">//hash是接口地址，不需要加主机地址（http://localhost/index直接写/index）data是传输的对象</span><br>        .then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<span class="hljs-comment">//返回值</span><br>          <span class="hljs-keyword">if</span> (res.data.err == <span class="hljs-number">0</span>) &#123;<br>           <span class="hljs-built_in">console</span>.log(res)<br>          &#125;<br>        &#125;)<br>        .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>          <span class="hljs-built_in">console</span>.log(err);<br>        &#125;);<br></code></pre></td></tr></table></figure><h3 id="axios拦截器："><a href="#axios拦截器：" class="headerlink" title="axios拦截器："></a>axios拦截器：</h3><p>请求拦截：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">axios.interceptors.request.use(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">config</span>) </span>&#123;<span class="hljs-comment">//发送之前进行过滤</span><br>    <span class="hljs-keyword">return</span> config;<br>  &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Promise</span>.reject(error);<br>  &#125;);<br></code></pre></td></tr></table></figure><p>响应拦截：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">axios.interceptors.response.use(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) </span>&#123;<span class="hljs-comment">//请求到数据后进行过滤</span><br>    <span class="hljs-keyword">return</span> response;<br>  &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Promise</span>.reject(error);<br>  &#125;);<br></code></pre></td></tr></table></figure><h3 id="Vuex："><a href="#Vuex：" class="headerlink" title="Vuex："></a>Vuex：</h3><p>作用：多个组件共享状态及数据</p><p>安装：npm install vuex</p><p>配置：在src中新建store文件夹：在里面新建js文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> Vuex <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vuex&#x27;</span><span class="hljs-comment">//引入Vuex</span><br>Vue.use(Vuex);<br><span class="hljs-keyword">import</span> login <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./login/index&#x27;</span><br><span class="hljs-keyword">const</span> store = <span class="hljs-keyword">new</span> Vuex.Store(&#123;<br>  <span class="hljs-attr">modules</span>: &#123;<br>    <span class="hljs-attr">login</span>: login,<br>  &#125;<br>&#125;)<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store;<span class="hljs-comment">//抛出vuex实例</span><br></code></pre></td></tr></table></figure><p>在src中新建的store文件夹中新建另一个文件夹：里面有5个js文件</p><p><img src="https://img-blog.csdnimg.cn/20181224152242677.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>大致示范一下里面的内容(部分购物车内容，大概看一下就好)：</p><h3 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> state <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./state&#x27;</span>;<br><span class="hljs-keyword">import</span> mutations <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./mutations&#x27;</span>;<br><span class="hljs-keyword">import</span> getters <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./getters&#x27;</span>;<br><span class="hljs-keyword">import</span> actions <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./actions&#x27;</span>;<br><span class="hljs-keyword">let</span> store = &#123;<br>  state,<br>  mutations,<br>  getters,<br>  actions<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store;<br></code></pre></td></tr></table></figure><h3 id="state-js"><a href="#state-js" class="headerlink" title="state.js"></a>state.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-attr">carObj</span>: [],<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="getters-js"><a href="#getters-js" class="headerlink" title="getters.js"></a>getters.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-comment">// 派生属性</span><br>  <span class="hljs-function"><span class="hljs-title">all</span>(<span class="hljs-params">state</span>)</span> &#123;<br>    <span class="hljs-keyword">var</span> price = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">var</span> seleceAll = <span class="hljs-literal">true</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; state.carObj.length; i++) &#123;<br>      <span class="hljs-keyword">if</span> (state.carObj[i].sel) &#123;<br>        price += state.carObj[i].price * state.carObj[i].num;<br>        sum += state.carObj[i].num;<br>      &#125;<br>      seleceAll *= state.carObj[i].sel;<br>    &#125;<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">price</span>: price,<br>      <span class="hljs-attr">sum</span>: sum,<br>      <span class="hljs-attr">seleceAll</span>: seleceAll<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="mutations-js"><a href="#mutations-js" class="headerlink" title="mutations.js:"></a>mutations.js:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-comment">//只做状态值得修改 不做任何逻辑操作</span><br>  <span class="hljs-function"><span class="hljs-title">addTo</span>(<span class="hljs-params">state, carObj</span>)</span> &#123;<br>    state.carObj = carObj<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="actions-js"><a href="#actions-js" class="headerlink" title="actions.js:"></a>actions.js:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-comment">// // 异步处理逻辑操作</span><br>  <span class="hljs-function"><span class="hljs-title">initCar</span>(<span class="hljs-params">&#123;</span></span><br><span class="hljs-params"><span class="hljs-function">    commit</span></span><br><span class="hljs-params"><span class="hljs-function">  &#125;</span>)</span> &#123;<br>    <span class="hljs-keyword">let</span> carlist = <span class="hljs-built_in">localStorage</span>.carlist ? <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">localStorage</span>.carlist) : [];<br>    commit(<span class="hljs-string">&#x27;addTo&#x27;</span>, carlist)<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>主要流程：（官网的）</p><p>初步理解就是：通过actions的函数改变states（数据），渲染到所有绑定的页面，页面再次调用actions（函数），再次修改</p><p><img src="https://img-blog.csdnimg.cn/20181224153524350.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><p>深层理解：组件触发actions传递数据（抛发），触发mutations修改状态值，修改state的值，渲染到页面</p><p><img src="https://img-blog.csdnimg.cn/20181224161037290.png?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></p><h3 id="辅助工具："><a href="#辅助工具：" class="headerlink" title="辅助工具："></a>辅助工具：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; mapState，mapGetters，mapMutations，mapActions &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vuex&#x27;</span><br></code></pre></td></tr></table></figure><p>引入辅助工具使组件可以设置或获取到函数及数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">this</span>.$store<span class="hljs-comment">//获取到store</span><br></code></pre></td></tr></table></figure><p>mapStates：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">computed: &#123;<br>  <span class="hljs-comment">// 使用对象展开运算符将此对象混入到外部对象中</span><br>  ...mapState(&#123;<br>        <span class="hljs-comment">//state中的变量名</span><br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>mapGetters：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">computed: &#123;<br> <span class="hljs-comment">// 使用对象展开运算符将 getter 混入 computed 对象中</span><br>   ...mapGetters([<br>     <span class="hljs-string">&#x27;doneTodosCount&#x27;</span>,<br>     <span class="hljs-string">&#x27;anotherGetter&#x27;</span><br>   ])<br> &#125;<br></code></pre></td></tr></table></figure><p>mapMutations：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">methods: &#123;<br>    ...mapMutations([<br>      <span class="hljs-string">&#x27;increment&#x27;</span>, <span class="hljs-comment">// 将 `this.increment()` 映射为 `this.$store.commit(&#x27;increment&#x27;)`</span><br>      <span class="hljs-comment">// `mapMutations` 也支持载荷：</span><br>      <span class="hljs-string">&#x27;incrementBy&#x27;</span> <span class="hljs-comment">// 将 `this.incrementBy(amount)` 映射为 `this.$store.commit(&#x27;incrementBy&#x27;, amount)`</span><br>    ])<br>  &#125;<br></code></pre></td></tr></table></figure><p>mapActions：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">methods: &#123;<br>   ...mapActions([<br>     <span class="hljs-string">&#x27;increment&#x27;</span>, <span class="hljs-comment">// 将 `this.increment()` 映射为 `this.$store.dispatch(&#x27;increment&#x27;)`</span><br>     <span class="hljs-comment">// `mapActions` 也支持载荷：</span><br>     <span class="hljs-string">&#x27;incrementBy&#x27;</span> <span class="hljs-comment">// 将 `this.incrementBy(amount)` 映射为 `this.$store.dispatch(&#x27;incrementBy&#x27;, amount)`</span><br>   ])<br> &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Vue（一）初识</title>
    <link href="/2018/12/14/Vue%EF%BC%88%E4%B8%80%EF%BC%89%E5%88%9D%E8%AF%86/"/>
    <url>/2018/12/14/Vue%EF%BC%88%E4%B8%80%EF%BC%89%E5%88%9D%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">Vue的意义：将开发者的精力从dom操作解脱，更加专注于数据的操作，<br></code></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">数据驱动，界面的渲染 随着数据的变化自动变化<br>    <span class="hljs-number">1</span>.将开发者的精力从dom中解除， 极少做dom操作<br>    <span class="hljs-number">2</span>.通过指令（<span class="hljs-keyword">directive）将元素和数据进行绑定 </span> <br>    <span class="hljs-number">3</span>.数据变化元素界面变化<br>    <span class="hljs-number">4</span>.开发者关注数据的变化<br></code></pre></td></tr></table></figure><p>配置：Vue官网下载；或npm install vue</p><h3 id="js引入包后，实例化Vue对象；"><a href="#js引入包后，实例化Vue对象；" class="headerlink" title="js引入包后，实例化Vue对象；"></a>js引入包后，实例化Vue对象；</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;<span class="hljs-comment">//实例化</span><br>             <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#btn&#x27;</span>,<span class="hljs-comment">//选择标签（作用区域）</span><br>             <span class="hljs-attr">data</span>: &#123;<span class="hljs-comment">//变量（数据），关联页面的标签</span><br>                    <span class="hljs-attr">bool</span>: <span class="hljs-literal">true</span><br>                &#125;，<br>            <span class="hljs-attr">methods</span>:&#123;<span class="hljs-comment">//写方法的对象</span><br>                <span class="hljs-function"><span class="hljs-title">Fn1</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-comment">//方法</span><br>                        &#125;,<br>                <span class="hljs-function"><span class="hljs-title">Fn2</span>(<span class="hljs-params"></span>)</span>&#123;<br>                        &#125;<br>                &#125;<br><br>            &#125;);<br></code></pre></td></tr></table></figure><h3 id="渲染数据："><a href="#渲染数据：" class="headerlink" title="渲染数据："></a>渲染数据：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&#x27;app&#x27;</span>&gt;&#123;&#123;name&#125;&#125;&lt;<span class="hljs-regexp">/div&gt;/</span><span class="hljs-regexp">/用插值的方式&#123;&#123;&#125;&#125;来放置data的变量</span><br></code></pre></td></tr></table></figure><p>Vue的数据是双向数据的绑定，数据相互依赖，缺点是源头很难找到，但是提升了数据的感知</p><h3 id="指令："><a href="#指令：" class="headerlink" title="指令："></a>指令：</h3><p>v-if（条件渲染）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;p v-<span class="hljs-keyword">if</span>=<span class="hljs-string">&#x27;bool&#x27;</span>&gt;&lt;<span class="hljs-regexp">/p&gt;/</span><span class="hljs-regexp">/条件满足时显示元素</span><br><span class="hljs-regexp">&lt;p v-else&gt;&lt;/</span>p&gt;<span class="hljs-comment">//否则显示元素</span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&#x27;bool&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-comment">//条件满足时显示元素</span><br></code></pre></td></tr></table></figure><p>v-for（列表渲染）用for in和for of都行（注意：若遍历数组的时候有重复项，要用一个bind绑定数据否则会出错，如<li v-for='(item,index) in list' v-bind : key=index>–</li>）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html">//数组<br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&#x27;item in list&#x27;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>//item是每一项，list是操作的数组（根据list的长度新建li）<br><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&#x27;(item,index) in list&#x27;</span>&gt;</span>&#123;&#123;item&#125;&#125;--&#123;&#123;index&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>//item是每一项，index是数组索引，list是操作的数组（根据list的长度新建li）<br><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&#x27;item in 20&#x27;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>//直接创造20个li<br><br>//字符串<br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&#x27;item in &quot;hello vue&quot;&#x27;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>//遍历字符串，输出9个li分别是字符每一项<br><br>//对象<br><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(val,key,index) in obj&quot;</span>&gt;</span>&#123;&#123;key&#125;&#125;:&#123;&#123;val&#125;&#125;---&#123;&#123;index&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>//val,key,index分别是对象的每项的属性，属性名，索引<br></code></pre></td></tr></table></figure><p>v-click（事件指令）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;test&quot;</span>&gt;</span>点我<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>//类似于onclick，test是Vue实例化中的函数<br>//v-on:click相当于@click<br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">v-on:click.stop</span>=<span class="hljs-string">&quot;doThis&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>//取消冒泡事件<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-on:click.self</span>=<span class="hljs-string">&quot;doThat&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>//只有点击这个元素自身才会触发<br></code></pre></td></tr></table></figure><p>v-bind（属性设置）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-bind:class</span>=<span class="hljs-string">&#x27;state?&quot;red&quot;:&quot;green&quot;&#x27;</span>&gt;</span>//v-bind：&#x27;属性名&#x27;=&#x27;属性值&#x27;<br>//可以写成<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-bind:class</span>=<span class="hljs-string">&#x27;state?&quot;red&quot;:&quot;green&quot;&#x27;</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="过滤器：（对数据进行处理的函数）"><a href="#过滤器：（对数据进行处理的函数）" class="headerlink" title="过滤器：（对数据进行处理的函数）"></a>过滤器：（对数据进行处理的函数）</h3><p>全局过滤器：和局部过滤的区别（局部过滤器只能在当前的组件中使用）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br>            &#123;&#123;nowTime|getTime&#125;&#125;<br>            <span class="hljs-comment">&lt;!--  这是参数   这是过滤，中间用|隔开--&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-comment">//全局过滤</span></span><br><span class="javascript">            Vue.filter(<span class="hljs-string">&#x27;getTime&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-comment">//中间可以写对数据的处理</span></span><br><span class="javascript">                <span class="hljs-keyword">return</span> value;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            <span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">                <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#box&#x27;</span>,</span><br><span class="javascript">                <span class="hljs-attr">data</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-attr">nowTime</span>: <span class="hljs-built_in">Date</span>.now()</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>局部过滤：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br>            &#123;&#123;nowTime|getTime&#125;&#125;<br>            <span class="hljs-comment">&lt;!--  这是参数   这是过滤，中间用|隔开--&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-comment">//局部过滤</span></span><br><span class="javascript">            <span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">                <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#box&#x27;</span>,</span><br><span class="javascript">                <span class="hljs-attr">data</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-attr">nowTime</span>: <span class="hljs-built_in">Date</span>.now()</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">filters</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-attr">getTime</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>&#123;</span><br><span class="javascript">                        <span class="hljs-comment">//中间可以写对数据的处理</span></span><br><span class="javascript">                        <span class="hljs-keyword">return</span> value;</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="组件：就是vue的一个拓展实例"><a href="#组件：就是vue的一个拓展实例" class="headerlink" title="组件：就是vue的一个拓展实例"></a>组件：就是vue的一个拓展实例</h3><p>全局组件：（整个页面都能使用）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;tp1&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- 组件创建 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> mod = &#123;<span class="hljs-comment">//组件配置</span><br>                <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;#tp1&#x27;</span>,<span class="hljs-comment">//选中组件</span><br>                <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br>                    <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-comment">//写变量</span><br>                &#125;<br>                &#125;,<br>                <span class="hljs-attr">methods</span>: &#123;<br>                    <span class="hljs-comment">//写函数</span><br>                &#125;<br>            &#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Vue.component(<span class="hljs-string">&#x27;mod&#x27;</span>, mod);<span class="hljs-comment">//注册组件</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">//直接在页面中输入<br><span class="hljs-tag">&lt;<span class="hljs-name">mod</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mod</span>&gt;</span><br>//即可使用<br></code></pre></td></tr></table></figure><p>局部组件：（只能在当前选中作用范围中使用）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> box = <span class="hljs-keyword">new</span> Vue(&#123;<br>                <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#box&#x27;</span>,<span class="hljs-comment">//当前作用范围是id为box的标签内</span><br>                <span class="hljs-attr">data</span>: &#123;<br>                    <br>                &#125;,<br>                <span class="hljs-attr">methods</span>: &#123;<br>                   <br>                &#125;,<br>                <span class="hljs-attr">components</span>: &#123;<span class="hljs-comment">//新建局部组件</span><br>                    <span class="hljs-attr">mod</span>: (&#123;<br>                        <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;#tp1&#x27;</span>,<br>                        <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br>                            <span class="hljs-keyword">return</span> &#123;&#125;<br>                        &#125;,<br>                        <span class="hljs-attr">methods</span>: &#123;<br><br>                        &#125;<br>                    &#125;)<br>                &#125;<br>            &#125;);<br></code></pre></td></tr></table></figure><h3 id="组件间数据的传输：（类似事件抛发和监听）"><a href="#组件间数据的传输：（类似事件抛发和监听）" class="headerlink" title="组件间数据的传输：（类似事件抛发和监听）"></a>组件间数据的传输：（类似事件抛发和监听）</h3><p>父组件传给子组件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">fat</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">fat</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 子组件 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;son&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123;callson&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 父组件，父组件中包含子组件 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;fat&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- 当父组件数据改变时，通过将数据保存在自身属性的方法传输 --&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123;fbool&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&#x27;change&#x27;</span>&gt;</span>Change<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- 将callson作为属性，附带数据传输给子元素 --&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">son</span> <span class="hljs-attr">:callson</span>=<span class="hljs-string">&#x27;fbool&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">son</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            Vue.component(<span class="hljs-string">&#x27;son&#x27;</span>, &#123;</span><br><span class="javascript">                <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;#son&#x27;</span>,</span><br><span class="javascript">                <span class="hljs-attr">data</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript"></span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">props</span>: [<span class="hljs-string">&#x27;callson&#x27;</span>] <span class="hljs-comment">//子组件在该处接收数据</span></span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            Vue.component(<span class="hljs-string">&#x27;fat&#x27;</span>, &#123;</span><br><span class="javascript">                <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;#fat&#x27;</span>,</span><br><span class="javascript">                <span class="hljs-attr">data</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">                        <span class="hljs-attr">fbool</span>: <span class="hljs-literal">false</span></span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">methods</span>: &#123; <span class="hljs-comment">//点击父组件的按钮时，父组件内数据改变</span></span><br><span class="javascript">                    <span class="hljs-function"><span class="hljs-title">change</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.fbool = !<span class="hljs-built_in">this</span>.fbool;</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            <span class="hljs-keyword">var</span> box = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">                <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#box&#x27;</span></span><br><span class="javascript">            &#125;);</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>子组件传给父组件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">fat</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">fat</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;son&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&#x27;change&#x27;</span>&gt;</span>Change<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- &lt;div&gt;&#123;&#123;sbool&#125;&#125;&lt;/div&gt; --&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;fat&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123;fbool&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- 新建自定义事件，绑定父元素中的函数，传参数写在后面用逗号隔开 --&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">son</span> @<span class="hljs-attr">callfat</span>=<span class="hljs-string">&#x27;changeF&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">son</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- 当子元素被点击时触发父元素的方法 --&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            Vue.component(<span class="hljs-string">&#x27;son&#x27;</span>, &#123;<span class="hljs-comment">//点击子组件的按钮时，子组件内数据改变</span></span><br><span class="javascript">                <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;#son&#x27;</span>,</span><br><span class="javascript">                <span class="hljs-attr">data</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">                        <span class="hljs-attr">sbool</span>: <span class="hljs-literal">false</span></span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-function"><span class="hljs-title">change</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.$emit(<span class="hljs-string">&#x27;callfat&#x27;</span>);</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.sbool = !<span class="hljs-built_in">this</span>.sbool;</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            Vue.component(<span class="hljs-string">&#x27;fat&#x27;</span>, &#123; </span><br><span class="javascript">                <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;#fat&#x27;</span>,</span><br><span class="javascript">                <span class="hljs-attr">data</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">                        <span class="hljs-attr">fbool</span>: <span class="hljs-literal">false</span></span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-function"><span class="hljs-title">changeF</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.fbool = !<span class="hljs-built_in">this</span>.fbool;</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            <span class="hljs-keyword">var</span> box = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">                <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#box&#x27;</span></span><br><span class="javascript">            &#125;);</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>兄弟组件：（结合子传父，父再传子）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">fat</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">fat</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sonf&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&#x27;change&#x27;</span>&gt;</span>Change<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>First <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>&#123;&#123;sfbool&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sons&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Second <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>&#123;&#123;callson&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;fat&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">sonf</span> @<span class="hljs-attr">callfat</span>=<span class="hljs-string">&#x27;changeF&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">sonf</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">sons</span> <span class="hljs-attr">:callson</span>=<span class="hljs-string">&#x27;fbool&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">sons</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            Vue.component(<span class="hljs-string">&#x27;sonf&#x27;</span>, &#123;</span><br><span class="javascript">                <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;#sonf&#x27;</span>,</span><br><span class="javascript">                <span class="hljs-attr">data</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">                        <span class="hljs-attr">sfbool</span>: <span class="hljs-literal">false</span></span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-function"><span class="hljs-title">change</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.$emit(<span class="hljs-string">&#x27;callfat&#x27;</span>);</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.sfbool = !<span class="hljs-built_in">this</span>.sfbool;</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript"></span><br><span class="javascript">            Vue.component(<span class="hljs-string">&#x27;sons&#x27;</span>, &#123;</span><br><span class="javascript">                <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;#sons&#x27;</span>,</span><br><span class="javascript">                <span class="hljs-attr">data</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript"></span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">props</span>: [<span class="hljs-string">&#x27;callson&#x27;</span>]</span><br><span class="javascript">            &#125;);</span><br><span class="javascript"></span><br><span class="javascript">            Vue.component(<span class="hljs-string">&#x27;fat&#x27;</span>, &#123;</span><br><span class="javascript">                <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;#fat&#x27;</span>,</span><br><span class="javascript">                <span class="hljs-attr">data</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">                        <span class="hljs-attr">fbool</span>: <span class="hljs-literal">false</span></span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-function"><span class="hljs-title">changeF</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.fbool = !<span class="hljs-built_in">this</span>.fbool;</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">            <span class="hljs-keyword">var</span> box = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">                <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#box&#x27;</span></span><br><span class="javascript">            &#125;);</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>不相邻兄弟组件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> angel=<span class="hljs-keyword">new</span> Vue();<span class="hljs-comment">//引入一个Vue实例</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">angel.$emit(<span class="hljs-string">&#x27;test&#x27;</span>,<span class="hljs-string">&#x27;Hello&#x27;</span>)<span class="hljs-comment">//传送方在函数中抛出事件及数据</span><br>angel.$on(<span class="hljs-string">&#x27;test&#x27;</span>,<span class="hljs-built_in">this</span>.change)<span class="hljs-comment">//接收方接收事件及数据</span><br></code></pre></td></tr></table></figure><h3 id="动画："><a href="#动画：" class="headerlink" title="动画："></a>动画：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&#x27;aaa&#x27;</span>&gt;</span>css中用name值进行动画<br>若中间有1个以上元素，需要在外面嵌套一个元素，再给该元素加<br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&#x27;show&#x27;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>World<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs css">      <span class="hljs-selector-class">.aaa-enter</span>&#123;进入前<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-class">.aaa-enter-to</span>&#123;进入后<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-selector-class">.aaa-enter-active</span>&#123;过渡时间<br><span class="hljs-attribute">transition</span>: all <span class="hljs-number">3s</span>;<br>&#125;<br><br><span class="hljs-selector-class">.aaa-leave</span>&#123;离开前<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-selector-class">.aaa-leave-to</span>&#123;离开后<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-class">.aaa-leave-active</span>&#123;过渡时间<br><span class="hljs-attribute">transition</span>: all <span class="hljs-number">3s</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Vue（三）两个案例（todolist，tableBar）</title>
    <link href="/2018/12/11/Vue%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%A4%E4%B8%AA%E6%A1%88%E4%BE%8B%EF%BC%88todolist%EF%BC%8CtableBar%EF%BC%89/"/>
    <url>/2018/12/11/Vue%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%A4%E4%B8%AA%E6%A1%88%E4%BE%8B%EF%BC%88todolist%EF%BC%8CtableBar%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h3 id="待办事项："><a href="#待办事项：" class="headerlink" title="待办事项："></a>待办事项：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">            <span class="hljs-selector-id">#addItem</span>&#123;</span><br><span class="css">        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">28px</span>;</span><br><span class="css">        <span class="hljs-attribute">vertical-align</span>: middle;  </span><br><span class="css">    &#125;</span><br><span class="css">    <span class="hljs-selector-id">#txt</span>&#123;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">250px</span>;</span><br><span class="css">        <span class="hljs-attribute">vertical-align</span>: middle;</span><br><span class="css">    &#125;</span><br><span class="css">    <span class="hljs-selector-tag">li</span>&#123;</span><br><span class="css">        <span class="hljs-attribute">list-style</span>: none;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">70px</span>;</span><br><span class="css">        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">70px</span>;</span><br><span class="css">        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightgreen;</span><br><span class="css">    &#125;</span><br><span class="css">    <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span>&#123;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightcoral;</span><br><span class="css">    &#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;txt&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;addItem&quot;</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&#x27;createList&#x27;</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&#x27;(item,index) in list&#x27;</span>&gt;</span>&#123;&#123;item.value&#125;&#125;<br>                    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&#x27;item.sure&#x27;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:red;font-size: 18px&quot;</span>&gt;</span>Be Sure<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;delItem(index)&quot;</span>&gt;</span>Del<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&#x27;!item.sure&#x27;</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&#x27;item.sure=true&#x27;</span>&gt;</span>Sure<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">let</span> add = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">                <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#box&#x27;</span>,</span><br><span class="javascript">                <span class="hljs-attr">data</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-attr">list</span>: []</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-function"><span class="hljs-title">createList</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.list.push(&#123;</span><br><span class="javascript">                            <span class="hljs-attr">value</span>: txt.value,</span><br><span class="javascript">                            <span class="hljs-attr">sure</span>: <span class="hljs-literal">false</span></span><br><span class="javascript">                        &#125;);</span><br><span class="javascript">                    &#125;,</span><br><span class="javascript">                    <span class="hljs-function"><span class="hljs-title">delItem</span>(<span class="hljs-params">num</span>)</span>&#123;</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.list.splice(num,<span class="hljs-number">1</span>);</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="table选项卡："><a href="#table选项卡：" class="headerlink" title="table选项卡："></a>table选项卡：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">            <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">list-style</span>: none;</span><br><span class="css">                <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">            &#125;</span><br><span class="css"></span><br><span class="css">            <span class="hljs-selector-id">#box</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">width</span>: <span class="hljs-number">280px</span>;</span><br><span class="css">                <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;</span><br><span class="css">                <span class="hljs-attribute">background</span>: lightblue;</span><br><span class="css">            &#125;</span><br><span class="css"></span><br><span class="css">            <span class="hljs-selector-id">#box</span>:after &#123;</span><br><span class="css">                content: <span class="hljs-string">&#x27;&#x27;</span>;</span><br><span class="css">                <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</span><br><span class="css">                <span class="hljs-attribute">clear</span>: both;</span><br><span class="css">                <span class="hljs-attribute">visibility</span>: hidden;</span><br><span class="css">                <span class="hljs-attribute">display</span>: block;</span><br><span class="css">            &#125;</span><br><span class="css"></span><br><span class="css">            <span class="hljs-selector-id">#title</span> <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">                <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">                <span class="hljs-attribute">float</span>: left;</span><br><span class="css">                <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span> <span class="hljs-number">15px</span>;</span><br><span class="css">            &#125;</span><br><span class="css"></span><br><span class="css">            <span class="hljs-selector-id">#title</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">background</span>: lightcoral;</span><br><span class="css">            &#125;</span><br><span class="css"></span><br><span class="css">            <span class="hljs-selector-id">#content</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">display</span>: block;</span><br><span class="css">            &#125;</span><br><span class="css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&#x27;(item,index) in list&#x27;</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&#x27;changeContent(index)&#x27;</span>&gt;</span>&#123;&#123;index&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&#x27;(item,index) in list[str]&#x27;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">                <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#box&#x27;</span>,</span><br><span class="javascript">                <span class="hljs-attr">data</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-attr">list</span>: &#123;</span><br><span class="javascript">                        <span class="hljs-string">&#x27;movie&#x27;</span>: [<span class="hljs-string">&#x27;aaa&#x27;</span>, <span class="hljs-string">&#x27;bbb&#x27;</span>, <span class="hljs-string">&#x27;ccc&#x27;</span>, <span class="hljs-string">&#x27;ddd&#x27;</span>, <span class="hljs-string">&#x27;aaa&#x27;</span>, <span class="hljs-string">&#x27;bbb&#x27;</span>, <span class="hljs-string">&#x27;ccc&#x27;</span>, <span class="hljs-string">&#x27;ddd&#x27;</span>, <span class="hljs-string">&#x27;aaa&#x27;</span>, <span class="hljs-string">&#x27;bbb&#x27;</span>, <span class="hljs-string">&#x27;ccc&#x27;</span>,</span><br><span class="javascript">                            <span class="hljs-string">&#x27;ddd&#x27;</span>, <span class="hljs-string">&#x27;aaa&#x27;</span>, <span class="hljs-string">&#x27;bbb&#x27;</span>, <span class="hljs-string">&#x27;ccc&#x27;</span>, <span class="hljs-string">&#x27;ddd&#x27;</span></span><br><span class="javascript">                        ],</span><br><span class="javascript">                        <span class="hljs-string">&#x27;game&#x27;</span>: [<span class="hljs-string">&#x27;eee&#x27;</span>, <span class="hljs-string">&#x27;fff&#x27;</span>, <span class="hljs-string">&#x27;ggg&#x27;</span>, <span class="hljs-string">&#x27;hhh&#x27;</span>, <span class="hljs-string">&#x27;eee&#x27;</span>, <span class="hljs-string">&#x27;fff&#x27;</span>, <span class="hljs-string">&#x27;ggg&#x27;</span>, <span class="hljs-string">&#x27;hhh&#x27;</span>, <span class="hljs-string">&#x27;eee&#x27;</span>, <span class="hljs-string">&#x27;fff&#x27;</span>, <span class="hljs-string">&#x27;ggg&#x27;</span>,</span><br><span class="javascript">                            <span class="hljs-string">&#x27;hhh&#x27;</span>, <span class="hljs-string">&#x27;eee&#x27;</span>, <span class="hljs-string">&#x27;fff&#x27;</span>, <span class="hljs-string">&#x27;ggg&#x27;</span>, <span class="hljs-string">&#x27;hhh&#x27;</span>, <span class="hljs-string">&#x27;eee&#x27;</span>, <span class="hljs-string">&#x27;fff&#x27;</span>, <span class="hljs-string">&#x27;ggg&#x27;</span>, <span class="hljs-string">&#x27;hhh&#x27;</span></span><br><span class="javascript">                        ],</span><br><span class="javascript">                        <span class="hljs-string">&#x27;music&#x27;</span>: [<span class="hljs-string">&#x27;iii&#x27;</span>, <span class="hljs-string">&#x27;jjj&#x27;</span>, <span class="hljs-string">&#x27;kkk&#x27;</span>, <span class="hljs-string">&#x27;lll&#x27;</span>, <span class="hljs-string">&#x27;mmm&#x27;</span>, <span class="hljs-string">&#x27;iii&#x27;</span>, <span class="hljs-string">&#x27;jjj&#x27;</span>, <span class="hljs-string">&#x27;kkk&#x27;</span>, <span class="hljs-string">&#x27;lll&#x27;</span>, <span class="hljs-string">&#x27;mmm&#x27;</span>, <span class="hljs-string">&#x27;iii&#x27;</span>,</span><br><span class="javascript">                            <span class="hljs-string">&#x27;jjj&#x27;</span>, <span class="hljs-string">&#x27;kkk&#x27;</span>, <span class="hljs-string">&#x27;lll&#x27;</span>, <span class="hljs-string">&#x27;mmm&#x27;</span>, <span class="hljs-string">&#x27;iii&#x27;</span>, <span class="hljs-string">&#x27;jjj&#x27;</span>, <span class="hljs-string">&#x27;kkk&#x27;</span>, <span class="hljs-string">&#x27;lll&#x27;</span>, <span class="hljs-string">&#x27;mmm&#x27;</span>, <span class="hljs-string">&#x27;iii&#x27;</span>, <span class="hljs-string">&#x27;jjj&#x27;</span>,</span><br><span class="javascript">                            <span class="hljs-string">&#x27;kkk&#x27;</span>, <span class="hljs-string">&#x27;lll&#x27;</span>, <span class="hljs-string">&#x27;mmm&#x27;</span></span><br><span class="javascript">                        ]</span><br><span class="javascript">                    &#125;,</span><br><span class="javascript">                    <span class="hljs-attr">str</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-function"><span class="hljs-title">changeContent</span>(<span class="hljs-params">data</span>)</span> &#123;</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.str = data;</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;);</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：轮播图（面向对象），最终版（注释全面）</title>
    <link href="/2018/12/08/JS%E6%A1%88%E4%BE%8B%20%E8%BD%AE%E6%92%AD%E5%9B%BE%EF%BC%88%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%89%EF%BC%8C%E6%9C%80%E7%BB%88%E7%89%88%EF%BC%88%E6%B3%A8%E9%87%8A%E5%85%A8%E9%9D%A2%EF%BC%89/"/>
    <url>/2018/12/08/JS%E6%A1%88%E4%BE%8B%20%E8%BD%AE%E6%92%AD%E5%9B%BE%EF%BC%88%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%89%EF%BC%8C%E6%9C%80%E7%BB%88%E7%89%88%EF%BC%88%E6%B3%A8%E9%87%8A%E5%85%A8%E9%9D%A2%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="Html："><a href="#Html：" class="headerlink" title="Html："></a>Html：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Carousel<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/Carousel.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">      <span class="hljs-keyword">var</span> arr = [<span class="hljs-string">&quot;img/left.png&quot;</span>, <span class="hljs-string">&quot;img/right.png&quot;</span>]; <span class="hljs-comment">//左右按钮</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> arr1 = [</span><br><span class="javascript">        <span class="hljs-string">&quot;img/a.png&quot;</span>,</span><br><span class="javascript">        <span class="hljs-string">&quot;img/b.png&quot;</span>,</span><br><span class="javascript">        <span class="hljs-string">&quot;img/c.png&quot;</span>,</span><br><span class="javascript">        <span class="hljs-string">&quot;img/d.png&quot;</span>,</span><br><span class="javascript">        <span class="hljs-string">&quot;img/e.png&quot;</span></span><br><span class="javascript">      ]; <span class="hljs-comment">//新建源</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> arr2 = [</span><br><span class="javascript">        <span class="hljs-string">&quot;img/1.jpg&quot;</span>,</span><br><span class="javascript">        <span class="hljs-string">&quot;img/2.jpg&quot;</span>,</span><br><span class="javascript">        <span class="hljs-string">&quot;img/3.jpg&quot;</span>,</span><br><span class="javascript">        <span class="hljs-string">&quot;img/4.jpg&quot;</span>,</span><br><span class="javascript">        <span class="hljs-string">&quot;img/5.jpg&quot;</span>,</span><br><span class="javascript">        <span class="hljs-string">&quot;img/6.jpg&quot;</span>,</span><br><span class="javascript">        <span class="hljs-string">&quot;img/7.jpg&quot;</span></span><br><span class="javascript">      ]; <span class="hljs-comment">//新建源</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> arr3 = [<span class="hljs-string">&quot;img/aaa.jpg&quot;</span>, <span class="hljs-string">&quot;img/bbb.jpg&quot;</span>, <span class="hljs-string">&quot;img/ccc.jpg&quot;</span>]; <span class="hljs-comment">//新建源</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> carousel = <span class="hljs-keyword">new</span> Carousel(<span class="hljs-built_in">document</span>.body, arr1, arr); <span class="hljs-comment">//实例化轮播图</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> carousel2 = <span class="hljs-keyword">new</span> Carousel(<span class="hljs-built_in">document</span>.body, arr2, arr); <span class="hljs-comment">//实例化轮播图</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> carousel3 = <span class="hljs-keyword">new</span> Carousel(<span class="hljs-built_in">document</span>.body, arr3, arr); <span class="hljs-comment">//实例化轮播图</span></span><br><span class="javascript">      carousel.autoPlay = <span class="hljs-literal">true</span>; <span class="hljs-comment">//自动播放</span></span><br><span class="javascript">      carousel2.autoPlay = <span class="hljs-literal">true</span>; <span class="hljs-comment">//自动播放</span></span><br><span class="javascript">      carousel3.autoPlay = <span class="hljs-literal">true</span>; <span class="hljs-comment">//自动播放</span></span><br><span class="javascript">      <span class="hljs-comment">// carousel.heightValue = 600;//高宽可控</span></span><br><span class="javascript">      <span class="hljs-comment">// carousel3.widthValue =1600;//高宽可控</span></span><br><span class="javascript">      animate();</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">animate</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-comment">//用一个动画函数控制轮播</span></span><br><span class="javascript">        requestAnimationFrame(animate);</span><br><span class="javascript">        carousel.animate();</span><br><span class="javascript">        carousel2.animate();</span><br><span class="javascript">        carousel3.animate();</span><br><span class="javascript">      &#125;</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Js："><a href="#Js：" class="headerlink" title="Js："></a>Js：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> Carousel = (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> liStyle = &#123; <span class="hljs-comment">//初始化下面的小点样式</span><br>        <span class="hljs-attr">width</span>: <span class="hljs-string">&quot;20px&quot;</span>,<br>        <span class="hljs-attr">height</span>: <span class="hljs-string">&quot;20px&quot;</span>,<br>        <span class="hljs-attr">borderRadius</span>: <span class="hljs-string">&quot;20px&quot;</span>,<br>        <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&quot;rgba(240,137,137,0.3)&quot;</span>,<br>        <span class="hljs-attr">border</span>: <span class="hljs-string">&quot;1px solid #F08989&quot;</span>,<br>        <span class="hljs-attr">float</span>: <span class="hljs-string">&quot;left&quot;</span>,<br>        <span class="hljs-attr">lineHeight</span>: <span class="hljs-string">&quot;20px&quot;</span>,<br>        <span class="hljs-attr">textAlign</span>: <span class="hljs-string">&quot;center&quot;</span>,<br>        <span class="hljs-attr">marginLeft</span>: <span class="hljs-string">&quot;20px&quot;</span>,<br>        <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;white&quot;</span><br>    &#125;;<br>    <span class="hljs-keyword">var</span> ulStyle = &#123; <span class="hljs-comment">//小点盒子</span><br>        <span class="hljs-attr">margin</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">padding</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">listStyle</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>        <span class="hljs-attr">position</span>: <span class="hljs-string">&quot;absolute&quot;</span>,<br>        <span class="hljs-attr">bottom</span>: <span class="hljs-string">&quot;20px&quot;</span><br>    &#125;;<br>    <span class="hljs-keyword">var</span> imgConStyle = &#123; <span class="hljs-comment">//图片盒子</span><br>        <span class="hljs-attr">position</span>: <span class="hljs-string">&quot;absolute&quot;</span>,<br>        <span class="hljs-attr">left</span>: <span class="hljs-string">&quot;0px&quot;</span><br>    &#125;;<br>    <span class="hljs-keyword">var</span> maskDivStyle = &#123; <span class="hljs-comment">//最大的盒子</span><br>        <span class="hljs-attr">overflow</span>: <span class="hljs-string">&quot;hidden&quot;</span>,<br>        <span class="hljs-attr">position</span>: <span class="hljs-string">&quot;relative&quot;</span>,<br>        <span class="hljs-attr">margin</span>: <span class="hljs-string">&quot;auto&quot;</span>,<br>        <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&quot;antiquewhite&quot;</span><br>    &#125;;<br>    <span class="hljs-comment">//功能：实现高宽可改，图片预加载，可换图片源</span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Carousel</span>(<span class="hljs-params">parent, list, btnList</span>) </span>&#123;<br>        <span class="hljs-built_in">this</span>.init(parent, btnList); <span class="hljs-comment">//入口函数</span><br>        <span class="hljs-built_in">this</span>.sourse = list; <span class="hljs-comment">//引入图片源</span><br>    &#125;<br>    Carousel.prototype = &#123;<br>        <span class="hljs-attr">loadImg</span>: <span class="hljs-literal">null</span>, <span class="hljs-comment">//正在加载的图片</span><br>        <span class="hljs-attr">imgList</span>: [], <span class="hljs-comment">//加载的图片</span><br>        <span class="hljs-attr">carouselBox</span>: <span class="hljs-literal">null</span>, <span class="hljs-comment">//装图片的盒子（最大的盒子）</span><br>        <span class="hljs-attr">_width</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">//可修改的宽</span><br>        <span class="hljs-attr">_height</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">//可修改的高</span><br>        <span class="hljs-attr">_sourse</span>: [], <span class="hljs-comment">//加载图片的源（路径）</span><br>        <span class="hljs-attr">bool</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//是否允许轮播</span><br>        <span class="hljs-attr">index</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">//当前加载图片的索引</span><br>        <span class="hljs-attr">direct</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment">//轮播方向</span><br>        <span class="hljs-attr">speed</span>: <span class="hljs-number">30</span>, <span class="hljs-comment">//轮播的速度</span><br>        <span class="hljs-attr">autoPlay</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//是否自动轮播</span><br>        <span class="hljs-attr">dotLi</span>: <span class="hljs-literal">null</span>, <span class="hljs-comment">//小点，根据源的图片数切换</span><br>        <span class="hljs-attr">autoTime</span>: <span class="hljs-number">200</span>, <span class="hljs-comment">//自动轮播时间间隔，以每帧乘以200计算</span><br>        <span class="hljs-keyword">set</span> <span class="hljs-title">sourse</span>(<span class="hljs-params">value</span>) &#123; <span class="hljs-comment">//设置切换的源时初始化其他属性</span><br>            <span class="hljs-keyword">if</span> (!value || !<span class="hljs-built_in">Array</span>.isArray(value) || !value.length) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//当源不是数组或者为空时，截断并跳出</span><br>            <span class="hljs-built_in">this</span>.widthValue = <span class="hljs-number">0</span>;<br>            <span class="hljs-built_in">this</span>.heightValue = <span class="hljs-number">0</span>; <span class="hljs-comment">//初始化宽高</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.loadImg) &#123; <span class="hljs-comment">//初始化加载的图片，设为空</span><br>                <span class="hljs-built_in">this</span>.loadImg.removeEventListener(<span class="hljs-string">&quot;load&quot;</span>, <span class="hljs-built_in">this</span>.loadImgHandler);<br>            &#125;<br>            <span class="hljs-built_in">this</span>.imgList.length = <span class="hljs-number">0</span>; <span class="hljs-comment">//清空图片列表</span><br>            <span class="hljs-built_in">this</span>._sourse = value; <span class="hljs-comment">//传入源</span><br>            <span class="hljs-built_in">this</span>.reLoadImg(value); <span class="hljs-comment">//执行加载图片</span><br>        &#125;,<br>        <span class="hljs-keyword">get</span> <span class="hljs-title">sourse</span>() &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._sourse;<br>        &#125;,<br>        <span class="hljs-keyword">set</span> <span class="hljs-title">widthValue</span>(<span class="hljs-params">value</span>) &#123;<br>            <span class="hljs-built_in">this</span>._width = value; <span class="hljs-comment">//根据传入的宽度改变轮播图宽度</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._width === <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span>;<br>            <span class="hljs-built_in">this</span>.carouselBox.style.width = value + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//每次更新，轮播图宽度改变</span><br>            <span class="hljs-keyword">var</span> ul = <span class="hljs-built_in">this</span>.carouselBox.lastElementChild; <span class="hljs-comment">//初始化，装小点的盒子</span><br>            ul.style.left = (value - ul.offsetWidth) / <span class="hljs-number">2</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">// 当宽度改变时，小点自适应（定位在盒子宽度中间）</span><br>        &#125;,<br>        <span class="hljs-keyword">get</span> <span class="hljs-title">widthValue</span>() &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._width;<br>        &#125;,<br>        <span class="hljs-keyword">set</span> <span class="hljs-title">heightValue</span>(<span class="hljs-params">value</span>) &#123; <span class="hljs-comment">//根据传入的高度改变轮播图高度</span><br>            <span class="hljs-built_in">this</span>._height = value;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._height === <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span>;<br>            <span class="hljs-built_in">this</span>.carouselBox.style.height = value + <span class="hljs-string">&quot;px&quot;</span>;<br>            <span class="hljs-built_in">this</span>.carouselBox.firstElementChild.style.height = value + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//每次更新，轮播图高度改变</span><br>            <span class="hljs-built_in">this</span>.carouselBox.children[<span class="hljs-number">1</span>].style.top = <span class="hljs-built_in">this</span>.carouselBox.children[<span class="hljs-number">2</span>].style.top = (<span class="hljs-built_in">this</span>.heightValue - <span class="hljs-built_in">this</span>.carouselBox.children[<span class="hljs-number">1</span>].offsetHeight) / <span class="hljs-number">2</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">// 当宽度改变时，左右按钮自适应（定位在盒子高度中间）</span><br>        &#125;,<br>        <span class="hljs-keyword">get</span> <span class="hljs-title">heightValue</span>() &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._height;<br>        &#125;,<br>        <span class="hljs-attr">reLoadImg</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">list</span>) </span>&#123;<br>            <span class="hljs-keyword">var</span> img = <span class="hljs-keyword">new</span> Image(); <span class="hljs-comment">//生成初始图片</span><br>            img.addEventListener(<span class="hljs-string">&quot;load&quot;</span>, <span class="hljs-built_in">this</span>.loadImgHandler); <span class="hljs-comment">//图片加载完成后，执行下一张图片加载</span><br>            img.self = <span class="hljs-built_in">this</span>;<br>            img.num = <span class="hljs-number">0</span>; <span class="hljs-comment">//当前图片索引</span><br>            img.list = list;<br>            img.imgList = []; <span class="hljs-comment">//图片列表初始</span><br>            img.src = list[img.num]; <span class="hljs-comment">//通过事件传数据</span><br>        &#125;,<br>        <span class="hljs-attr">loadImgHandler</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>            <span class="hljs-built_in">this</span>.imgList.push(<span class="hljs-built_in">this</span>.cloneNode(<span class="hljs-literal">false</span>)); <span class="hljs-comment">//图片列表放入被加载的图片</span><br>            <span class="hljs-built_in">this</span>.num++; <span class="hljs-comment">//下一张图片索引</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.num &gt; <span class="hljs-built_in">this</span>.list.length - <span class="hljs-number">1</span>) &#123; <span class="hljs-comment">//当全部加载完成后，继续执行其他函数</span><br>                <span class="hljs-built_in">this</span>.self.imgLoadFinish(<span class="hljs-built_in">this</span>.imgList);<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            <span class="hljs-built_in">this</span>.src = <span class="hljs-built_in">this</span>.list[<span class="hljs-built_in">this</span>.num]; <span class="hljs-comment">//否则继续加载</span><br>        &#125;,<br>        <span class="hljs-attr">init</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">parent, btnList</span>) </span>&#123; <span class="hljs-comment">//入口函数</span><br>            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.carouselBox) &#123; <span class="hljs-comment">//保证对象单例</span><br>                <span class="hljs-built_in">this</span>.carouselBox = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>); <span class="hljs-comment">//装图片的盒子（最大的盒子）</span><br>                <span class="hljs-keyword">var</span> imgBox = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>); <span class="hljs-comment">//加载图片的盒子，装在最大的盒子里，控制图片切换和移动</span><br>                <span class="hljs-built_in">this</span>.carouselBox.appendChild(imgBox);<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; btnList.length; i++) &#123; <span class="hljs-comment">//加载按钮</span><br>                    <span class="hljs-keyword">var</span> btimg = <span class="hljs-keyword">new</span> Image();<br>                    btimg.src = btnList[i];<br>                    <span class="hljs-built_in">this</span>.carouselBox.appendChild(btimg);<br>                    <span class="hljs-keyword">if</span> (i === <span class="hljs-number">0</span>) &#123; <span class="hljs-comment">//设置位置</span><br>                        btimg.style.left = <span class="hljs-string">&quot;10px&quot;</span>;<br>                        btimg.style.position = <span class="hljs-string">&quot;absolute&quot;</span>;<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        btimg.style.right = <span class="hljs-string">&quot;10px&quot;</span>;<br>                        btimg.style.position = <span class="hljs-string">&quot;absolute&quot;</span>;<br>                    &#125;<br>                    btimg.self = <span class="hljs-built_in">this</span>;<br>                    <span class="hljs-built_in">this</span>.carouselBox.self = <span class="hljs-built_in">this</span>;<br>                    <span class="hljs-built_in">this</span>.carouselBox.addEventListener(<span class="hljs-string">&quot;mouseenter&quot;</span>, <span class="hljs-built_in">this</span>.isAuto); <span class="hljs-comment">//控制开启关闭自动轮播</span><br>                    <span class="hljs-built_in">this</span>.carouselBox.addEventListener(<span class="hljs-string">&quot;mouseleave&quot;</span>, <span class="hljs-built_in">this</span>.isAuto);<br>                    btimg.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-built_in">this</span>.changeImgHandler); <span class="hljs-comment">//加载点击事件</span><br>                &#125;<br>                <span class="hljs-keyword">var</span> ul = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;ul&quot;</span>); <span class="hljs-comment">//小点盒子</span><br>                <span class="hljs-built_in">Object</span>.assign(ul.style, ulStyle); <span class="hljs-comment">//设置样式</span><br>                <span class="hljs-built_in">Object</span>.assign(<span class="hljs-built_in">this</span>.carouselBox.style, maskDivStyle); <span class="hljs-comment">//设置样式</span><br>                <span class="hljs-built_in">Object</span>.assign(imgBox.style, imgConStyle); <span class="hljs-comment">//设置样式</span><br>                <span class="hljs-built_in">this</span>.carouselBox.appendChild(ul);<br>                parent.appendChild(<span class="hljs-built_in">this</span>.carouselBox);<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.carouselBox;<br>        &#125;,<br>        <span class="hljs-attr">imgLoadFinish</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">imgList</span>) </span>&#123; <span class="hljs-comment">//图片加载完成后执行，传入图片列表</span><br>            <span class="hljs-built_in">this</span>.imgList = imgList;<br>            <span class="hljs-keyword">var</span> imgCon = <span class="hljs-built_in">this</span>.carouselBox.firstElementChild; <span class="hljs-comment">//初始化小点盒子和图片盒子（不是最大的盒子）</span><br>            <span class="hljs-keyword">var</span> ul = <span class="hljs-built_in">this</span>.carouselBox.lastElementChild;<br>            <span class="hljs-built_in">this</span>.clearNode(imgCon); <span class="hljs-comment">//清除子元素方法（初始化）</span><br>            <span class="hljs-built_in">this</span>.clearNode(ul);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.imgList.length; i++) &#123; <span class="hljs-comment">//创建小点</span><br>                <span class="hljs-keyword">var</span> li = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;li&quot;</span>);<br>                ul.appendChild(li);<br>                <span class="hljs-built_in">Object</span>.assign(li.style, liStyle); <span class="hljs-comment">//小点样式</span><br>            &#125;<br>            ul.style.left = (<span class="hljs-built_in">this</span>.widthValue - ul.offsetWidth) / <span class="hljs-number">2</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//小点盒子的默认位置</span><br>            imgCon.appendChild(<span class="hljs-built_in">this</span>.imgList[<span class="hljs-number">0</span>]);<br>            ul.self = <span class="hljs-built_in">this</span>;<br>            ul.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-built_in">this</span>.changeDot); <span class="hljs-comment">//小点点击事件</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.widthValue === <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-built_in">this</span>.widthValue = <span class="hljs-built_in">this</span>.imgList[<span class="hljs-number">0</span>].width; <span class="hljs-comment">//当传入的宽为0时，将宽设置为默认宽</span><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-built_in">this</span>.carouselBox.style.width = <span class="hljs-built_in">this</span>.widthValue + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//否则设置为改变的宽</span><br>                <span class="hljs-built_in">this</span>.setSize(imgCon, <span class="hljs-built_in">this</span>.widthValue, <span class="hljs-number">0</span>); <span class="hljs-comment">//调用下面的设置宽高方法，将图片宽高重设</span><br>            &#125;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.heightValue === <span class="hljs-number">0</span>) &#123; <span class="hljs-comment">//同上</span><br>                <span class="hljs-built_in">this</span>.heightValue = <span class="hljs-built_in">this</span>.imgList[<span class="hljs-number">0</span>].height;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-built_in">this</span>.carouselBox.style.height = <span class="hljs-built_in">this</span>.heightValue + <span class="hljs-string">&quot;px&quot;</span>;<br>                imgCon.firstElementChild.style.height = <span class="hljs-built_in">this</span>.heightValue + <span class="hljs-string">&quot;px&quot;</span>;<br>                <span class="hljs-built_in">this</span>.setSize(imgCon, <span class="hljs-number">0</span>, <span class="hljs-built_in">this</span>.heightValue);<br>            &#125;<br>            <span class="hljs-built_in">this</span>.dotColor(); <span class="hljs-comment">//执行小点样式切换</span><br>            <span class="hljs-built_in">this</span>.carouselBox.children[<span class="hljs-number">1</span>].style.top = <span class="hljs-built_in">this</span>.carouselBox.children[<span class="hljs-number">2</span>].style.top = (<span class="hljs-built_in">this</span>.heightValue - <span class="hljs-built_in">this</span>.carouselBox.children[<span class="hljs-number">1</span>].offsetHeight) / <span class="hljs-number">2</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//按钮位置重设，自适应</span><br>        &#125;,<br>        <span class="hljs-attr">setSize</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">con, w, h</span>) </span>&#123; <span class="hljs-comment">//设置子元素宽高函数</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; con.children.length; i++) &#123;<br>                <span class="hljs-keyword">if</span> (w) &#123;<br>                    con.children[i].style.width = w + <span class="hljs-string">&quot;px&quot;</span>;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (h) &#123;<br>                    con.children[i].style.height = h + <span class="hljs-string">&quot;px&quot;</span>;<br>                &#125;<br>            &#125;<br>        &#125;,<br>        <span class="hljs-attr">clearNode</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">node</span>) </span>&#123; <span class="hljs-comment">//清除子元素函数</span><br>            <span class="hljs-keyword">var</span> len = node.children.length;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>                node.firstElementChild.remove();<br>            &#125;<br>        &#125;,<br>        <span class="hljs-attr">changeImgHandler</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.self.bool) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//当点击一次后，执行完一次轮播才能再次点击</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.style.left === <span class="hljs-string">&quot;10px&quot;</span>) &#123; <span class="hljs-comment">//根据位置判断左右按钮</span><br>                <span class="hljs-built_in">this</span>.self.direct = <span class="hljs-string">&quot;right&quot;</span>; <span class="hljs-comment">//改变轮播方向</span><br>                <span class="hljs-built_in">this</span>.self.index--; <span class="hljs-comment">//索引值减一，即加载上一张图片</span><br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.self.index &lt; <span class="hljs-number">0</span>) &#123; <span class="hljs-comment">//当减到0时，加载最后一张</span><br>                    <span class="hljs-built_in">this</span>.self.index = <span class="hljs-built_in">this</span>.self.imgList.length - <span class="hljs-number">1</span>;<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.style.right === <span class="hljs-string">&quot;10px&quot;</span>) &#123; <span class="hljs-comment">//同上（相反）</span><br>                <span class="hljs-built_in">this</span>.self.direct = <span class="hljs-string">&quot;left&quot;</span>;<br>                <span class="hljs-built_in">this</span>.self.index++;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.self.index &gt; <span class="hljs-built_in">this</span>.self.imgList.length - <span class="hljs-number">1</span>) &#123;<br>                    <span class="hljs-built_in">this</span>.self.index = <span class="hljs-number">0</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-built_in">this</span>.self.creatNextPic(); <span class="hljs-comment">//跳到加载下一张图片函数</span><br>        &#125;,<br>        <span class="hljs-attr">creatNextPic</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.direct !== <span class="hljs-string">&quot;left&quot;</span> &amp;&amp; <span class="hljs-built_in">this</span>.direct !== <span class="hljs-string">&quot;right&quot;</span>) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//当未点击左或者右时跳出</span><br>            <span class="hljs-keyword">var</span> imgCount = <span class="hljs-built_in">this</span>.carouselBox.firstElementChild; <span class="hljs-comment">//获取装图片的盒子（控制图片轮播的盒子，不是最大的盒子）</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.direct === <span class="hljs-string">&quot;left&quot;</span>) &#123; <span class="hljs-comment">//当方向为左，即单击了左按钮</span><br>                imgCount.appendChild(<span class="hljs-built_in">this</span>.imgList[<span class="hljs-built_in">this</span>.index]); <span class="hljs-comment">//装图片的盒子根据当前索引加入图片（插在后面）</span><br>                imgCount.style.width = <span class="hljs-built_in">this</span>.widthValue * <span class="hljs-number">2</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//装图片的盒子宽度设置为图片宽度的两倍（放下两张图片）</span><br>                imgCount.style.left = <span class="hljs-number">0</span>; <span class="hljs-comment">//初始盒子位置</span><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                imgCount.insertBefore(<span class="hljs-built_in">this</span>.imgList[<span class="hljs-built_in">this</span>.index], imgCount.firstElementChild); <span class="hljs-comment">//装图片的盒子根据当前索引加入图片（插在前面）</span><br>                imgCount.style.width = <span class="hljs-built_in">this</span>.widthValue * <span class="hljs-number">2</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//装图片的盒子宽度设置为图片宽度的两倍（放下两张图片）</span><br>                imgCount.style.left = -<span class="hljs-built_in">this</span>.widthValue + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//初始盒子位置</span><br>            &#125;<br>            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.widthValue) &#123; <span class="hljs-comment">//重设宽高</span><br>                <span class="hljs-built_in">this</span>.imgList[<span class="hljs-built_in">this</span>.index].style.width = <span class="hljs-built_in">this</span>.widthValue + <span class="hljs-string">&quot;px&quot;</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.heightValue) &#123;<br>                <span class="hljs-built_in">this</span>.imgList[<span class="hljs-built_in">this</span>.index].style.height = <span class="hljs-built_in">this</span>.heightValue + <span class="hljs-string">&quot;px&quot;</span>;<br>            &#125;<br>            <span class="hljs-built_in">this</span>.dotColor(); <span class="hljs-comment">//切换小点颜色</span><br>            <span class="hljs-built_in">this</span>.bool = <span class="hljs-literal">true</span>; <span class="hljs-comment">//允许下一次点击</span><br>        &#125;,<br>        <span class="hljs-attr">movePic</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//轮播动画</span><br>            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.bool) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//若没加载好下一张，跳出</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.direct !== <span class="hljs-string">&quot;left&quot;</span> &amp;&amp; <span class="hljs-built_in">this</span>.direct !== <span class="hljs-string">&quot;right&quot;</span>) &#123;<br>                <span class="hljs-built_in">this</span>.bool = <span class="hljs-literal">false</span>;<br>                <span class="hljs-keyword">return</span>;<br>            &#125; <span class="hljs-comment">//若没单击，跳出</span><br>            <span class="hljs-keyword">var</span> imgCount = <span class="hljs-built_in">this</span>.carouselBox.firstElementChild; <span class="hljs-comment">//初始图片盒子</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.direct === <span class="hljs-string">&quot;left&quot;</span>) &#123; <span class="hljs-comment">//轮播方向为左时，以设定的速度向左移动</span><br>                imgCount.style.left = imgCount.offsetLeft - <span class="hljs-built_in">this</span>.speed + <span class="hljs-string">&quot;px&quot;</span>;<br>                <span class="hljs-keyword">if</span> (imgCount.offsetLeft &lt;= -<span class="hljs-built_in">this</span>.widthValue) &#123; <span class="hljs-comment">//当后面的图片移动到0时停止</span><br>                    imgCount.firstElementChild.remove(); <span class="hljs-comment">//删除左边的图片</span><br>                    imgCount.style.left = <span class="hljs-number">0</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//初始化盒子的位置</span><br>                    <span class="hljs-built_in">this</span>.direct = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">//制空方向，将轮播开关关闭，需要下次点击才打开</span><br>                    <span class="hljs-built_in">this</span>.bool = <span class="hljs-literal">false</span>;<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">//轮播方向为右时，以设定的速度向右移动</span><br>                imgCount.style.left = imgCount.offsetLeft + <span class="hljs-built_in">this</span>.speed + <span class="hljs-string">&quot;px&quot;</span>;<br>                <span class="hljs-keyword">if</span> (imgCount.offsetLeft &gt;= <span class="hljs-number">0</span>) &#123; <span class="hljs-comment">//当前面的图片移动到0时停止</span><br>                    imgCount.lastElementChild.remove(); <span class="hljs-comment">//删除右边的图片</span><br>                    imgCount.style.left = <span class="hljs-number">0</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//初始化盒子的位置</span><br>                    <span class="hljs-built_in">this</span>.direct = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">//制空方向，将轮播开关关闭，需要下次点击才打开</span><br>                    <span class="hljs-built_in">this</span>.bool = <span class="hljs-literal">false</span>;<br>                &#125;<br>            &#125;<br>        &#125;,<br>        <span class="hljs-attr">changeDot</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.self.bool) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//点击按钮或小点时，跳出</span><br>            <span class="hljs-keyword">if</span> (e.target <span class="hljs-keyword">instanceof</span> HTMLUListElement) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//没有点击小点(li）时跳出</span><br>            <span class="hljs-keyword">var</span> arr = <span class="hljs-built_in">Array</span>.from(<span class="hljs-built_in">this</span>.children); <span class="hljs-comment">//小点数组化</span><br>            <span class="hljs-keyword">var</span> count = arr.indexOf(e.target); <span class="hljs-comment">//查找小点索引</span><br>            <span class="hljs-keyword">if</span> (count === <span class="hljs-built_in">this</span>.self.index) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//点击自身时跳出</span><br>            <span class="hljs-keyword">if</span> (count &gt; <span class="hljs-built_in">this</span>.self.index) &#123; <span class="hljs-comment">//当点击的小点大于当前小点时，将方向置为左</span><br>                <span class="hljs-built_in">this</span>.self.direct = <span class="hljs-string">&quot;left&quot;</span>;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (count &lt; <span class="hljs-built_in">this</span>.self.index) &#123; <span class="hljs-comment">//反之向右</span><br>                <span class="hljs-built_in">this</span>.self.direct = <span class="hljs-string">&quot;right&quot;</span>;<br>            &#125;<br>            <span class="hljs-built_in">this</span>.self.index = count; <span class="hljs-comment">//将图片索引设置为点击小点索引</span><br>            <span class="hljs-built_in">this</span>.self.creatNextPic(); <span class="hljs-comment">//创建下张图片</span><br>            <span class="hljs-built_in">this</span>.self.dotColor(); <span class="hljs-comment">//改变小点样式</span><br>        &#125;,<br>        <span class="hljs-attr">dotColor</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//前一个小点背景透明</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.dotLi) &#123;<br>                <span class="hljs-built_in">this</span>.dotLi.style.backgroundColor = <span class="hljs-string">&quot;rgba(240,137,137,0.3)&quot;</span>;<br>            &#125; <span class="hljs-comment">//将被切换的小点赋值给当前小点，使其根据计数器切换</span><br>            <span class="hljs-built_in">this</span>.dotLi = <span class="hljs-built_in">this</span>.carouselBox.lastElementChild.children[<span class="hljs-built_in">this</span>.index];<br>            <span class="hljs-built_in">this</span>.dotLi.style.backgroundColor = <span class="hljs-string">&quot;rgba(240,137,137,1)&quot;</span>;<br>        &#125;,<br>        <span class="hljs-attr">isAuto</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123; <span class="hljs-comment">//根据鼠标是否进入轮播图判断是否自动轮播</span><br>            <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&quot;mouseenter&quot;</span>) &#123;<br>                <span class="hljs-built_in">this</span>.self.autoPlay = <span class="hljs-literal">false</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-built_in">this</span>.self.autoPlay = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;,<br>        <span class="hljs-attr">carouselAuto</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//自动轮播</span><br>            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.autoPlay) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//当计数器为0时执行一次</span><br>            <span class="hljs-built_in">this</span>.autoTime--; <span class="hljs-comment">//每帧使计时器减一</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.autoTime &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span>;<br>            <span class="hljs-built_in">this</span>.autoTime = <span class="hljs-number">200</span>;<br>            <span class="hljs-built_in">this</span>.direct = <span class="hljs-string">&quot;left&quot;</span>; <span class="hljs-comment">//默认自动轮播方向</span><br>            <span class="hljs-built_in">this</span>.index++;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.index &gt; <span class="hljs-built_in">this</span>.imgList.length - <span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-built_in">this</span>.index = <span class="hljs-number">0</span>;<br>            &#125;<br>            <span class="hljs-built_in">this</span>.creatNextPic(); <span class="hljs-comment">//创建下一张图</span><br>        &#125;,<br>        <span class="hljs-attr">animate</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//单一动画，每帧执行一次，将动画放在一个函数内</span><br>            <span class="hljs-built_in">this</span>.movePic();<br>            <span class="hljs-built_in">this</span>.carouselAuto();<br>        &#125;<br>    &#125;;<br>    Carousel.prototype.constructor = Carousel;<br>    <span class="hljs-keyword">return</span> Carousel;<br>&#125;)();<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node（十二）加密解密</title>
    <link href="/2018/12/05/Node%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/"/>
    <url>/2018/12/05/Node%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/</url>
    
    <content type="html"><![CDATA[<h3 id="token：（引入jsonwebtoken模块）"><a href="#token：（引入jsonwebtoken模块）" class="headerlink" title="token：（引入jsonwebtoken模块）"></a>token：（引入jsonwebtoken模块）</h3><h3 id="对称加密，一个秘钥进行加密解密"><a href="#对称加密，一个秘钥进行加密解密" class="headerlink" title="对称加密，一个秘钥进行加密解密"></a>对称加密，一个秘钥进行加密解密</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> crypto = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;crypto&#x27;</span>);<br><br><span class="hljs-comment">// 产生token</span><br><br><span class="hljs-keyword">let</span> obj = &#123;<br><br>    <span class="hljs-attr">a</span>: <span class="hljs-number">1</span>,<br><br>    <span class="hljs-attr">b</span>: <span class="hljs-number">2</span>,<br><br>&#125;;<br><br><span class="hljs-keyword">let</span> sec = <span class="hljs-string">&#x27;HelloWorld&#x27;</span><br><br><span class="hljs-keyword">let</span> res = jwt.sign(obj, sec,&#123; <span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;RS256&#x27;</span>&#125;);<span class="hljs-comment">//传入加密的对象，秘钥，加密方式</span><br><br><span class="hljs-built_in">console</span>.log(res);<br><br><span class="hljs-comment">//解析token</span><br><br><span class="hljs-keyword">let</span> sec2 = jwt.verify(<span class="hljs-string">&#x27;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhIjoxLCJiIjoyLCJpYXQiOjE1NDM5ODA0NTF9.ORMQa_LBbDCd7XEEHgVGN2EnccL2kTOyDidE-b4ANMY&#x27;</span>, sec);<br><br><span class="hljs-built_in">console</span>.log(sec2);<br></code></pre></td></tr></table></figure><h3 id="非对称加密，通过私钥进行加密，公钥解密"><a href="#非对称加密，通过私钥进行加密，公钥解密" class="headerlink" title="非对称加密，通过私钥进行加密，公钥解密"></a>非对称加密，通过私钥进行加密，公钥解密</h3><p>产生私钥 openssl genrsa -out private_key.pem 1024</p><p>由私钥产生公钥 openssl rsa -in private_key.pem -pubout -out public_key.pem</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> selfkey = fs.readFileSync(path.join(__dirname, <span class="hljs-string">&#x27;key.pem&#x27;</span>));<span class="hljs-comment">//读取私钥路径</span><br><span class="hljs-keyword">var</span> jwtset = jwt.sign(&#123;<br>    <span class="hljs-attr">a</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">b</span>: <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">c</span>: <span class="hljs-number">3</span><br>&#125;, selfkey, &#123;<br>    <span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;RS256&#x27;</span><br>&#125;);<br><span class="hljs-built_in">console</span>.log(jwtset);<br><br><span class="hljs-keyword">var</span> otherkey = fs.readFileSync(path.join(__dirname, <span class="hljs-string">&#x27;public_key.pem&#x27;</span>));<span class="hljs-comment">//读取公钥路径</span><br><span class="hljs-keyword">var</span> jwtget = jwt.verify(jwtset, otherkey, &#123;<br>    <span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;RS256&#x27;</span><br>&#125;);<br><span class="hljs-built_in">console</span>.log(jwtget);<br></code></pre></td></tr></table></figure><h3 id="crypto和bcrypt"><a href="#crypto和bcrypt" class="headerlink" title="crypto和bcrypt"></a>crypto和bcrypt</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 数据库密码加密</span><br><span class="hljs-comment">// 内置crypto</span><br><span class="hljs-comment">// MD5</span><br><span class="hljs-keyword">const</span> hash = crypto.createHash(<span class="hljs-string">&#x27;md5&#x27;</span>);<br>hash.update(<span class="hljs-string">&#x27;HelloWorld&#x27;</span>);<br><span class="hljs-built_in">console</span>.log(hash.digest(<span class="hljs-string">&#x27;hex&#x27;</span>));<br><span class="hljs-comment">// Hmac</span><br><span class="hljs-keyword">const</span> hmac = crypto.createHmac(<span class="hljs-string">&#x27;sha256&#x27;</span>, <span class="hljs-string">&#x27;12345&#x27;</span>);<br>hmac.update(<span class="hljs-string">&#x27;HelloWorld&#x27;</span>);<br><span class="hljs-built_in">console</span>.log(hmac.digest(<span class="hljs-string">&#x27;hex&#x27;</span>));<br><span class="hljs-comment">// 第三方bcrypt</span><br><span class="hljs-keyword">const</span> pass = <span class="hljs-string">&#x27;qazwsx123&#x27;</span>;<br><span class="hljs-keyword">const</span> saltRounds = <span class="hljs-number">10</span>;<br>bcrypt.genSalt(saltRounds, <span class="hljs-function">(<span class="hljs-params">err, salt</span>) =&gt;</span> &#123;<br>    bcrypt.hash(pass, salt, <span class="hljs-function">(<span class="hljs-params">err, hash</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> result= bcrypt.compareSync(<span class="hljs-string">&#x27;qazwsx123&#x27;</span>, hash);<br>        <span class="hljs-built_in">console</span>.log(result);<br>    &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：轮播图（第二代）</title>
    <link href="/2018/12/04/JS%E6%A1%88%E4%BE%8B%20%E8%BD%AE%E6%92%AD%E5%9B%BE%EF%BC%88%E7%AC%AC%E4%BA%8C%E4%BB%A3%EF%BC%89/"/>
    <url>/2018/12/04/JS%E6%A1%88%E4%BE%8B%20%E8%BD%AE%E6%92%AD%E5%9B%BE%EF%BC%88%E7%AC%AC%E4%BA%8C%E4%BB%A3%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>较上个版本功能全面，函数模块化，降低联系，bug减少，附上代码：</p><h2 id="Html："><a href="#Html：" class="headerlink" title="Html："></a>Html：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./css/main.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pic_box&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;left&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/left.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;right&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/right.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dot_box&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/main.js&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Css："><a href="#Css：" class="headerlink" title="Css："></a>Css：</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs css">* &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-id">#box</span> &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">960px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">320px</span>;<br>    <span class="hljs-attribute">background</span>: lightcoral;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br><br><span class="hljs-selector-id">#pic_box</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">320px</span>;<br>    <span class="hljs-attribute">background</span>: lightblue;<br>    <span class="hljs-attribute">position</span>: absolute;<br>&#125;<br><br><span class="hljs-selector-id">#left</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">130px</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-id">#right</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">130px</span>;<br>    <span class="hljs-attribute">right</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">ul</span> &#123;<br>    <span class="hljs-attribute">list-style</span>: none;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">400px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">li</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">list-style</span>: none;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">float</span>: left;<br>    <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">5px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS："><a href="#JS：" class="headerlink" title="JS："></a>JS：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> box, pic_box, left, right, dot_box, liList; <span class="hljs-comment">//定义最外面的大盒子，装图片的盒子，左右按键，盒子下面的小点容器，及当前小点容器.</span><br><span class="hljs-keyword">var</span> count = <span class="hljs-number">0</span>; <span class="hljs-comment">//记录当前显示的图片索引</span><br><span class="hljs-keyword">var</span> num = <span class="hljs-number">160</span>; <span class="hljs-comment">//定时器帧数控制</span><br><span class="hljs-keyword">var</span> direct; <span class="hljs-comment">//左右方向（方向为左向右移动，反之向左移动）方向是按钮的方向</span><br><span class="hljs-keyword">var</span> bool = <span class="hljs-literal">false</span>; <span class="hljs-comment">//控制是否允许轮播</span><br><span class="hljs-keyword">var</span> autoPlay = <span class="hljs-literal">false</span>; <span class="hljs-comment">//是否自动轮播</span><br><span class="hljs-keyword">var</span> picurl = [<span class="hljs-string">&quot;img/a.jpeg&quot;</span>, <span class="hljs-string">&quot;img/b.jpeg&quot;</span>, <span class="hljs-string">&quot;img/c.jpeg&quot;</span>, <span class="hljs-string">&quot;img/d.jpeg&quot;</span>, <span class="hljs-string">&quot;img/e.jpeg&quot;</span>]; <span class="hljs-comment">//图片路径</span><br><span class="hljs-keyword">var</span> piclist = []; <span class="hljs-comment">//加载的图片（两张）</span><br>init(); <span class="hljs-comment">//入口函数</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">init</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//获取所有元素并赋值给变量，添加事件</span><br>    box = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;box&quot;</span>);<br>    pic_box = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;pic_box&quot;</span>);<br>    left = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;left&quot;</span>);<br>    right = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;right&quot;</span>);<br>    dot_box = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;dot_box&quot;</span>);<br>    left.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, picChange); <span class="hljs-comment">//点击左键</span><br>    right.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, picChange); <span class="hljs-comment">//点击右键</span><br>    box.addEventListener(<span class="hljs-string">&quot;mouseenter&quot;</span>, isAuto); <span class="hljs-comment">//鼠标进入大盒子取消自动轮播</span><br>    box.addEventListener(<span class="hljs-string">&quot;mouseleave&quot;</span>, isAuto); <span class="hljs-comment">//鼠标离开大盒子自动轮播</span><br>    creatImg(); <span class="hljs-comment">//初始化并加载所有图片</span><br>    animation(); <span class="hljs-comment">//开启每帧移动函数</span><br>    creatDot(); <span class="hljs-comment">//新建小点（点击切换图片）</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">creatImg</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; picurl.length; j++) &#123; <span class="hljs-comment">//根据图片源新建图片</span><br>        piclist[j] = <span class="hljs-keyword">new</span> Image();<br>        piclist[j].src = picurl[j];<br>        piclist[j].style.width = <span class="hljs-string">&quot;960px&quot;</span>;<br>        piclist[j].style.height = <span class="hljs-string">&quot;320px&quot;</span>;<br>    &#125;<br>    pic_box.appendChild(piclist[<span class="hljs-number">0</span>]); <span class="hljs-comment">//初始化装图片的盒子，插入第一张图片</span><br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">picChange</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (bool) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//若轮播开关为真时，不执行函数，即点击一次后需要等整张图片轮播完才能点击下一次</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span> === left) &#123; <span class="hljs-comment">//当单击向左按钮</span><br>        direct = <span class="hljs-string">&quot;left&quot;</span>; <span class="hljs-comment">//将方向改成左</span><br>        count--; <span class="hljs-comment">//图片索引减一</span><br>        <span class="hljs-keyword">if</span> (count === -<span class="hljs-number">1</span>) &#123; <span class="hljs-comment">//当减到-1时，让索引为图片总数减一（数组从零开始）</span><br>            count = picurl.length - <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span> === right) &#123; <span class="hljs-comment">//当单击向右按钮</span><br>        direct = <span class="hljs-string">&quot;right&quot;</span>; <span class="hljs-comment">//将方向改成右</span><br>        count++; <span class="hljs-comment">//图片索引加一</span><br>        <span class="hljs-keyword">if</span> (count === picurl.length) &#123; <span class="hljs-comment">//当加到图片总数减一时，让索引为0（数组从零开始）</span><br>            count = <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    nextPic(); <span class="hljs-comment">//创造下一张</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">nextPic</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//加载下一张图片</span><br><br>    pic_box.style.width = <span class="hljs-number">960</span> * <span class="hljs-number">2</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//初始化位置</span><br>    <span class="hljs-keyword">if</span> (direct === <span class="hljs-string">&quot;right&quot;</span>) &#123; <span class="hljs-comment">//当方向为右时，在图片后面插入下一张图片</span><br>        pic_box.appendChild(piclist[count]);<br>        pic_box.style.left = <span class="hljs-number">0</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (direct === <span class="hljs-string">&quot;left&quot;</span>) &#123; <span class="hljs-comment">//当方向为左时，在图片前面插入下一张图片</span><br>        pic_box.insertBefore(piclist[count], pic_box.firstElementChild);<br>        pic_box.style.left = -<span class="hljs-number">960</span> + <span class="hljs-string">&quot;px&quot;</span>;<br>    &#125;<br>    bool = <span class="hljs-literal">true</span>; <span class="hljs-comment">//图片加载完成后，让控制图片轮播的开关为真，防止图片轮播时执行其他事件</span><br>    liChange(); <span class="hljs-comment">//让小点改变</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">animation</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//动画函数，自动轮播和轮播</span><br>    requestAnimationFrame(animation);<br>    picMove();<br>    autoScroll();<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">creatDot</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//新建小点，控制点击切换图片</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; picurl.length; i++) &#123;<br>        <span class="hljs-keyword">var</span> li = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;li&quot;</span>);<br>        dot_box.appendChild(li);<br>        li.style.background = <span class="hljs-string">&quot;rgba(255,255,255,0.7)&quot;</span>;<br>    &#125;<br>    dot_box.firstElementChild.style.background = <span class="hljs-string">&quot;rgba(255,255,255,1)&quot;</span>; <span class="hljs-comment">//默认选中第一个小点</span><br>    dot_box.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, changeDot); <span class="hljs-comment">//点击小点触发事件，切换图片</span><br>    liChange();<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeDot</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (bool) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//若轮播开关为真时，不执行函数，即点击一次后需要等整张图片轮播完才能点击下一次</span><br>    <span class="hljs-keyword">var</span> list = <span class="hljs-built_in">Array</span>.from(dot_box.children); <span class="hljs-comment">//将小点放至数组</span><br>    <span class="hljs-keyword">var</span> index = list.indexOf(e.target); <span class="hljs-comment">//查找当前的小点</span><br>    <span class="hljs-keyword">if</span> (index === count) &#123; <span class="hljs-comment">//若当前点击的图片与索引相等，表示不切换（就是本身）</span><br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (index &gt; count) &#123; <span class="hljs-comment">//当点击的小点在当前右边，将方向换成右</span><br>        direct = <span class="hljs-string">&quot;right&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (index &lt; count) &#123; <span class="hljs-comment">//当点击的小点在当前左边，将方向换成左</span><br>        direct = <span class="hljs-string">&quot;left&quot;</span>;<br>    &#125;<br>    count = index; <span class="hljs-comment">//将当前索引切换成点击的那个</span><br>    nextPic(); <span class="hljs-comment">//新建下一张图片</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">liChange</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (liList) &#123; <span class="hljs-comment">//前一个小点背景透明</span><br>        liList.style.backgroundColor = <span class="hljs-string">&quot;rgba(255,255,255,0.7)&quot;</span>;<br>    &#125;<br>    liList = dot_box.children[count]; <span class="hljs-comment">//将被切换的小点赋值给当前小点，使其根据计数器切换</span><br>    liList.style.background = <span class="hljs-string">&quot;rgba(255,255,255,1)&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">picMove</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (!bool) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//若轮播开关为假时，不执行函数，即点击一次按钮或小点后才能开始轮播</span><br>    <span class="hljs-keyword">if</span> (direct === <span class="hljs-string">&quot;left&quot;</span>) &#123; <span class="hljs-comment">//向右移动</span><br>        pic_box.style.left = pic_box.offsetLeft + <span class="hljs-number">20</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//移动速度，每次20px，当移动到0时关闭轮播开关，并将最后一张图删除</span><br>        <span class="hljs-keyword">if</span> (pic_box.offsetLeft === <span class="hljs-number">0</span>) &#123;<br>            bool = <span class="hljs-literal">false</span>;<br>            pic_box.lastElementChild.remove();<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (direct === <span class="hljs-string">&quot;right&quot;</span>) &#123; <span class="hljs-comment">//向左移动</span><br>        pic_box.style.left = pic_box.offsetLeft - <span class="hljs-number">20</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//移动速度，每次-20px，当移动到-960时关闭轮播开关，并将第一张图删除，重置位置为0</span><br>        <span class="hljs-keyword">if</span> (pic_box.offsetLeft === -<span class="hljs-number">960</span>) &#123;<br>            bool = <span class="hljs-literal">false</span>;<br>            pic_box.firstElementChild.remove();<br>            pic_box.style.left = <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">autoScroll</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//自动轮播</span><br>    <span class="hljs-keyword">if</span> (!autoPlay) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//若自动轮播开关为非（鼠标移入时），不自动轮播</span><br>    num--; <span class="hljs-comment">//定时器帧数计数器减一，减到0时赋值为160</span><br>    <span class="hljs-keyword">if</span> (num === <span class="hljs-number">0</span>) &#123;<br>        num = <span class="hljs-number">160</span>;<br>        direct = <span class="hljs-string">&quot;right&quot;</span>;<br>        count++;<br>        <span class="hljs-keyword">if</span> (count === picurl.length) &#123;<br>            count = <span class="hljs-number">0</span>;<br>        &#125;<br>        nextPic();<br>    &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isAuto</span>(<span class="hljs-params">e</span>) </span>&#123; <span class="hljs-comment">//鼠标移入时，不自动轮播，反之，自动轮播</span><br>    <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&quot;mouseenter&quot;</span>) &#123;<br>        autoPlay = <span class="hljs-literal">false</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e.type = <span class="hljs-string">&quot;mouseleave&quot;</span>) &#123;<br>        autoPlay = <span class="hljs-literal">true</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：轮播图（第一代）</title>
    <link href="/2018/12/04/JS%E6%A1%88%E4%BE%8B%20%E8%BD%AE%E6%92%AD%E5%9B%BE%EF%BC%88%E7%AC%AC%E4%B8%80%E4%BB%A3%EF%BC%89/"/>
    <url>/2018/12/04/JS%E6%A1%88%E4%BE%8B%20%E8%BD%AE%E6%92%AD%E5%9B%BE%EF%BC%88%E7%AC%AC%E4%B8%80%E4%BB%A3%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="初级版轮播图，实现左右按钮切换图片，下方小点切换图片，简单的自动轮播"><a href="#初级版轮播图，实现左右按钮切换图片，下方小点切换图片，简单的自动轮播" class="headerlink" title="初级版轮播图，实现左右按钮切换图片，下方小点切换图片，简单的自动轮播"></a>初级版轮播图，实现左右按钮切换图片，下方小点切换图片，简单的自动轮播</h2><p>代码：（缺点，固定图片张数和宽度高度，每次用时都需要复制，代码累赘，多处功能不完善）</p><h2 id="Html："><a href="#Html：" class="headerlink" title="Html："></a>Html：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Page Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./css/main.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pic_box&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;left&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/left.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;right&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/right.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dot_box&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/main.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Css："><a href="#Css：" class="headerlink" title="Css："></a>Css：</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs css">* &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-id">#box</span> &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">960px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">320px</span>;<br>    <span class="hljs-attribute">background</span>: lightcoral;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br><br><span class="hljs-selector-id">#pic_box</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">320px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">4800px</span>;<br>    <span class="hljs-attribute">background</span>: lightblue;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">transition</span>: all <span class="hljs-number">1s</span>;<br>&#125;<br><br><span class="hljs-selector-id">#left</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">130px</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-id">#right</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">130px</span>;<br>    <span class="hljs-attribute">right</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">ul</span> &#123;<br>    <span class="hljs-attribute">list-style</span>: none;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">400px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">li</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">list-style</span>: none;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid lightcoral;<br>    <span class="hljs-attribute">float</span>: left;<br>    <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">5px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS："><a href="#JS：" class="headerlink" title="JS："></a>JS：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> pic_box, box, left, right, dot_box, dot, count = <span class="hljs-number">0</span>; <span class="hljs-comment">//定义装图片的盒子，最外面的大盒子，左右按键，盒子下面的小点容器，及当前小点容器，计数值，记录当前显示的图片张数</span><br><span class="hljs-keyword">var</span> arr_img = [<span class="hljs-string">&quot;a.jpeg&quot;</span>, <span class="hljs-string">&quot;b.jpeg&quot;</span>, <span class="hljs-string">&quot;c.jpeg&quot;</span>, <span class="hljs-string">&quot;d.jpeg&quot;</span>, <span class="hljs-string">&quot;e.jpeg&quot;</span>];<br><span class="hljs-comment">//图片路径</span><br>init();<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">init</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//入口函数，获取所有元素并赋值给变量</span><br>    dot_box = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;dot_box&quot;</span>);<br>    pic_box = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;pic_box&quot;</span>);<br>    box = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;box&quot;</span>);<br>    left = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;left&quot;</span>);<br>    right = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;right&quot;</span>);<br>    pic_box.style.left = <span class="hljs-number">0</span>; <span class="hljs-comment">//放图片的盒子左边相对父元素（最大的盒子）定位初始化</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr_img.length; i++) &#123; <span class="hljs-comment">//新建图片及宽高</span><br>        <span class="hljs-keyword">var</span> img = <span class="hljs-keyword">new</span> Image();<br>        img.src = <span class="hljs-string">&quot;img/&quot;</span> + arr_img[i];<br>        img.style.width = <span class="hljs-string">&quot;960px&quot;</span>;<br>        img.style.height = <span class="hljs-string">&quot;320px&quot;</span>;<br>        pic_box.appendChild(img);<br>        <span class="hljs-keyword">var</span> li = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;li&quot;</span>); <span class="hljs-comment">//新建盒子下面的小点（点击切换）</span><br>        dot_box.appendChild(li);<br>    &#125;<br>    dot = dot_box.firstElementChild; <span class="hljs-comment">//默认第一个小点的样式</span><br>    dot.style.backgroundColor = <span class="hljs-string">&quot;lightcoral&quot;</span>;<br>    <span class="hljs-comment">//给盒子下面的小点和左右按钮增加监听事件</span><br>    left.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, change_pic);<br>    right.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, change_pic);<br>    dot_box.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, changedot);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">change_pic</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-comment">//左按钮</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span> === left) &#123;<br>        count--; <span class="hljs-comment">//计数器减减，直到小于零时跳到最后一张</span><br>        <span class="hljs-keyword">if</span> (count &lt; <span class="hljs-number">0</span>) &#123;<br>            count = arr_img.length - <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-comment">//右按钮</span><br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span> === right) &#123;<br>        count++; <span class="hljs-comment">//计数器加加，直到大于总图片数减一时跳到第一张</span><br>        <span class="hljs-keyword">if</span> (count &gt; arr_img.length - <span class="hljs-number">1</span>) &#123;<br>            count = <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    pic_box.style.left = -count * <span class="hljs-number">960</span> + <span class="hljs-string">&quot;px&quot;</span>; <span class="hljs-comment">//单击后切换定位位置，达到水平移动</span><br>    count_pic(); <span class="hljs-comment">//每次移动后改变小点位置</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changedot</span>(<span class="hljs-params">e</span>) </span>&#123; <span class="hljs-comment">//点击小点让计数器的值等于点击的那个小点的索引，移动图片，切换小点</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; arr_img.length; j++) &#123;<br>        <span class="hljs-keyword">if</span> (dot_box.children[j] === e.target) &#123;<br>            count = j;<br>        &#125;<br>    &#125;<br>    pic_box.style.left = -count * <span class="hljs-number">960</span> + <span class="hljs-string">&quot;px&quot;</span>;<br>    count_pic();<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">count_pic</span>(<span class="hljs-params"></span>) </span>&#123;<br>    dot.style.backgroundColor = <span class="hljs-string">&quot;transparent&quot;</span>; <span class="hljs-comment">//前一个小点背景透明</span><br>    dot = dot_box.children[count]; <span class="hljs-comment">//将被切换的小点赋值给当前小点，使其根据计数器切换</span><br>    dot.style.backgroundColor = <span class="hljs-string">&quot;lightcoral&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">autochange</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">//自动轮播，3秒切换一次</span><br>    count++;<br>    <span class="hljs-keyword">if</span> (count &gt; arr_img.length - <span class="hljs-number">1</span>) &#123;<br>        count = <span class="hljs-number">0</span>;<br>    &#125;<br>    pic_box.style.left = -count * <span class="hljs-number">960</span> + <span class="hljs-string">&quot;px&quot;</span>;<br>    count_pic();<br>&#125;<br><span class="hljs-built_in">setInterval</span>(autochange, <span class="hljs-number">3000</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node（十一）mongoose配合Node实现注册登录(注册上传头像，登录成功后显示用户信息)</title>
    <link href="/2018/12/03/Node%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89mongoose%E9%85%8D%E5%90%88Node%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95(%E6%B3%A8%E5%86%8C%E4%B8%8A%E4%BC%A0%E5%A4%B4%E5%83%8F%EF%BC%8C%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E5%90%8E%E6%98%BE%E7%A4%BA%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF)/"/>
    <url>/2018/12/03/Node%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89mongoose%E9%85%8D%E5%90%88Node%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95(%E6%B3%A8%E5%86%8C%E4%B8%8A%E4%BC%A0%E5%A4%B4%E5%83%8F%EF%BC%8C%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E5%90%8E%E6%98%BE%E7%A4%BA%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF)/</url>
    
    <content type="html"><![CDATA[<h3 id="需要引入的模块和框架：JQ，monogoDB，mongoose模块，express模块，nodemailer模块，cors模块，multer模块，body-parser模块。"><a href="#需要引入的模块和框架：JQ，monogoDB，mongoose模块，express模块，nodemailer模块，cors模块，multer模块，body-parser模块。" class="headerlink" title="需要引入的模块和框架：JQ，monogoDB，mongoose模块，express模块，nodemailer模块，cors模块，multer模块，body-parser模块。"></a>需要引入的模块和框架：JQ，monogoDB，mongoose模块，express模块，nodemailer模块，cors模块，multer模块，body-parser模块。</h3><p>文件夹（大致）结构如下：</p><p><img src="https://img-blog.csdnimg.cn/20181203171617714.png"></p><p>css：主页样式；</p><p>get_pic： 临时文件存放；</p><p>img：默认头像路径；</p><p>js：首页的js；</p><p>main：入口server文件（终端执行的）；</p><p>node_moudules:下载的模块和框架；</p><p>savePic：保存静态文件；</p><p>set：注册，登录，mongoose初始，邮件发送等模块；</p><p>index：主页；</p><p>首先，主页的Html，Css，Js文件：</p><h2 id="Html"><a href="#Html" class="headerlink" title="Html"></a>Html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./css/main.css&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;list&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;regChange&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loginChange&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;reg&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;img&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;fileData&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;send&quot;</span>&gt;</span>上传头像<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;headImg&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;邮箱&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;user&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;psd&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;验证码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sendmail&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;email&quot;</span>&gt;</span>发送验证码<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;login&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;用户名&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loguser&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;logpsd&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;logbtn&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/main.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Css"><a href="#Css" class="headerlink" title="Css"></a>Css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs css">* &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">3</span>) &#123;<br>    <span class="hljs-attribute">display</span>: none;<br>  &#125;<br>  <span class="hljs-selector-tag">input</span> &#123;<br>    <span class="hljs-attribute">display</span>: block;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span> auto;<br>  &#125;<br>  <span class="hljs-selector-tag">button</span><span class="hljs-selector-pseudo">:not</span>(<span class="hljs-selector-id">#email</span>) &#123;<br>    <span class="hljs-attribute">display</span>: block;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">70px</span>;<br>    <span class="hljs-attribute">background</span>: lightcoral;<br>    <span class="hljs-attribute">border</span>: none;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>  &#125;<br>  <span class="hljs-selector-id">#send</span>&#123;<br>    <span class="hljs-attribute">display</span>: inline-block;<br>    <br>  &#125;<br>  <span class="hljs-selector-id">#headImg</span>&#123;<br>    <span class="hljs-attribute">display</span>: block;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>  &#125;<br>  <span class="hljs-selector-id">#email</span> &#123;<br>    <span class="hljs-attribute">display</span>: block;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>  &#125;<br>  <span class="hljs-selector-tag">ul</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>    <span class="hljs-attribute">background</span>: lightblue;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>    <span class="hljs-attribute">list-style</span>: none;<br>  &#125;<br>  <span class="hljs-selector-tag">li</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>    <span class="hljs-attribute">float</span>: left;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;<br>  &#125;<br>  <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">background</span>: lightgreen;<br>    <span class="hljs-attribute">cursor</span>: pointer;<br>  &#125;<br>  <span class="hljs-selector-tag">table</span>&#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-selector-tag">td</span>&#123;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightcoral;<br>  &#125;<br>  <span class="hljs-selector-tag">td</span> <span class="hljs-selector-tag">img</span>&#123;<br>    <span class="hljs-attribute">vertical-align</span>: top;<br>  &#125;<br></code></pre></td></tr></table></figure><h2 id="Js"><a href="#Js" class="headerlink" title="Js"></a>Js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-comment">//主页js文件</span><br><br><br><span class="hljs-comment">//增加监听事件</span><br>btn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler); <span class="hljs-comment">//注册</span><br>logbtn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler); <span class="hljs-comment">//登录</span><br>email.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, sendHandler); <span class="hljs-comment">//发送验证码</span><br>regChange.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, changeHandler); <span class="hljs-comment">//切换登录注册</span><br>loginChange.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, changeHandler);<br>$(<span class="hljs-string">&#x27;#send&#x27;</span>).on(<span class="hljs-string">&#x27;click&#x27;</span>, sendHead);<br>webAdd = <span class="hljs-string">&#x27;http://localhost:1024/main&#x27;</span>;<br><span class="hljs-keyword">var</span> table; <span class="hljs-comment">//新建登陆成功后的表格</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendHead</span>(<span class="hljs-params">e</span>) </span>&#123; <span class="hljs-comment">//上传文件</span><br>    <span class="hljs-keyword">var</span> picData = <span class="hljs-keyword">new</span> FormData(); <span class="hljs-comment">//实例化文件对象</span><br>    picData.append(<span class="hljs-string">&quot;sendImg&quot;</span>, $(<span class="hljs-string">&quot;#fileData&quot;</span>)[<span class="hljs-number">0</span>].files[<span class="hljs-number">0</span>]); <span class="hljs-comment">//将上传文件的添加到文件中</span><br>    $.ajax(&#123; <span class="hljs-comment">//ajax方式上传至后台</span><br>        <span class="hljs-attr">url</span>: webAdd + <span class="hljs-string">&#x27;/head&#x27;</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>        <span class="hljs-attr">data</span>: picData,<br>        <span class="hljs-attr">cache</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">contentType</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">processData</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (!data.error) &#123;<br>                alert(<span class="hljs-string">&#x27;Success&#x27;</span>);<br>                headImg.src = data.data; <span class="hljs-comment">//成功时将图片显示</span><br>                headImg.style.width = <span class="hljs-string">&#x27;100px&#x27;</span>;<br>            &#125;<br>        &#125;,<br>        <span class="hljs-attr">error</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>            alert(<span class="hljs-string">&#x27;Error&#x27;</span>);<br>        &#125;<br>    &#125;);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.textContent === <span class="hljs-string">&quot;注册&quot;</span>) &#123;<br>        <span class="hljs-comment">//若为空时跳出</span><br>        <span class="hljs-keyword">if</span> (!user.value || !psd.value || !sendmail.value) &#123;<br>            alert(<span class="hljs-string">&quot;输入不能为空&quot;</span>);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-keyword">var</span> AllData = &#123;<br>            <span class="hljs-attr">email</span>: user.value,<br>            <span class="hljs-attr">password</span>: psd.value,<br>            <span class="hljs-attr">mailnum</span>: sendmail.value,<br>            <span class="hljs-attr">headPic</span>: headImg.src<br>        &#125;;<br>        <span class="hljs-comment">//点击注册时将邮箱号，密码，验证码，头像传送至后台</span><br>        $.post(webAdd + <span class="hljs-string">&#x27;/reg&#x27;</span>, AllData,<br>            <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;<br>                <span class="hljs-comment">//后台返回的对象，若hasUser为真，说明已有用户名，否则注册成功</span><br>                <span class="hljs-keyword">if</span> (res.hasUser) &#123;<br>                    <span class="hljs-comment">// location.reload();</span><br>                    alert(<span class="hljs-string">&quot;注册失败&quot;</span>);<br>                    <span class="hljs-keyword">return</span>;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    alert(<span class="hljs-string">&quot;注册成功~&quot;</span>);<br>                &#125;<br>                <span class="hljs-comment">//成功后隐藏注册，显示登录</span><br>                reg.style.display = <span class="hljs-string">&quot;none&quot;</span>;<br>                login.style.display = <span class="hljs-string">&quot;block&quot;</span>;<br>            &#125;<br><br>        );<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.textContent === <span class="hljs-string">&quot;登录&quot;</span>) &#123;<br>        <span class="hljs-comment">// 同注册，不能为空</span><br><br>        <span class="hljs-keyword">if</span> (!loguser.value || !logpsd.value) &#123;<br>            alert(<span class="hljs-string">&quot;不能为空&quot;</span>);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-comment">//点击登录时将邮箱号，密码传送至后台</span><br>        $.post(webAdd + <span class="hljs-string">&#x27;/login&#x27;</span>, &#123;<br>                <span class="hljs-attr">email</span>: loguser.value,<br>                <span class="hljs-attr">password</span>: logpsd.value<br>            &#125;,<br>            <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;<br>                <span class="hljs-comment">//后台返回的对象，若isUser为真，说明正确，并跳转至欢迎页，否则失败</span><br>                <span class="hljs-keyword">if</span> (res.isUser) &#123;<br>                    alert(<span class="hljs-string">&quot;登录成功&quot;</span>);<br>                    login.style.display = <span class="hljs-string">&quot;none&quot;</span>;<br>                    list.style.display = <span class="hljs-string">&#x27;none&#x27;</span>;<br>                    createTab(<span class="hljs-built_in">document</span>.body, res.data[<span class="hljs-number">0</span>]); <span class="hljs-comment">//若登陆成功，创建用户表格</span><br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    alert(<span class="hljs-string">&quot;用户名或密码不正确&quot;</span>);<br>                    <span class="hljs-keyword">return</span>;<br>                &#125;<br>            &#125;<br>        );<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendHandler</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-comment">//   点击获取验证码后将验证码发送到后端进行比对</span><br>    $.post(webAdd + <span class="hljs-string">&#x27;/sendmail&#x27;</span>, &#123;<br>        <span class="hljs-attr">email</span>: user.value<br>    &#125;);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeHandler</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-comment">//   点击上方的注册登录切换</span><br>    <span class="hljs-keyword">if</span> (e.target.textContent === <span class="hljs-string">&quot;注册&quot;</span>) &#123;<br>        reg.style.display = <span class="hljs-string">&quot;block&quot;</span>;<br>        login.style.display = <span class="hljs-string">&quot;none&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        reg.style.display = <span class="hljs-string">&quot;none&quot;</span>;<br>        login.style.display = <span class="hljs-string">&quot;block&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createTab</span>(<span class="hljs-params">parent, data</span>) </span>&#123;<span class="hljs-comment">//新建表格函数</span><br>    <span class="hljs-keyword">if</span> (table) &#123;<br>        table.remove();<span class="hljs-comment">//若表格存在，删除表格</span><br>    &#125;<br>    table = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;table&#x27;</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> str <span class="hljs-keyword">in</span> data) &#123;<span class="hljs-comment">//根据遍历数据创建表格</span><br>        <span class="hljs-keyword">var</span> tr = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;tr&#x27;</span>);<br>        <span class="hljs-keyword">var</span> td = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;td&#x27;</span>);<br>        <span class="hljs-keyword">if</span> (str === <span class="hljs-string">&#x27;head&#x27;</span>) &#123;<br>            td.textContent = <span class="hljs-string">&#x27;头像:&#x27;</span><br>            <span class="hljs-keyword">var</span> img = <span class="hljs-keyword">new</span> Image();<br>            img.src = data[str];<br>            td.appendChild(img);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            td.textContent = str + <span class="hljs-string">&#x27;:&#x27;</span> + data[str];<br>        &#125;<br>        tr.appendChild(td);<br>        table.appendChild(tr);<br>    &#125;<br><br>    parent.appendChild(table);<br>&#125;<br></code></pre></td></tr></table></figure><p>之后是其他模块：</p><h2 id="mongoose的Schema："><a href="#mongoose的Schema：" class="headerlink" title="mongoose的Schema："></a>mongoose的Schema：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mongoose = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./main&#x27;</span>); <span class="hljs-comment">//引入main模块</span><br><span class="hljs-keyword">const</span> Schema = mongoose.Schema; <span class="hljs-comment">//新建schema对象</span><br><span class="hljs-keyword">let</span> userSchema = <span class="hljs-keyword">new</span> Schema(&#123;<br>    <span class="hljs-attr">email</span>: &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>        <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">password</span>: &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>        <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">head</span>: &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>        <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span><br>    &#125;<br>&#125;); <span class="hljs-comment">//实例化对象</span><br><span class="hljs-keyword">let</span> userModel = mongoose.model(<span class="hljs-string">&#x27;allUser&#x27;</span>, userSchema); <span class="hljs-comment">//新建数据库</span><br><span class="hljs-built_in">module</span>.exports = userModel; <span class="hljs-comment">//抛出模块</span><br></code></pre></td></tr></table></figure><h2 id="mongoose数据库连接："><a href="#mongoose数据库连接：" class="headerlink" title="mongoose数据库连接："></a>mongoose数据库连接：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mongoose = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;mongoose&#x27;</span>);<span class="hljs-comment">//引入mongoose</span><br>mongoose.connect(<span class="hljs-string">&#x27;mongodb://localhost:27017/UserList&#x27;</span>, &#123;<br>    <span class="hljs-attr">useNewUrlParser</span>: <span class="hljs-literal">true</span><br>&#125;);<span class="hljs-comment">//连接数据库</span><br><span class="hljs-keyword">let</span> db = mongoose.connection;<br>db.on(<span class="hljs-string">&quot;error&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;错误：&quot;</span> + error);<br>&#125;);<br><br>db.on(<span class="hljs-string">&quot;open&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;连接成功&quot;</span>);<br>&#125;);<br><br>db.on(<span class="hljs-string">&#x27;disconnected&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;连接断开&#x27;</span>);<br>&#125;);<br><span class="hljs-built_in">module</span>.exports = mongoose;<span class="hljs-comment">//抛出mongose对象</span><br></code></pre></td></tr></table></figure><h2 id="电子邮件验证模块："><a href="#电子邮件验证模块：" class="headerlink" title="电子邮件验证模块："></a>电子邮件验证模块：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> nodemailer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;nodemailer&quot;</span>);<br><span class="hljs-keyword">let</span> obj = &#123;<br>  <span class="hljs-attr">transporter</span>: nodemailer.createTransport(&#123;<br>    <span class="hljs-attr">service</span>: <span class="hljs-string">&quot;qq&quot;</span>, <span class="hljs-comment">// 运营商  qq邮箱 网易//</span><br>    <span class="hljs-attr">port</span>: <span class="hljs-number">465</span>,<br>    <span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">auth</span>: &#123;<br>      <span class="hljs-attr">user</span>: <span class="hljs-string">&quot;********@qq.com&quot;</span>, <span class="hljs-comment">//发送方的邮箱</span><br>      <span class="hljs-attr">pass</span>: <span class="hljs-string">&quot;**********&quot;</span> <span class="hljs-comment">// pop3 授权码</span><br>    &#125;<br>  &#125;),<br>  <span class="hljs-attr">send</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">mail, content,callback</span>) </span>&#123;<br>    mailOptions = &#123;<br>      <span class="hljs-attr">from</span>: <span class="hljs-string">&#x27;&quot;Hello World~&quot; &lt;**********@qq.com&gt;&#x27;</span>,<br>      <span class="hljs-attr">to</span>: mail,<br>      <span class="hljs-attr">subject</span>: content,<br>      <span class="hljs-attr">text</span>: content,<br>      <span class="hljs-attr">html</span>: <span class="hljs-string">&quot;&lt;h1&gt;&quot;</span> + content + <span class="hljs-string">&quot;&lt;/h1&gt;&quot;</span><br>    &#125;;<br>    <span class="hljs-built_in">this</span>.transporter.sendMail(mailOptions, <span class="hljs-function">(<span class="hljs-params">error, info</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (error) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">console</span>.log(error);<br>      &#125;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Message sent: %s&quot;</span>, info.messageId);<br>      callback();<br>    &#125;);<br>  &#125;<br>&#125;;<br><span class="hljs-built_in">module</span>.exports = obj;<br></code></pre></td></tr></table></figure><h2 id="头像上传："><a href="#头像上传：" class="headerlink" title="头像上传："></a>头像上传：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> router = express.Router(); <span class="hljs-comment">//新建路由</span><br><span class="hljs-keyword">var</span> multer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;multer&#x27;</span>); <span class="hljs-comment">//文件获取储存的第三方模块</span><br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><span class="hljs-keyword">var</span> upload = multer(&#123;<br>    <span class="hljs-attr">dest</span>: <span class="hljs-string">&#x27;../get_pic/&#x27;</span><br>&#125;); <span class="hljs-comment">//将头像临时文件夹</span><br>router.post(<span class="hljs-string">&#x27;/head&#x27;</span>, upload.single(<span class="hljs-string">&#x27;sendImg&#x27;</span>), <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123; <span class="hljs-comment">//路由地址</span><br>    <span class="hljs-comment">//读取传输的头像</span><br>    fs.readFile(req.file.path, <span class="hljs-function">(<span class="hljs-params">err, data</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (err) &#123;<br>            <span class="hljs-keyword">throw</span> (<span class="hljs-string">&#x27;Load_Err&#x27;</span>);<br>        &#125;<br>        <span class="hljs-keyword">let</span> type = req.file.mimetype.split(<span class="hljs-string">&#x27;/&#x27;</span>)[<span class="hljs-number">1</span>]; <span class="hljs-comment">//获取文件类型名</span><br>        <span class="hljs-keyword">let</span> name = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime() + <span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">1000000</span>); <span class="hljs-comment">//使用时间戳和随机数生成随机名，并且连成完整的文件名</span><br>        <span class="hljs-comment">//保存文件至savePic文件夹</span><br>        <span class="hljs-keyword">let</span> filename = name + <span class="hljs-string">&#x27;.&#x27;</span> + type;<br>        fs.writeFile(path.join(__dirname, <span class="hljs-string">&#x27;../savePic/&#x27;</span> + filename), data, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>            <span class="hljs-comment">// 返回信息给前端</span><br>            <span class="hljs-keyword">if</span> (err) &#123;<br>                res.send(&#123;<br>                    <span class="hljs-attr">err</span>: <span class="hljs-number">1</span>,<br>                    <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;上传失败&#x27;</span><br>                &#125;);<br>                <span class="hljs-comment">//保存图片后删除临时文件</span><br>                fs.unlink(req.file.path, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>                    <span class="hljs-keyword">if</span> (err) &#123;<br>                        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;删除失败&#x27;</span>);<br>                    &#125;<br>                &#125;);<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            res.send(&#123;<br>                <span class="hljs-attr">err</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;上传成功&#x27;</span>,<br>                <span class="hljs-attr">data</span>: <span class="hljs-string">&#x27;savePic/&#x27;</span> + filename<br>            &#125;);<br>            <span class="hljs-comment">//保存图片后删除临时文件</span><br>            fs.unlink(req.file.path, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>                <span class="hljs-keyword">if</span> (err) &#123;<br>                    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;删除失败&#x27;</span>);<br>                &#125;<br>            &#125;);<br>        &#125;);<br>    &#125;);<br><br><br>&#125;);<br><span class="hljs-built_in">module</span>.exports = router;<br></code></pre></td></tr></table></figure><h2 id="注册："><a href="#注册：" class="headerlink" title="注册："></a>注册：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> router = express.Router(); <span class="hljs-comment">//新建路由</span><br><span class="hljs-keyword">const</span> Model = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./mod&#x27;</span>); <span class="hljs-comment">//传入数据库对象</span><br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><span class="hljs-keyword">const</span> sendMail = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./send&#x27;</span>); <span class="hljs-comment">//传入邮件发送的模块对象</span><br><span class="hljs-keyword">var</span> count = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">//新建一个空字符存放验证码，可供全局调用</span><br><span class="hljs-comment">//用post方法传输数据</span><br>router.post(<span class="hljs-string">&#x27;/reg&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">//保存前端传来的数据</span><br>    <span class="hljs-keyword">var</span> mail = req.body.email;<br>    <span class="hljs-keyword">var</span> psd = req.body.password;<br>    <span class="hljs-keyword">var</span> mailnum = req.body.mailnum;<br>    <span class="hljs-keyword">var</span> headUrl = req.body.headPic;<br>    <span class="hljs-comment">//使用Model对象连接数据库</span><br>    Model.find(&#123; <span class="hljs-comment">// 查询邮箱</span><br>        <span class="hljs-string">&#x27;email&#x27;</span>: mail<br>    &#125;).then(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">//若返回的邮箱找到或验证码不对，则抛错</span><br>        <span class="hljs-keyword">if</span> (data.length &gt;= <span class="hljs-number">1</span> || mailnum !== count) &#123;<br>            res.send(&#123;<br>                <span class="hljs-attr">hasUser</span>: <span class="hljs-literal">true</span><br>            &#125;);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        res.send(&#123;<br>            <span class="hljs-attr">hasUser</span>: <span class="hljs-literal">false</span><br>        &#125;);<br>        <span class="hljs-comment">//若前端传了图片，则保存上传的图片，否则使用默认图片</span><br>        <span class="hljs-keyword">if</span> (headUrl===<span class="hljs-string">&#x27;http://localhost:1024/&#x27;</span>) &#123;<br>            headUrl = <span class="hljs-string">&#x27;http://localhost:1024/img/cat.gif&#x27;</span>;<br>        &#125;<br>        Model.insertMany(&#123; <span class="hljs-comment">//反之将邮箱插入到数据库</span><br>            <span class="hljs-string">&#x27;email&#x27;</span>: mail,<br>            <span class="hljs-string">&#x27;password&#x27;</span>: psd,<br>            <span class="hljs-string">&#x27;head&#x27;</span>:headUrl<br>        &#125;).then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;<br>            <span class="hljs-built_in">console</span>.log(result);<br>        &#125;)<br>    &#125;).catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(err);<br>    &#125;);<br>&#125;);<br><br><span class="hljs-comment">//邮箱验证接口</span><br>router.post(<span class="hljs-string">&quot;/sendmail&quot;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    count = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">//初始化验证码容器</span><br>    <span class="hljs-keyword">var</span> mail = req.body.email; <span class="hljs-comment">//获取前端传来的邮箱号</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        count += <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span>); <span class="hljs-comment">//生成4个随机数</span><br>    &#125;<br>    <span class="hljs-keyword">var</span> callback = <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;发送成功&quot;</span>);<br>    &#125;;<br>    sendMail.send(mail, count, callback); <span class="hljs-comment">//调用邮件发送模块</span><br>    res.send(<span class="hljs-string">&#x27;send&#x27;</span>);<br>&#125;);<br><br><span class="hljs-built_in">module</span>.exports = router;<br></code></pre></td></tr></table></figure><h2 id="登录："><a href="#登录：" class="headerlink" title="登录："></a>登录：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> router = express.Router();<span class="hljs-comment">//新建路由</span><br><span class="hljs-keyword">const</span> Model = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./mod&#x27;</span>);<span class="hljs-comment">//获取数据库对象</span><br><br>router.post(<span class="hljs-string">&#x27;/login&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<span class="hljs-comment">//路由地址</span><br>    <span class="hljs-comment">//保存前端传来的数据</span><br>    <span class="hljs-keyword">var</span> mail = req.body.email;<br>    <span class="hljs-keyword">var</span> psd = req.body.password;<br>    Model.find(&#123;<br>        <span class="hljs-comment">// 查询是否有该用户，若用户邮箱和密码符合，则抛出正确，否则抛出错误对象</span><br>        <span class="hljs-string">&#x27;email&#x27;</span>: mail,<br>        <span class="hljs-string">&#x27;password&#x27;</span>: psd<br>    &#125;).then(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (data.length &gt;= <span class="hljs-number">1</span>) &#123;<br>            res.send(&#123;<br>                <span class="hljs-attr">isUser</span>: <span class="hljs-literal">true</span>,<br>                <span class="hljs-attr">data</span>:data<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            res.send(&#123;<br>                <span class="hljs-attr">isUser</span>: <span class="hljs-literal">false</span><br>            &#125;);<br>        &#125;<br>    &#125;).catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(err);<br>    &#125;);<br>&#125;);<br><span class="hljs-built_in">module</span>.exports = router;<br></code></pre></td></tr></table></figure><h2 id="最后server-js"><a href="#最后server-js" class="headerlink" title="最后server.js"></a>最后server.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> cors = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;cors&quot;</span>); <span class="hljs-comment">//引入cors模块（解决跨域问题）</span><br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><span class="hljs-keyword">var</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;body-parser&#x27;</span>);<br><br>app.use(cors());<br><span class="hljs-comment">// 下面的类似于http请求的头文件(另一篇文章有写到http请求，也是注册登录)</span><br>app.all(<span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res, next</span>) </span>&#123;<br>    <span class="hljs-comment">//设置允许跨域的域名，*代表允许任意域名跨域</span><br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>);<br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="hljs-string">&quot;content-type&quot;</span>); <span class="hljs-comment">//允许的header类型</span><br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="hljs-string">&quot;DELETE,PUT,POST,GET,OPTIONS&quot;</span>); <span class="hljs-comment">//跨域允许的请求方式</span><br>    next(); <span class="hljs-comment">//是否继续向下执行</span><br>&#125;);<br><span class="hljs-comment">//创建静态文件目录</span><br>app.use(express.static(path.join(__dirname, <span class="hljs-string">&#x27;../../user_info&#x27;</span>)));<br><span class="hljs-comment">//解决post传输的数据格式问题</span><br>app.use(bodyParser.urlencoded(&#123;<br>    <span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span><br>&#125;))<br>app.use(bodyParser.json())<br><span class="hljs-comment">// 路由选择导入注册</span><br><span class="hljs-keyword">const</span> reg = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../set/reg.js&#x27;</span>);<br>app.use(<span class="hljs-string">&#x27;/main&#x27;</span>, reg);<br><span class="hljs-comment">// 路由选择导入登录</span><br><span class="hljs-keyword">const</span> login = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../set/login.js&#x27;</span>);<br>app.use(<span class="hljs-string">&#x27;/main&#x27;</span>, login);<br><span class="hljs-comment">// 路由选择上传图片模块</span><br><span class="hljs-keyword">const</span> head = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../set/sendhead.js&#x27;</span>);<br>app.use(<span class="hljs-string">&#x27;/main&#x27;</span>, head);<br><span class="hljs-comment">// 开启监听</span><br>app.listen(<span class="hljs-number">1024</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Server Start~&#x27;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：购物车操作（简单实现）</title>
    <link href="/2018/12/02/JS%E6%A1%88%E4%BE%8B%20%E8%B4%AD%E7%89%A9%E8%BD%A6%E6%93%8D%E4%BD%9C%EF%BC%88%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%EF%BC%89/"/>
    <url>/2018/12/02/JS%E6%A1%88%E4%BE%8B%20%E8%B4%AD%E7%89%A9%E8%BD%A6%E6%93%8D%E4%BD%9C%EF%BC%88%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="Html："><a href="#Html：" class="headerlink" title="Html："></a>Html：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>shop<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;css/shop.css&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/shop.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">      <span class="hljs-comment">// 新建数据</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> obj = [</span><br><span class="javascript">        &#123;</span><br><span class="javascript">          <span class="hljs-attr">select</span>: <span class="hljs-literal">false</span>,</span><br><span class="javascript">          <span class="hljs-attr">img</span>:<span class="hljs-string">&quot;img/1.jpg&quot;</span>,<span class="hljs-comment">//图片路径</span></span><br><span class="javascript">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;OPPO R11 全网通4G 双卡双待手机玫瑰金色&quot;</span>,</span><br><span class="javascript">          <span class="hljs-attr">price</span>: <span class="hljs-number">2799</span>,</span><br><span class="javascript">          <span class="hljs-attr">num</span>: <span class="hljs-number">1</span>,</span><br><span class="javascript">          <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>,</span><br><span class="javascript">          <span class="hljs-attr">del</span>: <span class="hljs-literal">false</span></span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        &#123;</span><br><span class="javascript">          <span class="hljs-attr">select</span>: <span class="hljs-literal">false</span>,</span><br><span class="javascript">          <span class="hljs-attr">img</span>:<span class="hljs-string">&quot;img/2.jpg&quot;</span>,<span class="hljs-comment">//图片路径</span></span><br><span class="javascript">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Apple iPhone8 64G 金色 移动联通电信4G手机&quot;</span>,</span><br><span class="javascript">          <span class="hljs-attr">price</span>: <span class="hljs-number">5888</span>,</span><br><span class="javascript">          <span class="hljs-attr">num</span>: <span class="hljs-number">1</span>,</span><br><span class="javascript">          <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>,</span><br><span class="javascript">          <span class="hljs-attr">del</span>: <span class="hljs-literal">false</span></span><br><span class="javascript">        &#125;</span><br><span class="javascript">      ];</span><br><span class="javascript">      <span class="hljs-comment">// 实例化对象，传入数据</span></span><br><span class="javascript">      <span class="hljs-keyword">var</span> table = <span class="hljs-keyword">new</span> Table(obj);</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Css："><a href="#Css：" class="headerlink" title="Css："></a>Css：</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs css">*&#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-tag">table</span>&#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">1200px</span>;<br>    <span class="hljs-comment">/* background: lightcoral; */</span><br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;<br>&#125;<br><span class="hljs-selector-tag">tr</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">1</span>)&#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#F3F3F3</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">26px</span>;<br>&#125;<br><span class="hljs-selector-tag">img</span>&#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30%</span>;<br>    <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br><span class="hljs-selector-tag">img</span>+<span class="hljs-selector-tag">span</span>&#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><span class="hljs-selector-tag">td</span>&#123;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br><span class="hljs-selector-tag">tr</span> <span class="hljs-selector-tag">td</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>)&#123;<br>    <span class="hljs-attribute">text-align</span>: left;<br>&#125;<br><span class="hljs-selector-tag">tr</span> <span class="hljs-selector-tag">td</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">4</span>) <span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">button</span>&#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">border</span>: none;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br><span class="hljs-selector-tag">tr</span> <span class="hljs-selector-tag">td</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">4</span>) <span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">input</span>&#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">27px</span>;<br>    <span class="hljs-attribute">vertical-align</span>: middle;<br>&#125;<br><span class="hljs-selector-tag">tr</span> <span class="hljs-selector-tag">td</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">3</span>),<span class="hljs-selector-tag">tr</span> <span class="hljs-selector-tag">td</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">5</span>)&#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>&#125;<br><span class="hljs-selector-tag">table</span>&gt;<span class="hljs-selector-tag">div</span>&#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>    <span class="hljs-attribute">text-align</span>: right;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS："><a href="#JS：" class="headerlink" title="JS："></a>JS：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Table</span>(<span class="hljs-params">obj</span>) </span>&#123;<br>  <span class="hljs-built_in">this</span>.obj = obj; <span class="hljs-comment">//引入数组对象</span><br>  <span class="hljs-built_in">this</span>.init(obj); <span class="hljs-comment">//入口函数</span><br>&#125;<br>Table.prototype = &#123;<br>  <span class="hljs-attr">table</span>: <span class="hljs-literal">null</span>, <span class="hljs-comment">//初始化表格</span><br>  <span class="hljs-attr">allSum</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">//商品总和</span><br>  <span class="hljs-attr">allNum</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">//商品数量总和</span><br>  <span class="hljs-attr">allselect</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//全选</span><br>  <span class="hljs-attr">init</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.createTab(obj); <span class="hljs-comment">//创建表格</span><br>  &#125;,<br>  <span class="hljs-attr">createTab</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.table) &#123; <span class="hljs-comment">//初始化表格，若表格存在，则删除表格再新建</span><br>      <span class="hljs-built_in">this</span>.table.remove();<br>      <span class="hljs-built_in">this</span>.table = <span class="hljs-literal">null</span>;<br>    &#125;<br>    <span class="hljs-built_in">this</span>.table = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;table&quot;</span>); <span class="hljs-comment">//创建表格</span><br>    <span class="hljs-keyword">var</span> thr = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;tr&quot;</span>); <span class="hljs-comment">//创建表格标题</span><br>    <span class="hljs-keyword">var</span> selectAll = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;th&quot;</span>);<br>    <span class="hljs-keyword">var</span> selectAllInput = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;input&quot;</span>); <span class="hljs-comment">//全选</span><br>    selectAllInput.self = <span class="hljs-built_in">this</span>;<br>    selectAllInput.addEventListener(<span class="hljs-string">&quot;change&quot;</span>, <span class="hljs-built_in">this</span>.selectHandler); <span class="hljs-comment">//添加事件，当全选建改变时触发</span><br>    selectAllInput.type = <span class="hljs-string">&quot;checkbox&quot;</span>;<br>    selectAllInput.checked = <span class="hljs-built_in">this</span>.allselect; <span class="hljs-comment">//给其选中添加值，让数据驱动更改选中状态</span><br>    selectAll.textContent = <span class="hljs-string">&quot;全选&quot;</span>;<br>    selectAll.appendChild(selectAllInput);<br>    thr.appendChild(selectAll); <span class="hljs-comment">//createName方法添加表头内容</span><br>    <span class="hljs-built_in">this</span>.createName(<span class="hljs-string">&quot;商品&quot;</span>, thr);<br>    <span class="hljs-built_in">this</span>.createName(<span class="hljs-string">&quot;单价&quot;</span>, thr);<br>    <span class="hljs-built_in">this</span>.createName(<span class="hljs-string">&quot;数量&quot;</span>, thr);<br>    <span class="hljs-built_in">this</span>.createName(<span class="hljs-string">&quot;小计&quot;</span>, thr);<br>    <span class="hljs-built_in">this</span>.createName(<span class="hljs-string">&quot;操作&quot;</span>, thr);<br>    <span class="hljs-built_in">this</span>.table.appendChild(thr);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; obj.length; i++) &#123; <span class="hljs-comment">//根据数组对象创建表格</span><br>      <span class="hljs-keyword">var</span> tr = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;tr&quot;</span>);<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> str <span class="hljs-keyword">in</span> obj[i]) &#123; <span class="hljs-comment">//跳过name那项（因为里面有两个属性，后面会讲到）</span><br>        <span class="hljs-keyword">if</span> (str === <span class="hljs-string">&quot;name&quot;</span>) <span class="hljs-keyword">continue</span>;<br>        <span class="hljs-keyword">var</span> td = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;td&quot;</span>);<br>        <span class="hljs-keyword">if</span> (str === <span class="hljs-string">&quot;select&quot;</span>) &#123; <span class="hljs-comment">//当属性名为select时创建多选按钮，添加更改时触发的事件</span><br>          <span class="hljs-keyword">var</span> select = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;input&quot;</span>);<br>          select.type = <span class="hljs-string">&quot;checkbox&quot;</span>;<br>          select.self = <span class="hljs-built_in">this</span>;<br>          select.index = i; <span class="hljs-comment">//传递当前点击索引</span><br>          select.addEventListener(<span class="hljs-string">&quot;change&quot;</span>, <span class="hljs-built_in">this</span>.selectHandler);<br>          select.checked = obj[i].select; <span class="hljs-comment">//给其选中添加值，让数据驱动更改选中状态</span><br>          td.appendChild(select);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (str === <span class="hljs-string">&quot;img&quot;</span>) &#123; <span class="hljs-comment">//当属性名为img时创建图片以及商品名</span><br>          <span class="hljs-keyword">var</span> img = <span class="hljs-keyword">new</span> Image();<br>          img.src = obj[i][str];<br>          <span class="hljs-keyword">var</span> name = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;span&quot;</span>);<br>          name.textContent = obj[i].name;<br>          td.appendChild(img);<br>          td.appendChild(name);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (str === <span class="hljs-string">&quot;price&quot;</span>) &#123; <span class="hljs-comment">//当属性名为price时创建价格，同样数据驱动</span><br>          td.price = obj[i][str];<br>          td.textContent = td.price;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (str === <span class="hljs-string">&quot;num&quot;</span>) &#123; <span class="hljs-comment">//数据驱动商品的个数</span><br>          <span class="hljs-keyword">var</span> num = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>);<br>          num.index = i;<br>          num.data = obj; <span class="hljs-comment">//将数据赋给num（后面会用到）</span><br>          num.self = <span class="hljs-built_in">this</span>;<br>          <span class="hljs-comment">//创建-和+按钮，以及文本框，改变商品个数</span><br>          <span class="hljs-keyword">var</span> left = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;button&quot;</span>);<br>          <span class="hljs-keyword">var</span> text = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;input&quot;</span>);<br>          <span class="hljs-keyword">var</span> right = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;button&quot;</span>);<br>          left.textContent = <span class="hljs-string">&quot;-&quot;</span>;<br>          right.textContent = <span class="hljs-string">&quot;+&quot;</span>;<br>          text.value = obj[i].num;<br>          <span class="hljs-comment">//添加事件，当点击+或-时触发事件，当文本框中失焦触发另一个事件</span><br>          left.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-built_in">this</span>.changeNum);<br>          text.addEventListener(<span class="hljs-string">&quot;blur&quot;</span>, <span class="hljs-built_in">this</span>.changeNum);<br>          right.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-built_in">this</span>.changeNum);<br>          num.appendChild(left);<br>          num.appendChild(text);<br>          num.appendChild(right);<br>          td.appendChild(num);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (str === <span class="hljs-string">&quot;sum&quot;</span>) &#123; <span class="hljs-comment">//新建单商品的总价（个数乘以单价）</span><br>          <span class="hljs-keyword">var</span> sum = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>);<br>          sum.data = obj[i]; <span class="hljs-comment">//将该商品的数据传递</span><br>          sum.textContent = obj[i].num * obj[i].price;<br>          td.appendChild(sum);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (str === <span class="hljs-string">&quot;del&quot;</span>) &#123; <span class="hljs-comment">//新建删除按钮</span><br>          <span class="hljs-keyword">var</span> del = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;button&quot;</span>);<br>          del.textContent = <span class="hljs-string">&quot;Del&quot;</span>;<br>          del.data = obj; <span class="hljs-comment">//将该商品的数据传递</span><br>          del.index = i; <span class="hljs-comment">//该项的索引通过事件传递</span><br>          del.self = <span class="hljs-built_in">this</span>;<br>          del.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-built_in">this</span>.delHandler); <span class="hljs-comment">//删除事件</span><br>          td.appendChild(del);<br>        &#125;<br>        tr.appendChild(td);<br>      &#125;<br>      <span class="hljs-built_in">this</span>.table.appendChild(tr);<br>    &#125;<br>    <span class="hljs-built_in">this</span>.addAll(obj, <span class="hljs-built_in">this</span>.table); <span class="hljs-comment">//根据更新的表格数据新建商品总价及总个数</span><br>    <span class="hljs-built_in">document</span>.body.appendChild(<span class="hljs-built_in">this</span>.table);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.table;<br>  &#125;,<br>  <span class="hljs-attr">addAll</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj, parent</span>) </span>&#123; <span class="hljs-comment">//商品总价及总个数</span><br>    <span class="hljs-keyword">var</span> addAllItem = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>);<br>    <span class="hljs-keyword">var</span> addAllPrice = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>);<br>    <span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>; <span class="hljs-comment">//初始化总价及数量</span><br>    <span class="hljs-keyword">var</span> price = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; obj.length; i++) &#123;<br>      sum += obj[i].num;<br>      price += obj[i].price * obj[i].num; <span class="hljs-comment">//求总价和总和</span><br>    &#125;<br>    addAllItem.textContent = <span class="hljs-string">&quot;总数:&quot;</span> + sum;<br>    addAllPrice.textContent = <span class="hljs-string">&quot;总价:&quot;</span> + price;<br>    parent.appendChild(addAllItem);<br>    parent.appendChild(addAllPrice);<br>  &#125;,<br>  <span class="hljs-attr">createName</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">text, parent</span>) </span>&#123; <span class="hljs-comment">//createName方法添加表头内容</span><br>    <span class="hljs-keyword">var</span> item = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;th&quot;</span>);<br>    item.textContent = text;<br>    parent.appendChild(item);<br>    <span class="hljs-keyword">return</span> item;<br>  &#125;,<br>  <span class="hljs-attr">changeNum</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.textContent === <span class="hljs-string">&quot;+&quot;</span>) &#123; <span class="hljs-comment">//当点击+按钮使数组对象中的商品数加一，当商品数量大于99就不再增加</span><br>      <span class="hljs-built_in">this</span>.parentNode.data[<span class="hljs-built_in">this</span>.parentNode.index].num++;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.parentNode.data[<span class="hljs-built_in">this</span>.parentNode.index].num &gt; <span class="hljs-number">99</span>) &#123;<br>        <span class="hljs-built_in">this</span>.parentNode.data[<span class="hljs-built_in">this</span>.parentNode.index].num = <span class="hljs-number">99</span>;<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.textContent === <span class="hljs-string">&quot;-&quot;</span>) &#123; <span class="hljs-comment">//当点击-按钮使数组对象中的商品数减一，当商品数量小于0就不再减少</span><br>      <span class="hljs-built_in">this</span>.parentNode.data[<span class="hljs-built_in">this</span>.parentNode.index].num--;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.parentNode.data[<span class="hljs-built_in">this</span>.parentNode.index].num &lt; <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-built_in">this</span>.parentNode.data[<span class="hljs-built_in">this</span>.parentNode.index].num = <span class="hljs-number">1</span>;<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">//当在文本框输入个数时对数组对象中的商品数进行操作</span><br>      <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isNaN</span>(<span class="hljs-built_in">this</span>.value)) &#123; <span class="hljs-comment">//当输入的不为数值时，使其变成1</span><br>        <span class="hljs-built_in">this</span>.parentNode.data[<span class="hljs-built_in">this</span>.parentNode.index].num = <span class="hljs-number">1</span>;<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Number</span>(<span class="hljs-built_in">this</span>.value) &gt; <span class="hljs-number">99</span>) &#123; <span class="hljs-comment">//当输入的大于99时，使其变成99</span><br>        <span class="hljs-built_in">this</span>.parentNode.data[<span class="hljs-built_in">this</span>.parentNode.index].num = <span class="hljs-number">99</span>;<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Number</span>(<span class="hljs-built_in">this</span>.value) &lt; <span class="hljs-number">1</span>) &#123; <span class="hljs-comment">//当输入的小于1时，使其变成1</span><br>        <span class="hljs-built_in">this</span>.parentNode.data[<span class="hljs-built_in">this</span>.parentNode.index].num = <span class="hljs-number">1</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">//否则直接让对象中的数值等于输入的值</span><br>        <span class="hljs-built_in">this</span>.parentNode.data[<span class="hljs-built_in">this</span>.parentNode.index].num = <span class="hljs-built_in">Number</span>(<span class="hljs-built_in">this</span>.value);<br>      &#125;<br>    &#125;<br>    <span class="hljs-built_in">this</span>.parentNode.self.init(<span class="hljs-built_in">this</span>.parentNode.data); <span class="hljs-comment">//根据更改后的数据驱动创建表格</span><br>  &#125;,<br>  <span class="hljs-attr">delHandler</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.data.splice(<span class="hljs-built_in">this</span>.index, <span class="hljs-number">1</span>); <span class="hljs-comment">//删除当前选择的那项,根据更改后的数据驱动创建表格</span><br>    <span class="hljs-built_in">this</span>.self.init(<span class="hljs-built_in">this</span>.data);<br>  &#125;,<br>  <span class="hljs-attr">selectHandler</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123; <span class="hljs-comment">//全选时使所有的单选框都根据数据更改</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.parentNode.textContent === <span class="hljs-string">&quot;全选&quot;</span>) &#123;<br>      <span class="hljs-built_in">this</span>.self.allselect = !<span class="hljs-built_in">this</span>.self.allselect;<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.self.obj.length; i++) &#123;<br>        <span class="hljs-built_in">this</span>.self.obj[i].select = <span class="hljs-built_in">this</span>.self.allselect;<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">var</span> sum = <span class="hljs-number">1</span>; <span class="hljs-comment">//当所有的单选框选中的值为true时，将全选选中(true是1，false是0)</span><br>      <span class="hljs-built_in">this</span>.self.obj[<span class="hljs-built_in">this</span>.index].select = !<span class="hljs-built_in">this</span>.self.obj[<span class="hljs-built_in">this</span>.index].select;<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.self.obj.length; i++) &#123;<br>        sum *= <span class="hljs-built_in">this</span>.self.obj[i].select;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (sum) &#123;<br>        <span class="hljs-built_in">this</span>.self.allselect = <span class="hljs-literal">true</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">this</span>.self.allselect = <span class="hljs-literal">false</span>;<br>      &#125;<br>    &#125;<br>    <span class="hljs-built_in">this</span>.self.init(<span class="hljs-built_in">this</span>.self.obj); <span class="hljs-comment">//根据更改后的数据驱动创建表格</span><br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.checked);<br>  &#125;<br>&#125;;<br>Table.prototype.constructor = Table;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：Jq中的fadeOut和fadeIn实现简单轮播（没完善，简单实现）</title>
    <link href="/2018/12/02/JS%E6%A1%88%E4%BE%8B%20Jq%E4%B8%AD%E7%9A%84fadeOut%E5%92%8CfadeIn%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E8%BD%AE%E6%92%AD%EF%BC%88%E6%B2%A1%E5%AE%8C%E5%96%84%EF%BC%8C%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%EF%BC%89/"/>
    <url>/2018/12/02/JS%E6%A1%88%E4%BE%8B%20Jq%E4%B8%AD%E7%9A%84fadeOut%E5%92%8CfadeIn%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E8%BD%AE%E6%92%AD%EF%BC%88%E6%B2%A1%E5%AE%8C%E5%96%84%EF%BC%8C%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">            * &#123;</span><br><span class="css">                <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">                <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            &#125;</span><br><span class="css"></span><br><span class="css">            <span class="hljs-selector-id">#nav</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;</span><br><span class="css">                <span class="hljs-attribute">height</span>: <span class="hljs-number">80px</span>;</span><br><span class="css">                <span class="hljs-attribute">position</span>: absolute;</span><br><span class="css">                <span class="hljs-attribute">right</span>: <span class="hljs-number">310px</span>;</span><br><span class="css">                <span class="hljs-attribute">top</span>: <span class="hljs-number">60px</span>;</span><br><span class="css">                <span class="hljs-attribute">z-index</span>: <span class="hljs-number">2</span>;</span><br><span class="css">            &#125;</span><br><span class="css"></span><br><span class="css">            <span class="hljs-selector-id">#nav</span> <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">                <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">                <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;</span><br><span class="css">                <span class="hljs-attribute">transition</span>: <span class="hljs-number">0.5s</span>;</span><br><span class="css">            &#125;</span><br><span class="css"></span><br><span class="css">            <span class="hljs-selector-id">#nav</span> <span class="hljs-selector-tag">img</span><span class="hljs-selector-pseudo">:hover</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">border</span>: <span class="hljs-number">5px</span> solid lightcoral;</span><br><span class="css">                <span class="hljs-attribute">box-sizing</span>: border-box;</span><br><span class="css">            &#125;</span><br><span class="css"></span><br><span class="css">            <span class="hljs-selector-id">#pic</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">width</span>: <span class="hljs-number">1000px</span>;</span><br><span class="css">                <span class="hljs-attribute">height</span>: <span class="hljs-number">600px</span>;</span><br><span class="css">                <span class="hljs-attribute">position</span>: relative;</span><br><span class="css">                <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;</span><br><span class="css">            &#125;</span><br><span class="css"></span><br><span class="css">            <span class="hljs-selector-id">#pic</span> <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">                <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">                <span class="hljs-attribute">position</span>: absolute;</span><br><span class="css">                <span class="hljs-attribute">display</span>: none;</span><br><span class="css">            &#125;</span><br><span class="css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/jquery.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;nav&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/1.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/2.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/3.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;3&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/4.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;4&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/5.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pic&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/1.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/2.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/3.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;3&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/4.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;4&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img/5.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">var</span> count = <span class="hljs-number">0</span>; <span class="hljs-comment">//记录图片是第几张</span></span><br><span class="javascript">            $(<span class="hljs-string">&quot;#pic img&quot;</span>).eq(<span class="hljs-number">0</span>).fadeIn(<span class="hljs-number">1</span>); <span class="hljs-comment">//初始图片显示状态，不写的话，第一张图片不会显示</span></span><br><span class="javascript">            $(<span class="hljs-string">&quot;#nav img&quot;</span>).on(<span class="hljs-string">&quot;click&quot;</span>, changePic); <span class="hljs-comment">//给导航框小图片添加点击事件</span></span><br><span class="javascript">            <span class="hljs-keyword">var</span> list = <span class="hljs-built_in">Array</span>.from($(<span class="hljs-string">&quot;#nav img&quot;</span>)); <span class="hljs-comment">//将小图图片列表，放在数组中</span></span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changePic</span>(<span class="hljs-params">e</span>) </span>&#123; <span class="hljs-comment">//小图点击事件</span></span><br><span class="javascript">                <span class="hljs-keyword">var</span> index = list.indexOf(<span class="hljs-built_in">this</span>); <span class="hljs-comment">//在数组中查找被点击的那一项索引</span></span><br><span class="javascript">                count = index; <span class="hljs-comment">//当点击时将自动切换的索引换成点击的那个</span></span><br><span class="javascript">                $(<span class="hljs-string">&quot;#pic img:visible&quot;</span>).fadeOut(<span class="hljs-number">500</span>); <span class="hljs-comment">//初始化所有图片，将显示的隐藏</span></span><br><span class="javascript">                $(<span class="hljs-string">&quot;#pic img&quot;</span>).eq(index).fadeIn(<span class="hljs-number">500</span>); <span class="hljs-comment">//将被单击的显示</span></span><br><span class="javascript">            &#125;</span><br><span class="javascript">            <span class="hljs-built_in">setInterval</span>(autoMove, <span class="hljs-number">3000</span>); <span class="hljs-comment">//每三秒切换一次</span></span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">autoMove</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                count++; <span class="hljs-comment">//切换图片</span></span><br><span class="javascript">                <span class="hljs-keyword">if</span> (count &gt; <span class="hljs-number">4</span>) &#123;</span><br><span class="javascript">                    count = <span class="hljs-number">0</span>;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">                $(<span class="hljs-string">&quot;#pic img:visible&quot;</span>).fadeOut(<span class="hljs-number">500</span>); <span class="hljs-comment">//初始化所有图片，将显示的隐藏</span></span><br><span class="javascript">                $(<span class="hljs-string">&quot;#pic img&quot;</span>).eq(count).fadeIn(<span class="hljs-number">500</span>); <span class="hljs-comment">//将被单击的显示</span></span><br><span class="javascript">            &#125;</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：小球拖动，记录轨迹，并原路返回</title>
    <link href="/2018/12/02/JS%E6%A1%88%E4%BE%8B%20%E5%B0%8F%E7%90%83%E6%8B%96%E5%8A%A8%EF%BC%8C%E8%AE%B0%E5%BD%95%E8%BD%A8%E8%BF%B9%EF%BC%8C%E5%B9%B6%E5%8E%9F%E8%B7%AF%E8%BF%94%E5%9B%9E/"/>
    <url>/2018/12/02/JS%E6%A1%88%E4%BE%8B%20%E5%B0%8F%E7%90%83%E6%8B%96%E5%8A%A8%EF%BC%8C%E8%AE%B0%E5%BD%95%E8%BD%A8%E8%BF%B9%EF%BC%8C%E5%B9%B6%E5%8E%9F%E8%B7%AF%E8%BF%94%E5%9B%9E/</url>
    
    <content type="html"><![CDATA[<h2 id="附上代码："><a href="#附上代码：" class="headerlink" title="附上代码："></a>附上代码：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">            <span class="hljs-selector-class">.box</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">                <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">                <span class="hljs-attribute">position</span>: absolute;</span><br><span class="css">                <span class="hljs-attribute">background</span>: lightcoral;</span><br><span class="css">                <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;</span><br><span class="css">            &#125;</span><br><span class="css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">var</span> arrX = [];<span class="hljs-comment">//新建数组，记录小球的x轴路径</span></span><br><span class="javascript">            <span class="hljs-keyword">var</span> arrY = [];<span class="hljs-comment">//新建数组，记录小球的y轴路径</span></span><br><span class="javascript">            <span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>;<span class="hljs-comment">//小球移动时数组的第i项存进数组</span></span><br><span class="javascript">            <span class="hljs-keyword">var</span> stop;<span class="hljs-comment">//小球的运动</span></span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Ball</span>(<span class="hljs-params"></span>) </span>&#123;&#125;<span class="hljs-comment">//新建小球类</span></span><br><span class="javascript">            Ball.prototype = &#123;</span><br><span class="javascript">                <span class="hljs-attr">ball</span>:<span class="hljs-literal">null</span>,<span class="hljs-comment">//新建小球</span></span><br><span class="javascript">                <span class="hljs-attr">createBall</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<span class="hljs-comment">//创建小球，添加到body中</span></span><br><span class="javascript">                    <span class="hljs-built_in">this</span>.ball = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>);</span><br><span class="javascript">                    <span class="hljs-built_in">document</span>.body.appendChild(<span class="hljs-built_in">this</span>.ball);</span><br><span class="javascript">                    <span class="hljs-built_in">this</span>.ball.className = <span class="hljs-string">&quot;box&quot;</span>;</span><br><span class="javascript">                    <span class="hljs-built_in">this</span>.ball.self = <span class="hljs-built_in">this</span>;<span class="hljs-comment">//引入小球的属性self指向Ball对象（this）</span></span><br><span class="javascript">                    <span class="hljs-built_in">this</span>.ball.addEventListener(<span class="hljs-string">&quot;mousedown&quot;</span>, <span class="hljs-built_in">this</span>.mouseHandler);<span class="hljs-comment">//添加点击事件</span></span><br><span class="javascript">                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.ball;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">mouseHandler</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&quot;mousedown&quot;</span>) &#123;<span class="hljs-comment">//当鼠标点击时添加移动事件给document，添加鼠标松开事件给小球，并且使用回调，每次执行一个函数，对e.type进行判断</span></span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.addEventListener(<span class="hljs-string">&quot;mouseup&quot;</span>, <span class="hljs-built_in">this</span>.self.mouseHandler);</span><br><span class="javascript">                        <span class="hljs-built_in">document</span>.ball = <span class="hljs-built_in">this</span>;<span class="hljs-comment">//引入对象ball给document</span></span><br><span class="javascript">                        <span class="hljs-built_in">document</span>.boxObj = &#123;<span class="hljs-comment">//给document添加对象属性鼠标相对小球位置</span></span><br><span class="javascript">                            <span class="hljs-attr">x</span>: e.offsetX,</span><br><span class="javascript">                            <span class="hljs-attr">y</span>: e.offsetY</span><br><span class="javascript">                        &#125;;</span><br><span class="javascript">                        <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>, <span class="hljs-built_in">this</span>.self.mouseHandler);</span><br><span class="javascript">                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&quot;mousemove&quot;</span>) &#123;<span class="hljs-comment">//鼠标移动时让小球位置等于鼠标在当前窗口的位置减去鼠标相对小球位置</span></span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.ball.style.left = e.x - <span class="hljs-built_in">this</span>.boxObj.x + <span class="hljs-string">&quot;px&quot;</span>;</span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.ball.style.top = e.y - <span class="hljs-built_in">this</span>.boxObj.y + <span class="hljs-string">&quot;px&quot;</span>;</span><br><span class="javascript">                        arrX.push(<span class="hljs-built_in">this</span>.ball.style.left);<span class="hljs-comment">//小球每次移动将位置存入数组中</span></span><br><span class="javascript">                        arrY.push(<span class="hljs-built_in">this</span>.ball.style.top);</span><br><span class="javascript">                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e.type === <span class="hljs-string">&quot;mouseup&quot;</span>) &#123;<span class="hljs-comment">//当鼠标松开时，解除监听事件并且执行自动返回函数</span></span><br><span class="javascript">                        <span class="hljs-built_in">this</span>.removeEventListener(<span class="hljs-string">&quot;mouseHandler&quot;</span>, <span class="hljs-built_in">this</span>.self.mouseHandler);</span><br><span class="javascript">                        <span class="hljs-built_in">document</span>.removeEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>, <span class="hljs-built_in">this</span>.self.mouseHandler);</span><br><span class="javascript">                        <span class="hljs-built_in">document</span>.self = <span class="hljs-built_in">this</span>;</span><br><span class="javascript">                        i = arrX.length;</span><br><span class="javascript">                        stop = <span class="hljs-built_in">setInterval</span>(<span class="hljs-built_in">this</span>.self.autoMove, <span class="hljs-number">16</span>);</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;,</span><br><span class="javascript">                <span class="hljs-attr">autoMove</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<span class="hljs-comment">//返回函数，当小球运动到初始状态时，取消Interval函数</span></span><br><span class="javascript">                    <span class="hljs-built_in">document</span>.self.style.left = arrX[i];</span><br><span class="javascript">                    <span class="hljs-built_in">document</span>.self.style.top = arrY[i];</span><br><span class="javascript">                    <span class="hljs-keyword">if</span> (i &lt;= <span class="hljs-number">0</span>) &#123;</span><br><span class="javascript">                        arrX.length = <span class="hljs-number">0</span>;</span><br><span class="javascript">                        arrY.length = <span class="hljs-number">0</span>;</span><br><span class="javascript">                        <span class="hljs-built_in">clearInterval</span>(stop);</span><br><span class="javascript">                        <span class="hljs-keyword">return</span>;</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                    i--;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;;</span><br><span class="javascript">            <span class="hljs-comment">//实例化小球，并且执行小球方法</span></span><br><span class="javascript">            <span class="hljs-keyword">var</span> ball = <span class="hljs-keyword">new</span> Ball();</span><br><span class="javascript">            ball.createBall();</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node(十)之Mongoose配合Node路由实现邮箱注册登录（Post版）</title>
    <link href="/2018/12/02/Node(%E5%8D%81)%E4%B9%8BMongoose%E9%85%8D%E5%90%88Node%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0%E9%82%AE%E7%AE%B1%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%EF%BC%88Post%E7%89%88%EF%BC%89/"/>
    <url>/2018/12/02/Node(%E5%8D%81)%E4%B9%8BMongoose%E9%85%8D%E5%90%88Node%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0%E9%82%AE%E7%AE%B1%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%EF%BC%88Post%E7%89%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="首先新建一个HTML：（引入jq）"><a href="#首先新建一个HTML：（引入jq）" class="headerlink" title="首先新建一个HTML：（引入jq）"></a>首先新建一个HTML：（引入jq）</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">      * &#123;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">        <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">3</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: none;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">input</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span> auto;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">button</span><span class="hljs-selector-pseudo">:not</span>(<span class="hljs-selector-id">#email</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">70px</span>;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightcoral;</span><br><span class="css">        <span class="hljs-attribute">border</span>: none;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-id">#email</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightblue;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="css">        <span class="hljs-attribute">list-style</span>: none;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">float</span>: left;</span><br><span class="css">        <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightgreen;</span><br><span class="css">        <span class="hljs-attribute">cursor</span>: pointer;</span><br><span class="css">      &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;regChange&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loginChange&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;reg&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;邮箱&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;user&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;psd&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;验证码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sendmail&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;email&quot;</span>&gt;</span>发送验证码<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;login&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;用户名&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loguser&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;logpsd&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;logbtn&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">      <span class="hljs-comment">//增加监听事件</span></span><br><span class="javascript">      btn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);</span><br><span class="javascript">      logbtn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);</span><br><span class="javascript">      email.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, sendHandler);</span><br><span class="javascript">      regChange.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, changeHandler);</span><br><span class="javascript">      loginChange.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, changeHandler);</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.textContent === <span class="hljs-string">&quot;注册&quot;</span>) &#123;</span><br><span class="javascript">          <span class="hljs-comment">//若为空时跳出</span></span><br><span class="javascript">          <span class="hljs-keyword">if</span> (!user.value || !psd.value || !sendmail.value) &#123;</span><br><span class="javascript">            alert(<span class="hljs-string">&quot;不能为空&quot;</span>);</span><br><span class="javascript">            <span class="hljs-keyword">return</span>;</span><br><span class="javascript">          &#125;</span><br><span class="javascript">          <span class="hljs-comment">//点击注册时将邮箱号，密码，验证码传送至后台</span></span><br><span class="javascript">          $.post(<span class="hljs-string">&quot;http://localhost:1024/main/reg&quot;</span>, &#123;</span><br><span class="javascript">              <span class="hljs-attr">email</span>: user.value,</span><br><span class="javascript">              <span class="hljs-attr">password</span>: psd.value,</span><br><span class="javascript">              <span class="hljs-attr">mailnum</span>: sendmail.value</span><br><span class="javascript">            &#125;,</span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;</span><br><span class="javascript">              <span class="hljs-comment">//后台返回的对象，若hasUser为真，说明已有用户名，否则注册成功</span></span><br><span class="javascript">              <span class="hljs-keyword">if</span> (res.hasUser) &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;注册失败&quot;</span>);</span><br><span class="javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="javascript">              &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;注册成功~&quot;</span>);</span><br><span class="javascript">              &#125;</span><br><span class="javascript">              <span class="hljs-comment">//成功后隐藏注册，显示登录</span></span><br><span class="javascript">              reg.style.display = <span class="hljs-string">&quot;none&quot;</span>;</span><br><span class="javascript">              login.style.display = <span class="hljs-string">&quot;block&quot;</span>;</span><br><span class="javascript">            &#125;</span><br><span class="javascript"></span><br><span class="javascript">          );</span><br><span class="javascript">        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.textContent === <span class="hljs-string">&quot;登录&quot;</span>) &#123;</span><br><span class="javascript">          <span class="hljs-comment">// 同注册，不能为空</span></span><br><span class="javascript">          <span class="hljs-keyword">if</span> (!loguser.value || !logpsd.value) &#123;</span><br><span class="javascript">            alert(<span class="hljs-string">&quot;不能为空&quot;</span>);</span><br><span class="javascript">            <span class="hljs-keyword">return</span>;</span><br><span class="javascript">          &#125;</span><br><span class="javascript">          <span class="hljs-comment">//点击登录时将邮箱号，密码传送至后台</span></span><br><span class="javascript">          $.post(<span class="hljs-string">&quot;http://localhost:1024/main/login&quot;</span>, &#123;</span><br><span class="javascript">              <span class="hljs-attr">email</span>: loguser.value,</span><br><span class="javascript">              <span class="hljs-attr">password</span>: logpsd.value</span><br><span class="javascript">            &#125;,</span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;</span><br><span class="javascript">              <span class="hljs-comment">//后台返回的对象，若isUser为真，说明正确，并跳转至欢迎页，否则失败</span></span><br><span class="javascript">              <span class="hljs-keyword">if</span> (res.isUser) &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;登录成功&quot;</span>);</span><br><span class="javascript">                location.href = <span class="hljs-string">&quot;./welcome.html&quot;</span>;</span><br><span class="javascript">              &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;用户名或密码不正确&quot;</span>);</span><br><span class="javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="javascript">              &#125;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">          );</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;</span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendHandler</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-comment">//   点击获取验证码后将验证码发送到后端进行比对</span></span><br><span class="javascript">        $.post(<span class="hljs-string">&quot;http://localhost:1024/main/sendmail&quot;</span>, &#123;</span><br><span class="javascript">          <span class="hljs-attr">email</span>: user.value</span><br><span class="javascript">        &#125;);</span><br><span class="javascript">      &#125;</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeHandler</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-comment">//   点击上方的注册登录切换</span></span><br><span class="javascript">        <span class="hljs-keyword">if</span> (e.target.textContent === <span class="hljs-string">&quot;注册&quot;</span>) &#123;</span><br><span class="javascript">          reg.style.display = <span class="hljs-string">&quot;block&quot;</span>;</span><br><span class="javascript">          login.style.display = <span class="hljs-string">&quot;none&quot;</span>;</span><br><span class="javascript">        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">          reg.style.display = <span class="hljs-string">&quot;none&quot;</span>;</span><br><span class="javascript">          login.style.display = <span class="hljs-string">&quot;block&quot;</span>;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="新建set文件夹，在文件夹中新建几个js文件："><a href="#新建set文件夹，在文件夹中新建几个js文件：" class="headerlink" title="新建set文件夹，在文件夹中新建几个js文件："></a>新建set文件夹，在文件夹中新建几个js文件：</h2><h2 id="main-js-连接mongoose数据库"><a href="#main-js-连接mongoose数据库" class="headerlink" title="main.js(连接mongoose数据库)"></a>main.js(连接mongoose数据库)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mongoose = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;mongoose&#x27;</span>);<span class="hljs-comment">//引入mongoose</span><br>mongoose.connect(<span class="hljs-string">&#x27;mongodb://localhost:27017/UserList&#x27;</span>, &#123;<br>    <span class="hljs-attr">useNewUrlParser</span>: <span class="hljs-literal">true</span><br>&#125;);<span class="hljs-comment">//连接数据库</span><br><span class="hljs-keyword">let</span> db = mongoose.connection;<br>db.on(<span class="hljs-string">&quot;error&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;错误：&quot;</span> + error);<br>&#125;);<br><br>db.on(<span class="hljs-string">&quot;open&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;连接成功&quot;</span>);<br>&#125;);<br><br>db.on(<span class="hljs-string">&#x27;disconnected&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;连接断开&#x27;</span>);<br>&#125;);<br><span class="hljs-built_in">module</span>.exports = mongoose;<span class="hljs-comment">//抛出mongose对象</span><br></code></pre></td></tr></table></figure><h2 id="mod-js（实例化Schema，新建数据库）"><a href="#mod-js（实例化Schema，新建数据库）" class="headerlink" title="mod.js（实例化Schema，新建数据库）"></a>mod.js（实例化Schema，新建数据库）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mongoose = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./main&#x27;</span>);<span class="hljs-comment">//引入main模块</span><br><span class="hljs-keyword">const</span> Schema = mongoose.Schema;<span class="hljs-comment">//新建schema对象</span><br><span class="hljs-keyword">let</span> userSchema = <span class="hljs-keyword">new</span> Schema(&#123;<br>    <span class="hljs-attr">email</span>: &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>        <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">password</span>: &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<br>        <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span><br>    &#125;<br>&#125;);<span class="hljs-comment">//实例化对象</span><br><span class="hljs-keyword">let</span> userModel = mongoose.model(<span class="hljs-string">&#x27;allUser&#x27;</span>, userSchema);<span class="hljs-comment">//新建数据库</span><br><span class="hljs-built_in">module</span>.exports = userModel;<span class="hljs-comment">//抛出模块</span><br></code></pre></td></tr></table></figure><h2 id="send-js（邮件发送模块）"><a href="#send-js（邮件发送模块）" class="headerlink" title="send.js（邮件发送模块）"></a>send.js（邮件发送模块）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> nodemailer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;nodemailer&quot;</span>);<br><span class="hljs-keyword">let</span> obj = &#123;<br>  <span class="hljs-attr">transporter</span>: nodemailer.createTransport(&#123;<br>    <span class="hljs-attr">service</span>: <span class="hljs-string">&quot;qq&quot;</span>, <span class="hljs-comment">// 运营商  qq邮箱 网易//</span><br>    <span class="hljs-attr">port</span>: <span class="hljs-number">465</span>,<br>    <span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">auth</span>: &#123;<br>      <span class="hljs-attr">user</span>: <span class="hljs-string">&quot;*******@qq.com&quot;</span>, <span class="hljs-comment">//发送方的邮箱</span><br>      <span class="hljs-attr">pass</span>: <span class="hljs-string">&quot;********&quot;</span> <span class="hljs-comment">// pop3 授权码</span><br>    &#125;<br>  &#125;),<br>  <span class="hljs-attr">send</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">mail, content,callback</span>) </span>&#123;<br>    mailOptions = &#123;<br>      <span class="hljs-attr">from</span>: <span class="hljs-string">&#x27;&quot;Hello World~&quot; &lt;******@qq.com&gt;&#x27;</span>,<br>      <span class="hljs-attr">to</span>: mail,<br>      <span class="hljs-attr">subject</span>: content,<br>      <span class="hljs-attr">text</span>: content,<br>      <span class="hljs-attr">html</span>: <span class="hljs-string">&quot;&lt;h1&gt;&quot;</span> + content + <span class="hljs-string">&quot;&lt;/h1&gt;&quot;</span><br>    &#125;;<br>    <span class="hljs-built_in">this</span>.transporter.sendMail(mailOptions, <span class="hljs-function">(<span class="hljs-params">error, info</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (error) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">console</span>.log(error);<br>      &#125;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Message sent: %s&quot;</span>, info.messageId);<br>      callback();<br>    &#125;);<br>  &#125;<br>&#125;;<br><span class="hljs-built_in">module</span>.exports = obj;<br></code></pre></td></tr></table></figure><h2 id="reg-js（创建注册模块）"><a href="#reg-js（创建注册模块）" class="headerlink" title="reg.js（创建注册模块）"></a>reg.js（创建注册模块）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> router = express.Router(); <span class="hljs-comment">//新建路由</span><br><span class="hljs-keyword">const</span> Model = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./mod&#x27;</span>); <span class="hljs-comment">//传入数据库对象</span><br><span class="hljs-keyword">const</span> sendMail = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./send&#x27;</span>); <span class="hljs-comment">//传入邮件发送的模块对象</span><br><span class="hljs-keyword">var</span> count = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">//新建一个空字符存放验证码，可供全局调用</span><br><span class="hljs-comment">//用post方法传输数据</span><br>router.post(<span class="hljs-string">&#x27;/reg&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">//保存前端传来的数据</span><br>    <span class="hljs-keyword">var</span> mail = req.body.email;<br>    <span class="hljs-keyword">var</span> psd = req.body.password;<br>    <span class="hljs-keyword">var</span> mailnum = req.body.mailnum;<br>    <span class="hljs-comment">//使用Model对象连接数据库</span><br>    Model.find(&#123;<span class="hljs-comment">// 查询邮箱</span><br>        <span class="hljs-string">&#x27;email&#x27;</span>: mail<br>    &#125;).then(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">//若返回的邮箱找到或验证码不对，则抛错</span><br>        <span class="hljs-keyword">if</span> (data.length &gt;= <span class="hljs-number">1</span> || mailnum !== count) &#123;<br>            res.send(&#123;<br>                <span class="hljs-attr">hasUser</span>: <span class="hljs-literal">true</span><br>            &#125;);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        res.send(&#123;<br>            <span class="hljs-attr">hasUser</span>: <span class="hljs-literal">false</span><br>        &#125;)<br>        Model.insertMany(&#123;<span class="hljs-comment">//反之将邮箱插入到数据库</span><br>            <span class="hljs-string">&#x27;email&#x27;</span>: mail,<br>            <span class="hljs-string">&#x27;password&#x27;</span>: psd<br>        &#125;).then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;<br>            <span class="hljs-built_in">console</span>.log(result);<br>        &#125;)<br>    &#125;).catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(err);<br>    &#125;);<br>&#125;);<br><br><span class="hljs-comment">//邮箱验证接口</span><br>router.post(<span class="hljs-string">&quot;/sendmail&quot;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    count = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">//初始化验证码容器</span><br>    <span class="hljs-keyword">var</span> mail = req.body.email; <span class="hljs-comment">//获取前端传来的邮箱号</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        count += <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span>); <span class="hljs-comment">//生成4个随机数</span><br>    &#125;<br>    <span class="hljs-keyword">var</span> callback = <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;发送成功&quot;</span>);<br>    &#125;;<br>    sendMail.send(mail, count, callback); <span class="hljs-comment">//调用邮件发送模块</span><br>    res.send(<span class="hljs-string">&#x27;send&#x27;</span>);<br>&#125;);<br><br><span class="hljs-built_in">module</span>.exports = router;<br></code></pre></td></tr></table></figure><h2 id="login-js（登录模块）"><a href="#login-js（登录模块）" class="headerlink" title="login.js（登录模块）"></a>login.js（登录模块）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> router = express.Router();<span class="hljs-comment">//新建路由</span><br><span class="hljs-keyword">const</span> Model = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./mod&#x27;</span>);<span class="hljs-comment">//获取数据库对象</span><br><br>router.post(<span class="hljs-string">&#x27;/login&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<span class="hljs-comment">//路由地址</span><br>    <span class="hljs-comment">//保存前端传来的数据</span><br>    <span class="hljs-keyword">var</span> mail = req.body.email;<br>    <span class="hljs-keyword">var</span> psd = req.body.password;<br>    Model.find(&#123;<br>        <span class="hljs-comment">// 查询是否有该用户，若用户邮箱和密码符合，则抛出正确，否则抛出错误对象</span><br>        <span class="hljs-string">&#x27;email&#x27;</span>: mail,<br>        <span class="hljs-string">&#x27;password&#x27;</span>: psd<br>    &#125;).then(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (data.length &gt;= <span class="hljs-number">1</span>) &#123;<br>            res.send(&#123;<br>                <span class="hljs-attr">isUser</span>: <span class="hljs-literal">true</span><br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            res.send(&#123;<br>                <span class="hljs-attr">isUser</span>: <span class="hljs-literal">false</span><br>            &#125;);<br>        &#125;<br>    &#125;).catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(err);<br>    &#125;);<br>&#125;);<br><span class="hljs-built_in">module</span>.exports = router;<br></code></pre></td></tr></table></figure><h2 id="然后在set文件夹外面新建一个服务（server-js），将所有的模块拼接："><a href="#然后在set文件夹外面新建一个服务（server-js），将所有的模块拼接：" class="headerlink" title="然后在set文件夹外面新建一个服务（server.js），将所有的模块拼接："></a>然后在set文件夹外面新建一个服务（server.js），将所有的模块拼接：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> cors = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;cors&quot;</span>); <span class="hljs-comment">//引入cors模块（解决跨域问题）</span><br><span class="hljs-keyword">var</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;body-parser&#x27;</span>);<br><br>app.use(cors());<br><span class="hljs-comment">// 下面的类似于http请求的头文件(另一篇文章有写到http请求，也是注册登录)</span><br>app.all(<span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res, next</span>) </span>&#123;<br>    <span class="hljs-comment">//设置允许跨域的域名，*代表允许任意域名跨域</span><br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>);<br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="hljs-string">&quot;content-type&quot;</span>); <span class="hljs-comment">//允许的header类型</span><br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="hljs-string">&quot;DELETE,PUT,POST,GET,OPTIONS&quot;</span>); <span class="hljs-comment">//跨域允许的请求方式</span><br>    next(); <span class="hljs-comment">//是否继续向下执行</span><br>&#125;);<br><span class="hljs-comment">//解决post传输的数据格式问题</span><br>app.use(bodyParser.urlencoded(&#123;<br>    <span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span><br>&#125;))<br>app.use(bodyParser.json())<br><span class="hljs-comment">// 路由选择导入注册</span><br><span class="hljs-keyword">const</span> reg = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../set/reg.js&#x27;</span>);<br>app.use(<span class="hljs-string">&#x27;/main&#x27;</span>, reg);<br><span class="hljs-comment">// 路由选择导入登录</span><br><span class="hljs-keyword">const</span> login = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../set/login.js&#x27;</span>);<br>app.use(<span class="hljs-string">&#x27;/main&#x27;</span>, login);<br><span class="hljs-comment">// 开启监听</span><br>app.listen(<span class="hljs-number">1024</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Server Start~&#x27;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="最后运行server-js实现注册登录"><a href="#最后运行server-js实现注册登录" class="headerlink" title="最后运行server.js实现注册登录"></a>最后运行server.js实现注册登录</h3><h2 id="注意：案例需要用到monogoDB，Jq，mongoose模块，express模块，nodemailer模块，cors模块，"><a href="#注意：案例需要用到monogoDB，Jq，mongoose模块，express模块，nodemailer模块，cors模块，" class="headerlink" title="注意：案例需要用到monogoDB，Jq，mongoose模块，express模块，nodemailer模块，cors模块，"></a>注意：案例需要用到monogoDB，Jq，mongoose模块，express模块，nodemailer模块，cors模块，</h2><p>body-parser模块</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node(九)之Node配合MongoDB实现简单的注册登录</title>
    <link href="/2018/12/01/Node(%E4%B9%9D)%E4%B9%8BNode%E9%85%8D%E5%90%88MongoDB%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95/"/>
    <url>/2018/12/01/Node(%E4%B9%9D)%E4%B9%8BNode%E9%85%8D%E5%90%88MongoDB%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>附上代码：（较之前的用txt实现的没有什么区别，只是后端用数据库实现了接口功能）</p><h2 id="Html："><a href="#Html：" class="headerlink" title="Html："></a>Html：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">      * &#123;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">        <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: none;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">input</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span> auto;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">button</span><span class="hljs-selector-pseudo">:not</span>(<span class="hljs-selector-id">#email</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">70px</span>;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightcoral;</span><br><span class="css">        <span class="hljs-attribute">border</span>: none;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-id">#email</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightblue;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="css">        <span class="hljs-attribute">list-style</span>: none;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">float</span>: left;</span><br><span class="css">        <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightgreen;</span><br><span class="css">        <span class="hljs-attribute">cursor</span>: pointer;</span><br><span class="css">      &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;regChange&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loginChange&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;reg&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;邮箱&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;user&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;psd&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;验证码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sendmail&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;email&quot;</span>&gt;</span>发送验证码<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;login&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;用户名&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loguser&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;logpsd&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;logbtn&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">      <span class="hljs-comment">//增加监听事件</span></span><br><span class="javascript">      btn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);</span><br><span class="javascript">      logbtn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);</span><br><span class="javascript">      email.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, sendHandler);</span><br><span class="javascript">      regChange.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, changeHandler);</span><br><span class="javascript">      loginChange.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, changeHandler);</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.textContent === <span class="hljs-string">&quot;注册&quot;</span>) &#123;</span><br><span class="javascript">          <span class="hljs-comment">//若为空时跳出</span></span><br><span class="javascript">          <span class="hljs-keyword">if</span> (!user.value || !psd.value || !sendmail.value) &#123;</span><br><span class="javascript">            alert(<span class="hljs-string">&quot;Can&#x27;t be empty&quot;</span>);</span><br><span class="javascript">            <span class="hljs-keyword">return</span>;</span><br><span class="javascript">          &#125;</span><br><span class="javascript">          <span class="hljs-comment">//点击注册时将邮箱号，密码，验证码传送至后台</span></span><br><span class="javascript">          $.get(</span><br><span class="javascript">            <span class="hljs-string">`http://localhost:1024/index/reg?user=<span class="hljs-subst">$&#123;user.value&#125;</span>&amp;psd=<span class="hljs-subst">$&#123;</span></span></span><br><span class="hljs-subst"><span class="hljs-string"><span class="javascript">              psd.value</span></span></span><br><span class="hljs-subst"><span class="hljs-string"><span class="javascript">            &#125;</span>&amp;mail=<span class="hljs-subst">$&#123;sendmail.value&#125;</span>`</span>,</span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;</span><br><span class="javascript">              <span class="hljs-comment">//后台返回的对象，若hasUser为真，说明已有用户名，否则注册成功</span></span><br><span class="javascript">              <span class="hljs-keyword">if</span> (res.hasUser) &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;注册失败&quot;</span>);</span><br><span class="javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="javascript">              &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;注册成功~&quot;</span>);</span><br><span class="javascript">              &#125;</span><br><span class="javascript">              <span class="hljs-comment">//成功后隐藏注册，显示登录</span></span><br><span class="javascript">              reg.style.display = <span class="hljs-string">&quot;none&quot;</span>;</span><br><span class="javascript">              login.style.display = <span class="hljs-string">&quot;block&quot;</span>;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">          );</span><br><span class="javascript">        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.textContent === <span class="hljs-string">&quot;登录&quot;</span>) &#123;</span><br><span class="javascript">          <span class="hljs-comment">// 同注册，不能为空</span></span><br><span class="javascript">          <span class="hljs-keyword">if</span> (!loguser.value || !logpsd.value) &#123;</span><br><span class="javascript">            alert(<span class="hljs-string">&quot;Can&#x27;t be empty&quot;</span>);</span><br><span class="javascript">            <span class="hljs-keyword">return</span>;</span><br><span class="javascript">          &#125;</span><br><span class="javascript">          <span class="hljs-comment">//点击注册时将邮箱号，密码传送至后台</span></span><br><span class="javascript">          $.get(</span><br><span class="javascript">            <span class="hljs-string">`http://localhost:1024/index/login?user=<span class="hljs-subst">$&#123;loguser.value&#125;</span>&amp;psd=<span class="hljs-subst">$&#123;</span></span></span><br><span class="hljs-subst"><span class="hljs-string"><span class="javascript">              logpsd.value</span></span></span><br><span class="hljs-subst"><span class="hljs-string"><span class="javascript">            &#125;</span>`</span>,</span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;</span><br><span class="javascript">              <span class="hljs-comment">//后台返回的对象，若isUser为真，说明正确，并跳转至欢迎页，否则失败</span></span><br><span class="javascript">              <span class="hljs-keyword">if</span> (res.isUser) &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;登录成功&quot;</span>);</span><br><span class="javascript">                location.href = <span class="hljs-string">&quot;./welcome.html&quot;</span>;</span><br><span class="javascript">              &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;用户名或密码不正确&quot;</span>);</span><br><span class="javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="javascript">              &#125;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">          );</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendHandler</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-comment">//   点击获取验证码后将验证码发送到后端进行比对</span></span><br><span class="javascript">        $.get(<span class="hljs-string">`http://localhost:1024/index/sendmail?<span class="hljs-subst">$&#123;user.value&#125;</span>`</span>);</span><br><span class="javascript">      &#125;</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeHandler</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-comment">//   点击上方的注册登录切换</span></span><br><span class="javascript">        <span class="hljs-keyword">if</span> (e.target.textContent === <span class="hljs-string">&quot;注册&quot;</span>) &#123;</span><br><span class="javascript">          reg.style.display = <span class="hljs-string">&quot;block&quot;</span>;</span><br><span class="javascript">          login.style.display = <span class="hljs-string">&quot;none&quot;</span>;</span><br><span class="javascript">        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">          reg.style.display = <span class="hljs-string">&quot;none&quot;</span>;</span><br><span class="javascript">          login.style.display = <span class="hljs-string">&quot;block&quot;</span>;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS部分：同样要用到express框架，cors，nodemailer，并且不需要File-System，Path模块"><a href="#JS部分：同样要用到express框架，cors，nodemailer，并且不需要File-System，Path模块" class="headerlink" title="JS部分：同样要用到express框架，cors，nodemailer，并且不需要File System，Path模块"></a>JS部分：同样要用到express框架，cors，nodemailer，并且不需要File System，Path模块</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> MongoClient = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mongodb&quot;</span>).MongoClient;<span class="hljs-comment">//mongoDb模块引入</span><br><span class="hljs-keyword">var</span> mongoDB = <span class="hljs-string">&quot;mongodb://localhost:27017/&quot;</span>;<span class="hljs-comment">//初始化地址</span><br><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>); <span class="hljs-comment">//引入express框架（需要先下载，官网有教程）</span><br><span class="hljs-keyword">const</span> url = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;url&quot;</span>);<br><span class="hljs-keyword">const</span> cors = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;cors&quot;</span>); <span class="hljs-comment">//引入cors模块（解决跨域问题）</span><br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> sendMail = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./send&quot;</span>); <span class="hljs-comment">//这个模块是发送邮件模块（在我第三篇node文章里有）</span><br><br>app.use(cors());<br><span class="hljs-comment">// 下面的类似于http请求的头文件(另一篇文章有写到http请求，也是注册登录)</span><br>app.all(<span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res, next</span>) </span>&#123;<br>  <span class="hljs-comment">//设置允许跨域的域名，*代表允许任意域名跨域</span><br>  res.header(<span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>);<br>  res.header(<span class="hljs-string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="hljs-string">&quot;content-type&quot;</span>); <span class="hljs-comment">//允许的header类型</span><br>  res.header(<span class="hljs-string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="hljs-string">&quot;DELETE,PUT,POST,GET,OPTIONS&quot;</span>); <span class="hljs-comment">//跨域允许的请求方式</span><br>  next(); <span class="hljs-comment">//是否继续向下执行</span><br>&#125;);<br><br><span class="hljs-comment">//注册接口</span><br><span class="hljs-keyword">var</span> count = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">//新建一个空字符存放验证码，可供全局调用</span><br>app.get(<span class="hljs-string">&quot;/index/reg&quot;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">let</span> search = url<br>    .parse(req.url)<br>    .query.split(<span class="hljs-string">&quot;&amp;&quot;</span>)[<span class="hljs-number">0</span>]<br>    .split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>]; <span class="hljs-comment">//保存前端传来的数据</span><br>  <span class="hljs-keyword">let</span> query = url.parse(req.url).query.split(<span class="hljs-string">&quot;&amp;&quot;</span>);<br>  MongoClient.connect(<span class="hljs-comment">//连接数据库</span><br>    mongoDB,<br>    &#123;<br>      <span class="hljs-attr">useNewUrlParser</span>: <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, db</span>) </span>&#123;<br>      <span class="hljs-keyword">if</span> (err) &#123;<br>        <span class="hljs-keyword">throw</span> err;<br>      &#125;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;连接成功！&quot;</span>);<br>      <span class="hljs-keyword">var</span> dball = db.db(<span class="hljs-string">&quot;UserList&quot;</span>);<br>      <span class="hljs-comment">// 查询邮箱</span><br>      dball<br>        .collection(<span class="hljs-string">&quot;allUser&quot;</span>)<br>        .find(&#123;<br>          <span class="hljs-attr">email</span>: search<br>        &#125;)<br>        .toArray(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, result</span>) </span>&#123;<br>          <span class="hljs-keyword">if</span> (err) &#123;<br>            <span class="hljs-built_in">console</span>.log(err);<br>            <span class="hljs-keyword">return</span>;<br>          &#125;<br><br>          <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-comment">//应用promise执行，若找到该用户，返回正确，反之返回错误</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<span class="hljs-comment">//若用户邮箱不存在并且验证码正确，则抛出正确，否则抛出错误对象</span><br>              <span class="hljs-keyword">if</span> (!result.length &amp;&amp; query[<span class="hljs-number">2</span>].split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>] === count) &#123;<br>                resolve(&#123;<br>                  <span class="hljs-attr">hasUser</span>: <span class="hljs-literal">false</span><br>                &#125;);<br>                <span class="hljs-comment">//找到后将数据存储至数据库</span><br>                dball.collection(<span class="hljs-string">&quot;allUser&quot;</span>).insert(<br>                  [<br>                    &#123;<br>                      <span class="hljs-attr">email</span>: query[<span class="hljs-number">0</span>].split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>],<br>                      <span class="hljs-attr">password</span>: query[<span class="hljs-number">1</span>].split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>]<br>                    &#125;<br>                  ],<br>                  <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, result</span>) </span>&#123;<br>                    <span class="hljs-keyword">if</span> (err) &#123;<br>                      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Error:&quot;</span> + err);<br>                      <span class="hljs-keyword">return</span>;<br>                    &#125;<br>                  &#125;<br>                );<br>              &#125; <span class="hljs-keyword">else</span> &#123;<span class="hljs-comment">//反之抛出错误对象至前端</span><br>                reject(&#123;<br>                  <span class="hljs-attr">hasUser</span>: <span class="hljs-literal">true</span><br>                &#125;);<br>              &#125;<br>            &#125;);<br>          &#125;<br>          test()<br>            .then(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;<br>              <span class="hljs-built_in">console</span>.log(data);<br>              res.send(data);<br>            &#125;)<br>            .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>              <span class="hljs-built_in">console</span>.log(err);<br>              res.send(err);<br>            &#125;);<br>        &#125;);<br>    &#125;<br>  );<br>&#125;);<br><br><span class="hljs-comment">//登录接口</span><br>app.get(<span class="hljs-string">&quot;/index/login&quot;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>  <span class="hljs-comment">//保存前端传来的数据</span><br>  <span class="hljs-keyword">let</span> query = url.parse(req.url).query.split(<span class="hljs-string">&quot;&amp;&quot;</span>);<br>  MongoClient.connect(<br>    mongoDB,<br>    &#123;<br>      <span class="hljs-attr">useNewUrlParser</span>: <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, db</span>) </span>&#123;<br>      <span class="hljs-keyword">if</span> (err) &#123;<br>        <span class="hljs-keyword">throw</span> err;<br>      &#125;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;连接成功！&quot;</span>);<br>      <span class="hljs-keyword">var</span> dball = db.db(<span class="hljs-string">&quot;UserList&quot;</span>);<br>      <span class="hljs-comment">// 查询是否有该用户</span><br>      dball<br>        .collection(<span class="hljs-string">&quot;allUser&quot;</span>)<br>        .find(&#123;<br>          <span class="hljs-attr">email</span>: query[<span class="hljs-number">0</span>].split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>]<br>        &#125;)<br>        .toArray(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, result</span>) </span>&#123;<br>          <span class="hljs-keyword">if</span> (err) &#123;<br>            <span class="hljs-built_in">console</span>.log(err);<br>            <span class="hljs-keyword">return</span>;<br>          &#125;<br>          <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-comment">//若用户邮箱和密码符合，则抛出正确，否则抛出错误对象</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>              <span class="hljs-keyword">if</span> (<br>                result.length &amp;&amp;<br>                result[<span class="hljs-number">0</span>].password === query[<span class="hljs-number">1</span>].split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>]<br>              ) &#123;<br>                resolve(&#123;<br>                  <span class="hljs-attr">isUser</span>: <span class="hljs-literal">true</span><br>                &#125;);<br>              &#125; <span class="hljs-keyword">else</span> &#123;<br>                reject(&#123;<br>                  <span class="hljs-attr">isUser</span>: <span class="hljs-literal">false</span><br>                &#125;);<br>              &#125;<br>            &#125;);<br>          &#125;<br>          test()<br>            .then(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;<br>              <span class="hljs-built_in">console</span>.log(data);<br>              res.send(data);<br>            &#125;)<br>            .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>              <span class="hljs-built_in">console</span>.log(err);<br>              res.send(err);<br>            &#125;);<br>        &#125;);<br>    &#125;<br>  );<br>&#125;);<br><br><span class="hljs-comment">//邮箱验证接口</span><br>app.get(<span class="hljs-string">&quot;/index/sendmail&quot;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>  count = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">//初始化验证码容器</span><br>  <span class="hljs-keyword">let</span> Email = url.parse(req.url).query; <span class="hljs-comment">//获取前端传来的邮箱号</span><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>    count += <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span>); <span class="hljs-comment">//生成4个随机数</span><br>  &#125;<br>  sendMail.send(Email, count); <span class="hljs-comment">//调用邮件发送模块</span><br>  res.send(count);<br>&#125;);<br><span class="hljs-comment">//监听服务</span><br>app.listen(<span class="hljs-number">1024</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Server Start~&quot;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="邮箱的js文件（send-js）"><a href="#邮箱的js文件（send-js）" class="headerlink" title="邮箱的js文件（send.js）"></a>邮箱的js文件（send.js）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> nodemailer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;nodemailer&quot;</span>);<br><span class="hljs-keyword">let</span> obj = &#123;<br>  <span class="hljs-attr">transporter</span>: nodemailer.createTransport(&#123;<br>    <span class="hljs-attr">service</span>: <span class="hljs-string">&quot;qq&quot;</span>, <span class="hljs-comment">// 运营商  qq邮箱 网易//</span><br>    <span class="hljs-attr">port</span>: <span class="hljs-number">465</span>,<br>    <span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">auth</span>: &#123;<br>      <span class="hljs-attr">user</span>: <span class="hljs-string">&quot;*********@qq.com&quot;</span>, <span class="hljs-comment">//发送方的邮箱</span><br>      <span class="hljs-attr">pass</span>: <span class="hljs-string">&quot;*******&quot;</span> <span class="hljs-comment">// pop3 授权码</span><br>    &#125;<br>  &#125;),<br>  <span class="hljs-attr">send</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">mail, content</span>) </span>&#123;<br>    mailOptions = &#123;<br>      <span class="hljs-attr">from</span>: <span class="hljs-string">&#x27;&quot;Hello World~&quot; &lt;**********@qq.com&gt;&#x27;</span>,<br>      <span class="hljs-attr">to</span>: mail,<br>      <span class="hljs-attr">subject</span>: content,<br>      <span class="hljs-attr">text</span>: content,<br>      <span class="hljs-attr">html</span>: <span class="hljs-string">&quot;&lt;h1&gt;&quot;</span> + content + <span class="hljs-string">&quot;&lt;/h1&gt;&quot;</span><br>    &#125;;<br>    <span class="hljs-built_in">this</span>.transporter.sendMail(mailOptions, <span class="hljs-function">(<span class="hljs-params">error, info</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (error) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">console</span>.log(error);<br>      &#125;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Message sent: %s&quot;</span>, info.messageId);<br>    &#125;);<br>  &#125;<br>&#125;;<br><span class="hljs-built_in">module</span>.exports = obj;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node（八）之MongoDB简单应用</title>
    <link href="/2018/11/30/Node%EF%BC%88%E5%85%AB%EF%BC%89%E4%B9%8BMongoDB%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/"/>
    <url>/2018/11/30/Node%EF%BC%88%E5%85%AB%EF%BC%89%E4%B9%8BMongoDB%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="初始："><a href="#初始：" class="headerlink" title="初始："></a>初始：</h2><ol><li>下载mongodb的安装包，<a href="https://www.mongodb.com/download-center/community">https://www.mongodb.com/download-center/community</a></li><li>安装</li><li>安装完成后在data文件夹下新建一个db文件夹</li><li>加入环境变量：复制安装目录下bin文件夹的目录，右击我的电脑=&gt;属性（见下图）在环境变量中粘贴bin文件路径，用分号<br>隔开环境变量<img src="https://img-blog.csdnimg.cn/20181130194122427.jpg?x-oss-processimage/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVfX19fXw,size_16,color_FFFFFF,t_70"></li><li>打开控制台输入：mongod 查看是否安装成功</li><li>使用mongo命令连接至数据库</li></ol><h2 id="db操作："><a href="#db操作：" class="headerlink" title="db操作："></a>db操作：</h2><p>这里新建一个名字为User的数据库</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">use User------数据库名称（切换当前操作的数据库，若没有则是创建新数据库）<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">show dbs------显示所有数据库<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">db.User.insert(&#123;&quot;name&quot;:&quot;abc&quot;&#125;)-----插入name为&#x27;abc&#x27;的一项<br></code></pre></td></tr></table></figure><h2 id="collection：集合"><a href="#collection：集合" class="headerlink" title="collection：集合"></a>collection：集合</h2><p>db.createCollection(‘集合名’)； 创建集合</p><p>db.集合名.drop() 删除一个集合</p><p>showcollections 查看所有的集合</p><p>每个数据库都要有集合，不然创建的是临时数据</p><h2 id="document操作："><a href="#document操作：" class="headerlink" title="document操作："></a>document操作：</h2><p>插入文档：</p><p>db.col.insert({<br>“email” : “admin”,<br>“password” : “root”<br>})</p><p>查找文档：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">db.col.find(条件，不填则查找全部)<br></code></pre></td></tr></table></figure><p>更新文档：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">db.col.update(&#123;<br>  <span class="hljs-string">&quot;email&quot;</span> : <span class="hljs-string">&quot;admin&quot;</span><br>&#125;, &#123;<br>  <span class="hljs-attr">$set</span>: &#123;<br>    <span class="hljs-string">&quot;email&quot;</span> : <span class="hljs-string">&quot;admin1&quot;</span>,<br>     <span class="hljs-string">&quot;password&quot;</span> : <span class="hljs-string">&quot;root1&quot;</span><br>  &#125;<br>&#125;, &#123;<br>  <span class="hljs-attr">multi</span>: <span class="hljs-literal">true</span><br>&#125;)<br></code></pre></td></tr></table></figure><p>寻找所有email为admin的值，并且更新值email为admin1和password为root1，<code>multi</code>设置为true时可以更新多个文档</p><p>覆盖更新：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">db.col.save(&#123;<br>  <span class="hljs-string">&#x27;_id&#x27;</span>:<span class="hljs-number">3</span>,<br>  <span class="hljs-string">&#x27;email&#x27;</span>: <span class="hljs-string">&#x27;abc&#x27;</span><br>&#125;)<br></code></pre></td></tr></table></figure><p>根据传入的id，覆盖旧值</p><p>删除文档：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">db.col.remove(&#123;<br>  &#x27;_id&#x27;:3<br>&#125;)<br></code></pre></td></tr></table></figure><p>删除id为3的那一项</p><p>db.col.remove({})</p><p>将col全部删除</p><p>限制显示的条数：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">db.col.find().limit(2)   表示显示查找到的前两项<br></code></pre></td></tr></table></figure><p>跳过显示的数据：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">db.age.find().skip(2)   表示跳过查找到的前两项<br></code></pre></td></tr></table></figure><p>排序：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">db.col.find().sort(&#123;age:1&#125;)  根据age升序排列（-1是降序排列）<br></code></pre></td></tr></table></figure><h2 id="连接Node"><a href="#连接Node" class="headerlink" title="连接Node"></a>连接Node</h2><p>首先下载node插件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">npm install mongodb<br></code></pre></td></tr></table></figure><p>然后执行以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> MongoClient = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mongodb&quot;</span>).MongoClient;<span class="hljs-comment">//获取mongo模块</span><br><span class="hljs-keyword">var</span> mongoDB = <span class="hljs-string">&quot;mongodb://localhost:27017/&quot;</span>;<br><span class="hljs-comment">//新建数据库连接</span><br>MongoClient.connect(<br>    mongoDB,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, db</span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (err) &#123;<br>            <span class="hljs-keyword">throw</span> err;<br>        &#125;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;连接成功！&quot;</span>);<br>        db.close();<span class="hljs-comment">//断开连接</span><br>    &#125;<br>);<br></code></pre></td></tr></table></figure><h2 id="Node查询："><a href="#Node查询：" class="headerlink" title="Node查询："></a>Node查询：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> MongoClient = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mongodb&quot;</span>).MongoClient;<br><span class="hljs-keyword">var</span> mongoDB = <span class="hljs-string">&quot;mongodb://localhost:27017/&quot;</span>;<br>MongoClient.connect(<br>    mongoDB,&#123;<span class="hljs-attr">useNewUrlParser</span>: <span class="hljs-literal">true</span>&#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, db</span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (err) &#123;<br>            <span class="hljs-keyword">throw</span> err;<br>        &#125;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;连接成功！&quot;</span>);<br>        <span class="hljs-keyword">var</span> dball = db.db(<span class="hljs-string">&#x27;UserList&#x27;</span>);<span class="hljs-comment">//数据库名</span><br>        dball.collection(<span class="hljs-string">&#x27;allUser&#x27;</span>).find(&#123;&#125;).toArray(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err,result</span>) </span>&#123;<span class="hljs-comment">//查询语句</span><br>            <span class="hljs-keyword">if</span> (err) &#123;<br>                <span class="hljs-built_in">console</span>.log(arr);<span class="hljs-comment">//抛错</span><br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            <span class="hljs-built_in">console</span>.log(result);<span class="hljs-comment">//打印查询结果（这里是查询所有）</span><br>            db.close();<br>        &#125;);<br>    &#125;<br>);<br></code></pre></td></tr></table></figure><h2 id="Node插入："><a href="#Node插入：" class="headerlink" title="Node插入："></a>Node插入：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> MongoClient = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mongodb&quot;</span>).MongoClient;<br><span class="hljs-keyword">var</span> mongoDB = <span class="hljs-string">&quot;mongodb://localhost:27017/&quot;</span>;<br>MongoClient.connect(<br>    mongoDB,&#123;<span class="hljs-attr">useNewUrlParser</span>: <span class="hljs-literal">true</span>&#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, db</span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (err) &#123;<br>            <span class="hljs-keyword">throw</span> err;<br>        &#125;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;连接成功！&quot;</span>);<br>        <span class="hljs-keyword">var</span> dball = db.db(<span class="hljs-string">&#x27;UserList&#x27;</span>);      <br>        <span class="hljs-comment">// 添加</span><br>        dball.collection(<span class="hljs-string">&quot;allUser&quot;</span>).insert([&#123;<span class="hljs-comment">//插入两项，放在数组中</span><br>            <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;12345&#x27;</span>,<br>            <span class="hljs-attr">password</span>:<span class="hljs-string">&#x27;54321&#x27;</span><br>        &#125;, &#123;<br>            <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;root&#x27;</span>,<br>            <span class="hljs-attr">password</span>:<span class="hljs-string">&#x27;root&#x27;</span><br>        &#125;], <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, result</span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (err) &#123;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Error:&#x27;</span> + err);<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            <span class="hljs-built_in">console</span>.log(result)<span class="hljs-comment">//返回插入结果</span><br>        &#125;)<br>        db.close();<span class="hljs-comment">//关闭数据库连接</span><br><br>    &#125;<br>);<br></code></pre></td></tr></table></figure><h2 id="Node更新："><a href="#Node更新：" class="headerlink" title="Node更新："></a>Node更新：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> MongoClient = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mongodb&quot;</span>).MongoClient;<br><span class="hljs-keyword">var</span> mongoDB = <span class="hljs-string">&quot;mongodb://localhost:27017/&quot;</span>;<br>MongoClient.connect(<br>    mongoDB,&#123;<span class="hljs-attr">useNewUrlParser</span>: <span class="hljs-literal">true</span>&#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, db</span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (err) &#123;<br>            <span class="hljs-keyword">throw</span> err;<br>        &#125;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;连接成功！&quot;</span>);<br>        <span class="hljs-keyword">var</span> dball = db.db(<span class="hljs-string">&#x27;UserList&#x27;</span>);<br>        <span class="hljs-comment">// 更新数据库</span><br>        dball.collection(<span class="hljs-string">&quot;allUser&quot;</span>).update(&#123;<span class="hljs-comment">//查找email为abcde的，将email换成12345，password换成12345</span><br>            <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;abcde&#x27;</span><br>        &#125;, &#123;<span class="hljs-attr">$set</span>:&#123;<br>            <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;12345&#x27;</span>,<br>            <span class="hljs-attr">password</span>:<span class="hljs-string">&#x27;12345&#x27;</span><br>        &#125;&#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (err) &#123;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Error:&#x27;</span> + err);<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>        &#125;)<br>        db.close();<br>    &#125;<br>);<br></code></pre></td></tr></table></figure><h2 id="Node删除："><a href="#Node删除：" class="headerlink" title="Node删除："></a>Node删除：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> MongoClient = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mongodb&quot;</span>).MongoClient;<br><span class="hljs-keyword">var</span> mongoDB = <span class="hljs-string">&quot;mongodb://localhost:27017/&quot;</span>;<br>MongoClient.connect(<br>    mongoDB,&#123;<span class="hljs-attr">useNewUrlParser</span>: <span class="hljs-literal">true</span>&#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, db</span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (err) &#123;<br>            <span class="hljs-keyword">throw</span> err;<br>        &#125;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;连接成功！&quot;</span>);<br>        <span class="hljs-keyword">var</span> dball = db.db(<span class="hljs-string">&#x27;UserList&#x27;</span>);<br>        <span class="hljs-comment">// 删除</span><br>        dball.collection(<span class="hljs-string">&quot;allUser&quot;</span>).remove(&#123;<br>        <span class="hljs-comment">//删除email为12345的那项</span><br>            <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;12345&#x27;</span><br>        &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (err) &#123;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Error:&#x27;</span> + err);<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>        &#125;)<br>        db.close();<br>    &#125;<br>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS案例：Ajax实现简单局域网聊天室</title>
    <link href="/2018/11/30/JS%E6%A1%88%E4%BE%8B%20Ajax%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E5%B1%80%E5%9F%9F%E7%BD%91%E8%81%8A%E5%A4%A9%E5%AE%A4/"/>
    <url>/2018/11/30/JS%E6%A1%88%E4%BE%8B%20Ajax%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E5%B1%80%E5%9F%9F%E7%BD%91%E8%81%8A%E5%A4%A9%E5%AE%A4/</url>
    
    <content type="html"><![CDATA[<p>利用Ajax将数据提交到后台，再由后台发送到前端，渲染内容</p><p>代码如下：</p><h2 id="HTML："><a href="#HTML：" class="headerlink" title="HTML："></a>HTML：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">            *&#123;<span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;&#125;</span><br><span class="css">    <span class="hljs-selector-id">#textBox</span>&#123;<span class="hljs-attribute">width</span>: <span class="hljs-number">800px</span>;<span class="hljs-attribute">height</span>: <span class="hljs-number">600px</span>;<span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;<span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> <span class="hljs-number">0</span>;<span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;&#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textBox&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span>:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:600px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>Send<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">var</span> names = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;input&quot;</span>)[<span class="hljs-number">0</span>];</span><br><span class="javascript">            <span class="hljs-keyword">var</span> msgs = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;input&quot;</span>)[<span class="hljs-number">1</span>];</span><br><span class="javascript">            <span class="hljs-keyword">var</span> box = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;textBox&quot;</span>);</span><br><span class="javascript">            <span class="hljs-keyword">var</span> btn = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;button&quot;</span>)[<span class="hljs-number">0</span>];</span><br><span class="javascript">            <span class="hljs-comment">//设置刷新时间为一秒一次</span></span><br><span class="javascript">            <span class="hljs-built_in">setInterval</span>(loadHandler, <span class="hljs-number">1000</span>);</span><br><span class="javascript">            <span class="hljs-comment">// 点击发送。监听事件</span></span><br><span class="javascript">            btn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, sendText);</span><br><span class="javascript">            <span class="hljs-comment">// 点击后执行Ajax</span></span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loadHandler</span>(<span class="hljs-params">data</span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-keyword">if</span> (!data) &#123;</span><br><span class="javascript">                    data = &#123;</span><br><span class="javascript">                        <span class="hljs-attr">id</span>: <span class="hljs-number">2</span></span><br><span class="javascript">                    &#125;;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">                <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();</span><br><span class="javascript">                xhr.addEventListener(<span class="hljs-string">&quot;load&quot;</span>, startPost);</span><br><span class="javascript">                xhr.open(<span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;http://10.9.48.155:1024/&quot;</span>); <span class="hljs-comment">//这里一定是主机的IP地址</span></span><br><span class="javascript">                xhr.send(<span class="hljs-built_in">JSON</span>.stringify(data));</span><br><span class="javascript"></span><br><span class="javascript">            &#125;</span><br><span class="javascript"></span><br><span class="javascript"></span><br><span class="javascript"></span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">startPost</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">                box.value = (<span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">this</span>.response)).resu.join(<span class="hljs-string">&quot;\n&quot;</span>); <span class="hljs-comment">//将后台拼接好的数据返回到聊天面板</span></span><br><span class="javascript">            &#125;</span><br><span class="javascript"></span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendText</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-comment">// 将从输入框获取的内容添加到对象发送到后端</span></span><br><span class="javascript">                <span class="hljs-keyword">if</span> (names.value.length === <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span>;</span><br><span class="javascript">                <span class="hljs-keyword">if</span> (msgs.value.length === <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span>;</span><br><span class="javascript">                <span class="hljs-keyword">var</span> obj = &#123;</span><br><span class="javascript">                    <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>,</span><br><span class="javascript">                    <span class="hljs-attr">user</span>: names.value,</span><br><span class="javascript">                    <span class="hljs-attr">mas</span>: msgs.value</span><br><span class="javascript">                &#125;</span><br><span class="javascript">                loadHandler(obj);</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="node代码："><a href="#node代码：" class="headerlink" title="node代码："></a>node代码：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;http&quot;</span>);<span class="hljs-comment">//获取http请求（前面的文章有详细注释）</span><br><span class="hljs-keyword">var</span> arr = []; <span class="hljs-comment">//新建消息容器，存放消息集</span><br><br><span class="hljs-keyword">var</span> server = http.createServer(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> data = <span class="hljs-string">&quot;&quot;</span>;<br>    req.on(<span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) </span>&#123;<br>        data += d;<br>    &#125;);<br>    req.on(<span class="hljs-string">&quot;end&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">var</span> obj = <span class="hljs-built_in">JSON</span>.parse(data);<br>        <span class="hljs-comment">//解析对象，将user和msg取出</span><br>        <span class="hljs-keyword">if</span> (obj.id === <span class="hljs-number">1</span>) &#123;<br>            arr.push(obj.user + <span class="hljs-string">&quot;:&quot;</span> + obj.mas);<br>        &#125;<br>        <span class="hljs-comment">// 返回数组和错误信息（没有则为空）</span><br>        <span class="hljs-keyword">var</span> result = &#123;<br>            <span class="hljs-attr">resu</span>: arr,<br>            <span class="hljs-attr">error</span>: <span class="hljs-literal">null</span><br>        &#125;;<br>        res.writeHead(<span class="hljs-number">200</span>, &#123;<br>            <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;text/plain&quot;</span>,<br>            <span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="hljs-string">&quot;*&quot;</span><br>        &#125;);<br>        res.write(<span class="hljs-built_in">JSON</span>.stringify(result));<span class="hljs-comment">//将打包好的对象传到前端</span><br>        res.end();<br>    &#125;);<br>&#125;);<br><span class="hljs-comment">// 监听服务</span><br>server.listen(<span class="hljs-number">1024</span>, <span class="hljs-string">&quot;10.9.48.155&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;侦听开始&quot;</span>);<br>&#125;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS瀑布流懒加载案例</title>
    <link href="/2018/11/29/JS%E7%80%91%E5%B8%83%E6%B5%81%E6%87%92%E5%8A%A0%E8%BD%BD%E6%A1%88%E4%BE%8B/"/>
    <url>/2018/11/29/JS%E7%80%91%E5%B8%83%E6%B5%81%E6%87%92%E5%8A%A0%E8%BD%BD%E6%A1%88%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<p>代码附上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>fall_out<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">            * &#123;</span><br><span class="css">                <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">                <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            &#125;</span><br><span class="css"></span><br><span class="css">            <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="css">                <span class="hljs-attribute">list-style</span>: none;</span><br><span class="css">            &#125;</span><br><span class="css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">            <span class="hljs-keyword">var</span> ul, img;</span><br><span class="javascript">            <span class="hljs-comment">// 创建容器</span></span><br><span class="javascript">            <span class="hljs-keyword">const</span> count = <span class="hljs-number">5</span>;<span class="hljs-comment">//总列数</span></span><br><span class="javascript">            <span class="hljs-keyword">var</span> arr = [];<span class="hljs-comment">//存放高度之后用来比较</span></span><br><span class="javascript">            <span class="hljs-keyword">var</span> pic = <span class="hljs-number">1</span>;<span class="hljs-comment">//图片索引</span></span><br><span class="javascript">            init();<span class="hljs-comment">//入口函数</span></span><br><span class="javascript"></span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">init</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                ul = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;ul&quot;</span>);<span class="hljs-comment">//获取ul</span></span><br><span class="javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; count; i++) &#123;<span class="hljs-comment">//根据count创建li</span></span><br><span class="javascript">                    <span class="hljs-keyword">var</span> li = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;li&quot;</span>);</span><br><span class="javascript">                    ul.appendChild(li);</span><br><span class="javascript">                    <span class="hljs-comment">//设置样式</span></span><br><span class="javascript">                    li.style.margin = <span class="hljs-string">&quot;5px&quot;</span>;</span><br><span class="javascript">                    li.style.width = (<span class="hljs-built_in">document</span>.documentElement.clientWidth) / count - <span class="hljs-number">22</span> + <span class="hljs-string">&quot;px&quot;</span>;</span><br><span class="javascript">                    li.style.border = <span class="hljs-string">&quot;1px solid lightcoral&quot;</span>;</span><br><span class="javascript">                    li.style.float = <span class="hljs-string">&quot;left&quot;</span>;</span><br><span class="javascript">                    arr.push(<span class="hljs-number">0</span>);<span class="hljs-comment">//初始化第一排图片的高</span></span><br><span class="javascript">                &#125;</span><br><span class="javascript">                <span class="hljs-comment">//新建第一张图片</span></span><br><span class="javascript">                img = <span class="hljs-keyword">new</span> Image();</span><br><span class="javascript">                img.src = <span class="hljs-string">&quot;img/&quot;</span> + pic + <span class="hljs-string">&quot;.jpg&quot;</span>;</span><br><span class="javascript">                img.addEventListener(<span class="hljs-string">&quot;load&quot;</span>, addPic);<span class="hljs-comment">//添加加载事件</span></span><br><span class="javascript">                <span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">&quot;scroll&quot;</span>, move);<span class="hljs-comment">//给右侧滚轮添加滚轮事件</span></span><br><span class="javascript">            &#125;</span><br><span class="javascript"></span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addPic</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-comment">// 复制第一张图片</span></span><br><span class="javascript">                <span class="hljs-keyword">var</span> copy = <span class="hljs-built_in">this</span>.cloneNode(<span class="hljs-literal">false</span>);</span><br><span class="javascript">                <span class="hljs-keyword">var</span> min = <span class="hljs-built_in">Math</span>.min.apply(<span class="hljs-literal">null</span>, arr);</span><br><span class="javascript">                <span class="hljs-keyword">var</span> index = arr.indexOf(min);<span class="hljs-comment">//寻找高度最小的图片</span></span><br><span class="javascript">                ul.children[index].appendChild(copy);<span class="hljs-comment">//将图片加载到ul的高度最小的li中</span></span><br><span class="javascript">                copy.style.width = <span class="hljs-string">&quot;100%&quot;</span>;</span><br><span class="javascript">                arr[index] = copy.parentElement.offsetHeight;<span class="hljs-comment">//将高度添加到数组的该项</span></span><br><span class="javascript">                <span class="hljs-keyword">if</span> ((<span class="hljs-built_in">document</span>.documentElement.scrollHeight - <span class="hljs-built_in">document</span>.documentElement.scrollTop) / <span class="hljs-built_in">document</span>.documentElement</span><br><span class="javascript">                    .clientHeight &gt; <span class="hljs-number">4</span>) &#123;<span class="hljs-comment">//当右边滚轮到达屏幕高度四倍时跳出函数</span></span><br><span class="javascript">                    <span class="hljs-keyword">return</span>;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">                pic = <span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span> + <span class="hljs-number">1</span>);<span class="hljs-comment">//否则继续加载图片</span></span><br><span class="javascript">                img.src = <span class="hljs-string">&quot;img/&quot;</span> + pic + <span class="hljs-string">&quot;.jpg&quot;</span>;</span><br><span class="javascript">            &#125;</span><br><span class="javascript"></span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">move</span>(<span class="hljs-params">e</span>) </span>&#123;<span class="hljs-comment">//当文档高度减滚动条的位置小于屏幕两倍时，继续加载</span></span><br><span class="javascript">                <span class="hljs-keyword">if</span> ((<span class="hljs-built_in">document</span>.documentElement.scrollHeight - <span class="hljs-built_in">document</span>.documentElement.scrollTop) / <span class="hljs-built_in">document</span>.documentElement</span><br><span class="javascript">                    .clientHeight &lt; <span class="hljs-number">2</span>) &#123;</span><br><span class="javascript">                    pic = <span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span> + <span class="hljs-number">1</span>);</span><br><span class="javascript">                    img.src = <span class="hljs-string">&quot;img/&quot;</span> + pic + <span class="hljs-string">&quot;.jpg&quot;</span>;</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JS表格小案例</title>
    <link href="/2018/11/29/JS%E8%A1%A8%E6%A0%BC%E5%B0%8F%E6%A1%88%E4%BE%8B/"/>
    <url>/2018/11/29/JS%E8%A1%A8%E6%A0%BC%E5%B0%8F%E6%A1%88%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="创建一个表单，根据表单填写内容，创建表格行内容，每行后面有删除按钮，删除后可以删除该行一个搜索文本框，输入内容，点击按钮显示当前模糊查找到所有内容，显示在表格内"><a href="#创建一个表单，根据表单填写内容，创建表格行内容，每行后面有删除按钮，删除后可以删除该行一个搜索文本框，输入内容，点击按钮显示当前模糊查找到所有内容，显示在表格内" class="headerlink" title="创建一个表单，根据表单填写内容，创建表格行内容，每行后面有删除按钮，删除后可以删除该行一个搜索文本框，输入内容，点击按钮显示当前模糊查找到所有内容，显示在表格内"></a>创建一个表单，根据表单填写内容，创建表格行内容，每行后面有删除按钮，删除后可以删除该行一个搜索文本框，输入内容，点击按钮显示当前模糊查找到所有内容，显示在表格内</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span><br><span class="css"><span class="hljs-selector-tag">table</span> &#123;</span><br><span class="css"><span class="hljs-attribute">width</span>: <span class="hljs-number">800px</span>;</span><br><span class="css"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid lightcoral;</span><br><span class="css"><span class="hljs-attribute">border-collapse</span>: collapse;</span><br><span class="css">&#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;search&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;搜索&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;find&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;name&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;psd&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;password&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;num&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;number&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;send&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;add()&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;tab&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-comment">//通过ID获取所有元素</span></span><br><span class="javascript"><span class="hljs-keyword">var</span> search = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;search&quot;</span>);</span><br><span class="javascript"><span class="hljs-keyword">var</span> find = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;find&quot;</span>);</span><br><span class="javascript"><span class="hljs-keyword">var</span> name1 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;name&quot;</span>);</span><br><span class="javascript"><span class="hljs-keyword">var</span> psd1 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;psd&quot;</span>);</span><br><span class="javascript"><span class="hljs-keyword">var</span> num1 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;num&quot;</span>);</span><br><span class="javascript"><span class="hljs-keyword">var</span> send = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;send&quot;</span>);</span><br><span class="javascript"><span class="hljs-keyword">var</span> tab = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;tab&quot;</span>);</span><br><span class="javascript"><span class="hljs-comment">//定义一个数组,用来存放所有的输入的对象</span></span><br><span class="javascript"><span class="hljs-keyword">var</span> arr = [];</span><br><span class="javascript"></span><br><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript"><span class="hljs-comment">//判断输入是否为空</span></span><br><span class="javascript"><span class="hljs-keyword">if</span> (name1.value &amp;&amp; psd1.value &amp;&amp; num1.value) &#123;</span><br><span class="javascript"><span class="hljs-comment">//定义对象存放输入的属性及属性值</span></span><br><span class="javascript"><span class="hljs-keyword">var</span> obj = &#123;&#125;;</span><br><span class="javascript"><span class="hljs-comment">//创建每行的tr以及删除键a</span></span><br><span class="javascript"><span class="hljs-keyword">var</span> tr = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;tr&quot;</span>);</span><br><span class="javascript"><span class="hljs-keyword">var</span> aa = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;a&quot;</span>);</span><br><span class="javascript">aa.textContent = <span class="hljs-string">&quot;Del&quot;</span>;</span><br><span class="javascript">tab.appendChild(tr);</span><br><span class="javascript"><span class="hljs-comment">//向对象添加用户输入的属性及属性值</span></span><br><span class="javascript">obj.name = name1.value;</span><br><span class="javascript">obj.psd = psd1.value;</span><br><span class="javascript">obj.num = num1.value;</span><br><span class="javascript"><span class="hljs-comment">//遍历对象输出到每行的tr</span></span><br><span class="javascript"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> str <span class="hljs-keyword">in</span> obj) &#123;</span><br><span class="javascript"><span class="hljs-keyword">var</span> td = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;td&quot;</span>);</span><br><span class="javascript">td.textContent = str + <span class="hljs-string">&quot; : &quot;</span> + obj[str];</span><br><span class="javascript">tr.appendChild(td);</span><br><span class="javascript">&#125;</span><br><span class="javascript"></span><br><span class="javascript">tr.appendChild(aa);</span><br><span class="javascript"><span class="hljs-comment">//对删除键添加点击事件</span></span><br><span class="javascript">aa.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, del);</span><br><span class="javascript"><span class="hljs-comment">//创建点击事件,使tr删除</span></span><br><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">del</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">e = e || <span class="hljs-built_in">window</span>.event;</span><br><span class="javascript">tr.remove();</span><br><span class="javascript"></span><br><span class="javascript">&#125;</span><br><span class="javascript"><span class="hljs-comment">//每次执行后清空输入内容</span></span><br><span class="javascript">name1.value = psd1.value = num1.value = <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="javascript"><span class="hljs-comment">//将每次的对象放入数组中</span></span><br><span class="javascript">arr.push(obj);</span><br><span class="javascript"><span class="hljs-comment">//console.log(arr);</span></span><br><span class="javascript"><span class="hljs-comment">//为搜索键添加监听事件</span></span><br><span class="javascript">find.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);</span><br><span class="javascript"><span class="hljs-comment">//新建点击函数,遍历数组,查找搜索的关键字</span></span><br><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">e = e || <span class="hljs-built_in">window</span>.event;</span><br><span class="javascript"><span class="hljs-keyword">var</span> str = search.value;</span><br><span class="javascript"><span class="hljs-keyword">var</span> data = arr.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">t</span>) </span>&#123;</span><br><span class="javascript"><span class="hljs-keyword">return</span> t.name.indexOf(str) &gt; -<span class="hljs-number">1</span>;</span><br><span class="javascript">&#125;);</span><br><span class="javascript"><span class="hljs-comment">//            清空表格</span></span><br><span class="javascript">tab.textContent = <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="javascript"><span class="hljs-comment">//遍历数组对象</span></span><br><span class="javascript"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; data.length; j++) &#123;</span><br><span class="javascript"><span class="hljs-comment">//新建每一行</span></span><br><span class="javascript"><span class="hljs-keyword">var</span> tr = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;tr&quot;</span>);</span><br><span class="javascript"><span class="hljs-keyword">var</span> aa = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;a&quot;</span>);</span><br><span class="javascript">aa.textContent = <span class="hljs-string">&quot;Del&quot;</span>;</span><br><span class="javascript">tab.appendChild(tr);</span><br><span class="javascript"><span class="hljs-comment">//新建每行的每一项</span></span><br><span class="javascript"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> str <span class="hljs-keyword">in</span> data[j]) &#123;</span><br><span class="javascript"><span class="hljs-keyword">var</span> td = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;td&quot;</span>);</span><br><span class="javascript">td.textContent = str + <span class="hljs-string">&quot; : &quot;</span> + data[j][str];</span><br><span class="javascript">tr.appendChild(td);</span><br><span class="javascript">&#125;</span><br><span class="javascript">&#125;</span><br><span class="javascript">&#125;</span><br><span class="javascript">&#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">alert(<span class="hljs-string">&quot;Error&quot;</span>);</span><br><span class="javascript">&#125;</span><br><span class="javascript">&#125;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node（七）之express框架，简单的邮箱注册小案例（Get方式）</title>
    <link href="/2018/11/29/Node%EF%BC%88%E4%B8%83%EF%BC%89%E4%B9%8Bexpress%E6%A1%86%E6%9E%B6%EF%BC%8C%E7%AE%80%E5%8D%95%E7%9A%84%E9%82%AE%E7%AE%B1%E6%B3%A8%E5%86%8C%E5%B0%8F%E6%A1%88%E4%BE%8B%EF%BC%88Get%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <url>/2018/11/29/Node%EF%BC%88%E4%B8%83%EF%BC%89%E4%B9%8Bexpress%E6%A1%86%E6%9E%B6%EF%BC%8C%E7%AE%80%E5%8D%95%E7%9A%84%E9%82%AE%E7%AE%B1%E6%B3%A8%E5%86%8C%E5%B0%8F%E6%A1%88%E4%BE%8B%EF%BC%88Get%E6%96%B9%E5%BC%8F%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>附上代码：</p><h3 id="HTML部分（需要用到Jq）"><a href="#HTML部分（需要用到Jq）" class="headerlink" title="HTML部分（需要用到Jq）"></a>HTML部分（需要用到Jq）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./jquery.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">      * &#123;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">        <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: none;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">input</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span> auto;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">button</span><span class="hljs-selector-pseudo">:not</span>(<span class="hljs-selector-id">#email</span>) &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">70px</span>;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightcoral;</span><br><span class="css">        <span class="hljs-attribute">border</span>: none;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-id">#email</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightblue;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="css">        <span class="hljs-attribute">list-style</span>: none;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">float</span>: left;</span><br><span class="css">        <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">50px</span>;</span><br><span class="css">      &#125;</span><br><span class="css">      <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">background</span>: lightgreen;</span><br><span class="css">        <span class="hljs-attribute">cursor</span>: pointer;</span><br><span class="css">      &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;regChange&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loginChange&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;reg&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;邮箱&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;user&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;psd&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;验证码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sendmail&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;email&quot;</span>&gt;</span>发送验证码<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;login&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;用户名&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loguser&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;logpsd&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;logbtn&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        <span class="hljs-comment">//增加监听事件</span></span><br><span class="javascript">      btn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);</span><br><span class="javascript">      logbtn.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);</span><br><span class="javascript">      email.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, sendHandler);</span><br><span class="javascript">      regChange.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, changeHandler);</span><br><span class="javascript">      loginChange.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, changeHandler);</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.textContent === <span class="hljs-string">&quot;注册&quot;</span>) &#123;</span><br><span class="javascript">            <span class="hljs-comment">//若为空时跳出</span></span><br><span class="javascript">          <span class="hljs-keyword">if</span> (!user.value || !psd.value || !sendmail.value) &#123;</span><br><span class="javascript">            alert(<span class="hljs-string">&quot;Can&#x27;t be empty&quot;</span>);</span><br><span class="javascript">            <span class="hljs-keyword">return</span>;</span><br><span class="javascript">          &#125;</span><br><span class="javascript">          <span class="hljs-comment">//点击注册时将邮箱号，密码，验证码传送至后台</span></span><br><span class="javascript">          $.get(</span><br><span class="javascript">            <span class="hljs-string">`http://localhost:1024/index/reg?user=<span class="hljs-subst">$&#123;user.value&#125;</span>&amp;psd=<span class="hljs-subst">$&#123;</span></span></span><br><span class="hljs-subst"><span class="hljs-string"><span class="javascript">              psd.value</span></span></span><br><span class="hljs-subst"><span class="hljs-string"><span class="javascript">            &#125;</span>&amp;mail=<span class="hljs-subst">$&#123;sendmail.value&#125;</span>`</span>,</span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-comment">//后台返回的对象，若hasUser为真，说明已有用户名，否则注册成功</span></span><br><span class="javascript">              <span class="hljs-keyword">if</span> (res.hasUser) &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;注册失败&quot;</span>);</span><br><span class="javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="javascript">              &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;注册成功~&quot;</span>);</span><br><span class="javascript">              &#125;</span><br><span class="javascript">              <span class="hljs-comment">//成功后隐藏注册，显示登录</span></span><br><span class="javascript">              reg.style.display = <span class="hljs-string">&quot;none&quot;</span>;</span><br><span class="javascript">              login.style.display = <span class="hljs-string">&quot;block&quot;</span>;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">          );</span><br><span class="javascript">        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.textContent === <span class="hljs-string">&quot;登录&quot;</span>) &#123;</span><br><span class="javascript">            <span class="hljs-comment">// 同注册，不能为空</span></span><br><span class="javascript">          <span class="hljs-keyword">if</span> (!loguser.value || !logpsd.value) &#123;</span><br><span class="javascript">            alert(<span class="hljs-string">&quot;Can&#x27;t be empty&quot;</span>);</span><br><span class="javascript">            <span class="hljs-keyword">return</span>;</span><br><span class="javascript">          &#125;</span><br><span class="javascript">          <span class="hljs-comment">//点击登录时将邮箱号，密码传送至后台</span></span><br><span class="javascript">          $.get(</span><br><span class="javascript">            <span class="hljs-string">`http://localhost:1024/index/login?user=<span class="hljs-subst">$&#123;loguser.value&#125;</span>&amp;psd=<span class="hljs-subst">$&#123;</span></span></span><br><span class="hljs-subst"><span class="hljs-string"><span class="javascript">              logpsd.value</span></span></span><br><span class="hljs-subst"><span class="hljs-string"><span class="javascript">            &#125;</span>`</span>,</span><br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-comment">//后台返回的对象，若isUser为真，说明正确，并跳转至欢迎页，否则失败</span></span><br><span class="javascript">              <span class="hljs-keyword">if</span> (res.isUser) &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;登录成功&quot;</span>);</span><br><span class="javascript">                location.href = <span class="hljs-string">&quot;./welcome.html&quot;</span>;</span><br><span class="javascript">              &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">                alert(<span class="hljs-string">&quot;用户名或密码不正确&quot;</span>);</span><br><span class="javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="javascript">              &#125;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">          );</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sendHandler</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-comment">//   点击获取验证码后将验证码发送到后端进行比对</span></span><br><span class="javascript">        $.get(<span class="hljs-string">`http://localhost:1024/index/sendmail?<span class="hljs-subst">$&#123;user.value&#125;</span>`</span>);</span><br><span class="javascript">      &#125;</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeHandler</span>(<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-comment">//   点击上方的注册登录切换</span></span><br><span class="javascript">        <span class="hljs-keyword">if</span> (e.target.textContent === <span class="hljs-string">&quot;注册&quot;</span>) &#123;</span><br><span class="javascript">          reg.style.display = <span class="hljs-string">&quot;block&quot;</span>;</span><br><span class="javascript">          login.style.display = <span class="hljs-string">&quot;none&quot;</span>;</span><br><span class="javascript">        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">          reg.style.display = <span class="hljs-string">&quot;none&quot;</span>;</span><br><span class="javascript">          login.style.display = <span class="hljs-string">&quot;block&quot;</span>;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">      &#125;</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="node后台部分：-需要引入的第三方模块有：express框架，cors，nodemailer，"><a href="#node后台部分：-需要引入的第三方模块有：express框架，cors，nodemailer，" class="headerlink" title="node后台部分： 需要引入的第三方模块有：express框架，cors，nodemailer，"></a>node后台部分： 需要引入的第三方模块有：express框架，cors，nodemailer，</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<span class="hljs-comment">//引入express框架（需要先下载，官网有教程）</span><br><span class="hljs-keyword">const</span> url = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;url&#x27;</span>);<br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> cors = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;cors&#x27;</span>);<span class="hljs-comment">//引入cors模块（解决跨域问题）</span><br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-comment">// const bodyparser = require(&#x27;body-parser&#x27;);</span><br><span class="hljs-keyword">const</span> sendMail = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./send&#x27;</span>);<span class="hljs-comment">//这个模块是发送邮件模块（在我第三篇node文章里有）</span><br><br><br>app.use(cors());<br><span class="hljs-comment">// 下面的类似于http请求的头文件(另一篇文章有写到http请求，也是注册登录)</span><br>app.all(<span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res, next</span>) </span>&#123;<br>    <span class="hljs-comment">//设置允许跨域的域名，*代表允许任意域名跨域</span><br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>);<br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="hljs-string">&quot;content-type&quot;</span>);<span class="hljs-comment">//允许的header类型</span><br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="hljs-string">&quot;DELETE,PUT,POST,GET,OPTIONS&quot;</span>);<span class="hljs-comment">//跨域允许的请求方式 </span><br>    next();<span class="hljs-comment">//是否继续向下执行</span><br>&#125;)<br><br><span class="hljs-comment">//注册接口</span><br><span class="hljs-keyword">var</span> count = <span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-comment">//新建一个空字符存放验证码，可供全局调用</span><br>app.get(<span class="hljs-string">&#x27;/index/reg&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> search = url.parse(req.url).search;<span class="hljs-comment">//保存前端传来的数据</span><br>    files = path.join(__dirname, <span class="hljs-string">&#x27;./user.txt&#x27;</span>);<span class="hljs-comment">//用一个txt来记录用户名和密码</span><br>    fs.readFile(files, <span class="hljs-string">&#x27;utf8&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err, data</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">//读取txt文件，判断是否存在用户名，并对验证码进行判断</span><br>        <span class="hljs-keyword">if</span> (data.indexOf(search.split(<span class="hljs-string">&#x27;&amp;&#x27;</span>)[<span class="hljs-number">0</span>]) === -<span class="hljs-number">1</span> &amp;&amp; search.split(<span class="hljs-string">&#x27;&amp;&#x27;</span>)[<span class="hljs-number">2</span>].split(<span class="hljs-string">&#x27;=&#x27;</span>)[<span class="hljs-number">1</span>] === count) &#123;<br>            fs.appendFile(files, search.split(<span class="hljs-string">&#x27;&amp;&#x27;</span>)[<span class="hljs-number">0</span>] + <span class="hljs-string">&#x27;&amp;&#x27;</span> + search.split(<span class="hljs-string">&#x27;&amp;&#x27;</span>)[<span class="hljs-number">1</span>]);<span class="hljs-comment">//符合条件就将信息存至TXT中，并返回一个对象至前端，表示验证成功（hasUser为真，说明该用户已存在）</span><br>            res.send(&#123;<br>                <span class="hljs-attr">hasUser</span>: <span class="hljs-literal">false</span><br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">//不符合条件就返回一个对象至前端，表示验证失败</span><br>            res.send(&#123;<br>                <span class="hljs-attr">hasUser</span>: <span class="hljs-literal">true</span><br>            &#125;);<br>        &#125;<br><br>    &#125;);<br>&#125;);<br><br><span class="hljs-comment">//登录接口</span><br>app.get(<span class="hljs-string">&#x27;/index/login&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> search = url.parse(req.url).search;<span class="hljs-comment">//保存前端传来的数据</span><br>    files = path.join(__dirname, <span class="hljs-string">&#x27;./user.txt&#x27;</span>);<br>    <span class="hljs-comment">//读取txt文件，判断是否存在用户名和对应的密码</span><br>    fs.readFile(files, <span class="hljs-string">&#x27;utf8&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err, data</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">//符合条件就返回一个对象至前端，表示验证失败（isUser为真，说明该用户名与密码不符）</span><br>        <span class="hljs-keyword">if</span> (data.indexOf(search) === -<span class="hljs-number">1</span>) &#123;<br>            res.send(&#123;<br>                <span class="hljs-attr">isUser</span>: <span class="hljs-literal">false</span><br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            res.send(&#123;<br>                <span class="hljs-attr">isUser</span>: <span class="hljs-literal">true</span><br>            &#125;);<br>        &#125;<br>    &#125;);<br>&#125;);<br><br><span class="hljs-comment">//邮箱验证接口</span><br>app.get(<span class="hljs-string">&#x27;/index/sendmail&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;<br>    count = <span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-comment">//初始化验证码容器</span><br>    <span class="hljs-keyword">let</span> Email = url.parse(req.url).query;<span class="hljs-comment">//获取前端传来的邮箱号</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        count += <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span>);<span class="hljs-comment">//生成4个随机数</span><br>    &#125;<br>    sendMail.send(Email, count);<span class="hljs-comment">//调用邮件发送模块（传入注册的邮箱，验证码）</span><br>    res.send(count);<br>&#125;);<br><span class="hljs-comment">//监听服务</span><br>app.listen(<span class="hljs-number">1024</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Server Start~&#x27;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="附上发送邮件的模块-在我前面的文章中也有"><a href="#附上发送邮件的模块-在我前面的文章中也有" class="headerlink" title="附上发送邮件的模块(在我前面的文章中也有)"></a>附上发送邮件的模块(在我前面的文章中也有)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//引入模块</span><br> <br><span class="hljs-keyword">const</span> nodemailer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;nodemailer&quot;</span>);<br> <br><span class="hljs-comment">//新建对象</span><br> <br><span class="hljs-keyword">let</span> obj = &#123;<br> <br><span class="hljs-attr">transporter</span>: nodemailer.createTransport(&#123;<br> <br><span class="hljs-attr">service</span>: <span class="hljs-string">&quot;qq&quot;</span>, <span class="hljs-comment">// 运营商 qq邮箱 网易//</span><br> <br><span class="hljs-attr">port</span>: <span class="hljs-number">465</span>,<br> <br><span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span>,<br> <br><span class="hljs-attr">auth</span>: &#123;<br> <br><span class="hljs-attr">user</span>: <span class="hljs-string">&quot;**********@qq.com&quot;</span>, <span class="hljs-comment">//发送方的邮箱</span><br> <br><span class="hljs-attr">pass</span>: <span class="hljs-string">&quot;***************&quot;</span> <span class="hljs-comment">// pop3 授权码</span><br> <br>&#125;<br> <br>&#125;),<br> <br><span class="hljs-comment">//传参（对方的mail地址,内容）</span><br> <br><span class="hljs-attr">send</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">mail, content</span>) </span>&#123;<br> <br>mailOptions = &#123;<br> <br><span class="hljs-comment">//发送方的邮箱地址</span><br> <br><span class="hljs-attr">from</span>: <span class="hljs-string">&#x27;&quot;Hello World~&quot; &lt;***********@qq.com&gt;&#x27;</span>,<br> <br><span class="hljs-attr">to</span>: mail,<br> <br><span class="hljs-attr">subject</span>: content,<br> <br><span class="hljs-attr">text</span>: content,<br> <br><span class="hljs-attr">html</span>: <span class="hljs-string">&quot;&lt;h1&gt;&quot;</span> + content + <span class="hljs-string">&quot;&lt;/h1&gt;&quot;</span><br> <br>&#125;;<br> <br><span class="hljs-built_in">this</span>.transporter.sendMail(mailOptions, <span class="hljs-function">(<span class="hljs-params">error, info</span>) =&gt;</span> &#123;<br> <br><span class="hljs-keyword">if</span> (error) &#123;<br> <br><span class="hljs-keyword">return</span> <span class="hljs-built_in">console</span>.log(error);<br> <br>&#125;<br> <br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Message sent: %s&quot;</span>, info.messageId);<br> <br>&#125;);<br> <br>&#125;<br> <br>&#125;;<br> <br><span class="hljs-comment">//抛出对象以接收</span><br> <br><span class="hljs-built_in">module</span>.exports = obj;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node（六）其他常用内置模块</title>
    <link href="/2018/11/28/Node%EF%BC%88%E5%85%AD%EF%BC%89%E5%85%B6%E4%BB%96%E5%B8%B8%E7%94%A8%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/"/>
    <url>/2018/11/28/Node%EF%BC%88%E5%85%AD%EF%BC%89%E5%85%B6%E4%BB%96%E5%B8%B8%E7%94%A8%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="HTTP模块"><a href="#HTTP模块" class="headerlink" title="HTTP模块"></a>HTTP模块</h1><p>跨域：用代理的方式跨域，打个比方，我自己有一个前端，一个后台，小明有一个后台。我的前端需要访问小明的后台就是所谓的跨域，但是如果用我自己的后台使用http请求访问小明的后台，就不用跨域，于是我就可以通过自己的前端用ajax访问自己的后端完成数据请求。·</p><p>创建服务器：通过ajax的post传至data中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//加载库中http.js，加载进入赋值给变量http，是一个对象</span><br><span class="hljs-keyword">var</span> reg = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;http&quot;</span>);<br><span class="hljs-comment">//req就是客户端向服务器端请求的数据</span><br><span class="hljs-comment">//res就服务器项客户端发送的数据</span><br><span class="hljs-comment">//reg.createServer创建服务</span><br><span class="hljs-keyword">var</span> server = reg.createServer(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> data = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-comment">//req.on(&quot;data&quot;)是客户端请求的数据正在接收中的事件</span><br>    req.on(<span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) </span>&#123;<br>        data += d;<br>    &#125;);<br><span class="hljs-comment">//req.on(&quot;end&quot;)是客户端请求的数据接收完毕</span><br>    req.on(<span class="hljs-string">&quot;end&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">var</span> obj = <span class="hljs-built_in">JSON</span>.parse(data);<br><span class="hljs-comment">//头文件，最后的*表示允许所有域访问</span><br>        res.writeHead(<span class="hljs-number">200</span>, &#123;<br>            <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;text/plain&quot;</span>,<br>            <span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="hljs-string">&quot;*&quot;</span><br>        &#125;);<br>        res.write(<span class="hljs-built_in">JSON</span>.stringify(obj));<br>        res.end();<br>    &#125;);<br>&#125;);<br><span class="hljs-comment">//侦听事件</span><br>server.listen(<span class="hljs-number">1024</span>, <span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;注册服务开启，开始侦听&quot;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><p>爬虫 获取数据：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//引入http模块</span><br><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-comment">//发起服务器短的请求</span><br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br>http.get(<span class="hljs-string">&#x27;http://localhost/test/1.html&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> &#123;<br>        statusCode<br>    &#125; = res;<span class="hljs-comment">//状态码</span><br>    <span class="hljs-keyword">const</span> contentType = res.headers[<span class="hljs-string">&#x27;content-type&#x27;</span>];<span class="hljs-comment">//请求的类型</span><br>    <span class="hljs-keyword">let</span> error;<br>    <span class="hljs-keyword">if</span> (statusCode !== <span class="hljs-number">200</span>) &#123;<br>        error = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&#x27;状态码错误&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (error) &#123;<br>        <span class="hljs-built_in">console</span>.log(error.message);<br>        res.resume();<span class="hljs-comment">// 清除请求缓存</span><br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><span class="hljs-comment">// 数据处理</span><br>    res.setEncoding(<span class="hljs-string">&#x27;utf8&#x27;</span>);<span class="hljs-comment">//设置数据的编码格式</span><br>    <span class="hljs-keyword">let</span> data = <span class="hljs-string">&#x27;&#x27;</span>;<br>    res.on(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">d</span>) </span>&#123;<br>        data += d;<span class="hljs-comment">//接收分段信息</span><br>    &#125;);<br>    res.on(<span class="hljs-string">&#x27;end&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-comment">// console.log(data);</span><br><span class="hljs-comment">//接收后写入至本地文件</span><br>        fs.writeFile(<span class="hljs-string">&#x27;./test1.html&#x27;</span>, data, <span class="hljs-string">&#x27;utf8&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (err) &#123;<br>                <span class="hljs-keyword">throw</span> err<br>            &#125;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;下载完成&#x27;</span>);<br>        &#125;)<br>    &#125;);<br>&#125;).on(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.error(<span class="hljs-string">`Got error: <span class="hljs-subst">$&#123;e.message&#125;</span>`</span>);<span class="hljs-comment">//出错返回信息</span><br>&#125;);<br></code></pre></td></tr></table></figure><h1 id="URL模块"><a href="#URL模块" class="headerlink" title="URL模块"></a>URL模块</h1><p>引入：const url = require(‘url’);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> urlstring=<span class="hljs-string">&#x27;http://www.baidu.com:8080/home/login/test?name=wy&amp;ps=wanger#hash&#x27;</span><br><span class="hljs-keyword">const</span> myURL = url.parse(urlstring,<span class="hljs-literal">true</span>);<br><span class="hljs-comment">//parse 将url字符串变成url格式的对象</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-keyword">let</span> obj=&#123;<br><span class="hljs-attr">protocol</span>: <span class="hljs-string">&#x27;http:&#x27;</span>,<br><span class="hljs-attr">slashes</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">auth</span>: <span class="hljs-literal">null</span>,<br><span class="hljs-attr">host</span>: <span class="hljs-string">&#x27;www.baidu.com:8080&#x27;</span>,<br><span class="hljs-attr">port</span>: <span class="hljs-string">&#x27;8080&#x27;</span>,<br><span class="hljs-attr">hostname</span>: <span class="hljs-string">&#x27;www.baidu.com&#x27;</span>,<br><span class="hljs-attr">hash</span>: <span class="hljs-string">&#x27;#hash&#x27;</span>,<br><span class="hljs-attr">search</span>: <span class="hljs-string">&#x27;?name=wy&amp;ps=wanger&#x27;</span>,<br><span class="hljs-attr">query</span>: &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;wy&#x27;</span>, <span class="hljs-attr">ps</span>: <span class="hljs-string">&#x27;wanger&#x27;</span> &#125;,<br><span class="hljs-attr">pathname</span>: <span class="hljs-string">&#x27;/home/login/test&#x27;</span>,<br><span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/home/login/test?name=wy&amp;ps=wanger&#x27;</span>,<br><span class="hljs-attr">href</span>:<span class="hljs-string">&#x27;http://www.baidu.com:8080/home/login/test?name=wy&amp;ps=wanger#hash&#x27;</span> <br>&#125;<br><span class="hljs-keyword">let</span> result=url.format(obj)<br><span class="hljs-comment">//format将url对象变成url格式的字符</span><br></code></pre></td></tr></table></figure><h1 id="QueryString模块"><a href="#QueryString模块" class="headerlink" title="QueryString模块"></a>QueryString模块</h1><p>引入：let qs=require(‘querystring’);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">parse(query,<span class="hljs-string">&quot;%&quot;</span>,<span class="hljs-string">&#x27;@&#x27;</span>)<span class="hljs-comment">//将字符串转化为对象</span><br>qs.stringify(obj,<span class="hljs-string">&#x27;@&#x27;</span>,<span class="hljs-string">&quot;!&quot;</span>)<span class="hljs-comment">//将对象转为字符</span><br>qs.escape(query)<span class="hljs-comment">//将query 中的汉字或者特殊字符进行编码</span><br>qs.unescape(code)<span class="hljs-comment">//将query 中的汉字或者特殊字符进行解码</span><br></code></pre></td></tr></table></figure><h1 id="Path模块"><a href="#Path模块" class="headerlink" title="Path模块"></a>Path模块</h1><p>引入：const path=require(‘path’);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">path.join()<span class="hljs-comment">//实现路径拼接</span><br>path.join(__dirname,<span class="hljs-string">&#x27;./file.js&#x27;</span>)<span class="hljs-comment">//__dirname是当前文件的文件夹，可以拼接多个，以逗号隔开：</span><br>path.join(__dirname,<span class="hljs-string">&#x27;../&#x27;</span>,<span class="hljs-string">&#x27;./hw&#x27;</span>,<span class="hljs-string">&#x27;mail.js&#x27;</span>)<br>path.basename(<span class="hljs-string">&#x27;path&#x27;</span>)<span class="hljs-comment">//当前文件名</span><br>path.dirname(<span class="hljs-string">&#x27;path&#x27;</span>)<span class="hljs-comment">//当前文件夹名</span><br>path.extname(<span class="hljs-string">&#x27;path&#x27;</span>)<span class="hljs-comment">//拓展名</span><br></code></pre></td></tr></table></figure><h1 id="Events模块"><a href="#Events模块" class="headerlink" title="Events模块"></a>Events模块</h1><p>引入：const Event = require(‘events’);</p><p>首先要进行以下代码（与其他模块不同）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyEmitter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Event</span> </span>&#123;&#125;<br><br><span class="hljs-comment">// 类的继承</span><br><br><span class="hljs-keyword">const</span> myEmitter = <span class="hljs-keyword">new</span> MyEmitter();<br><br><span class="hljs-comment">// 实例化对象 new对象</span><br><br><span class="hljs-comment">// 添加对象监听</span><br><br><span class="hljs-keyword">let</span> callback=<span class="hljs-function">(<span class="hljs-params">food,food2</span>)=&gt;</span>&#123;<br><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;eat&#x27;</span>+food+food2);<br><br>&#125;<br></code></pre></td></tr></table></figure><p>然后，愉快的调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">myEmitter.on(<span class="hljs-string">&#x27;eat&#x27;</span>,callback);<span class="hljs-comment">//eat是事件名</span><br>myEmitter.emit(<span class="hljs-string">&#x27;eat&#x27;</span>,<span class="hljs-string">&#x27;aaaaa&#x27;</span>,<span class="hljs-string">&#x27;bbbb&#x27;</span>)<span class="hljs-comment">//可以传参</span><br>myEmitter.removeAllListeners()<span class="hljs-comment">//移除所有的事件</span><br>myEmitter.removeListener(<span class="hljs-string">&#x27;eat&#x27;</span>,callback);<span class="hljs-comment">//移除某个事件</span><br></code></pre></td></tr></table></figure><h1 id="Stream流"><a href="#Stream流" class="headerlink" title="Stream流"></a>Stream流</h1><p>首先需要引入：const fs=require(‘fs’);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> read=fs.createReadStream(<span class="hljs-string">&#x27;./events.js&#x27;</span>)<span class="hljs-comment">// 创建可读的流</span><br><span class="hljs-keyword">let</span>  write=fs.createWriteStream(<span class="hljs-string">&#x27;./events3.js&#x27;</span>)<span class="hljs-comment">// 创建可写的流</span><br></code></pre></td></tr></table></figure><p>读取Stream流并复制图片的例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">let</span> read = fs.createReadStream(<span class="hljs-string">&#x27;./file/test1.png&#x27;</span>);<span class="hljs-comment">//新建可读Stream流文件</span><br><span class="hljs-keyword">let</span> data = <span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-comment">//外置容器加载数据</span><br>read.setEncoding(<span class="hljs-string">&#x27;binary&#x27;</span>);<span class="hljs-comment">//转换成图片的格式，默认utf8</span><br>read.on(<span class="hljs-string">&#x27;data&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">d</span>)=&gt;</span>&#123;<br>    data+=d;<span class="hljs-comment">//每次流式传输数据</span><br>&#125;);<br>read.on(<span class="hljs-string">&#x27;end&#x27;</span>,<span class="hljs-function">()=&gt;</span>&#123;<br>    fs.writeFileSync(<span class="hljs-string">&#x27;./file/test2.png&#x27;</span>,data,<span class="hljs-string">&#x27;binary&#x27;</span>);<span class="hljs-comment">//将数据写入至文件</span><br>&#125;);<br></code></pre></td></tr></table></figure><p>读取Stream流并以可写流方式复制图片的例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">let</span> read = fs.createReadStream(<span class="hljs-string">&#x27;./file/test1.png&#x27;</span>);<span class="hljs-comment">//新建可读Stream流文件</span><br><span class="hljs-keyword">let</span> change = fs.createWriteStream(<span class="hljs-string">&#x27;./file/test3.png&#x27;</span>,<span class="hljs-string">&#x27;binary&#x27;</span>);<span class="hljs-comment">//新建可写Stream流文件</span><br>read.setEncoding(<span class="hljs-string">&#x27;binary&#x27;</span>);<span class="hljs-comment">//转换格式（图片）</span><br>read.on(<span class="hljs-string">&#x27;data&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">d</span>)=&gt;</span>&#123;<br>    change.write(d);<span class="hljs-comment">//流式存储,无需等到数据加载完，一边加载一边存储</span><br>&#125;);<br></code></pre></td></tr></table></figure><p>读取加写入配合pipe完成复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//达到文件流式复制</span><br><span class="hljs-keyword">const</span> fs=<span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>)<br><span class="hljs-keyword">let</span> read = fs.createReadStream(<span class="hljs-string">&#x27;./file/test1.png&#x27;</span>, <span class="hljs-string">&#x27;binary&#x27;</span>); <span class="hljs-comment">//新建可读Stream流文件</span><br><span class="hljs-keyword">let</span> change = fs.createWriteStream(<span class="hljs-string">&#x27;./file/test4.png&#x27;</span>, <span class="hljs-string">&#x27;binary&#x27;</span>); <span class="hljs-comment">//新建可写Stream流文件</span><br>read.pipe(change);<span class="hljs-comment">//将可读流传输至可写流文件中</span><br></code></pre></td></tr></table></figure><h1 id="Zlib模块"><a href="#Zlib模块" class="headerlink" title="Zlib模块"></a>Zlib模块</h1><p>引入：const zip = require(‘zlib’);和</p><p>const fs = require(‘fs’);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> gzip = zip.createGzip();<span class="hljs-comment">//新建文件压缩</span><br><span class="hljs-keyword">let</span> input = fs.ReadStream(<span class="hljs-string">&#x27;./test1.png&#x27;</span>);<span class="hljs-comment">//传入的文件</span><br><span class="hljs-keyword">let</span> output = fs.WriteStream(<span class="hljs-string">&#x27;./test1.gzip&#x27;</span>);<span class="hljs-comment">//将压缩好的文件生成</span><br>input.pipe(gzip).pipe(output);<span class="hljs-comment">//pipe流式传输</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node（五）File System小案例（删除文件夹及下面的所有文件）</title>
    <link href="/2018/11/28/Node%EF%BC%88%E4%BA%94%EF%BC%89File%20System%E5%B0%8F%E6%A1%88%E4%BE%8B%EF%BC%88%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8F%8A%E4%B8%8B%E9%9D%A2%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%EF%BC%89/"/>
    <url>/2018/11/28/Node%EF%BC%88%E4%BA%94%EF%BC%89File%20System%E5%B0%8F%E6%A1%88%E4%BE%8B%EF%BC%88%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8F%8A%E4%B8%8B%E9%9D%A2%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>附上代码，注释已加上（注意：要用同步的方式写，由于文件夹数不确定，所以需要所有的文件删除后才能删除文件夹，亲身经历，就是因为这个小问题，整了很久）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-comment">//封装一个立即执行函数，返回对象</span><br><span class="hljs-keyword">let</span> delDir = (<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br><span class="hljs-comment">//入口函数</span><br>        <span class="hljs-attr">init</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">url</span>) </span>&#123;<br>            <span class="hljs-built_in">this</span>.del(url);<br>        &#125;,<br><span class="hljs-comment">//删除函数，传入当前的文件夹作为参数，注意：要用同步，不然会报错（因为当文件夹内文件数不为0时，文件夹无法被删除）</span><br>        <span class="hljs-attr">del</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">url</span>) </span>&#123;<br><span class="hljs-comment">//新建一个数组用来存放遍历到的同层文件或文件夹</span><br>            <span class="hljs-keyword">var</span> files = [];<br>            files = fs.readdirSync(url);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; files.length; i++) &#123;<br>                <span class="hljs-keyword">var</span> path = url + <span class="hljs-string">&#x27;/&#x27;</span> + files[i];<br><span class="hljs-comment">//判断遍历到的某一项是文件还是文件夹，若为文件，则将其删除，若为文件夹，再次递归删除函数（直到所有的文件删除后才对文件夹进行操作（因为用了同步））</span><br>                <span class="hljs-keyword">if</span> (fs.statSync(path).isFile()) &#123;<br>                    fs.unlinkSync(path);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-built_in">this</span>.del(path);<br>                &#125;<br>            &#125;<br>            fs.rmdirSync(url);<br>        &#125;<br>    &#125;;<br>&#125;)();<br><span class="hljs-comment">//抛出模块对象</span><br><span class="hljs-built_in">module</span>.exports = delDir;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node（四）内置模块之File System</title>
    <link href="/2018/11/28/Node%EF%BC%88%E5%9B%9B%EF%BC%89%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97%E4%B9%8BFile%20System/"/>
    <url>/2018/11/28/Node%EF%BC%88%E5%9B%9B%EF%BC%89%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97%E4%B9%8BFile%20System/</url>
    
    <content type="html"><![CDATA[<h1 id="文件和文件夹的操作（fs模块）"><a href="#文件和文件夹的操作（fs模块）" class="headerlink" title="文件和文件夹的操作（fs模块）"></a><strong>文件和文件夹的操作（fs模块）</strong></h1><p>下面是fs的几种功能：<br>首先在js文件最上方引入模块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;fs&quot;</span>);<br></code></pre></td></tr></table></figure><h2 id="对文件夹操作："><a href="#对文件夹操作：" class="headerlink" title="对文件夹操作："></a>对文件夹操作：</h2><h3 id="1-新建文件夹"><a href="#1-新建文件夹" class="headerlink" title="1.新建文件夹"></a>1.新建文件夹</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//mkdirSync里的参数是文件路径和回调函数，Sync表示同步执行，若无Sync，则表示异步执行（下同）</span><br>fs.mkdirSync(<span class="hljs-string">&#x27;./files/third&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">err</span>)=&gt;</span>&#123;<br><span class="hljs-comment">//参数是报错内容，若无错误则没有</span><br>  <span class="hljs-keyword">if</span> (err) &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Error&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;OK&quot;</span>);<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="2-删除文件夹"><a href="#2-删除文件夹" class="headerlink" title="2.删除文件夹"></a>2.删除文件夹</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">fs.rmdirSync(<span class="hljs-string">&#x27;./files&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">err</span>)=&gt;</span>&#123;<br>  <span class="hljs-keyword">if</span> (err) &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Error&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;OK&quot;</span>);<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="3-读取文件夹"><a href="#3-读取文件夹" class="headerlink" title="3.读取文件夹"></a>3.读取文件夹</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">fs.readdir(<span class="hljs-string">&#x27;./files&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">err,file</span>)=&gt;</span>&#123;<br>  <span class="hljs-keyword">if</span> (err) &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Error&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(file);<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="4-查看文件夹的属性及状态"><a href="#4-查看文件夹的属性及状态" class="headerlink" title="4.查看文件夹的属性及状态"></a>4.查看文件夹的属性及状态</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//stats是返回的文件夹的属性</span><br>fs.stat(<span class="hljs-string">&#x27;./files&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">err,stats</span>)=&gt;</span>&#123;<br>  <span class="hljs-keyword">if</span> (err) &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Error&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-comment">//stats.isDirectory（）判断是否是文件夹；stats.isFile（）判断是否是文件</span><br>    <span class="hljs-built_in">console</span>.log(stats);<br>    <span class="hljs-built_in">console</span>.log(stats.isDirectory());<br>    <span class="hljs-built_in">console</span>.log(stats.isFile());<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="对文件操作："><a href="#对文件操作：" class="headerlink" title="对文件操作："></a>对文件操作：</h2><h3 id="1-新建文件"><a href="#1-新建文件" class="headerlink" title="1.新建文件"></a>1.新建文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//参数是新建文件的路径，文件内容，成功后回调函数</span><br>fs.writeFile(<span class="hljs-string">&#x27;./files/second/e.txt&#x27;</span>,<span class="hljs-string">&#x27;Hello_World&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">OK</span>)=&gt;</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;OK&quot;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="2-读取文件内容"><a href="#2-读取文件内容" class="headerlink" title="2.读取文件内容"></a>2.读取文件内容</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">fs.readFile(<span class="hljs-string">&#x27;./files/second/e.txt&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">OK,data</span>)=&gt;</span>&#123;<br>    <span class="hljs-comment">// 转换的是buffer，要用toString转换</span><br>        <span class="hljs-built_in">console</span>.log(data.toString());<br>&#125;);<br><br><span class="hljs-comment">//或用下面的</span><br>fs.readFile(<span class="hljs-string">&#x27;./files/a.txt&#x27;</span>,<span class="hljs-string">&#x27;utf8&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">OK,data</span>)=&gt;</span>&#123;<br>    <span class="hljs-comment">// 转换的是buffer，或者用utf8转换</span><br>        <span class="hljs-built_in">console</span>.log(data);<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="3-在文件后插入内容"><a href="#3-在文件后插入内容" class="headerlink" title="3.在文件后插入内容"></a>3.在文件后插入内容</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">fs.appendFile(<span class="hljs-string">&#x27;./files/b.txt&#x27;</span>,<span class="hljs-string">&#x27;hello~&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">OK</span>)=&gt;</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;ok&#x27;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="4-删除文件"><a href="#4-删除文件" class="headerlink" title="4.删除文件"></a>4.删除文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;fs&quot;</span>);<br>fs.unlink(<span class="hljs-string">&#x27;./files/f.txt&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">OK</span>)=&gt;</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;ok&#x27;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node.js(三)发送邮件模块（第三方模块）</title>
    <link href="/2018/11/27/Node.js(%E4%B8%89)%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E6%A8%A1%E5%9D%97%EF%BC%88%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A8%A1%E5%9D%97%EF%BC%89/"/>
    <url>/2018/11/27/Node.js(%E4%B8%89)%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E6%A8%A1%E5%9D%97%EF%BC%88%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A8%A1%E5%9D%97%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>模块文件：首先用Npm下载一个由Andris Reinman大佬的第三方模块nodemailer</p><p>修改了一下他的模块生成一个js文件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//引入模块</span><br><br><span class="hljs-keyword">const</span> nodemailer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;nodemailer&quot;</span>);<br><br><span class="hljs-comment">//新建对象</span><br><br><span class="hljs-keyword">let</span> obj = &#123;<br><br><span class="hljs-attr">transporter</span>: nodemailer.createTransport(&#123;<br><br><span class="hljs-attr">service</span>: <span class="hljs-string">&quot;qq&quot;</span>, <span class="hljs-comment">// 运营商 qq邮箱 网易//</span><br><br><span class="hljs-attr">port</span>: <span class="hljs-number">465</span>,<br><br><span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span>,<br><br><span class="hljs-attr">auth</span>: &#123;<br><br><span class="hljs-attr">user</span>: <span class="hljs-string">&quot;**********@qq.com&quot;</span>, <span class="hljs-comment">//发送方的邮箱</span><br><br><span class="hljs-attr">pass</span>: <span class="hljs-string">&quot;***************&quot;</span> <span class="hljs-comment">// pop3 授权码</span><br><br>&#125;<br><br>&#125;),<br><br><span class="hljs-comment">//传参（对方的mail地址,内容）</span><br><br><span class="hljs-attr">send</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">mail, content</span>) </span>&#123;<br><br>mailOptions = &#123;<br><br><span class="hljs-comment">//发送方的邮箱地址</span><br><br><span class="hljs-attr">from</span>: <span class="hljs-string">&#x27;&quot;Hello World~&quot; &lt;***********@qq.com&gt;&#x27;</span>,<br><br><span class="hljs-attr">to</span>: mail,<br><br><span class="hljs-attr">subject</span>: content,<br><br><span class="hljs-attr">text</span>: content,<br><br><span class="hljs-attr">html</span>: <span class="hljs-string">&quot;&lt;h1&gt;&quot;</span> + content + <span class="hljs-string">&quot;&lt;/h1&gt;&quot;</span><br><br>&#125;;<br><br><span class="hljs-built_in">this</span>.transporter.sendMail(mailOptions, <span class="hljs-function">(<span class="hljs-params">error, info</span>) =&gt;</span> &#123;<br><br><span class="hljs-keyword">if</span> (error) &#123;<br><br><span class="hljs-keyword">return</span> <span class="hljs-built_in">console</span>.log(error);<br><br>&#125;<br><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Message sent: %s&quot;</span>, info.messageId);<br><br>&#125;);<br><br>&#125;<br><br>&#125;;<br><br><span class="hljs-comment">//抛出对象以接收</span><br><br><span class="hljs-built_in">module</span>.exports = obj;<br></code></pre></td></tr></table></figure><p>//然后再新建一个js文件用来调用模块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> sendMassage = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./send.js&quot;</span>);<br><br>sendMassage.send(<span class="hljs-string">&quot;*********@qq.com&quot;</span>,<span class="hljs-string">&quot;Hello World~&quot;</span>);<br></code></pre></td></tr></table></figure><p>运行这个js文件，就可以给对方发送电子邮件啦</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node.js（二）模块使用</title>
    <link href="/2018/11/27/Node.js%EF%BC%88%E4%BA%8C%EF%BC%89%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8/"/>
    <url>/2018/11/27/Node.js%EF%BC%88%E4%BA%8C%EF%BC%89%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>节点有三种模块：内置模块（节点文档里有），第三方模块（大佬们自己写的模块），自定义模块（成为大佬的必经之路）;</p><p>1.创建自定义模块的方式：</p><p>新建一个JS文件，如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> obj = &#123;<br><br>  name： <span class="hljs-string">&#x27;AAA&#x27;</span>，<br><br>  SayHello：<span class="hljs-function"><span class="hljs-keyword">function</span>（）</span>&#123;<br><br>   <span class="hljs-built_in">console</span>.log（ “你好” + <span class="hljs-built_in">this</span>.name）<br><br>&#125;<br><br>&#125;<br><span class="hljs-comment">//抛出该对象</span><br><br><span class="hljs-built_in">module</span>.exports = obj <br></code></pre></td></tr></table></figure><p>使用自定义模块的方式：</p><p>之后在要调用的JS文件中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//新建一个对象接收模块对象</span><br><br><span class="hljs-keyword">const</span> obj = <span class="hljs-built_in">require</span>（<span class="hljs-string">&#x27;./ module.js&#x27;</span>）<span class="hljs-comment">//这是开始那个js文件的路径</span><br><br>执行<span class="hljs-built_in">console</span>.log（obj）<br><br>obj.sayhello（）;<br></code></pre></td></tr></table></figure><p>2.内置模块使用</p><p>const obj = require（’模块名’）</p><p>根据官方文档直接调用</p><p>3.第三方模块</p><p>先使用NPM或CNPM下载相关模块</p><p>使用const obj = require（’模块名’）引入;</p><p>之后根据第三方文档使用</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node（一）初识</title>
    <link href="/2018/11/27/Node%EF%BC%88%E4%B8%80%EF%BC%89%E5%88%9D%E8%AF%86/"/>
    <url>/2018/11/27/Node%EF%BC%88%E4%B8%80%EF%BC%89%E5%88%9D%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<p>Node是一个JavaScript的运行环境（平台）；不是一个框架或语言。<br>配置环境：可以先下载一个NVM（Node版本管理工具），GitHub上有下，附上地址（<a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a>）。<br>下载安装之后先在安装的根目录配置TXT文件（settings.txt）<br><code>root 配置为当前 nvm.exe 所在目录 path 配置为 node 快捷方式所在的目录 arch 配置为当前操作系统的位数（32/64)</code></p><p>然后配置环境变量（有时安装后自动配置了）；</p><p>通过 window+r 输入 sysdm.cpl；</p><p>在path中添加：</p><p><code>NVM_HOME = 当前 nvm.exe 所在目录</code></p><p><code>NVM_SYMLINK = node 快捷方式所在的目录</code></p><p><code>PATH += %NVM_HOME%;%NVM_SYMLINK%;</code></p><p>安装完成后在CMD中输入nvm -v查看是否安装成功。</p><p>然后就可以安装node.js了：nvm install node@版本号（会自动安装npm）</p><p>之后用nvm -ls查看当前nvm管理的node版本，用nvm use node版本号来切换版本<br>用nvm uninstall 版本号删除相应的node；</p><p>安装好了之后就可以开始上路啦~</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
