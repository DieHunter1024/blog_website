{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/lib/hint/hint.min.css","path":"lib/hint/hint.min.css","modified":0,"renderable":1},{"_id":"source/img/12.jpg","path":"img/12.jpg","modified":0,"renderable":0},{"_id":"source/img/13.jpg","path":"img/13.jpg","modified":0,"renderable":0},{"_id":"source/img/14.jpg","path":"img/14.jpg","modified":0,"renderable":0},{"_id":"source/img/15.jpg","path":"img/15.jpg","modified":0,"renderable":0},{"_id":"source/img/16.jpg","path":"img/16.jpg","modified":0,"renderable":0},{"_id":"source/img/1.jpg","path":"img/1.jpg","modified":0,"renderable":0},{"_id":"source/img/2.jpg","path":"img/2.jpg","modified":0,"renderable":0},{"_id":"source/img/5.jpg","path":"img/5.jpg","modified":0,"renderable":0},{"_id":"source/img/4.jpg","path":"img/4.jpg","modified":0,"renderable":0},{"_id":"source/img/3.jpg","path":"img/3.jpg","modified":0,"renderable":0},{"_id":"source/img/7.jpg","path":"img/7.jpg","modified":0,"renderable":0},{"_id":"source/img/6.jpg","path":"img/6.jpg","modified":0,"renderable":0},{"_id":"source/img/8.jpg","path":"img/8.jpg","modified":0,"renderable":0},{"_id":"source/img/11.jpg","path":"img/11.jpg","modified":0,"renderable":0},{"_id":"source/img/10.jpg","path":"img/10.jpg","modified":0,"renderable":0},{"_id":"source/img/9.jpg","path":"img/9.jpg","modified":0,"renderable":0},{"_id":"source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"37d83120607d7e56540f487bda7cc4788e1239fd","modified":1638927962147},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":499162500000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":499162500000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":499162500000},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":499162500000},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":499162500000},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":499162500000},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":499162500000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":499162500000},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":499162500000},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":499162500000},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":499162500000},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":499162500000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":499162500000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":499162500000},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":499162500000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":499162500000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":499162500000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":499162500000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":499162500000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":499162500000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":499162500000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":499162500000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":499162500000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":499162500000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":499162500000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":499162500000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":499162500000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":499162500000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":499162500000},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":499162500000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":499162500000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":499162500000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":499162500000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":499162500000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":499162500000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":499162500000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":499162500000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":499162500000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":499162500000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":499162500000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":499162500000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":499162500000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":499162500000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":499162500000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":499162500000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":499162500000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":499162500000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"df5b54be535593d5442cebafbea34eb9bd69b987","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"03cfa8e5f149514b57ef80dcb84eb7fea261370d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/README_en.md","hash":"ca8fd19a4948de1f253616a62c0e8a7d81f692f5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"cd5cbd070b6190aa0b4839400c0a1581e2654470","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"090104a18b2508ae2b89f14f645ca3f98b989b99","modified":1638927466004},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"13a6a799415fc2f6f69ebd1a399fb44426a5d641","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"a85dcc5cc21f9cab50df31e5001b8818ee62d1e2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a0c7984495d4f2d33b64adfa33adebbf768a5ac3","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"91020031a847c0361a6fd7ab990c7be4bf17529b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"21307b4137c3d9b04bb58243747e75af0abc5a71","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"689d9f4efd2a7f5edfd9b24561a7ade69d46617c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"1a6d415446da11dee5c5f400e7d67544fbe743ea","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"472d0813ca5b88000a7bc6039f33b7e27b5a3216","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"ad6fed7b646d3ca961db83db0fbe020e3a5d42ad","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"20c2a195a109d2a263b5fa6e79cbcc62932508ad","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"58291dfec65c36889dfce0ddc603540b67e4c598","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"666476260a2cead2cc2928d51977c4a7ba8de6bb","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7f566edf750241e62d7c54abfbb0c504fdab850a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"2a7b49f0f9aecf07550b5a0b99242aab5654cf2b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"1014b901d396f4fc445cb1ffc938d5380d894d71","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"79e3679a7069351a6172c281b9d09f59d7580484","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"0ad89eb7c92a822980fa9a85285e6d94ad845d1d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"af977ed0792508bb0766ea8afe82d34ef1e8fb3c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"16d33eb89ecf90f4046720fde5395d972c7ba1fd","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"e24b470f7aa8044499a4f5e39634e5dc43899011","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/archive-list.ejs","hash":"53a4f6029373a40394a87aba9284696a71610f90","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/beian.ejs","hash":"58b4bbe36386de4305a8da5ffd7d56802df23049","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/css.ejs","hash":"c363829a4b80f74fc1c565e41f6dab41c95006ea","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/head.ejs","hash":"7d0cf31f2595cfe6d5ad31d569654f21a00dfd77","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/nav.ejs","hash":"e71b3c4aa263163597d31b1f91e5a1a877084cfd","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/footer.ejs","hash":"a62278c38a310da495d96c39abacacef266945cb","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/post-meta.ejs","hash":"32a17edadeed40da6db21d2d8031bd47d2fc9bf4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/scripts.ejs","hash":"0ee838b6fcd895d21a29d9d67dbb99b752d623d1","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/search.ejs","hash":"cdd7919fa01f6ef7ccc09938d662ff3d77f5d999","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/statistics.ejs","hash":"920bc618d357d48d2b96f8758f6ae8f9488fc4d8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/toc.ejs","hash":"3d2fb5552f373e5a0c56bc356702d807bcbcb411","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"44faef3e77ab08b91e4c5c6f1cd9087a9faff443","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"6c37e9f1ac1d6d00b3c32794e02e244dba942cd9","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"cde964c8cd3217268a231de5e018a62c53c2e047","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"3aa5b4ea879cd34d3a32468d88da18d72cbcc8e0","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"8e33f915028ac56258f6999d19b1ad8d800cecfe","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"63468f7875c09d9557fe8315afc97175745d9087","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"649457796374c79e49a19bd541e4ad8e78fe8995","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"d5a8a59c8d1fd17d699a951e59c4ce9ae44c419d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"2520c6459b544a4e965b838f8095e2a84390a43c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"4a787cfce27045aa0a92ec22e84f2ccf30cabc4c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"633f0142c657805359b0197f287e12ae4bcde731","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"d058f30bd09b28769c4d8313428ff23dfc8d52dd","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"4a43f2700e91937650bef511fd438825b001c4c6","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/twikoo.ejs","hash":"1af53bc0be642610a3a4d4e7c05287854a821508","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/utterances.ejs","hash":"e1ed6530dfd7310f91060a75766a93ac3c39be3a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/valine.ejs","hash":"4052ab2a8f78efa92f0fe17abe8f66135943390a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/waline.ejs","hash":"21e00443054802e893aac1f668b69d5bb4b39b3a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/analytics.ejs","hash":"557077a8825fffc0a2c7fe2b29f319287950244f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/math.ejs","hash":"a7ed1d3079c32497c8955ca75f5fb6992e5ffb8b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/mermaid.ejs","hash":"10ed1f9a611449d37736e17c4e251127b38b3772","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/typed.ejs","hash":"ece659572cf4e12638a1607fca512c25098bbd82","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"3b2abc5f5e3b681874637e98e047dc4969eb1983","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"b5fd5a2d9c463eb59318af0f47c591c485b6ad27","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"28e186c32576eb3d5d923273471a001c47fe8071","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"deed966f38cf0c8dee3f72e5b1f2e878510db0e1","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"c1db1a4f9eca6e36b660530641e3a4fb6a30c8d8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"63aedd67d90d641cc672540db20ef615f528c9f1","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/lib/hint/hint.min.css","hash":"b38df228460ebfb4c0b6085336ee2878fe85aafe","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"6e6f22b664199772370b59ce1678b0c148b5849f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"cd55a2dce6b9d3e165a0a26d0b5bf7f649006bcd","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"32fb938d72b2d86159cb315a98b086bd17fa4415","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"d547ab0b91f84eb0acd0bc0c5d716ce17c30361a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/rewrite.styl","hash":"c66e0da2c0d05e76a686a77ab4e74f0d2e89777d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/categories.styl","hash":"1ab7db37c2f7dc7ccdb994dcb41c16a4c8920397","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"616c1f7147078c3d532dd1cfd2af09c0c3a816f0","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"7e32a3268accf3d524209c213e15e2d5d5e2e1a6","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post.styl","hash":"3a6b4f8a29648d9d2c1e99b52a7b42df3f15cf62","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/tag_plugin.styl","hash":"b89b96c8a6a433a6f372b42710554b05cab85a24","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"30f8fab95a5214d79df0ccc02b937df8bd885676","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"32d90bcc8bf2fd5d8d78e86a567973d4b69bcfa1","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copy-btn.styl","hash":"9f932ca3f9625c13aa5353f58319881e62c0c653","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"0ce7552dc4993926426019398d73e817cfd841a1","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"d8011325756eb6e4ce619b3e7b4d6d80c2de8a57","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"55e10a6965462f8f62f85e75fd5e143af02a4b44","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":499162500000},{"_id":"source/img/2.jpg","hash":"b45328293cebc13b30a9c5b48a878152834714f9","modified":1638887282441},{"_id":"source/img/12.jpg","hash":"ca583f70bde8ce64ec14c5657dcb93a0de3a0e6a","modified":1638887284581},{"_id":"source/img/6.jpg","hash":"97828757cd62e3b21cbd856e913274cb01e514b1","modified":1638887283397},{"_id":"source/img/11.jpg","hash":"c88d128ce79ebe413bfc7fe008af1254b924ecf3","modified":1638887284481},{"_id":"source/img/8.jpg","hash":"3a312f22b485167f4a3e678694588ba98dd6b45c","modified":1638887283851},{"_id":"source/img/9.jpg","hash":"3251f9f90b89caf1d03e538ccc8e86469d3c5aa6","modified":1638887284081},{"_id":"source/img/4.jpg","hash":"1f8cdf42291ad51904e1006643fc0ba500600c1e","modified":1638887282976},{"_id":"source/img/10.jpg","hash":"12b8846a3e3dd39d86e6d3f5527a85423a7c82d1","modified":1638887284318},{"_id":"source/img/14.jpg","hash":"764bd006efdd39c04157c16f13b240d41f9b2eee","modified":1638887285019},{"_id":"source/img/15.jpg","hash":"d6145b87325e559cd55a2c775454219381af497c","modified":1638887285224},{"_id":"source/img/3.jpg","hash":"e69c4eb8d79a115d91204956e2a64a919228ec76","modified":1638887282730},{"_id":"source/img/7.jpg","hash":"84f47420be3803df0ddf2462e81924ae4c8c5298","modified":1638887283640},{"_id":"source/img/16.jpg","hash":"5f9e549cb725c34339813f349a586c34b586df70","modified":1638887285430},{"_id":"source/img/1.jpg","hash":"85aef9a8eea8f0f96e70b374d6e0499d289fea9e","modified":1638887282264},{"_id":"source/img/13.jpg","hash":"0010d153110872a396ef17f4c7a78fea31a24ee1","modified":1638887284823},{"_id":"source/img/5.jpg","hash":"e9fb1fce2528a6750133468aeedd1d993d848a7a","modified":1638887283280},{"_id":"source/img/logo.svg","hash":"d172e0e7c59ce41bc567b0619510a6b8df694fef","modified":1638927453397},{"_id":"source/_posts/Node（一）初识.md","hash":"26ab6619b0b003f2cfcb0120b34d03b725a8191f","modified":1638945282968}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Node（一）初识","_content":"Node是一个JavaScript的运行环境（平台）；不是一个框架或语言。  \n配置环境：可以先下载一个NVM（Node版本管理工具），GitHub上有下，附上地址（[Releases · coreybutler/nvm-windows · GitHub](https://github.com/coreybutler/nvm-windows/releases \"Releases · coreybutler/nvm-windows · GitHub\")）。  \n下载安装之后先在安装的根目录配置TXT文件（settings.txt）  \n`root 配置为当前 nvm.exe 所在目录  \npath 配置为 node 快捷方式所在的目录  \narch 配置为当前操作系统的位数（32/64)`\n\n然后配置环境变量（有时安装后自动配置了）；\n\n通过 window+r 输入 sysdm.cpl；\n\n在path中添加：\n\n`NVM_HOME = 当前 nvm.exe 所在目录`\n\n`NVM_SYMLINK = node 快捷方式所在的目录`\n\n`PATH += %NVM_HOME%;%NVM_SYMLINK%;`\n\n安装完成后在CMD中输入nvm -v查看是否安装成功。\n\n然后就可以安装node.js了：nvm install node@版本号（会自动安装npm）\n\n之后用nvm -ls查看当前nvm管理的node版本，用nvm use node版本号来切换版本  \n用nvm uninstall 版本号删除相应的node；\n\n安装好了之后就可以开始上路啦~\n\n---\ncontent:\n<p id=\"main-toc\"><strong>目录</strong></p>\n\n<p id=\"-toc\" style=\"margin-left:80px;\"></p>\n\n<p id=\"%E5%89%8D%E8%A8%80%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"前言：\" href=\"#%E5%89%8D%E8%A8%80%EF%BC%9A\" title=\"前言：\">前言：</a></p>\n\n<p id=\"%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"首先是搭建一个本地Git代码仓库\" href=\"#%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\" title=\"首先是搭建一个本地Git代码仓库\">首先是搭建一个本地Git代码仓库</a></p>\n\n<p id=\"%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"接下来是Jenkins安装配置\" href=\"#%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE\" title=\"接下来是Jenkins安装配置\">接下来是Jenkins安装配置</a></p>\n\n<p id=\"%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"自由风格项目构建（window批处理命令）\" href=\"#%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89\" title=\"自由风格项目构建（window批处理命令）\">自由风格项目构建（window批处理命令）</a></p>\n\n<p id=\"%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"流水线项目构建\" href=\"#%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA\" title=\"流水线项目构建\">流水线项目构建</a></p>\n\n<p id=\"%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"写在最后\" href=\"#%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E\" title=\"写在最后\">写在最后</a></p>\n\n<hr id=\"hr-toc\" /><h3 id=\"%E5%89%8D%E8%A8%80%EF%BC%9A\"><strong>前言</strong></h3>\n\n<p><strong>一个好的部署工具能帮助开发者提升效率，节省时间，本文将与大家分享私有化Git仓库搭建与Jenkins操作项目部署</strong></p>\n\n<p><strong>准备工作：</strong></p>\n\n<ul><li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Java环境\" href=\"https://www.runoob.com/java/java-environment-setup.html\" title=\"Java环境\">Java环境</a></li>\n\t<li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Node环境\" href=\"https://blog.csdn.net/time_____/article/details/114024145\" title=\"Node环境\">Node环境</a></li>\n\t<li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Gitea\" href=\"https://gitea.io/zh-cn/\" title=\"Gitea\">Gitea</a></li>\n\t<li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Jenkins\" href=\"https://www.jenkins.io/zh/\" title=\"Jenkins\">Jenkins</a></li>\n\t<li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Nginx\" href=\"https://blog.csdn.net/time_____/article/details/114750930\" title=\"Nginx\">Nginx</a>(部署前端页面)</li>\n\t<li>服务器或者电脑（我这里是window系统+<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"公网映射\" href=\"https://blog.csdn.net/time_____/article/details/114664920\" title=\"公网映射\">公网映射</a>搭建的本地服务器）</li>\n</ul><h3 id=\"%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\"><strong>首先是搭建一个本地Git代码仓库</strong></h3>\n\n<p><strong>下载gitea并在需要安装的文件夹下打开，默认访问地址是127.0.0.1:3000</strong></p>\n\n<p><img alt=\"\" height=\"129\" src=\"https://img-blog.csdnimg.cn/d7f47672639740a59c0d31eca469b642.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"249\" /></p>\n\n<p><strong>打开后选择一下数据库，并在对应文件夹下生成db文件（新建空白txt文件，改后缀名为db）</strong></p>\n\n<p><img alt=\"\" height=\"128\" src=\"https://img-blog.csdnimg.cn/3ba4bb763c50461c968b6550dce953b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"273\" /></p>\n\n<p><strong>端口号和名称可以自定义改一下，最后点击安装，等待安装完成，再次进入，注册管理员账号就可以打开了，后面就和远程仓库操作方式一样了</strong></p>\n\n<p><img alt=\"\" height=\"103\" src=\"https://img-blog.csdnimg.cn/e1ee04fdb75b40348f7d69dcf2b45775.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"219\" /><img alt=\"\" height=\"101\" src=\"https://img-blog.csdnimg.cn/98c07ee92f9c407092b14fd640556f33.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"215\" /><img alt=\"\" height=\"100\" src=\"https://img-blog.csdnimg.cn/3349472540fc4e63b7dcbef4d1ace8b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"212\" /></p>\n\n<h3 id=\"%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE\"><strong>接下来是Jenkins安装配置</strong></h3>\n\n<p><strong>下载Jenkins并打开，这一步配置本地服务，设置本地端口号（默认是8080</strong><strong>），我这里是10240</strong></p>\n\n<p><img alt=\"\" height=\"239\" src=\"https://img-blog.csdnimg.cn/a328ca98998e4d939a109b2c7239c6cd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"308\" /><img alt=\"\" height=\"236\" src=\"https://img-blog.csdnimg.cn/28fd23c1a98d405ea8173c6a9fc30b4a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"304\" /></p>\n\n<p><strong>选择Java的jdk路径，并点击下一步安装</strong></p>\n\n<p> <img alt=\"\" height=\"248\" src=\"https://img-blog.csdnimg.cn/102bbee908774cc48f967c8f7eb7b503.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"319\" /><img alt=\"\" height=\"243\" src=\"https://img-blog.csdnimg.cn/32574d29dbaf45788486344cc7dfa1bc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"313\" /></p>\n\n<p><strong>完成后通过<a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"http://localhost:8000\" href=\"http://localhost:8000\" title=\"http://localhost:8000\">http://localhost:8000</a>进入主页，第一次进入Jenkins会进行初始化设置，直接复制本地地址用浏览器打开，然后输入到下面的输入框，点击继续（注意：如果考虑安装Jenkins数据的体积，可以新增环境变量JENKINS_HOME，值改为其他盘符路径，后续Jenkins的数据会保存在此）</strong></p>\n\n<p><img alt=\"\" height=\"117\" src=\"https://img-blog.csdnimg.cn/5ad300359a2c4db8abc93bef751c2b73.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"256\" /><img alt=\"\" height=\"108\" src=\"https://img-blog.csdnimg.cn/37e9c3ef083143fda20565a9ad199c05.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"236\" /></p>\n\n<p><strong>进入插件安装界面，建议先选择推荐插件，后续在插件管理中修改</strong></p>\n\n<p><img alt=\"\" height=\"128\" src=\"https://img-blog.csdnimg.cn/57ab16443acb400ca87bff4da97bec3e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"279\" /></p>\n\n<p><strong>插件全部安装完后，进入管理员用户创建页面，输入账号密码来创建第一个用户，也就是管理员</strong></p>\n\n<p><img alt=\"\" height=\"129\" src=\"https://img-blog.csdnimg.cn/80a9df12843641669b0d8ad8aedc1772.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"281\" /></p>\n\n<p><strong>进入首页，发现部分文字没有汉化，此时参照<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"这位博主\" href=\"https://blog.csdn.net/qq_37489565/article/details/104337073\" title=\"这位博主\">这位博主</a>的博客，安装Locale插件=&gt;设置语言为zh_US=&gt;重启=&gt;设置语言为zh_CN=&gt;刷新页面就可以了</strong></p>\n\n<p><img alt=\"\" height=\"142\" src=\"https://img-blog.csdnimg.cn/9d8026ebfa424db9b5f2fb398bc3b172.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"310\" /><img alt=\"\" height=\"143\" src=\"https://img-blog.csdnimg.cn/f5d4df3cbc07484faa26ea692f5afefa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"313\" /></p>\n\n<p><strong>如果不需要开机自启Jenkins，可以关闭自启软件，并且使用手动打开的方式：在Jenkins目录下输入java -jar jenkins.war --httpPort=10240，或者写成bat形式运行</strong></p>\n\n<p><strong>下面来说说</strong><strong>Jenkins的插件安装，在插件管理中安装Generic Webhook Trigger用于gitea构建触发器，Blue Ocean可以理解为Jenkins的一个皮肤（个人感觉界面看起来和操作使用很舒服）</strong></p>\n\n<p><img alt=\"\" height=\"134\" src=\"https://img-blog.csdnimg.cn/960705f34f6b4b319ffee20678ec81c4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"293\" /><img alt=\"\" height=\"136\" src=\"https://img-blog.csdnimg.cn/9b6b671dfeb84fe4887221f283483b14.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"297\" /></p>\n\n<p><strong>关于Jenkins准备工作，已经基本做完，下一步将使用gitea中的webhooks与Jenkins进行联系，达到代码自动部署的效果</strong></p>\n\n<p><strong>首先，我们先点新建任务，进入到任务列表，接下来，我将分享两种构建的方式，分别是批处理命令构建和pipeline流水线语法的方式构建</strong></p>\n\n<p><img alt=\"\" height=\"132\" src=\"https://img-blog.csdnimg.cn/977a8ca87afc4ba9b3284eb22fa1a00e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"288\" /><img alt=\"\" height=\"131\" src=\"https://img-blog.csdnimg.cn/8860c6dc1ec342f282eaa875aac00a08.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"286\" /></p>\n\n<h3 id=\"%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89\">自由风格项目构建（<strong>window批处理命令</strong>）</h3>\n\n<p><strong>在任务配置中输入gitea clone的地址，并且点击新建验证方式，我这里用的是用户名密码</strong></p>\n\n<p><img alt=\"\" height=\"159\" src=\"https://img-blog.csdnimg.cn/d8bb2bb699274ecdb97c5cee0eb2231e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"347\" /><img alt=\"\" height=\"149\" src=\"https://img-blog.csdnimg.cn/d668908c75954ccfbf1bcae3e230e3f6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"325\" /></p>\n\n<p><strong>在凭证配置中选择用户名密码，并输入gitea的用户名，密码，点击添加即可，添加后在源码管理中选择刚才添加的凭证方式</strong></p>\n\n<p><img alt=\"\" height=\"141\" src=\"https://img-blog.csdnimg.cn/e3079016d963486aa278846d9c33e13a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"307\" /><img alt=\"\" height=\"140\" src=\"https://img-blog.csdnimg.cn/b6f6eb357bc34ecc88b9001ce8b55204.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"306\" /></p>\n\n<p><strong>然后在构建中新增构建步骤，选择window批处理命令，并分别新建以下命令（npm i和npm run build一定要分开，否则在安装依赖时命令控制台会直接输入npm run build，此时是没有效果的，导致后面的命令不执行）</strong></p>\n\n<ol><li><strong>node -v<br />\n\tnpm -v</strong></li>\n\t<li><strong>npm i</strong></li>\n\t<li><strong>npm run build</strong></li>\n</ol><p><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/f4555c79fb3048a48d3dedec1ee71294.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/b0680831bc2145cba20a6012712a4c9c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/26daf43376b846b4838f5a4766e6f473.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"204\" /></p>\n\n<p><strong>最后点保存，并在工作台运行测试一下</strong></p>\n\n<p><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/e19284690a554fc4b1b5f6aad4575949.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /><img alt=\"\" height=\"92\" src=\"https://img-blog.csdnimg.cn/94ac638cbccd4176a2d0e283caf5d41c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"200\" /><img alt=\"\" height=\"92\" src=\"https://img-blog.csdnimg.cn/f231503fc4b944448961e0a1bc566b1c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"202\" /></p>\n\n<p><strong>运行完成后在对应路径下找到dist文件，就说明构建成功，我的项目路径是C:\\Users\\Administrator\\.jenkins\\workspace\\，所以就去该文件夹中找对应的文件</strong></p>\n\n<p> <img alt=\"\" height=\"162\" src=\"https://img-blog.csdnimg.cn/7ced6f335d3947c982e0402c2878d08c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"353\" /><img alt=\"\" height=\"154\" src=\"https://img-blog.csdnimg.cn/26348470a92c461db88bcd1491289380.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_19,color_FFFFFF,t_70,g_se,x_16\" width=\"278\" /></p>\n\n<p><strong>接下来，我们在gitea中添加webhooks用来触发Jenkins的构建</strong></p>\n\n<p><strong>先在Jenkins的任务配置中设置构建触发器，并且在下面的配置项中找到token配置，设置token并保存</strong></p>\n\n<p><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/2b4dd831f84b474e98fdcb2399e27c93.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/a1b1a5b87d56474ebf50fe6901f7b56a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /></p>\n\n<p><strong>然后在仓库设置中添加web钩子，设置请求的地址，地址与Jenkins构建触发器中示例地址一致</strong></p>\n\n<p><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/a9b7e1ee9dd1494c8a535f21eb682ed4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"204\" /><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/e5dd04bc03ad456bbcf4e137f07328f3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/b980502186694299b96dba82219ca2da.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"206\" /></p>\n\n<p><strong>触发条件我选择的是推送，即当前仓库收到推送信息就会通过webhooks通知Jenkins构建项目，最后测试一下是否能正常请求，请求成功后就会执行构建</strong></p>\n\n<p><img alt=\"\" height=\"104\" src=\"https://img-blog.csdnimg.cn/3052689299bf4f258f55c82f61943514.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"227\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/1882cdea77d442a69de746bb4e6bfd20.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/eadc088625294907ac5e192fbd716cfe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /></p>\n\n<p><strong>下面我贴出完整的前端部署命令供参考，整个流程是：推送代码后webhooks将触发Jenkins构建前端项目，构建完成后将项目复制到Nginx文件夹下并重启服务</strong></p>\n\n<pre>\n<code class=\"language-bash\">显示版本号\necho node version\nnode -v\necho npm version\nnpm -v</code></pre>\n\n<pre>\n<code class=\"language-bash\">安装依赖\nnpm i</code></pre>\n\n<pre>\n<code class=\"language-bash\">构建项目\nnpm run build</code></pre>\n\n<pre>\n<code class=\"language-bash\">复制构建好的项目至Nginx目录下\ncd /d \"D:\\Soft\\Nginx\\project\"\nrd /s/q vue_vite\nmd vue_vite\nxcopy \"D:\\Soft\\Jenkins\\jenkins\\workspace\\vue_vite_free_type\\dist\" \"D:\\Soft\\Nginx\\project\\vue_vite\" /E /Y</code></pre>\n\n<p><strong>不改变nginx配置的情况下，下面的可以不需要 </strong></p>\n\n<pre>\n<code class=\"language-bash\">重启nginx服务\ncd /d \"D:\\Soft\\Nginx\"\nnginx -s reload\nnginx -s quit\ntasklist | find /i \"nginx.exe\" &gt;nul 2&gt;nul &amp;&amp; goto isAlive || goto isKilled\n:isKilled\nstart nginx\n:isAlive\ntaskkill /f /t /im nginx.exe\nstart nginx\n</code></pre>\n\n<p><strong>以上就是使用window批处理命令构建前端的整个流程，下面是使用pipeline构建项目并部署的流程</strong></p>\n\n<h3 id=\"%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA\">流水线项目构建</h3>\n\n<p><strong>流水线配置和批处理命令一样，新建流水线任务，配置webhooks和token，pipeline的好处就是将每块步骤分开，直观的看到项目的构建过程</strong></p>\n\n<p><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/8ba2bd513e6f466a9ec8503af23acf62.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"215\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/f192901dd95448898d0e4e202f288bcd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/ebdcc6f3a2b347a2ad20299f185edcd5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /></p>\n\n<p><strong>然后就是构建流水线脚本，这里放出我配置的一段供大家参考。</strong></p>\n\n<pre>\n<code class=\"language-Groovy\">\npipeline {\n    agent any\n   stages {\n      stage('pull') {\n         steps {\n            echo 'pull code start'\n            git branch: 'master',\n                credentialsId: '7196d35f-xxxxxxxxxxxxxxxxxxxx-c7936ddd3dd4', \n                url: 'http://localhost:10241/xxxxxxx/vite--vue30.git'\n\n         }\n      }\n      stage('build') {\n         steps {\n            echo \"node version\"\n            bat \"node -v\"\n            echo 'npm version'\n            bat 'npm -v'\n            echo 'install start......'\n            bat \"npm i\"\n            echo 'build start......'\n            bat 'npm run build'\n            echo 'build finish......'\n         }\n      }\n      stage('deploy') {\n         steps { \n            dir('d:/Soft/Nginx/project') {\n                bat \"rd /s/q vue_vite\"\n                bat \"md vue_vite\"\n            }\n            bat('xcopy \"D:/Soft/Jenkins/jenkins/workspace/vue_vite_pipeline/dist\" \"D:/Soft/Nginx/project/vue_vite\" /O /X /E /H /K')\n            dir('d:/Soft/Nginx') {\n                bat('start run.bat')\n            }\n            echo 'deploy success'\n         }\n         \n      }\n   }\n}</code></pre>\n\n<p><strong>其中run.bat的内容如下：</strong></p>\n\n<pre>\n<code class=\"language-bash\">nginx -s reload\nnginx -s quit\ntasklist | find /i \"nginx.exe\" &gt;nul 2&gt;nul &amp;&amp; goto isAlive || goto isKilled\n:isKilled\nstart nginx\n:isAlive\ntaskkill /f /t /im nginx.exe\nstart nginx</code></pre>\n\n<p><strong>保存完成后来到流水线列表点击运行，程序就会开始运行。运行结束后界面会变成绿色，失败会变成红色</strong></p>\n\n<p><img alt=\"\" height=\"99\" src=\"https://img-blog.csdnimg.cn/9a47f0697f6f4fdd93686cb6444dbbdb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"218\" /><img alt=\"\" height=\"99\" src=\"https://img-blog.csdnimg.cn/3b4f03fda3e14fb1aa49239bf0727f68.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"217\" /><img alt=\"\" height=\"100\" src=\"https://img-blog.csdnimg.cn/db5b1e43482d4f45a22610476e058712.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"218\" /></p>\n\n<p><strong>最后输入网址就可以看到部署效果，至此，前端自动化部署就介绍这么多，有兴趣的小伙伴可以自己试试，此方法同样适用node项目部署（建议搭配<span><a class=\"link-info\" href=\"https://pm2.keymetrics.io/\">pm2</a></span>管理node进程），需要把build命令去掉即可。</strong></p>\n\n<p><img alt=\"\" height=\"111\" src=\"https://img-blog.csdnimg.cn/86ba2aee1e90435bbb7e2fada3b41798.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"242\" /></p>\n\n<h3 id=\"%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E\"><strong>写在最后</strong></h3>\n\n<p><strong>gitee和github等远程仓库同样也支持webhooks或actions，有兴趣的小伙伴可以把Jenkins暴露在公网上配置远程服务，安利一波<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"内网穿透搭建\" href=\"https://blog.csdn.net/time_____/article/details/114664920\" title=\"内网穿透搭建\">内网穿透搭建</a></strong></p>\n\n<p><strong>最后，感谢你阅读完这篇文章，如果这篇文章有帮助到你，请支持一下博主~你的支持就是博主分享文章的动力！</strong></p>\n---","source":"_posts/Node（一）初识.md","raw":"---\ntitle: Node（一）初识\n---\nNode是一个JavaScript的运行环境（平台）；不是一个框架或语言。  \n配置环境：可以先下载一个NVM（Node版本管理工具），GitHub上有下，附上地址（[Releases · coreybutler/nvm-windows · GitHub](https://github.com/coreybutler/nvm-windows/releases \"Releases · coreybutler/nvm-windows · GitHub\")）。  \n下载安装之后先在安装的根目录配置TXT文件（settings.txt）  \n`root 配置为当前 nvm.exe 所在目录  \npath 配置为 node 快捷方式所在的目录  \narch 配置为当前操作系统的位数（32/64)`\n\n然后配置环境变量（有时安装后自动配置了）；\n\n通过 window+r 输入 sysdm.cpl；\n\n在path中添加：\n\n`NVM_HOME = 当前 nvm.exe 所在目录`\n\n`NVM_SYMLINK = node 快捷方式所在的目录`\n\n`PATH += %NVM_HOME%;%NVM_SYMLINK%;`\n\n安装完成后在CMD中输入nvm -v查看是否安装成功。\n\n然后就可以安装node.js了：nvm install node@版本号（会自动安装npm）\n\n之后用nvm -ls查看当前nvm管理的node版本，用nvm use node版本号来切换版本  \n用nvm uninstall 版本号删除相应的node；\n\n安装好了之后就可以开始上路啦~\n\n---\ncontent:\n<p id=\"main-toc\"><strong>目录</strong></p>\n\n<p id=\"-toc\" style=\"margin-left:80px;\"></p>\n\n<p id=\"%E5%89%8D%E8%A8%80%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"前言：\" href=\"#%E5%89%8D%E8%A8%80%EF%BC%9A\" title=\"前言：\">前言：</a></p>\n\n<p id=\"%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"首先是搭建一个本地Git代码仓库\" href=\"#%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\" title=\"首先是搭建一个本地Git代码仓库\">首先是搭建一个本地Git代码仓库</a></p>\n\n<p id=\"%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"接下来是Jenkins安装配置\" href=\"#%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE\" title=\"接下来是Jenkins安装配置\">接下来是Jenkins安装配置</a></p>\n\n<p id=\"%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"自由风格项目构建（window批处理命令）\" href=\"#%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89\" title=\"自由风格项目构建（window批处理命令）\">自由风格项目构建（window批处理命令）</a></p>\n\n<p id=\"%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"流水线项目构建\" href=\"#%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA\" title=\"流水线项目构建\">流水线项目构建</a></p>\n\n<p id=\"%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"写在最后\" href=\"#%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E\" title=\"写在最后\">写在最后</a></p>\n\n<hr id=\"hr-toc\" /><h3 id=\"%E5%89%8D%E8%A8%80%EF%BC%9A\"><strong>前言</strong></h3>\n\n<p><strong>一个好的部署工具能帮助开发者提升效率，节省时间，本文将与大家分享私有化Git仓库搭建与Jenkins操作项目部署</strong></p>\n\n<p><strong>准备工作：</strong></p>\n\n<ul><li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Java环境\" href=\"https://www.runoob.com/java/java-environment-setup.html\" title=\"Java环境\">Java环境</a></li>\n\t<li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Node环境\" href=\"https://blog.csdn.net/time_____/article/details/114024145\" title=\"Node环境\">Node环境</a></li>\n\t<li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Gitea\" href=\"https://gitea.io/zh-cn/\" title=\"Gitea\">Gitea</a></li>\n\t<li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Jenkins\" href=\"https://www.jenkins.io/zh/\" title=\"Jenkins\">Jenkins</a></li>\n\t<li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Nginx\" href=\"https://blog.csdn.net/time_____/article/details/114750930\" title=\"Nginx\">Nginx</a>(部署前端页面)</li>\n\t<li>服务器或者电脑（我这里是window系统+<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"公网映射\" href=\"https://blog.csdn.net/time_____/article/details/114664920\" title=\"公网映射\">公网映射</a>搭建的本地服务器）</li>\n</ul><h3 id=\"%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\"><strong>首先是搭建一个本地Git代码仓库</strong></h3>\n\n<p><strong>下载gitea并在需要安装的文件夹下打开，默认访问地址是127.0.0.1:3000</strong></p>\n\n<p><img alt=\"\" height=\"129\" src=\"https://img-blog.csdnimg.cn/d7f47672639740a59c0d31eca469b642.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"249\" /></p>\n\n<p><strong>打开后选择一下数据库，并在对应文件夹下生成db文件（新建空白txt文件，改后缀名为db）</strong></p>\n\n<p><img alt=\"\" height=\"128\" src=\"https://img-blog.csdnimg.cn/3ba4bb763c50461c968b6550dce953b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"273\" /></p>\n\n<p><strong>端口号和名称可以自定义改一下，最后点击安装，等待安装完成，再次进入，注册管理员账号就可以打开了，后面就和远程仓库操作方式一样了</strong></p>\n\n<p><img alt=\"\" height=\"103\" src=\"https://img-blog.csdnimg.cn/e1ee04fdb75b40348f7d69dcf2b45775.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"219\" /><img alt=\"\" height=\"101\" src=\"https://img-blog.csdnimg.cn/98c07ee92f9c407092b14fd640556f33.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"215\" /><img alt=\"\" height=\"100\" src=\"https://img-blog.csdnimg.cn/3349472540fc4e63b7dcbef4d1ace8b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"212\" /></p>\n\n<h3 id=\"%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE\"><strong>接下来是Jenkins安装配置</strong></h3>\n\n<p><strong>下载Jenkins并打开，这一步配置本地服务，设置本地端口号（默认是8080</strong><strong>），我这里是10240</strong></p>\n\n<p><img alt=\"\" height=\"239\" src=\"https://img-blog.csdnimg.cn/a328ca98998e4d939a109b2c7239c6cd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"308\" /><img alt=\"\" height=\"236\" src=\"https://img-blog.csdnimg.cn/28fd23c1a98d405ea8173c6a9fc30b4a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"304\" /></p>\n\n<p><strong>选择Java的jdk路径，并点击下一步安装</strong></p>\n\n<p> <img alt=\"\" height=\"248\" src=\"https://img-blog.csdnimg.cn/102bbee908774cc48f967c8f7eb7b503.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"319\" /><img alt=\"\" height=\"243\" src=\"https://img-blog.csdnimg.cn/32574d29dbaf45788486344cc7dfa1bc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"313\" /></p>\n\n<p><strong>完成后通过<a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"http://localhost:8000\" href=\"http://localhost:8000\" title=\"http://localhost:8000\">http://localhost:8000</a>进入主页，第一次进入Jenkins会进行初始化设置，直接复制本地地址用浏览器打开，然后输入到下面的输入框，点击继续（注意：如果考虑安装Jenkins数据的体积，可以新增环境变量JENKINS_HOME，值改为其他盘符路径，后续Jenkins的数据会保存在此）</strong></p>\n\n<p><img alt=\"\" height=\"117\" src=\"https://img-blog.csdnimg.cn/5ad300359a2c4db8abc93bef751c2b73.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"256\" /><img alt=\"\" height=\"108\" src=\"https://img-blog.csdnimg.cn/37e9c3ef083143fda20565a9ad199c05.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"236\" /></p>\n\n<p><strong>进入插件安装界面，建议先选择推荐插件，后续在插件管理中修改</strong></p>\n\n<p><img alt=\"\" height=\"128\" src=\"https://img-blog.csdnimg.cn/57ab16443acb400ca87bff4da97bec3e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"279\" /></p>\n\n<p><strong>插件全部安装完后，进入管理员用户创建页面，输入账号密码来创建第一个用户，也就是管理员</strong></p>\n\n<p><img alt=\"\" height=\"129\" src=\"https://img-blog.csdnimg.cn/80a9df12843641669b0d8ad8aedc1772.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"281\" /></p>\n\n<p><strong>进入首页，发现部分文字没有汉化，此时参照<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"这位博主\" href=\"https://blog.csdn.net/qq_37489565/article/details/104337073\" title=\"这位博主\">这位博主</a>的博客，安装Locale插件=&gt;设置语言为zh_US=&gt;重启=&gt;设置语言为zh_CN=&gt;刷新页面就可以了</strong></p>\n\n<p><img alt=\"\" height=\"142\" src=\"https://img-blog.csdnimg.cn/9d8026ebfa424db9b5f2fb398bc3b172.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"310\" /><img alt=\"\" height=\"143\" src=\"https://img-blog.csdnimg.cn/f5d4df3cbc07484faa26ea692f5afefa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"313\" /></p>\n\n<p><strong>如果不需要开机自启Jenkins，可以关闭自启软件，并且使用手动打开的方式：在Jenkins目录下输入java -jar jenkins.war --httpPort=10240，或者写成bat形式运行</strong></p>\n\n<p><strong>下面来说说</strong><strong>Jenkins的插件安装，在插件管理中安装Generic Webhook Trigger用于gitea构建触发器，Blue Ocean可以理解为Jenkins的一个皮肤（个人感觉界面看起来和操作使用很舒服）</strong></p>\n\n<p><img alt=\"\" height=\"134\" src=\"https://img-blog.csdnimg.cn/960705f34f6b4b319ffee20678ec81c4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"293\" /><img alt=\"\" height=\"136\" src=\"https://img-blog.csdnimg.cn/9b6b671dfeb84fe4887221f283483b14.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"297\" /></p>\n\n<p><strong>关于Jenkins准备工作，已经基本做完，下一步将使用gitea中的webhooks与Jenkins进行联系，达到代码自动部署的效果</strong></p>\n\n<p><strong>首先，我们先点新建任务，进入到任务列表，接下来，我将分享两种构建的方式，分别是批处理命令构建和pipeline流水线语法的方式构建</strong></p>\n\n<p><img alt=\"\" height=\"132\" src=\"https://img-blog.csdnimg.cn/977a8ca87afc4ba9b3284eb22fa1a00e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"288\" /><img alt=\"\" height=\"131\" src=\"https://img-blog.csdnimg.cn/8860c6dc1ec342f282eaa875aac00a08.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"286\" /></p>\n\n<h3 id=\"%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89\">自由风格项目构建（<strong>window批处理命令</strong>）</h3>\n\n<p><strong>在任务配置中输入gitea clone的地址，并且点击新建验证方式，我这里用的是用户名密码</strong></p>\n\n<p><img alt=\"\" height=\"159\" src=\"https://img-blog.csdnimg.cn/d8bb2bb699274ecdb97c5cee0eb2231e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"347\" /><img alt=\"\" height=\"149\" src=\"https://img-blog.csdnimg.cn/d668908c75954ccfbf1bcae3e230e3f6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"325\" /></p>\n\n<p><strong>在凭证配置中选择用户名密码，并输入gitea的用户名，密码，点击添加即可，添加后在源码管理中选择刚才添加的凭证方式</strong></p>\n\n<p><img alt=\"\" height=\"141\" src=\"https://img-blog.csdnimg.cn/e3079016d963486aa278846d9c33e13a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"307\" /><img alt=\"\" height=\"140\" src=\"https://img-blog.csdnimg.cn/b6f6eb357bc34ecc88b9001ce8b55204.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"306\" /></p>\n\n<p><strong>然后在构建中新增构建步骤，选择window批处理命令，并分别新建以下命令（npm i和npm run build一定要分开，否则在安装依赖时命令控制台会直接输入npm run build，此时是没有效果的，导致后面的命令不执行）</strong></p>\n\n<ol><li><strong>node -v<br />\n\tnpm -v</strong></li>\n\t<li><strong>npm i</strong></li>\n\t<li><strong>npm run build</strong></li>\n</ol><p><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/f4555c79fb3048a48d3dedec1ee71294.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/b0680831bc2145cba20a6012712a4c9c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/26daf43376b846b4838f5a4766e6f473.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"204\" /></p>\n\n<p><strong>最后点保存，并在工作台运行测试一下</strong></p>\n\n<p><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/e19284690a554fc4b1b5f6aad4575949.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /><img alt=\"\" height=\"92\" src=\"https://img-blog.csdnimg.cn/94ac638cbccd4176a2d0e283caf5d41c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"200\" /><img alt=\"\" height=\"92\" src=\"https://img-blog.csdnimg.cn/f231503fc4b944448961e0a1bc566b1c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"202\" /></p>\n\n<p><strong>运行完成后在对应路径下找到dist文件，就说明构建成功，我的项目路径是C:\\Users\\Administrator\\.jenkins\\workspace\\，所以就去该文件夹中找对应的文件</strong></p>\n\n<p> <img alt=\"\" height=\"162\" src=\"https://img-blog.csdnimg.cn/7ced6f335d3947c982e0402c2878d08c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"353\" /><img alt=\"\" height=\"154\" src=\"https://img-blog.csdnimg.cn/26348470a92c461db88bcd1491289380.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_19,color_FFFFFF,t_70,g_se,x_16\" width=\"278\" /></p>\n\n<p><strong>接下来，我们在gitea中添加webhooks用来触发Jenkins的构建</strong></p>\n\n<p><strong>先在Jenkins的任务配置中设置构建触发器，并且在下面的配置项中找到token配置，设置token并保存</strong></p>\n\n<p><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/2b4dd831f84b474e98fdcb2399e27c93.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/a1b1a5b87d56474ebf50fe6901f7b56a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /></p>\n\n<p><strong>然后在仓库设置中添加web钩子，设置请求的地址，地址与Jenkins构建触发器中示例地址一致</strong></p>\n\n<p><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/a9b7e1ee9dd1494c8a535f21eb682ed4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"204\" /><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/e5dd04bc03ad456bbcf4e137f07328f3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/b980502186694299b96dba82219ca2da.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"206\" /></p>\n\n<p><strong>触发条件我选择的是推送，即当前仓库收到推送信息就会通过webhooks通知Jenkins构建项目，最后测试一下是否能正常请求，请求成功后就会执行构建</strong></p>\n\n<p><img alt=\"\" height=\"104\" src=\"https://img-blog.csdnimg.cn/3052689299bf4f258f55c82f61943514.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"227\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/1882cdea77d442a69de746bb4e6bfd20.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/eadc088625294907ac5e192fbd716cfe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /></p>\n\n<p><strong>下面我贴出完整的前端部署命令供参考，整个流程是：推送代码后webhooks将触发Jenkins构建前端项目，构建完成后将项目复制到Nginx文件夹下并重启服务</strong></p>\n\n<pre>\n<code class=\"language-bash\">显示版本号\necho node version\nnode -v\necho npm version\nnpm -v</code></pre>\n\n<pre>\n<code class=\"language-bash\">安装依赖\nnpm i</code></pre>\n\n<pre>\n<code class=\"language-bash\">构建项目\nnpm run build</code></pre>\n\n<pre>\n<code class=\"language-bash\">复制构建好的项目至Nginx目录下\ncd /d \"D:\\Soft\\Nginx\\project\"\nrd /s/q vue_vite\nmd vue_vite\nxcopy \"D:\\Soft\\Jenkins\\jenkins\\workspace\\vue_vite_free_type\\dist\" \"D:\\Soft\\Nginx\\project\\vue_vite\" /E /Y</code></pre>\n\n<p><strong>不改变nginx配置的情况下，下面的可以不需要 </strong></p>\n\n<pre>\n<code class=\"language-bash\">重启nginx服务\ncd /d \"D:\\Soft\\Nginx\"\nnginx -s reload\nnginx -s quit\ntasklist | find /i \"nginx.exe\" &gt;nul 2&gt;nul &amp;&amp; goto isAlive || goto isKilled\n:isKilled\nstart nginx\n:isAlive\ntaskkill /f /t /im nginx.exe\nstart nginx\n</code></pre>\n\n<p><strong>以上就是使用window批处理命令构建前端的整个流程，下面是使用pipeline构建项目并部署的流程</strong></p>\n\n<h3 id=\"%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA\">流水线项目构建</h3>\n\n<p><strong>流水线配置和批处理命令一样，新建流水线任务，配置webhooks和token，pipeline的好处就是将每块步骤分开，直观的看到项目的构建过程</strong></p>\n\n<p><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/8ba2bd513e6f466a9ec8503af23acf62.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"215\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/f192901dd95448898d0e4e202f288bcd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/ebdcc6f3a2b347a2ad20299f185edcd5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /></p>\n\n<p><strong>然后就是构建流水线脚本，这里放出我配置的一段供大家参考。</strong></p>\n\n<pre>\n<code class=\"language-Groovy\">\npipeline {\n    agent any\n   stages {\n      stage('pull') {\n         steps {\n            echo 'pull code start'\n            git branch: 'master',\n                credentialsId: '7196d35f-xxxxxxxxxxxxxxxxxxxx-c7936ddd3dd4', \n                url: 'http://localhost:10241/xxxxxxx/vite--vue30.git'\n\n         }\n      }\n      stage('build') {\n         steps {\n            echo \"node version\"\n            bat \"node -v\"\n            echo 'npm version'\n            bat 'npm -v'\n            echo 'install start......'\n            bat \"npm i\"\n            echo 'build start......'\n            bat 'npm run build'\n            echo 'build finish......'\n         }\n      }\n      stage('deploy') {\n         steps { \n            dir('d:/Soft/Nginx/project') {\n                bat \"rd /s/q vue_vite\"\n                bat \"md vue_vite\"\n            }\n            bat('xcopy \"D:/Soft/Jenkins/jenkins/workspace/vue_vite_pipeline/dist\" \"D:/Soft/Nginx/project/vue_vite\" /O /X /E /H /K')\n            dir('d:/Soft/Nginx') {\n                bat('start run.bat')\n            }\n            echo 'deploy success'\n         }\n         \n      }\n   }\n}</code></pre>\n\n<p><strong>其中run.bat的内容如下：</strong></p>\n\n<pre>\n<code class=\"language-bash\">nginx -s reload\nnginx -s quit\ntasklist | find /i \"nginx.exe\" &gt;nul 2&gt;nul &amp;&amp; goto isAlive || goto isKilled\n:isKilled\nstart nginx\n:isAlive\ntaskkill /f /t /im nginx.exe\nstart nginx</code></pre>\n\n<p><strong>保存完成后来到流水线列表点击运行，程序就会开始运行。运行结束后界面会变成绿色，失败会变成红色</strong></p>\n\n<p><img alt=\"\" height=\"99\" src=\"https://img-blog.csdnimg.cn/9a47f0697f6f4fdd93686cb6444dbbdb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"218\" /><img alt=\"\" height=\"99\" src=\"https://img-blog.csdnimg.cn/3b4f03fda3e14fb1aa49239bf0727f68.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"217\" /><img alt=\"\" height=\"100\" src=\"https://img-blog.csdnimg.cn/db5b1e43482d4f45a22610476e058712.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"218\" /></p>\n\n<p><strong>最后输入网址就可以看到部署效果，至此，前端自动化部署就介绍这么多，有兴趣的小伙伴可以自己试试，此方法同样适用node项目部署（建议搭配<span><a class=\"link-info\" href=\"https://pm2.keymetrics.io/\">pm2</a></span>管理node进程），需要把build命令去掉即可。</strong></p>\n\n<p><img alt=\"\" height=\"111\" src=\"https://img-blog.csdnimg.cn/86ba2aee1e90435bbb7e2fada3b41798.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"242\" /></p>\n\n<h3 id=\"%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E\"><strong>写在最后</strong></h3>\n\n<p><strong>gitee和github等远程仓库同样也支持webhooks或actions，有兴趣的小伙伴可以把Jenkins暴露在公网上配置远程服务，安利一波<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"内网穿透搭建\" href=\"https://blog.csdn.net/time_____/article/details/114664920\" title=\"内网穿透搭建\">内网穿透搭建</a></strong></p>\n\n<p><strong>最后，感谢你阅读完这篇文章，如果这篇文章有帮助到你，请支持一下博主~你的支持就是博主分享文章的动力！</strong></p>\n---","slug":"Node（一）初识","published":1,"date":"2021-12-07T08:37:11.796Z","updated":"2021-12-08T06:34:42.968Z","_id":"ckwwzh0ce0000rkuy708e23kv","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Node是一个JavaScript的运行环境（平台）；不是一个框架或语言。<br>配置环境：可以先下载一个NVM（Node版本管理工具），GitHub上有下，附上地址（<a href=\"https://github.com/coreybutler/nvm-windows/releases\" title=\"Releases · coreybutler/nvm-windows · GitHub\">Releases · coreybutler/nvm-windows · GitHub</a>）。<br>下载安装之后先在安装的根目录配置TXT文件（settings.txt）<br><code>root 配置为当前 nvm.exe 所在目录   path 配置为 node 快捷方式所在的目录   arch 配置为当前操作系统的位数（32/64)</code></p>\n<p>然后配置环境变量（有时安装后自动配置了）；</p>\n<p>通过 window+r 输入 sysdm.cpl；</p>\n<p>在path中添加：</p>\n<p><code>NVM_HOME = 当前 nvm.exe 所在目录</code></p>\n<p><code>NVM_SYMLINK = node 快捷方式所在的目录</code></p>\n<p><code>PATH += %NVM_HOME%;%NVM_SYMLINK%;</code></p>\n<p>安装完成后在CMD中输入nvm -v查看是否安装成功。</p>\n<p>然后就可以安装node.js了：nvm install node@版本号（会自动安装npm）</p>\n<p>之后用nvm -ls查看当前nvm管理的node版本，用nvm use node版本号来切换版本<br>用nvm uninstall 版本号删除相应的node；</p>\n<p>安装好了之后就可以开始上路啦~</p>\n<hr>\n<p>content:</p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n\n<p id=\"-toc\" style=\"margin-left:80px;\"></p>\n\n<p id=\"%E5%89%8D%E8%A8%80%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"前言：\" href=\"#%E5%89%8D%E8%A8%80%EF%BC%9A\" title=\"前言：\">前言：</a></p>\n\n<p id=\"%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"首先是搭建一个本地Git代码仓库\" href=\"#%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\" title=\"首先是搭建一个本地Git代码仓库\">首先是搭建一个本地Git代码仓库</a></p>\n\n<p id=\"%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"接下来是Jenkins安装配置\" href=\"#%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE\" title=\"接下来是Jenkins安装配置\">接下来是Jenkins安装配置</a></p>\n\n<p id=\"%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"自由风格项目构建（window批处理命令）\" href=\"#%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89\" title=\"自由风格项目构建（window批处理命令）\">自由风格项目构建（window批处理命令）</a></p>\n\n<p id=\"%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"流水线项目构建\" href=\"#%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA\" title=\"流水线项目构建\">流水线项目构建</a></p>\n\n<p id=\"%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"写在最后\" href=\"#%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E\" title=\"写在最后\">写在最后</a></p>\n\n<hr id=\"hr-toc\" /><h3 id=\"%E5%89%8D%E8%A8%80%EF%BC%9A\"><strong>前言</strong></h3>\n\n<p><strong>一个好的部署工具能帮助开发者提升效率，节省时间，本文将与大家分享私有化Git仓库搭建与Jenkins操作项目部署</strong></p>\n\n<p><strong>准备工作：</strong></p>\n\n<ul><li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Java环境\" href=\"https://www.runoob.com/java/java-environment-setup.html\" title=\"Java环境\">Java环境</a></li>\n    <li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Node环境\" href=\"https://blog.csdn.net/time_____/article/details/114024145\" title=\"Node环境\">Node环境</a></li>\n    <li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Gitea\" href=\"https://gitea.io/zh-cn/\" title=\"Gitea\">Gitea</a></li>\n    <li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Jenkins\" href=\"https://www.jenkins.io/zh/\" title=\"Jenkins\">Jenkins</a></li>\n    <li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Nginx\" href=\"https://blog.csdn.net/time_____/article/details/114750930\" title=\"Nginx\">Nginx</a>(部署前端页面)</li>\n    <li>服务器或者电脑（我这里是window系统+<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"公网映射\" href=\"https://blog.csdn.net/time_____/article/details/114664920\" title=\"公网映射\">公网映射</a>搭建的本地服务器）</li>\n</ul><h3 id=\"%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\"><strong>首先是搭建一个本地Git代码仓库</strong></h3>\n\n<p><strong>下载gitea并在需要安装的文件夹下打开，默认访问地址是127.0.0.1:3000</strong></p>\n\n<p><img alt=\"\" height=\"129\" src=\"https://img-blog.csdnimg.cn/d7f47672639740a59c0d31eca469b642.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"249\" /></p>\n\n<p><strong>打开后选择一下数据库，并在对应文件夹下生成db文件（新建空白txt文件，改后缀名为db）</strong></p>\n\n<p><img alt=\"\" height=\"128\" src=\"https://img-blog.csdnimg.cn/3ba4bb763c50461c968b6550dce953b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"273\" /></p>\n\n<p><strong>端口号和名称可以自定义改一下，最后点击安装，等待安装完成，再次进入，注册管理员账号就可以打开了，后面就和远程仓库操作方式一样了</strong></p>\n\n<p><img alt=\"\" height=\"103\" src=\"https://img-blog.csdnimg.cn/e1ee04fdb75b40348f7d69dcf2b45775.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"219\" /><img alt=\"\" height=\"101\" src=\"https://img-blog.csdnimg.cn/98c07ee92f9c407092b14fd640556f33.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"215\" /><img alt=\"\" height=\"100\" src=\"https://img-blog.csdnimg.cn/3349472540fc4e63b7dcbef4d1ace8b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"212\" /></p>\n\n<h3 id=\"%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE\"><strong>接下来是Jenkins安装配置</strong></h3>\n\n<p><strong>下载Jenkins并打开，这一步配置本地服务，设置本地端口号（默认是8080</strong><strong>），我这里是10240</strong></p>\n\n<p><img alt=\"\" height=\"239\" src=\"https://img-blog.csdnimg.cn/a328ca98998e4d939a109b2c7239c6cd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"308\" /><img alt=\"\" height=\"236\" src=\"https://img-blog.csdnimg.cn/28fd23c1a98d405ea8173c6a9fc30b4a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"304\" /></p>\n\n<p><strong>选择Java的jdk路径，并点击下一步安装</strong></p>\n\n<p> <img alt=\"\" height=\"248\" src=\"https://img-blog.csdnimg.cn/102bbee908774cc48f967c8f7eb7b503.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"319\" /><img alt=\"\" height=\"243\" src=\"https://img-blog.csdnimg.cn/32574d29dbaf45788486344cc7dfa1bc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"313\" /></p>\n\n<p><strong>完成后通过<a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"http://localhost:8000\" href=\"http://localhost:8000\" title=\"http://localhost:8000\">http://localhost:8000</a>进入主页，第一次进入Jenkins会进行初始化设置，直接复制本地地址用浏览器打开，然后输入到下面的输入框，点击继续（注意：如果考虑安装Jenkins数据的体积，可以新增环境变量JENKINS_HOME，值改为其他盘符路径，后续Jenkins的数据会保存在此）</strong></p>\n\n<p><img alt=\"\" height=\"117\" src=\"https://img-blog.csdnimg.cn/5ad300359a2c4db8abc93bef751c2b73.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"256\" /><img alt=\"\" height=\"108\" src=\"https://img-blog.csdnimg.cn/37e9c3ef083143fda20565a9ad199c05.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"236\" /></p>\n\n<p><strong>进入插件安装界面，建议先选择推荐插件，后续在插件管理中修改</strong></p>\n\n<p><img alt=\"\" height=\"128\" src=\"https://img-blog.csdnimg.cn/57ab16443acb400ca87bff4da97bec3e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"279\" /></p>\n\n<p><strong>插件全部安装完后，进入管理员用户创建页面，输入账号密码来创建第一个用户，也就是管理员</strong></p>\n\n<p><img alt=\"\" height=\"129\" src=\"https://img-blog.csdnimg.cn/80a9df12843641669b0d8ad8aedc1772.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"281\" /></p>\n\n<p><strong>进入首页，发现部分文字没有汉化，此时参照<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"这位博主\" href=\"https://blog.csdn.net/qq_37489565/article/details/104337073\" title=\"这位博主\">这位博主</a>的博客，安装Locale插件=&gt;设置语言为zh_US=&gt;重启=&gt;设置语言为zh_CN=&gt;刷新页面就可以了</strong></p>\n\n<p><img alt=\"\" height=\"142\" src=\"https://img-blog.csdnimg.cn/9d8026ebfa424db9b5f2fb398bc3b172.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"310\" /><img alt=\"\" height=\"143\" src=\"https://img-blog.csdnimg.cn/f5d4df3cbc07484faa26ea692f5afefa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"313\" /></p>\n\n<p><strong>如果不需要开机自启Jenkins，可以关闭自启软件，并且使用手动打开的方式：在Jenkins目录下输入java -jar jenkins.war --httpPort=10240，或者写成bat形式运行</strong></p>\n\n<p><strong>下面来说说</strong><strong>Jenkins的插件安装，在插件管理中安装Generic Webhook Trigger用于gitea构建触发器，Blue Ocean可以理解为Jenkins的一个皮肤（个人感觉界面看起来和操作使用很舒服）</strong></p>\n\n<p><img alt=\"\" height=\"134\" src=\"https://img-blog.csdnimg.cn/960705f34f6b4b319ffee20678ec81c4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"293\" /><img alt=\"\" height=\"136\" src=\"https://img-blog.csdnimg.cn/9b6b671dfeb84fe4887221f283483b14.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"297\" /></p>\n\n<p><strong>关于Jenkins准备工作，已经基本做完，下一步将使用gitea中的webhooks与Jenkins进行联系，达到代码自动部署的效果</strong></p>\n\n<p><strong>首先，我们先点新建任务，进入到任务列表，接下来，我将分享两种构建的方式，分别是批处理命令构建和pipeline流水线语法的方式构建</strong></p>\n\n<p><img alt=\"\" height=\"132\" src=\"https://img-blog.csdnimg.cn/977a8ca87afc4ba9b3284eb22fa1a00e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"288\" /><img alt=\"\" height=\"131\" src=\"https://img-blog.csdnimg.cn/8860c6dc1ec342f282eaa875aac00a08.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"286\" /></p>\n\n<h3 id=\"%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89\">自由风格项目构建（<strong>window批处理命令</strong>）</h3>\n\n<p><strong>在任务配置中输入gitea clone的地址，并且点击新建验证方式，我这里用的是用户名密码</strong></p>\n\n<p><img alt=\"\" height=\"159\" src=\"https://img-blog.csdnimg.cn/d8bb2bb699274ecdb97c5cee0eb2231e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"347\" /><img alt=\"\" height=\"149\" src=\"https://img-blog.csdnimg.cn/d668908c75954ccfbf1bcae3e230e3f6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"325\" /></p>\n\n<p><strong>在凭证配置中选择用户名密码，并输入gitea的用户名，密码，点击添加即可，添加后在源码管理中选择刚才添加的凭证方式</strong></p>\n\n<p><img alt=\"\" height=\"141\" src=\"https://img-blog.csdnimg.cn/e3079016d963486aa278846d9c33e13a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"307\" /><img alt=\"\" height=\"140\" src=\"https://img-blog.csdnimg.cn/b6f6eb357bc34ecc88b9001ce8b55204.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"306\" /></p>\n\n<p><strong>然后在构建中新增构建步骤，选择window批处理命令，并分别新建以下命令（npm i和npm run build一定要分开，否则在安装依赖时命令控制台会直接输入npm run build，此时是没有效果的，导致后面的命令不执行）</strong></p>\n\n<ol><li><strong>node -v<br />\n    npm -v</strong></li>\n    <li><strong>npm i</strong></li>\n    <li><strong>npm run build</strong></li>\n</ol><p><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/f4555c79fb3048a48d3dedec1ee71294.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/b0680831bc2145cba20a6012712a4c9c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/26daf43376b846b4838f5a4766e6f473.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"204\" /></p>\n\n<p><strong>最后点保存，并在工作台运行测试一下</strong></p>\n\n<p><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/e19284690a554fc4b1b5f6aad4575949.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /><img alt=\"\" height=\"92\" src=\"https://img-blog.csdnimg.cn/94ac638cbccd4176a2d0e283caf5d41c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"200\" /><img alt=\"\" height=\"92\" src=\"https://img-blog.csdnimg.cn/f231503fc4b944448961e0a1bc566b1c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"202\" /></p>\n\n<p><strong>运行完成后在对应路径下找到dist文件，就说明构建成功，我的项目路径是C:\\Users\\Administrator\\.jenkins\\workspace\\，所以就去该文件夹中找对应的文件</strong></p>\n\n<p> <img alt=\"\" height=\"162\" src=\"https://img-blog.csdnimg.cn/7ced6f335d3947c982e0402c2878d08c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"353\" /><img alt=\"\" height=\"154\" src=\"https://img-blog.csdnimg.cn/26348470a92c461db88bcd1491289380.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_19,color_FFFFFF,t_70,g_se,x_16\" width=\"278\" /></p>\n\n<p><strong>接下来，我们在gitea中添加webhooks用来触发Jenkins的构建</strong></p>\n\n<p><strong>先在Jenkins的任务配置中设置构建触发器，并且在下面的配置项中找到token配置，设置token并保存</strong></p>\n\n<p><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/2b4dd831f84b474e98fdcb2399e27c93.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/a1b1a5b87d56474ebf50fe6901f7b56a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /></p>\n\n<p><strong>然后在仓库设置中添加web钩子，设置请求的地址，地址与Jenkins构建触发器中示例地址一致</strong></p>\n\n<p><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/a9b7e1ee9dd1494c8a535f21eb682ed4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"204\" /><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/e5dd04bc03ad456bbcf4e137f07328f3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/b980502186694299b96dba82219ca2da.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"206\" /></p>\n\n<p><strong>触发条件我选择的是推送，即当前仓库收到推送信息就会通过webhooks通知Jenkins构建项目，最后测试一下是否能正常请求，请求成功后就会执行构建</strong></p>\n\n<p><img alt=\"\" height=\"104\" src=\"https://img-blog.csdnimg.cn/3052689299bf4f258f55c82f61943514.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"227\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/1882cdea77d442a69de746bb4e6bfd20.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/eadc088625294907ac5e192fbd716cfe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /></p>\n\n<p><strong>下面我贴出完整的前端部署命令供参考，整个流程是：推送代码后webhooks将触发Jenkins构建前端项目，构建完成后将项目复制到Nginx文件夹下并重启服务</strong></p>\n\n<pre>\n<code class=\"language-bash\">显示版本号\necho node version\nnode -v\necho npm version\nnpm -v</code></pre>\n\n<pre>\n<code class=\"language-bash\">安装依赖\nnpm i</code></pre>\n\n<pre>\n<code class=\"language-bash\">构建项目\nnpm run build</code></pre>\n\n<pre>\n<code class=\"language-bash\">复制构建好的项目至Nginx目录下\ncd /d \"D:\\Soft\\Nginx\\project\"\nrd /s/q vue_vite\nmd vue_vite\nxcopy \"D:\\Soft\\Jenkins\\jenkins\\workspace\\vue_vite_free_type\\dist\" \"D:\\Soft\\Nginx\\project\\vue_vite\" /E /Y</code></pre>\n\n<p><strong>不改变nginx配置的情况下，下面的可以不需要 </strong></p>\n\n<pre>\n<code class=\"language-bash\">重启nginx服务\ncd /d \"D:\\Soft\\Nginx\"\nnginx -s reload\nnginx -s quit\ntasklist | find /i \"nginx.exe\" &gt;nul 2&gt;nul &amp;&amp; goto isAlive || goto isKilled\n:isKilled\nstart nginx\n:isAlive\ntaskkill /f /t /im nginx.exe\nstart nginx\n</code></pre>\n\n<p><strong>以上就是使用window批处理命令构建前端的整个流程，下面是使用pipeline构建项目并部署的流程</strong></p>\n\n<h3 id=\"%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA\">流水线项目构建</h3>\n\n<p><strong>流水线配置和批处理命令一样，新建流水线任务，配置webhooks和token，pipeline的好处就是将每块步骤分开，直观的看到项目的构建过程</strong></p>\n\n<p><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/8ba2bd513e6f466a9ec8503af23acf62.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"215\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/f192901dd95448898d0e4e202f288bcd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/ebdcc6f3a2b347a2ad20299f185edcd5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /></p>\n\n<p><strong>然后就是构建流水线脚本，这里放出我配置的一段供大家参考。</strong></p>\n\n<pre>\n<code class=\"language-Groovy\">\npipeline &#123;\n    agent any\n   stages &#123;\n      stage('pull') &#123;\n         steps &#123;\n            echo 'pull code start'\n            git branch: 'master',\n                credentialsId: '7196d35f-xxxxxxxxxxxxxxxxxxxx-c7936ddd3dd4', \n                url: 'http://localhost:10241/xxxxxxx/vite--vue30.git'\n\n         &#125;\n      &#125;\n      stage('build') &#123;\n         steps &#123;\n            echo \"node version\"\n            bat \"node -v\"\n            echo 'npm version'\n            bat 'npm -v'\n            echo 'install start......'\n            bat \"npm i\"\n            echo 'build start......'\n            bat 'npm run build'\n            echo 'build finish......'\n         &#125;\n      &#125;\n      stage('deploy') &#123;\n         steps &#123; \n            dir('d:/Soft/Nginx/project') &#123;\n                bat \"rd /s/q vue_vite\"\n                bat \"md vue_vite\"\n            &#125;\n            bat('xcopy \"D:/Soft/Jenkins/jenkins/workspace/vue_vite_pipeline/dist\" \"D:/Soft/Nginx/project/vue_vite\" /O /X /E /H /K')\n            dir('d:/Soft/Nginx') &#123;\n                bat('start run.bat')\n            &#125;\n            echo 'deploy success'\n         &#125;\n         \n      &#125;\n   &#125;\n&#125;</code></pre>\n\n<p><strong>其中run.bat的内容如下：</strong></p>\n\n<pre>\n<code class=\"language-bash\">nginx -s reload\nnginx -s quit\ntasklist | find /i \"nginx.exe\" &gt;nul 2&gt;nul &amp;&amp; goto isAlive || goto isKilled\n:isKilled\nstart nginx\n:isAlive\ntaskkill /f /t /im nginx.exe\nstart nginx</code></pre>\n\n<p><strong>保存完成后来到流水线列表点击运行，程序就会开始运行。运行结束后界面会变成绿色，失败会变成红色</strong></p>\n\n<p><img alt=\"\" height=\"99\" src=\"https://img-blog.csdnimg.cn/9a47f0697f6f4fdd93686cb6444dbbdb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"218\" /><img alt=\"\" height=\"99\" src=\"https://img-blog.csdnimg.cn/3b4f03fda3e14fb1aa49239bf0727f68.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"217\" /><img alt=\"\" height=\"100\" src=\"https://img-blog.csdnimg.cn/db5b1e43482d4f45a22610476e058712.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"218\" /></p>\n\n<p><strong>最后输入网址就可以看到部署效果，至此，前端自动化部署就介绍这么多，有兴趣的小伙伴可以自己试试，此方法同样适用node项目部署（建议搭配<span><a class=\"link-info\" href=\"https://pm2.keymetrics.io/\">pm2</a></span>管理node进程），需要把build命令去掉即可。</strong></p>\n\n<p><img alt=\"\" height=\"111\" src=\"https://img-blog.csdnimg.cn/86ba2aee1e90435bbb7e2fada3b41798.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"242\" /></p>\n\n<h3 id=\"%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E\"><strong>写在最后</strong></h3>\n\n<p><strong>gitee和github等远程仓库同样也支持webhooks或actions，有兴趣的小伙伴可以把Jenkins暴露在公网上配置远程服务，安利一波<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"内网穿透搭建\" href=\"https://blog.csdn.net/time_____/article/details/114664920\" title=\"内网穿透搭建\">内网穿透搭建</a></strong></p>\n\n<p><strong>最后，感谢你阅读完这篇文章，如果这篇文章有帮助到你，请支持一下博主~你的支持就是博主分享文章的动力！</strong></p>\n---","site":{"data":{}},"wordcount":4055,"excerpt":"","more":"<p>Node是一个JavaScript的运行环境（平台）；不是一个框架或语言。<br>配置环境：可以先下载一个NVM（Node版本管理工具），GitHub上有下，附上地址（<a href=\"https://github.com/coreybutler/nvm-windows/releases\" title=\"Releases · coreybutler/nvm-windows · GitHub\">Releases · coreybutler/nvm-windows · GitHub</a>）。<br>下载安装之后先在安装的根目录配置TXT文件（settings.txt）<br><code>root 配置为当前 nvm.exe 所在目录   path 配置为 node 快捷方式所在的目录   arch 配置为当前操作系统的位数（32/64)</code></p>\n<p>然后配置环境变量（有时安装后自动配置了）；</p>\n<p>通过 window+r 输入 sysdm.cpl；</p>\n<p>在path中添加：</p>\n<p><code>NVM_HOME = 当前 nvm.exe 所在目录</code></p>\n<p><code>NVM_SYMLINK = node 快捷方式所在的目录</code></p>\n<p><code>PATH += %NVM_HOME%;%NVM_SYMLINK%;</code></p>\n<p>安装完成后在CMD中输入nvm -v查看是否安装成功。</p>\n<p>然后就可以安装node.js了：nvm install node@版本号（会自动安装npm）</p>\n<p>之后用nvm -ls查看当前nvm管理的node版本，用nvm use node版本号来切换版本<br>用nvm uninstall 版本号删除相应的node；</p>\n<p>安装好了之后就可以开始上路啦~</p>\n<hr>\n<p>content:</p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n\n<p id=\"-toc\" style=\"margin-left:80px;\"></p>\n\n<p id=\"%E5%89%8D%E8%A8%80%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"前言：\" href=\"#%E5%89%8D%E8%A8%80%EF%BC%9A\" title=\"前言：\">前言：</a></p>\n\n<p id=\"%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"首先是搭建一个本地Git代码仓库\" href=\"#%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\" title=\"首先是搭建一个本地Git代码仓库\">首先是搭建一个本地Git代码仓库</a></p>\n\n<p id=\"%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"接下来是Jenkins安装配置\" href=\"#%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE\" title=\"接下来是Jenkins安装配置\">接下来是Jenkins安装配置</a></p>\n\n<p id=\"%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"自由风格项目构建（window批处理命令）\" href=\"#%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89\" title=\"自由风格项目构建（window批处理命令）\">自由风格项目构建（window批处理命令）</a></p>\n\n<p id=\"%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"流水线项目构建\" href=\"#%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA\" title=\"流水线项目构建\">流水线项目构建</a></p>\n\n<p id=\"%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E-toc\" style=\"margin-left:80px;\"><a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"写在最后\" href=\"#%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E\" title=\"写在最后\">写在最后</a></p>\n\n<hr id=\"hr-toc\" /><h3 id=\"%E5%89%8D%E8%A8%80%EF%BC%9A\"><strong>前言</strong></h3>\n\n<p><strong>一个好的部署工具能帮助开发者提升效率，节省时间，本文将与大家分享私有化Git仓库搭建与Jenkins操作项目部署</strong></p>\n\n<p><strong>准备工作：</strong></p>\n\n<ul><li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Java环境\" href=\"https://www.runoob.com/java/java-environment-setup.html\" title=\"Java环境\">Java环境</a></li>\n    <li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Node环境\" href=\"https://blog.csdn.net/time_____/article/details/114024145\" title=\"Node环境\">Node环境</a></li>\n    <li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Gitea\" href=\"https://gitea.io/zh-cn/\" title=\"Gitea\">Gitea</a></li>\n    <li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Jenkins\" href=\"https://www.jenkins.io/zh/\" title=\"Jenkins\">Jenkins</a></li>\n    <li><a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"Nginx\" href=\"https://blog.csdn.net/time_____/article/details/114750930\" title=\"Nginx\">Nginx</a>(部署前端页面)</li>\n    <li>服务器或者电脑（我这里是window系统+<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"公网映射\" href=\"https://blog.csdn.net/time_____/article/details/114664920\" title=\"公网映射\">公网映射</a>搭建的本地服务器）</li>\n</ul><h3 id=\"%E9%A6%96%E5%85%88%E6%98%AF%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Git%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\"><strong>首先是搭建一个本地Git代码仓库</strong></h3>\n\n<p><strong>下载gitea并在需要安装的文件夹下打开，默认访问地址是127.0.0.1:3000</strong></p>\n\n<p><img alt=\"\" height=\"129\" src=\"https://img-blog.csdnimg.cn/d7f47672639740a59c0d31eca469b642.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"249\" /></p>\n\n<p><strong>打开后选择一下数据库，并在对应文件夹下生成db文件（新建空白txt文件，改后缀名为db）</strong></p>\n\n<p><img alt=\"\" height=\"128\" src=\"https://img-blog.csdnimg.cn/3ba4bb763c50461c968b6550dce953b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"273\" /></p>\n\n<p><strong>端口号和名称可以自定义改一下，最后点击安装，等待安装完成，再次进入，注册管理员账号就可以打开了，后面就和远程仓库操作方式一样了</strong></p>\n\n<p><img alt=\"\" height=\"103\" src=\"https://img-blog.csdnimg.cn/e1ee04fdb75b40348f7d69dcf2b45775.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"219\" /><img alt=\"\" height=\"101\" src=\"https://img-blog.csdnimg.cn/98c07ee92f9c407092b14fd640556f33.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"215\" /><img alt=\"\" height=\"100\" src=\"https://img-blog.csdnimg.cn/3349472540fc4e63b7dcbef4d1ace8b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"212\" /></p>\n\n<h3 id=\"%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFJenkins%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE\"><strong>接下来是Jenkins安装配置</strong></h3>\n\n<p><strong>下载Jenkins并打开，这一步配置本地服务，设置本地端口号（默认是8080</strong><strong>），我这里是10240</strong></p>\n\n<p><img alt=\"\" height=\"239\" src=\"https://img-blog.csdnimg.cn/a328ca98998e4d939a109b2c7239c6cd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"308\" /><img alt=\"\" height=\"236\" src=\"https://img-blog.csdnimg.cn/28fd23c1a98d405ea8173c6a9fc30b4a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"304\" /></p>\n\n<p><strong>选择Java的jdk路径，并点击下一步安装</strong></p>\n\n<p> <img alt=\"\" height=\"248\" src=\"https://img-blog.csdnimg.cn/102bbee908774cc48f967c8f7eb7b503.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"319\" /><img alt=\"\" height=\"243\" src=\"https://img-blog.csdnimg.cn/32574d29dbaf45788486344cc7dfa1bc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_12,color_FFFFFF,t_70,g_se,x_16\" width=\"313\" /></p>\n\n<p><strong>完成后通过<a data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"http://localhost:8000\" href=\"http://localhost:8000\" title=\"http://localhost:8000\">http://localhost:8000</a>进入主页，第一次进入Jenkins会进行初始化设置，直接复制本地地址用浏览器打开，然后输入到下面的输入框，点击继续（注意：如果考虑安装Jenkins数据的体积，可以新增环境变量JENKINS_HOME，值改为其他盘符路径，后续Jenkins的数据会保存在此）</strong></p>\n\n<p><img alt=\"\" height=\"117\" src=\"https://img-blog.csdnimg.cn/5ad300359a2c4db8abc93bef751c2b73.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"256\" /><img alt=\"\" height=\"108\" src=\"https://img-blog.csdnimg.cn/37e9c3ef083143fda20565a9ad199c05.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"236\" /></p>\n\n<p><strong>进入插件安装界面，建议先选择推荐插件，后续在插件管理中修改</strong></p>\n\n<p><img alt=\"\" height=\"128\" src=\"https://img-blog.csdnimg.cn/57ab16443acb400ca87bff4da97bec3e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"279\" /></p>\n\n<p><strong>插件全部安装完后，进入管理员用户创建页面，输入账号密码来创建第一个用户，也就是管理员</strong></p>\n\n<p><img alt=\"\" height=\"129\" src=\"https://img-blog.csdnimg.cn/80a9df12843641669b0d8ad8aedc1772.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"281\" /></p>\n\n<p><strong>进入首页，发现部分文字没有汉化，此时参照<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"这位博主\" href=\"https://blog.csdn.net/qq_37489565/article/details/104337073\" title=\"这位博主\">这位博主</a>的博客，安装Locale插件=&gt;设置语言为zh_US=&gt;重启=&gt;设置语言为zh_CN=&gt;刷新页面就可以了</strong></p>\n\n<p><img alt=\"\" height=\"142\" src=\"https://img-blog.csdnimg.cn/9d8026ebfa424db9b5f2fb398bc3b172.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"310\" /><img alt=\"\" height=\"143\" src=\"https://img-blog.csdnimg.cn/f5d4df3cbc07484faa26ea692f5afefa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"313\" /></p>\n\n<p><strong>如果不需要开机自启Jenkins，可以关闭自启软件，并且使用手动打开的方式：在Jenkins目录下输入java -jar jenkins.war --httpPort=10240，或者写成bat形式运行</strong></p>\n\n<p><strong>下面来说说</strong><strong>Jenkins的插件安装，在插件管理中安装Generic Webhook Trigger用于gitea构建触发器，Blue Ocean可以理解为Jenkins的一个皮肤（个人感觉界面看起来和操作使用很舒服）</strong></p>\n\n<p><img alt=\"\" height=\"134\" src=\"https://img-blog.csdnimg.cn/960705f34f6b4b319ffee20678ec81c4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"293\" /><img alt=\"\" height=\"136\" src=\"https://img-blog.csdnimg.cn/9b6b671dfeb84fe4887221f283483b14.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"297\" /></p>\n\n<p><strong>关于Jenkins准备工作，已经基本做完，下一步将使用gitea中的webhooks与Jenkins进行联系，达到代码自动部署的效果</strong></p>\n\n<p><strong>首先，我们先点新建任务，进入到任务列表，接下来，我将分享两种构建的方式，分别是批处理命令构建和pipeline流水线语法的方式构建</strong></p>\n\n<p><img alt=\"\" height=\"132\" src=\"https://img-blog.csdnimg.cn/977a8ca87afc4ba9b3284eb22fa1a00e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"288\" /><img alt=\"\" height=\"131\" src=\"https://img-blog.csdnimg.cn/8860c6dc1ec342f282eaa875aac00a08.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"286\" /></p>\n\n<h3 id=\"%E8%87%AA%E7%94%B1%E9%A3%8E%E6%A0%BC%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%EF%BC%88window%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%EF%BC%89\">自由风格项目构建（<strong>window批处理命令</strong>）</h3>\n\n<p><strong>在任务配置中输入gitea clone的地址，并且点击新建验证方式，我这里用的是用户名密码</strong></p>\n\n<p><img alt=\"\" height=\"159\" src=\"https://img-blog.csdnimg.cn/d8bb2bb699274ecdb97c5cee0eb2231e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"347\" /><img alt=\"\" height=\"149\" src=\"https://img-blog.csdnimg.cn/d668908c75954ccfbf1bcae3e230e3f6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"325\" /></p>\n\n<p><strong>在凭证配置中选择用户名密码，并输入gitea的用户名，密码，点击添加即可，添加后在源码管理中选择刚才添加的凭证方式</strong></p>\n\n<p><img alt=\"\" height=\"141\" src=\"https://img-blog.csdnimg.cn/e3079016d963486aa278846d9c33e13a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"307\" /><img alt=\"\" height=\"140\" src=\"https://img-blog.csdnimg.cn/b6f6eb357bc34ecc88b9001ce8b55204.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"306\" /></p>\n\n<p><strong>然后在构建中新增构建步骤，选择window批处理命令，并分别新建以下命令（npm i和npm run build一定要分开，否则在安装依赖时命令控制台会直接输入npm run build，此时是没有效果的，导致后面的命令不执行）</strong></p>\n\n<ol><li><strong>node -v<br />\n    npm -v</strong></li>\n    <li><strong>npm i</strong></li>\n    <li><strong>npm run build</strong></li>\n</ol><p><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/f4555c79fb3048a48d3dedec1ee71294.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/b0680831bc2145cba20a6012712a4c9c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/26daf43376b846b4838f5a4766e6f473.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"204\" /></p>\n\n<p><strong>最后点保存，并在工作台运行测试一下</strong></p>\n\n<p><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/e19284690a554fc4b1b5f6aad4575949.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /><img alt=\"\" height=\"92\" src=\"https://img-blog.csdnimg.cn/94ac638cbccd4176a2d0e283caf5d41c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"200\" /><img alt=\"\" height=\"92\" src=\"https://img-blog.csdnimg.cn/f231503fc4b944448961e0a1bc566b1c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"202\" /></p>\n\n<p><strong>运行完成后在对应路径下找到dist文件，就说明构建成功，我的项目路径是C:\\Users\\Administrator\\.jenkins\\workspace\\，所以就去该文件夹中找对应的文件</strong></p>\n\n<p> <img alt=\"\" height=\"162\" src=\"https://img-blog.csdnimg.cn/7ced6f335d3947c982e0402c2878d08c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"353\" /><img alt=\"\" height=\"154\" src=\"https://img-blog.csdnimg.cn/26348470a92c461db88bcd1491289380.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_19,color_FFFFFF,t_70,g_se,x_16\" width=\"278\" /></p>\n\n<p><strong>接下来，我们在gitea中添加webhooks用来触发Jenkins的构建</strong></p>\n\n<p><strong>先在Jenkins的任务配置中设置构建触发器，并且在下面的配置项中找到token配置，设置token并保存</strong></p>\n\n<p><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/2b4dd831f84b474e98fdcb2399e27c93.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/a1b1a5b87d56474ebf50fe6901f7b56a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"205\" /></p>\n\n<p><strong>然后在仓库设置中添加web钩子，设置请求的地址，地址与Jenkins构建触发器中示例地址一致</strong></p>\n\n<p><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/a9b7e1ee9dd1494c8a535f21eb682ed4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"204\" /><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/e5dd04bc03ad456bbcf4e137f07328f3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /><img alt=\"\" height=\"94\" src=\"https://img-blog.csdnimg.cn/b980502186694299b96dba82219ca2da.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"206\" /></p>\n\n<p><strong>触发条件我选择的是推送，即当前仓库收到推送信息就会通过webhooks通知Jenkins构建项目，最后测试一下是否能正常请求，请求成功后就会执行构建</strong></p>\n\n<p><img alt=\"\" height=\"104\" src=\"https://img-blog.csdnimg.cn/3052689299bf4f258f55c82f61943514.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"227\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/1882cdea77d442a69de746bb4e6bfd20.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/eadc088625294907ac5e192fbd716cfe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /></p>\n\n<p><strong>下面我贴出完整的前端部署命令供参考，整个流程是：推送代码后webhooks将触发Jenkins构建前端项目，构建完成后将项目复制到Nginx文件夹下并重启服务</strong></p>\n\n<pre>\n<code class=\"language-bash\">显示版本号\necho node version\nnode -v\necho npm version\nnpm -v</code></pre>\n\n<pre>\n<code class=\"language-bash\">安装依赖\nnpm i</code></pre>\n\n<pre>\n<code class=\"language-bash\">构建项目\nnpm run build</code></pre>\n\n<pre>\n<code class=\"language-bash\">复制构建好的项目至Nginx目录下\ncd /d \"D:\\Soft\\Nginx\\project\"\nrd /s/q vue_vite\nmd vue_vite\nxcopy \"D:\\Soft\\Jenkins\\jenkins\\workspace\\vue_vite_free_type\\dist\" \"D:\\Soft\\Nginx\\project\\vue_vite\" /E /Y</code></pre>\n\n<p><strong>不改变nginx配置的情况下，下面的可以不需要 </strong></p>\n\n<pre>\n<code class=\"language-bash\">重启nginx服务\ncd /d \"D:\\Soft\\Nginx\"\nnginx -s reload\nnginx -s quit\ntasklist | find /i \"nginx.exe\" &gt;nul 2&gt;nul &amp;&amp; goto isAlive || goto isKilled\n:isKilled\nstart nginx\n:isAlive\ntaskkill /f /t /im nginx.exe\nstart nginx\n</code></pre>\n\n<p><strong>以上就是使用window批处理命令构建前端的整个流程，下面是使用pipeline构建项目并部署的流程</strong></p>\n\n<h3 id=\"%E6%B5%81%E6%B0%B4%E7%BA%BF%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA\">流水线项目构建</h3>\n\n<p><strong>流水线配置和批处理命令一样，新建流水线任务，配置webhooks和token，pipeline的好处就是将每块步骤分开，直观的看到项目的构建过程</strong></p>\n\n<p><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/8ba2bd513e6f466a9ec8503af23acf62.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"215\" /><img alt=\"\" height=\"98\" src=\"https://img-blog.csdnimg.cn/f192901dd95448898d0e4e202f288bcd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"214\" /><img alt=\"\" height=\"93\" src=\"https://img-blog.csdnimg.cn/ebdcc6f3a2b347a2ad20299f185edcd5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"203\" /></p>\n\n<p><strong>然后就是构建流水线脚本，这里放出我配置的一段供大家参考。</strong></p>\n\n<pre>\n<code class=\"language-Groovy\">\npipeline &#123;\n    agent any\n   stages &#123;\n      stage('pull') &#123;\n         steps &#123;\n            echo 'pull code start'\n            git branch: 'master',\n                credentialsId: '7196d35f-xxxxxxxxxxxxxxxxxxxx-c7936ddd3dd4', \n                url: 'http://localhost:10241/xxxxxxx/vite--vue30.git'\n\n         &#125;\n      &#125;\n      stage('build') &#123;\n         steps &#123;\n            echo \"node version\"\n            bat \"node -v\"\n            echo 'npm version'\n            bat 'npm -v'\n            echo 'install start......'\n            bat \"npm i\"\n            echo 'build start......'\n            bat 'npm run build'\n            echo 'build finish......'\n         &#125;\n      &#125;\n      stage('deploy') &#123;\n         steps &#123; \n            dir('d:/Soft/Nginx/project') &#123;\n                bat \"rd /s/q vue_vite\"\n                bat \"md vue_vite\"\n            &#125;\n            bat('xcopy \"D:/Soft/Jenkins/jenkins/workspace/vue_vite_pipeline/dist\" \"D:/Soft/Nginx/project/vue_vite\" /O /X /E /H /K')\n            dir('d:/Soft/Nginx') &#123;\n                bat('start run.bat')\n            &#125;\n            echo 'deploy success'\n         &#125;\n         \n      &#125;\n   &#125;\n&#125;</code></pre>\n\n<p><strong>其中run.bat的内容如下：</strong></p>\n\n<pre>\n<code class=\"language-bash\">nginx -s reload\nnginx -s quit\ntasklist | find /i \"nginx.exe\" &gt;nul 2&gt;nul &amp;&amp; goto isAlive || goto isKilled\n:isKilled\nstart nginx\n:isAlive\ntaskkill /f /t /im nginx.exe\nstart nginx</code></pre>\n\n<p><strong>保存完成后来到流水线列表点击运行，程序就会开始运行。运行结束后界面会变成绿色，失败会变成红色</strong></p>\n\n<p><img alt=\"\" height=\"99\" src=\"https://img-blog.csdnimg.cn/9a47f0697f6f4fdd93686cb6444dbbdb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"218\" /><img alt=\"\" height=\"99\" src=\"https://img-blog.csdnimg.cn/3b4f03fda3e14fb1aa49239bf0727f68.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"217\" /><img alt=\"\" height=\"100\" src=\"https://img-blog.csdnimg.cn/db5b1e43482d4f45a22610476e058712.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"218\" /></p>\n\n<p><strong>最后输入网址就可以看到部署效果，至此，前端自动化部署就介绍这么多，有兴趣的小伙伴可以自己试试，此方法同样适用node项目部署（建议搭配<span><a class=\"link-info\" href=\"https://pm2.keymetrics.io/\">pm2</a></span>管理node进程），需要把build命令去掉即可。</strong></p>\n\n<p><img alt=\"\" height=\"111\" src=\"https://img-blog.csdnimg.cn/86ba2aee1e90435bbb7e2fada3b41798.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBARGllSHVudGVyMTAyNA==,size_20,color_FFFFFF,t_70,g_se,x_16\" width=\"242\" /></p>\n\n<h3 id=\"%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E\"><strong>写在最后</strong></h3>\n\n<p><strong>gitee和github等远程仓库同样也支持webhooks或actions，有兴趣的小伙伴可以把Jenkins暴露在公网上配置远程服务，安利一波<a class=\"link-info\" data-link-icon=\"https://csdnimg.cn/release/blog_editor_html/release1.9.5/ckeditor/plugins/CsdnLink/icons/icon-default.png?t=LA92\" data-link-title=\"内网穿透搭建\" href=\"https://blog.csdn.net/time_____/article/details/114664920\" title=\"内网穿透搭建\">内网穿透搭建</a></strong></p>\n\n<p><strong>最后，感谢你阅读完这篇文章，如果这篇文章有帮助到你，请支持一下博主~你的支持就是博主分享文章的动力！</strong></p>\n---"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}